
/**
 * Client
**/

import * as runtime from './runtime/index';
declare const prisma: unique symbol
export type PrismaPromise<A> = Promise<A> & {[prisma]: true}
type UnwrapPromise<P extends any> = P extends Promise<infer R> ? R : P
type UnwrapTuple<Tuple extends readonly unknown[]> = {
  [K in keyof Tuple]: K extends `${number}` ? Tuple[K] extends PrismaPromise<infer X> ? X : UnwrapPromise<Tuple[K]> : UnwrapPromise<Tuple[K]>
};


/**
 * Model Accounts
 * 
 */
export type Accounts = {
  /**
   * @zod.string.uuid()
   */
  account_id: string
  /**
   * @zod.string.uuid()
   */
  user_id: string | null
  type: string | null
  period_start: Date | null
  period_end: Date | null
  projects_label_by: string | null
  label: string | null
}

/**
 * Model Field_types
 * 
 */
export type Field_types = {
  /**
   * @zod.string.uuid()
   */
  field_type_id: string
  name: string | null
  /**
   * @zod.number.int().gte(-32768).lte(32767)
   */
  sort: number | null
  comment: string | null
  label_replace_by_generated_column: string | null
  deleted: boolean | null
}

/**
 * Model Gbif_occurrence_downloads
 * 
 */
export type Gbif_occurrence_downloads = {
  /**
   * @zod.string.uuid()
   */
  gbif_occurrence_download_id: string
  /**
   * @zod.string.uuid()
   */
  account_id: string | null
  /**
   * @zod.string.uuid()
   */
  project_id: string | null
  /**
   * @zod.string.uuid()
   */
  subproject_id: string | null
  gbif_table: gbif_table | null
  filters: Prisma.JsonValue | null
  created_time: Date | null
  download_key: string | null
  error: string | null
  inserted_time: Date | null
  /**
   * @zod.number.int().gte(-2147483648).lte(2147483647)
   */
  inserted_count: number | null
  attribution: string | null
  deleted: boolean | null
}

/**
 * Model Gbif_occurrences
 * 
 */
export type Gbif_occurrences = {
  /**
   * @zod.string.uuid()
   */
  gbif_occurrence_id: string
  /**
   * @zod.string.uuid()
   */
  account_id: string | null
  /**
   * @zod.string.uuid()
   */
  project_id: string | null
  /**
   * @zod.string.uuid()
   */
  subproject_id: string | null
  gbif_data: Prisma.JsonValue | null
  label: string | null
}

/**
 * Model Gbif_taxa
 * 
 */
export type Gbif_taxa = {
  /**
   * @zod.string.uuid()
   */
  gbif_taxon_id: string
  /**
   * @zod.string.uuid()
   */
  account_id: string | null
  /**
   * @zod.string.uuid()
   */
  project_id: string | null
  gbif_data: Prisma.JsonValue | null
  label: string | null
}

/**
 * Model Goal_report_values
 * 
 */
export type Goal_report_values = {
  /**
   * @zod.string.uuid()
   */
  goal_report_value_id: string
  /**
   * @zod.string.uuid()
   */
  account_id: string | null
  /**
   * @zod.string.uuid()
   */
  goal_report_id: string | null
  /**
   * @zod.string.uuid()
   */
  unit_id: string | null
  /**
   * @zod.number.int().gte(-2147483648).lte(2147483647)
   */
  value_integer: number | null
  /**
   * @zod.custom.use(z.number().or(z.nan()))
   */
  value_numeric: number | null
  value_text: string | null
  label: string | null
  deleted: boolean | null
}

/**
 * Model Goal_reports
 * 
 */
export type Goal_reports = {
  /**
   * @zod.string.uuid()
   */
  goal_report_id: string
  /**
   * @zod.string.uuid()
   */
  account_id: string | null
  /**
   * @zod.string.uuid()
   */
  goal_id: string | null
  data: Prisma.JsonValue | null
  label: string | null
  deleted: boolean | null
}

/**
 * Model Goals
 * 
 */
export type Goals = {
  /**
   * @zod.string.uuid()
   */
  goal_id: string
  /**
   * @zod.string.uuid()
   */
  account_id: string | null
  /**
   * @zod.string.uuid()
   */
  subproject_id: string | null
  /**
   * @zod.number.int().gte(-2147483648).lte(2147483647)
   */
  year: number | null
  name: string | null
  data: Prisma.JsonValue | null
  label_replace_by_generated_column: string | null
  deleted: boolean | null
}

/**
 * Model List_values
 * 
 */
export type List_values = {
  /**
   * @zod.string.uuid()
   */
  list_value_id: string
  /**
   * @zod.string.uuid()
   */
  account_id: string | null
  /**
   * @zod.string.uuid()
   */
  list_id: string | null
  value: string | null
  obsolete: boolean | null
  label_replace_by_generated_column: string | null
  deleted: boolean | null
}

/**
 * Model Lists
 * 
 */
export type Lists = {
  /**
   * @zod.string.uuid()
   */
  list_id: string
  /**
   * @zod.string.uuid()
   */
  account_id: string | null
  /**
   * @zod.string.uuid()
   */
  project_id: string | null
  name: string | null
  data: Prisma.JsonValue | null
  obsolete: boolean | null
  label_replace_by_generated_column: string | null
  deleted: boolean | null
}

/**
 * Model Messages
 * 
 */
export type Messages = {
  /**
   * @zod.string.uuid()
   */
  message_id: string
  label_replace_by_generated_column: string | null
  date: Date | null
  message: string | null
}

/**
 * Model Observation_sources
 * 
 */
export type Observation_sources = {
  /**
   * @zod.string.uuid()
   */
  observation_source_id: string
  /**
   * @zod.string.uuid()
   */
  account_id: string | null
  /**
   * @zod.string.uuid()
   */
  project_id: string | null
  name: string | null
  url: string | null
  data: Prisma.JsonValue | null
  label_replace_by_generated_column: string | null
  deleted: boolean | null
}

/**
 * Model Persons
 * 
 */
export type Persons = {
  /**
   * @zod.string.uuid()
   */
  person_id: string
  /**
   * @zod.string.uuid()
   */
  project_id: string | null
  /**
   * @zod.string.uuid()
   */
  account_id: string | null
  email: string | null
  data: Prisma.JsonValue | null
  label_replace_by_generated_column: string | null
  deleted: boolean | null
}

/**
 * Model Place_levels
 * 
 */
export type Place_levels = {
  /**
   * @zod.string.uuid()
   */
  place_level_id: string
  /**
   * @zod.string.uuid()
   */
  account_id: string | null
  /**
   * @zod.string.uuid()
   */
  project_id: string | null
  /**
   * @zod.number.int().gte(-2147483648).lte(2147483647)
   */
  level: number | null
  name_singular: string | null
  name_plural: string | null
  name_short: string | null
  reports: boolean | null
  report_values: boolean | null
  actions: boolean | null
  action_values: boolean | null
  action_reports: boolean | null
  checks: boolean | null
  check_values: boolean | null
  check_taxa: boolean | null
  observations: boolean | null
  label_replace_by_generated_column: string | null
  deleted: boolean | null
}

/**
 * Model Project_users
 * 
 */
export type Project_users = {
  /**
   * @zod.string.uuid()
   */
  project_user_id: string
  /**
   * @zod.string.uuid()
   */
  account_id: string | null
  /**
   * @zod.string.uuid()
   */
  project_id: string | null
  /**
   * @zod.string.uuid()
   */
  user_id: string | null
  role: string | null
  label: string | null
  deleted: boolean | null
}

/**
 * Model Projects
 * 
 */
export type Projects = {
  /**
   * @zod.string.uuid()
   */
  project_id: string
  /**
   * @zod.string.uuid()
   */
  account_id: string | null
  name: string | null
  label: string | null
  type: project_type | null
  subproject_name_singular: string | null
  subproject_name_plural: string | null
  subproject_order_by: string | null
  places_label_by: string | null
  places_order_by: Prisma.JsonValue | null
  persons_label_by: string | null
  persons_order_by: string | null
  goal_reports_label_by: string | null
  goal_reports_order_by: string | null
  values_on_multiple_levels: string | null
  multiple_action_values_on_same_level: string | null
  multiple_check_values_on_same_level: string | null
  data: Prisma.JsonValue | null
  files_offline: boolean | null
  files_active_projects: boolean | null
  files_active_subprojects: boolean | null
  files_active_places: boolean | null
  files_active_actions: boolean | null
  files_active_checks: boolean | null
  deleted: boolean | null
}

/**
 * Model Subproject_taxa
 * 
 */
export type Subproject_taxa = {
  /**
   * @zod.string.uuid()
   */
  subproject_taxon_id: string
  /**
   * @zod.string.uuid()
   */
  account_id: string | null
  /**
   * @zod.string.uuid()
   */
  subproject_id: string | null
  /**
   * @zod.string.uuid()
   */
  taxon_id: string | null
  label: string | null
  deleted: boolean | null
}

/**
 * Model Subproject_users
 * 
 */
export type Subproject_users = {
  /**
   * @zod.string.uuid()
   */
  subproject_user_id: string
  /**
   * @zod.string.uuid()
   */
  account_id: string | null
  /**
   * @zod.string.uuid()
   */
  subproject_id: string | null
  /**
   * @zod.string.uuid()
   */
  user_id: string | null
  role: string | null
  label: string | null
  deleted: boolean | null
}

/**
 * Model Subprojects
 * 
 */
export type Subprojects = {
  /**
   * @zod.string.uuid()
   */
  subproject_id: string
  /**
   * @zod.string.uuid()
   */
  account_id: string | null
  /**
   * @zod.string.uuid()
   */
  project_id: string | null
  name: string | null
  label_replace_by_generated_column: string | null
  /**
   * @zod.number.int().gte(-2147483648).lte(2147483647)
   */
  start_year: number | null
  /**
   * @zod.number.int().gte(-2147483648).lte(2147483647)
   */
  end_year: number | null
  data: Prisma.JsonValue | null
  deleted: boolean | null
}

/**
 * Model Taxa
 * 
 */
export type Taxa = {
  /**
   * @zod.string.uuid()
   */
  taxon_id: string
  /**
   * @zod.string.uuid()
   */
  account_id: string | null
  /**
   * @zod.string.uuid()
   */
  taxonomy_id: string | null
  name: string | null
  id_in_source: string | null
  url: string | null
  label: string | null
  deleted: boolean | null
}

/**
 * Model Taxonomies
 * 
 */
export type Taxonomies = {
  /**
   * @zod.string.uuid()
   */
  taxonomy_id: string
  /**
   * @zod.string.uuid()
   */
  account_id: string | null
  /**
   * @zod.string.uuid()
   */
  project_id: string | null
  type: taxonomy_type | null
  name: string | null
  url: string | null
  obsolete: boolean | null
  data: Prisma.JsonValue | null
  label_replace_by_generated_column: string | null
  deleted: boolean | null
}

/**
 * Model Tile_layers
 * 
 */
export type Tile_layers = {
  /**
   * @zod.string.uuid()
   */
  tile_layer_id: string
  /**
   * @zod.string.uuid()
   */
  account_id: string | null
  /**
   * @zod.string.uuid()
   */
  project_id: string
  label: string | null
  /**
   * @zod.number.int().gte(-32768).lte(32767)
   */
  sort: number | null
  active: boolean | null
  type: tile_layer_type_enum | null
  wmts_url_template: string | null
  wmts_subdomains: Prisma.JsonValue | null
  wms_base_url: string | null
  wms_format: Prisma.JsonValue | null
  wms_layer: Prisma.JsonValue | null
  wms_parameters: Prisma.JsonValue | null
  wms_styles: Prisma.JsonValue | null
  wms_transparent: boolean | null
  wms_version: string | null
  wms_info_format: Prisma.JsonValue | null
  wms_legend: Prisma.JsonValue | null
  /**
   * @zod.number.int().gte(-2147483648).lte(2147483647)
   */
  max_zoom: number | null
  /**
   * @zod.number.int().gte(-2147483648).lte(2147483647)
   */
  min_zoom: number | null
  /**
   * @zod.number.int().gte(-2147483648).lte(2147483647)
   */
  opacity_percent: number | null
  grayscale: boolean | null
  /**
   * @zod.number.int().gte(-2147483648).lte(2147483647)
   */
  local_data_size: number | null
  local_data_bounds: Prisma.JsonValue | null
  deleted: boolean | null
}

/**
 * Model Ui_options
 * 
 */
export type Ui_options = {
  /**
   * @zod.string.uuid()
   */
  user_id: string
  /**
   * @zod.string.uuid()
   */
  account_id: string | null
  designing: boolean | null
  breadcrumbs_overflowing: boolean | null
  navs_overflowing: boolean | null
  tabs: Prisma.JsonValue | null
  show_map: boolean | null
  map_bounds: Prisma.JsonValue | null
  local_map_show: Prisma.JsonValue | null
  tile_layer_sorter: string | null
  vector_layer_sorter: string | null
  /**
   * @zod.string.uuid()
   */
  editing_place_geometry: string | null
  /**
   * @zod.string.uuid()
   */
  editing_check_geometry: string | null
  /**
   * @zod.string.uuid()
   */
  editing_action_geometry: string | null
  label: string | null
}

/**
 * Model Units
 * 
 */
export type Units = {
  /**
   * @zod.string.uuid()
   */
  unit_id: string
  /**
   * @zod.string.uuid()
   */
  account_id: string | null
  /**
   * @zod.string.uuid()
   */
  project_id: string | null
  use_for_action_values: boolean | null
  use_for_action_report_values: boolean | null
  use_for_check_values: boolean | null
  use_for_place_report_values: boolean | null
  use_for_goal_report_values: boolean | null
  use_for_subproject_taxa: boolean | null
  use_for_check_taxa: boolean | null
  name: string | null
  summable: boolean | null
  /**
   * @zod.number.int().gte(-2147483648).lte(2147483647)
   */
  sort: number | null
  type: unit_type | null
  /**
   * @zod.string.uuid()
   */
  list_id: string | null
  label_replace_by_generated_column: string | null
  deleted: boolean | null
}

/**
 * Model User_messages
 * 
 */
export type User_messages = {
  /**
   * @zod.string.uuid()
   */
  user_message_id: string
  /**
   * @zod.string.uuid()
   */
  account_id: string | null
  /**
   * @zod.string.uuid()
   */
  user_id: string | null
  /**
   * @zod.string.uuid()
   */
  message_id: string | null
  label_replace_by_generated_column: string | null
  read: boolean | null
}

/**
 * Model Users
 * 
 */
export type Users = {
  /**
   * @zod.string.uuid()
   */
  user_id: string
  email: string | null
  /**
   * @zod.string.uuid()
   */
  auth_id: string | null
  label_replace_by_generated_column: string | null
  deleted: boolean | null
}

/**
 * Model Widget_types
 * 
 */
export type Widget_types = {
  /**
   * @zod.string.uuid()
   */
  widget_type_id: string
  name: string | null
  needs_list: boolean | null
  /**
   * @zod.number.int().gte(-32768).lte(32767)
   */
  sort: number | null
  comment: string | null
  label_replace_by_generated_column: string | null
  deleted: boolean | null
}

/**
 * Model Widgets_for_fields
 * 
 */
export type Widgets_for_fields = {
  /**
   * @zod.string.uuid()
   */
  widget_for_field_id: string
  /**
   * @zod.string.uuid()
   */
  field_type_id: string | null
  /**
   * @zod.string.uuid()
   */
  widget_type_id: string | null
  label: string | null
  deleted: boolean | null
}


/**
 * Enums
 */

// Based on
// https://github.com/microsoft/TypeScript/issues/3192#issuecomment-261720275

export const gbif_table: {
  gbif_taxa: 'gbif_taxa',
  gbif_occurrences: 'gbif_occurrences'
};

export type gbif_table = (typeof gbif_table)[keyof typeof gbif_table]


export const project_type: {
  species: 'species',
  biotope: 'biotope'
};

export type project_type = (typeof project_type)[keyof typeof project_type]


export const taxonomy_type: {
  species: 'species',
  biotope: 'biotope'
};

export type taxonomy_type = (typeof taxonomy_type)[keyof typeof taxonomy_type]


export const tile_layer_type_enum: {
  wms: 'wms',
  wmts: 'wmts'
};

export type tile_layer_type_enum = (typeof tile_layer_type_enum)[keyof typeof tile_layer_type_enum]


export const unit_type: {
  integer: 'integer',
  numeric: 'numeric',
  text: 'text'
};

export type unit_type = (typeof unit_type)[keyof typeof unit_type]


/**
 * ##  Prisma Client ʲˢ
 * 
 * Type-safe database client for TypeScript & Node.js
 * @example
 * ```
 * const prisma = new PrismaClient()
 * // Fetch zero or more Accounts
 * const accounts = await prisma.accounts.findMany()
 * ```
 *
 * 
 * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
 */
export class PrismaClient<
  T extends Prisma.PrismaClientOptions = Prisma.PrismaClientOptions,
  U = 'log' extends keyof T ? T['log'] extends Array<Prisma.LogLevel | Prisma.LogDefinition> ? Prisma.GetEvents<T['log']> : never : never,
  GlobalReject extends Prisma.RejectOnNotFound | Prisma.RejectPerOperation | false | undefined = 'rejectOnNotFound' extends keyof T
    ? T['rejectOnNotFound']
    : false
      > {
    /**
   * ##  Prisma Client ʲˢ
   * 
   * Type-safe database client for TypeScript & Node.js
   * @example
   * ```
   * const prisma = new PrismaClient()
   * // Fetch zero or more Accounts
   * const accounts = await prisma.accounts.findMany()
   * ```
   *
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
   */

  constructor(optionsArg ?: Prisma.Subset<T, Prisma.PrismaClientOptions>);
  $on<V extends (U | 'beforeExit')>(eventType: V, callback: (event: V extends 'query' ? Prisma.QueryEvent : V extends 'beforeExit' ? () => Promise<void> : Prisma.LogEvent) => void): void;

  /**
   * Connect with the database
   */
  $connect(): Promise<void>;

  /**
   * Disconnect from the database
   */
  $disconnect(): Promise<void>;

  /**
   * Add a middleware
   */
  $use(cb: Prisma.Middleware): void

/**
   * Executes a prepared raw query and returns the number of affected rows.
   * @example
   * ```
   * const result = await prisma.$executeRaw`UPDATE User SET cool = ${true} WHERE email = ${'user@email.com'};`
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): PrismaPromise<number>;

  /**
   * Executes a raw query and returns the number of affected rows.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$executeRawUnsafe('UPDATE User SET cool = $1 WHERE email = $2 ;', true, 'user@email.com')
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRawUnsafe<T = unknown>(query: string, ...values: any[]): PrismaPromise<number>;

  /**
   * Performs a prepared raw query and returns the `SELECT` data.
   * @example
   * ```
   * const result = await prisma.$queryRaw`SELECT * FROM User WHERE id = ${1} OR email = ${'user@email.com'};`
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): PrismaPromise<T>;

  /**
   * Performs a raw query and returns the `SELECT` data.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$queryRawUnsafe('SELECT * FROM User WHERE id = $1 OR email = $2;', 1, 'user@email.com')
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRawUnsafe<T = unknown>(query: string, ...values: any[]): PrismaPromise<T>;

  /**
   * Allows the running of a sequence of read/write operations that are guaranteed to either succeed or fail as a whole.
   * @example
   * ```
   * const [george, bob, alice] = await prisma.$transaction([
   *   prisma.user.create({ data: { name: 'George' } }),
   *   prisma.user.create({ data: { name: 'Bob' } }),
   *   prisma.user.create({ data: { name: 'Alice' } }),
   * ])
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/concepts/components/prisma-client/transactions).
   */
  $transaction<P extends PrismaPromise<any>[]>(arg: [...P], options?: { isolationLevel?: Prisma.TransactionIsolationLevel }): Promise<UnwrapTuple<P>>;

  $transaction<R>(fn: (prisma: Prisma.TransactionClient) => Promise<R>, options?: {maxWait?: number, timeout?: number, isolationLevel?: Prisma.TransactionIsolationLevel}): Promise<R>;

      /**
   * `prisma.accounts`: Exposes CRUD operations for the **Accounts** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Accounts
    * const accounts = await prisma.accounts.findMany()
    * ```
    */
  get accounts(): Prisma.AccountsDelegate<GlobalReject>;

  /**
   * `prisma.field_types`: Exposes CRUD operations for the **Field_types** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Field_types
    * const field_types = await prisma.field_types.findMany()
    * ```
    */
  get field_types(): Prisma.Field_typesDelegate<GlobalReject>;

  /**
   * `prisma.gbif_occurrence_downloads`: Exposes CRUD operations for the **Gbif_occurrence_downloads** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Gbif_occurrence_downloads
    * const gbif_occurrence_downloads = await prisma.gbif_occurrence_downloads.findMany()
    * ```
    */
  get gbif_occurrence_downloads(): Prisma.Gbif_occurrence_downloadsDelegate<GlobalReject>;

  /**
   * `prisma.gbif_occurrences`: Exposes CRUD operations for the **Gbif_occurrences** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Gbif_occurrences
    * const gbif_occurrences = await prisma.gbif_occurrences.findMany()
    * ```
    */
  get gbif_occurrences(): Prisma.Gbif_occurrencesDelegate<GlobalReject>;

  /**
   * `prisma.gbif_taxa`: Exposes CRUD operations for the **Gbif_taxa** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Gbif_taxas
    * const gbif_taxas = await prisma.gbif_taxa.findMany()
    * ```
    */
  get gbif_taxa(): Prisma.Gbif_taxaDelegate<GlobalReject>;

  /**
   * `prisma.goal_report_values`: Exposes CRUD operations for the **Goal_report_values** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Goal_report_values
    * const goal_report_values = await prisma.goal_report_values.findMany()
    * ```
    */
  get goal_report_values(): Prisma.Goal_report_valuesDelegate<GlobalReject>;

  /**
   * `prisma.goal_reports`: Exposes CRUD operations for the **Goal_reports** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Goal_reports
    * const goal_reports = await prisma.goal_reports.findMany()
    * ```
    */
  get goal_reports(): Prisma.Goal_reportsDelegate<GlobalReject>;

  /**
   * `prisma.goals`: Exposes CRUD operations for the **Goals** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Goals
    * const goals = await prisma.goals.findMany()
    * ```
    */
  get goals(): Prisma.GoalsDelegate<GlobalReject>;

  /**
   * `prisma.list_values`: Exposes CRUD operations for the **List_values** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more List_values
    * const list_values = await prisma.list_values.findMany()
    * ```
    */
  get list_values(): Prisma.List_valuesDelegate<GlobalReject>;

  /**
   * `prisma.lists`: Exposes CRUD operations for the **Lists** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Lists
    * const lists = await prisma.lists.findMany()
    * ```
    */
  get lists(): Prisma.ListsDelegate<GlobalReject>;

  /**
   * `prisma.messages`: Exposes CRUD operations for the **Messages** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Messages
    * const messages = await prisma.messages.findMany()
    * ```
    */
  get messages(): Prisma.MessagesDelegate<GlobalReject>;

  /**
   * `prisma.observation_sources`: Exposes CRUD operations for the **Observation_sources** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Observation_sources
    * const observation_sources = await prisma.observation_sources.findMany()
    * ```
    */
  get observation_sources(): Prisma.Observation_sourcesDelegate<GlobalReject>;

  /**
   * `prisma.persons`: Exposes CRUD operations for the **Persons** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Persons
    * const persons = await prisma.persons.findMany()
    * ```
    */
  get persons(): Prisma.PersonsDelegate<GlobalReject>;

  /**
   * `prisma.place_levels`: Exposes CRUD operations for the **Place_levels** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Place_levels
    * const place_levels = await prisma.place_levels.findMany()
    * ```
    */
  get place_levels(): Prisma.Place_levelsDelegate<GlobalReject>;

  /**
   * `prisma.project_users`: Exposes CRUD operations for the **Project_users** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Project_users
    * const project_users = await prisma.project_users.findMany()
    * ```
    */
  get project_users(): Prisma.Project_usersDelegate<GlobalReject>;

  /**
   * `prisma.projects`: Exposes CRUD operations for the **Projects** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Projects
    * const projects = await prisma.projects.findMany()
    * ```
    */
  get projects(): Prisma.ProjectsDelegate<GlobalReject>;

  /**
   * `prisma.subproject_taxa`: Exposes CRUD operations for the **Subproject_taxa** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Subproject_taxas
    * const subproject_taxas = await prisma.subproject_taxa.findMany()
    * ```
    */
  get subproject_taxa(): Prisma.Subproject_taxaDelegate<GlobalReject>;

  /**
   * `prisma.subproject_users`: Exposes CRUD operations for the **Subproject_users** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Subproject_users
    * const subproject_users = await prisma.subproject_users.findMany()
    * ```
    */
  get subproject_users(): Prisma.Subproject_usersDelegate<GlobalReject>;

  /**
   * `prisma.subprojects`: Exposes CRUD operations for the **Subprojects** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Subprojects
    * const subprojects = await prisma.subprojects.findMany()
    * ```
    */
  get subprojects(): Prisma.SubprojectsDelegate<GlobalReject>;

  /**
   * `prisma.taxa`: Exposes CRUD operations for the **Taxa** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Taxas
    * const taxas = await prisma.taxa.findMany()
    * ```
    */
  get taxa(): Prisma.TaxaDelegate<GlobalReject>;

  /**
   * `prisma.taxonomies`: Exposes CRUD operations for the **Taxonomies** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Taxonomies
    * const taxonomies = await prisma.taxonomies.findMany()
    * ```
    */
  get taxonomies(): Prisma.TaxonomiesDelegate<GlobalReject>;

  /**
   * `prisma.tile_layers`: Exposes CRUD operations for the **Tile_layers** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Tile_layers
    * const tile_layers = await prisma.tile_layers.findMany()
    * ```
    */
  get tile_layers(): Prisma.Tile_layersDelegate<GlobalReject>;

  /**
   * `prisma.ui_options`: Exposes CRUD operations for the **Ui_options** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Ui_options
    * const ui_options = await prisma.ui_options.findMany()
    * ```
    */
  get ui_options(): Prisma.Ui_optionsDelegate<GlobalReject>;

  /**
   * `prisma.units`: Exposes CRUD operations for the **Units** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Units
    * const units = await prisma.units.findMany()
    * ```
    */
  get units(): Prisma.UnitsDelegate<GlobalReject>;

  /**
   * `prisma.user_messages`: Exposes CRUD operations for the **User_messages** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more User_messages
    * const user_messages = await prisma.user_messages.findMany()
    * ```
    */
  get user_messages(): Prisma.User_messagesDelegate<GlobalReject>;

  /**
   * `prisma.users`: Exposes CRUD operations for the **Users** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Users
    * const users = await prisma.users.findMany()
    * ```
    */
  get users(): Prisma.UsersDelegate<GlobalReject>;

  /**
   * `prisma.widget_types`: Exposes CRUD operations for the **Widget_types** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Widget_types
    * const widget_types = await prisma.widget_types.findMany()
    * ```
    */
  get widget_types(): Prisma.Widget_typesDelegate<GlobalReject>;

  /**
   * `prisma.widgets_for_fields`: Exposes CRUD operations for the **Widgets_for_fields** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Widgets_for_fields
    * const widgets_for_fields = await prisma.widgets_for_fields.findMany()
    * ```
    */
  get widgets_for_fields(): Prisma.Widgets_for_fieldsDelegate<GlobalReject>;
}

export namespace Prisma {
  export import DMMF = runtime.DMMF

  /**
   * Prisma Errors
   */
  export import PrismaClientKnownRequestError = runtime.PrismaClientKnownRequestError
  export import PrismaClientUnknownRequestError = runtime.PrismaClientUnknownRequestError
  export import PrismaClientRustPanicError = runtime.PrismaClientRustPanicError
  export import PrismaClientInitializationError = runtime.PrismaClientInitializationError
  export import PrismaClientValidationError = runtime.PrismaClientValidationError
  export import NotFoundError = runtime.NotFoundError

  /**
   * Re-export of sql-template-tag
   */
  export import sql = runtime.sqltag
  export import empty = runtime.empty
  export import join = runtime.join
  export import raw = runtime.raw
  export import Sql = runtime.Sql

  /**
   * Decimal.js
   */
  export import Decimal = runtime.Decimal

  export type DecimalJsLike = runtime.DecimalJsLike

  /**
   * Metrics 
   */
  export type Metrics = runtime.Metrics
  export type Metric<T> = runtime.Metric<T>
  export type MetricHistogram = runtime.MetricHistogram
  export type MetricHistogramBucket = runtime.MetricHistogramBucket


  /**
   * Prisma Client JS version: 4.8.1
   * Query Engine version: 23fdc5965b1e05fc54e5f26ed3de66776b93de64
   */
  export type PrismaVersion = {
    client: string
  }

  export const prismaVersion: PrismaVersion 

  /**
   * Utility Types
   */

  /**
   * From https://github.com/sindresorhus/type-fest/
   * Matches a JSON object.
   * This type can be useful to enforce some input to be JSON-compatible or as a super-type to be extended from. 
   */
  export type JsonObject = {[Key in string]?: JsonValue}

  /**
   * From https://github.com/sindresorhus/type-fest/
   * Matches a JSON array.
   */
  export interface JsonArray extends Array<JsonValue> {}

  /**
   * From https://github.com/sindresorhus/type-fest/
   * Matches any valid JSON value.
   */
  export type JsonValue = string | number | boolean | JsonObject | JsonArray | null

  /**
   * Matches a JSON object.
   * Unlike `JsonObject`, this type allows undefined and read-only properties.
   */
  export type InputJsonObject = {readonly [Key in string]?: InputJsonValue | null}

  /**
   * Matches a JSON array.
   * Unlike `JsonArray`, readonly arrays are assignable to this type.
   */
  export interface InputJsonArray extends ReadonlyArray<InputJsonValue | null> {}

  /**
   * Matches any valid value that can be used as an input for operations like
   * create and update as the value of a JSON field. Unlike `JsonValue`, this
   * type allows read-only arrays and read-only object properties and disallows
   * `null` at the top level.
   *
   * `null` cannot be used as the value of a JSON field because its meaning
   * would be ambiguous. Use `Prisma.JsonNull` to store the JSON null value or
   * `Prisma.DbNull` to clear the JSON value and set the field to the database
   * NULL value instead.
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-by-null-values
   */
export type InputJsonValue = null | string | number | boolean | InputJsonObject | InputJsonArray

  /**
   * Types of the values used to represent different kinds of `null` values when working with JSON fields.
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  namespace NullTypes {
    /**
    * Type of `Prisma.DbNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.DbNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class DbNull {
      private DbNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.JsonNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.JsonNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class JsonNull {
      private JsonNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.AnyNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.AnyNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class AnyNull {
      private AnyNull: never
      private constructor()
    }
  }

  /**
   * Helper for filtering JSON entries that have `null` on the database (empty on the db)
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const DbNull: NullTypes.DbNull

  /**
   * Helper for filtering JSON entries that have JSON `null` values (not empty on the db)
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const JsonNull: NullTypes.JsonNull

  /**
   * Helper for filtering JSON entries that are `Prisma.DbNull` or `Prisma.JsonNull`
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const AnyNull: NullTypes.AnyNull

  type SelectAndInclude = {
    select: any
    include: any
  }
  type HasSelect = {
    select: any
  }
  type HasInclude = {
    include: any
  }
  type CheckSelect<T, S, U> = T extends SelectAndInclude
    ? 'Please either choose `select` or `include`'
    : T extends HasSelect
    ? U
    : T extends HasInclude
    ? U
    : S

  /**
   * Get the type of the value, that the Promise holds.
   */
  export type PromiseType<T extends PromiseLike<any>> = T extends PromiseLike<infer U> ? U : T;

  /**
   * Get the return type of a function which returns a Promise.
   */
  export type PromiseReturnType<T extends (...args: any) => Promise<any>> = PromiseType<ReturnType<T>>

  /**
   * From T, pick a set of properties whose keys are in the union K
   */
  type Prisma__Pick<T, K extends keyof T> = {
      [P in K]: T[P];
  };


  export type Enumerable<T> = T | Array<T>;

  export type RequiredKeys<T> = {
    [K in keyof T]-?: {} extends Prisma__Pick<T, K> ? never : K
  }[keyof T]

  export type TruthyKeys<T> = keyof {
    [K in keyof T as T[K] extends false | undefined | null ? never : K]: K
  }

  export type TrueKeys<T> = TruthyKeys<Prisma__Pick<T, RequiredKeys<T>>>

  /**
   * Subset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection
   */
  export type Subset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never;
  };

  /**
   * SelectSubset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection.
   * Additionally, it validates, if both select and include are present. If the case, it errors.
   */
  export type SelectSubset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    (T extends SelectAndInclude
      ? 'Please either choose `select` or `include`.'
      : {})

  /**
   * Subset + Intersection
   * @desc From `T` pick properties that exist in `U` and intersect `K`
   */
  export type SubsetIntersection<T, U, K> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    K

  type Without<T, U> = { [P in Exclude<keyof T, keyof U>]?: never };

  /**
   * XOR is needed to have a real mutually exclusive union type
   * https://stackoverflow.com/questions/42123407/does-typescript-support-mutually-exclusive-types
   */
  type XOR<T, U> =
    T extends object ?
    U extends object ?
      (Without<T, U> & U) | (Without<U, T> & T)
    : U : T


  /**
   * Is T a Record?
   */
  type IsObject<T extends any> = T extends Array<any>
  ? False
  : T extends Date
  ? False
  : T extends Uint8Array
  ? False
  : T extends BigInt
  ? False
  : T extends object
  ? True
  : False


  /**
   * If it's T[], return T
   */
  export type UnEnumerate<T extends unknown> = T extends Array<infer U> ? U : T

  /**
   * From ts-toolbelt
   */

  type __Either<O extends object, K extends Key> = Omit<O, K> &
    {
      // Merge all but K
      [P in K]: Prisma__Pick<O, P & keyof O> // With K possibilities
    }[K]

  type EitherStrict<O extends object, K extends Key> = Strict<__Either<O, K>>

  type EitherLoose<O extends object, K extends Key> = ComputeRaw<__Either<O, K>>

  type _Either<
    O extends object,
    K extends Key,
    strict extends Boolean
  > = {
    1: EitherStrict<O, K>
    0: EitherLoose<O, K>
  }[strict]

  type Either<
    O extends object,
    K extends Key,
    strict extends Boolean = 1
  > = O extends unknown ? _Either<O, K, strict> : never

  export type Union = any

  type PatchUndefined<O extends object, O1 extends object> = {
    [K in keyof O]: O[K] extends undefined ? At<O1, K> : O[K]
  } & {}

  /** Helper Types for "Merge" **/
  export type IntersectOf<U extends Union> = (
    U extends unknown ? (k: U) => void : never
  ) extends (k: infer I) => void
    ? I
    : never

  export type Overwrite<O extends object, O1 extends object> = {
      [K in keyof O]: K extends keyof O1 ? O1[K] : O[K];
  } & {};

  type _Merge<U extends object> = IntersectOf<Overwrite<U, {
      [K in keyof U]-?: At<U, K>;
  }>>;

  type Key = string | number | symbol;
  type AtBasic<O extends object, K extends Key> = K extends keyof O ? O[K] : never;
  type AtStrict<O extends object, K extends Key> = O[K & keyof O];
  type AtLoose<O extends object, K extends Key> = O extends unknown ? AtStrict<O, K> : never;
  export type At<O extends object, K extends Key, strict extends Boolean = 1> = {
      1: AtStrict<O, K>;
      0: AtLoose<O, K>;
  }[strict];

  export type ComputeRaw<A extends any> = A extends Function ? A : {
    [K in keyof A]: A[K];
  } & {};

  export type OptionalFlat<O> = {
    [K in keyof O]?: O[K];
  } & {};

  type _Record<K extends keyof any, T> = {
    [P in K]: T;
  };

  // cause typescript not to expand types and preserve names
  type NoExpand<T> = T extends unknown ? T : never;

  // this type assumes the passed object is entirely optional
  type AtLeast<O extends object, K extends string> = NoExpand<
    O extends unknown
    ? | (K extends keyof O ? { [P in K]: O[P] } & O : O)
      | {[P in keyof O as P extends K ? K : never]-?: O[P]} & O
    : never>;

  type _Strict<U, _U = U> = U extends unknown ? U & OptionalFlat<_Record<Exclude<Keys<_U>, keyof U>, never>> : never;

  export type Strict<U extends object> = ComputeRaw<_Strict<U>>;
  /** End Helper Types for "Merge" **/

  export type Merge<U extends object> = ComputeRaw<_Merge<Strict<U>>>;

  /**
  A [[Boolean]]
  */
  export type Boolean = True | False

  // /**
  // 1
  // */
  export type True = 1

  /**
  0
  */
  export type False = 0

  export type Not<B extends Boolean> = {
    0: 1
    1: 0
  }[B]

  export type Extends<A1 extends any, A2 extends any> = [A1] extends [never]
    ? 0 // anything `never` is false
    : A1 extends A2
    ? 1
    : 0

  export type Has<U extends Union, U1 extends Union> = Not<
    Extends<Exclude<U1, U>, U1>
  >

  export type Or<B1 extends Boolean, B2 extends Boolean> = {
    0: {
      0: 0
      1: 1
    }
    1: {
      0: 1
      1: 1
    }
  }[B1][B2]

  export type Keys<U extends Union> = U extends unknown ? keyof U : never

  type Exact<A, W = unknown> = 
  W extends unknown ? A extends Narrowable ? Cast<A, W> : Cast<
  {[K in keyof A]: K extends keyof W ? Exact<A[K], W[K]> : never},
  {[K in keyof W]: K extends keyof A ? Exact<A[K], W[K]> : W[K]}>
  : never;

  type Narrowable = string | number | boolean | bigint;

  type Cast<A, B> = A extends B ? A : B;

  export const type: unique symbol;

  export function validator<V>(): <S>(select: Exact<S, V>) => S;

  /**
   * Used by group by
   */

  export type GetScalarType<T, O> = O extends object ? {
    [P in keyof T]: P extends keyof O
      ? O[P]
      : never
  } : never

  type FieldPaths<
    T,
    U = Omit<T, '_avg' | '_sum' | '_count' | '_min' | '_max'>
  > = IsObject<T> extends True ? U : T

  type GetHavingFields<T> = {
    [K in keyof T]: Or<
      Or<Extends<'OR', K>, Extends<'AND', K>>,
      Extends<'NOT', K>
    > extends True
      ? // infer is only needed to not hit TS limit
        // based on the brilliant idea of Pierre-Antoine Mills
        // https://github.com/microsoft/TypeScript/issues/30188#issuecomment-478938437
        T[K] extends infer TK
        ? GetHavingFields<UnEnumerate<TK> extends object ? Merge<UnEnumerate<TK>> : never>
        : never
      : {} extends FieldPaths<T[K]>
      ? never
      : K
  }[keyof T]

  /**
   * Convert tuple to union
   */
  type _TupleToUnion<T> = T extends (infer E)[] ? E : never
  type TupleToUnion<K extends readonly any[]> = _TupleToUnion<K>
  type MaybeTupleToUnion<T> = T extends any[] ? TupleToUnion<T> : T

  /**
   * Like `Pick`, but with an array
   */
  type PickArray<T, K extends Array<keyof T>> = Prisma__Pick<T, TupleToUnion<K>>

  /**
   * Exclude all keys with underscores
   */
  type ExcludeUnderscoreKeys<T extends string> = T extends `_${string}` ? never : T


  export type FieldRef<Model, FieldType> = runtime.FieldRef<Model, FieldType>

  type FieldRefInputType<Model, FieldType> = Model extends never ? never : FieldRef<Model, FieldType>

  class PrismaClientFetcher {
    private readonly prisma;
    private readonly debug;
    private readonly hooks?;
    constructor(prisma: PrismaClient<any, any>, debug?: boolean, hooks?: Hooks | undefined);
    request<T>(document: any, dataPath?: string[], rootField?: string, typeName?: string, isList?: boolean, callsite?: string): Promise<T>;
    sanitizeMessage(message: string): string;
    protected unpack(document: any, data: any, path: string[], rootField?: string, isList?: boolean): any;
  }

  export const ModelName: {
    Accounts: 'Accounts',
    Field_types: 'Field_types',
    Gbif_occurrence_downloads: 'Gbif_occurrence_downloads',
    Gbif_occurrences: 'Gbif_occurrences',
    Gbif_taxa: 'Gbif_taxa',
    Goal_report_values: 'Goal_report_values',
    Goal_reports: 'Goal_reports',
    Goals: 'Goals',
    List_values: 'List_values',
    Lists: 'Lists',
    Messages: 'Messages',
    Observation_sources: 'Observation_sources',
    Persons: 'Persons',
    Place_levels: 'Place_levels',
    Project_users: 'Project_users',
    Projects: 'Projects',
    Subproject_taxa: 'Subproject_taxa',
    Subproject_users: 'Subproject_users',
    Subprojects: 'Subprojects',
    Taxa: 'Taxa',
    Taxonomies: 'Taxonomies',
    Tile_layers: 'Tile_layers',
    Ui_options: 'Ui_options',
    Units: 'Units',
    User_messages: 'User_messages',
    Users: 'Users',
    Widget_types: 'Widget_types',
    Widgets_for_fields: 'Widgets_for_fields'
  };

  export type ModelName = (typeof ModelName)[keyof typeof ModelName]


  export type Datasources = {
    db?: Datasource
  }

  export type DefaultPrismaClient = PrismaClient
  export type RejectOnNotFound = boolean | ((error: Error) => Error)
  export type RejectPerModel = { [P in ModelName]?: RejectOnNotFound }
  export type RejectPerOperation =  { [P in "findUnique" | "findFirst"]?: RejectPerModel | RejectOnNotFound } 
  type IsReject<T> = T extends true ? True : T extends (err: Error) => Error ? True : False
  export type HasReject<
    GlobalRejectSettings extends Prisma.PrismaClientOptions['rejectOnNotFound'],
    LocalRejectSettings,
    Action extends PrismaAction,
    Model extends ModelName
  > = LocalRejectSettings extends RejectOnNotFound
    ? IsReject<LocalRejectSettings>
    : GlobalRejectSettings extends RejectPerOperation
    ? Action extends keyof GlobalRejectSettings
      ? GlobalRejectSettings[Action] extends RejectOnNotFound
        ? IsReject<GlobalRejectSettings[Action]>
        : GlobalRejectSettings[Action] extends RejectPerModel
        ? Model extends keyof GlobalRejectSettings[Action]
          ? IsReject<GlobalRejectSettings[Action][Model]>
          : False
        : False
      : False
    : IsReject<GlobalRejectSettings>
  export type ErrorFormat = 'pretty' | 'colorless' | 'minimal'

  export interface PrismaClientOptions {
    /**
     * Configure findUnique/findFirst to throw an error if the query returns null. 
     * @deprecated since 4.0.0. Use `findUniqueOrThrow`/`findFirstOrThrow` methods instead.
     * @example
     * ```
     * // Reject on both findUnique/findFirst
     * rejectOnNotFound: true
     * // Reject only on findFirst with a custom error
     * rejectOnNotFound: { findFirst: (err) => new Error("Custom Error")}
     * // Reject on user.findUnique with a custom error
     * rejectOnNotFound: { findUnique: {User: (err) => new Error("User not found")}}
     * ```
     */
    rejectOnNotFound?: RejectOnNotFound | RejectPerOperation
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasources?: Datasources

    /**
     * @default "colorless"
     */
    errorFormat?: ErrorFormat

    /**
     * @example
     * ```
     * // Defaults to stdout
     * log: ['query', 'info', 'warn', 'error']
     * 
     * // Emit as events
     * log: [
     *  { emit: 'stdout', level: 'query' },
     *  { emit: 'stdout', level: 'info' },
     *  { emit: 'stdout', level: 'warn' }
     *  { emit: 'stdout', level: 'error' }
     * ]
     * ```
     * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/logging#the-log-option).
     */
    log?: Array<LogLevel | LogDefinition>
  }

  export type Hooks = {
    beforeRequest?: (options: { query: string, path: string[], rootField?: string, typeName?: string, document: any }) => any
  }

  /* Types for Logging */
  export type LogLevel = 'info' | 'query' | 'warn' | 'error'
  export type LogDefinition = {
    level: LogLevel
    emit: 'stdout' | 'event'
  }

  export type GetLogType<T extends LogLevel | LogDefinition> = T extends LogDefinition ? T['emit'] extends 'event' ? T['level'] : never : never
  export type GetEvents<T extends any> = T extends Array<LogLevel | LogDefinition> ?
    GetLogType<T[0]> | GetLogType<T[1]> | GetLogType<T[2]> | GetLogType<T[3]>
    : never

  export type QueryEvent = {
    timestamp: Date
    query: string
    params: string
    duration: number
    target: string
  }

  export type LogEvent = {
    timestamp: Date
    message: string
    target: string
  }
  /* End Types for Logging */


  export type PrismaAction =
    | 'findUnique'
    | 'findMany'
    | 'findFirst'
    | 'create'
    | 'createMany'
    | 'update'
    | 'updateMany'
    | 'upsert'
    | 'delete'
    | 'deleteMany'
    | 'executeRaw'
    | 'queryRaw'
    | 'aggregate'
    | 'count'
    | 'runCommandRaw'
    | 'findRaw'

  /**
   * These options are being passed into the middleware as "params"
   */
  export type MiddlewareParams = {
    model?: ModelName
    action: PrismaAction
    args: any
    dataPath: string[]
    runInTransaction: boolean
  }

  /**
   * The `T` type makes sure, that the `return proceed` is not forgotten in the middleware implementation
   */
  export type Middleware<T = any> = (
    params: MiddlewareParams,
    next: (params: MiddlewareParams) => Promise<T>,
  ) => Promise<T>

  // tested in getLogLevel.test.ts
  export function getLogLevel(log: Array<LogLevel | LogDefinition>): LogLevel | undefined;

  /**
   * `PrismaClient` proxy available in interactive transactions.
   */
  export type TransactionClient = Omit<Prisma.DefaultPrismaClient, '$connect' | '$disconnect' | '$on' | '$transaction' | '$use'>

  export type Datasource = {
    url?: string
  }

  /**
   * Count Types
   */


  /**
   * Count Type AccountsCountOutputType
   */


  export type AccountsCountOutputType = {
    gbif_occurrence_downloads: number
    gbif_occurrences: number
    gbif_taxa: number
    goal_report_values: number
    goal_reports: number
    goals: number
    list_values: number
    lists: number
    observation_sources: number
    persons: number
    place_levels: number
    project_users: number
    projects: number
    subproject_taxa: number
    subproject_users: number
    subprojects: number
    taxa: number
    taxonomies: number
    tile_layers: number
    ui_options: number
    units: number
    user_messages: number
  }

  export type AccountsCountOutputTypeSelect = {
    gbif_occurrence_downloads?: boolean | AccountsCountOutputTypeCountGbif_occurrence_downloadsArgs
    gbif_occurrences?: boolean | AccountsCountOutputTypeCountGbif_occurrencesArgs
    gbif_taxa?: boolean | AccountsCountOutputTypeCountGbif_taxaArgs
    goal_report_values?: boolean | AccountsCountOutputTypeCountGoal_report_valuesArgs
    goal_reports?: boolean | AccountsCountOutputTypeCountGoal_reportsArgs
    goals?: boolean | AccountsCountOutputTypeCountGoalsArgs
    list_values?: boolean | AccountsCountOutputTypeCountList_valuesArgs
    lists?: boolean | AccountsCountOutputTypeCountListsArgs
    observation_sources?: boolean | AccountsCountOutputTypeCountObservation_sourcesArgs
    persons?: boolean | AccountsCountOutputTypeCountPersonsArgs
    place_levels?: boolean | AccountsCountOutputTypeCountPlace_levelsArgs
    project_users?: boolean | AccountsCountOutputTypeCountProject_usersArgs
    projects?: boolean | AccountsCountOutputTypeCountProjectsArgs
    subproject_taxa?: boolean | AccountsCountOutputTypeCountSubproject_taxaArgs
    subproject_users?: boolean | AccountsCountOutputTypeCountSubproject_usersArgs
    subprojects?: boolean | AccountsCountOutputTypeCountSubprojectsArgs
    taxa?: boolean | AccountsCountOutputTypeCountTaxaArgs
    taxonomies?: boolean | AccountsCountOutputTypeCountTaxonomiesArgs
    tile_layers?: boolean | AccountsCountOutputTypeCountTile_layersArgs
    ui_options?: boolean | AccountsCountOutputTypeCountUi_optionsArgs
    units?: boolean | AccountsCountOutputTypeCountUnitsArgs
    user_messages?: boolean | AccountsCountOutputTypeCountUser_messagesArgs
  }

  export type AccountsCountOutputTypeGetPayload<S extends boolean | null | undefined | AccountsCountOutputTypeArgs> =
    S extends { select: any, include: any } ? 'Please either choose `select` or `include`' :
    S extends true ? AccountsCountOutputType :
    S extends undefined ? never :
    S extends { include: any } & (AccountsCountOutputTypeArgs)
    ? AccountsCountOutputType 
    : S extends { select: any } & (AccountsCountOutputTypeArgs)
      ? {
    [P in TruthyKeys<S['select']>]:
    P extends keyof AccountsCountOutputType ? AccountsCountOutputType[P] : never
  } 
      : AccountsCountOutputType




  // Custom InputTypes

  /**
   * AccountsCountOutputType without action
   */
  export type AccountsCountOutputTypeArgs = {
    /**
     * Select specific fields to fetch from the AccountsCountOutputType
     * 
    **/
    select?: AccountsCountOutputTypeSelect | null
  }


  /**
   * AccountsCountOutputType without action
   */
  export type AccountsCountOutputTypeCountGbif_occurrence_downloadsArgs = {
    where?: Gbif_occurrence_downloadsWhereInput
  }


  /**
   * AccountsCountOutputType without action
   */
  export type AccountsCountOutputTypeCountGbif_occurrencesArgs = {
    where?: Gbif_occurrencesWhereInput
  }


  /**
   * AccountsCountOutputType without action
   */
  export type AccountsCountOutputTypeCountGbif_taxaArgs = {
    where?: Gbif_taxaWhereInput
  }


  /**
   * AccountsCountOutputType without action
   */
  export type AccountsCountOutputTypeCountGoal_report_valuesArgs = {
    where?: Goal_report_valuesWhereInput
  }


  /**
   * AccountsCountOutputType without action
   */
  export type AccountsCountOutputTypeCountGoal_reportsArgs = {
    where?: Goal_reportsWhereInput
  }


  /**
   * AccountsCountOutputType without action
   */
  export type AccountsCountOutputTypeCountGoalsArgs = {
    where?: GoalsWhereInput
  }


  /**
   * AccountsCountOutputType without action
   */
  export type AccountsCountOutputTypeCountList_valuesArgs = {
    where?: List_valuesWhereInput
  }


  /**
   * AccountsCountOutputType without action
   */
  export type AccountsCountOutputTypeCountListsArgs = {
    where?: ListsWhereInput
  }


  /**
   * AccountsCountOutputType without action
   */
  export type AccountsCountOutputTypeCountObservation_sourcesArgs = {
    where?: Observation_sourcesWhereInput
  }


  /**
   * AccountsCountOutputType without action
   */
  export type AccountsCountOutputTypeCountPersonsArgs = {
    where?: PersonsWhereInput
  }


  /**
   * AccountsCountOutputType without action
   */
  export type AccountsCountOutputTypeCountPlace_levelsArgs = {
    where?: Place_levelsWhereInput
  }


  /**
   * AccountsCountOutputType without action
   */
  export type AccountsCountOutputTypeCountProject_usersArgs = {
    where?: Project_usersWhereInput
  }


  /**
   * AccountsCountOutputType without action
   */
  export type AccountsCountOutputTypeCountProjectsArgs = {
    where?: ProjectsWhereInput
  }


  /**
   * AccountsCountOutputType without action
   */
  export type AccountsCountOutputTypeCountSubproject_taxaArgs = {
    where?: Subproject_taxaWhereInput
  }


  /**
   * AccountsCountOutputType without action
   */
  export type AccountsCountOutputTypeCountSubproject_usersArgs = {
    where?: Subproject_usersWhereInput
  }


  /**
   * AccountsCountOutputType without action
   */
  export type AccountsCountOutputTypeCountSubprojectsArgs = {
    where?: SubprojectsWhereInput
  }


  /**
   * AccountsCountOutputType without action
   */
  export type AccountsCountOutputTypeCountTaxaArgs = {
    where?: TaxaWhereInput
  }


  /**
   * AccountsCountOutputType without action
   */
  export type AccountsCountOutputTypeCountTaxonomiesArgs = {
    where?: TaxonomiesWhereInput
  }


  /**
   * AccountsCountOutputType without action
   */
  export type AccountsCountOutputTypeCountTile_layersArgs = {
    where?: Tile_layersWhereInput
  }


  /**
   * AccountsCountOutputType without action
   */
  export type AccountsCountOutputTypeCountUi_optionsArgs = {
    where?: Ui_optionsWhereInput
  }


  /**
   * AccountsCountOutputType without action
   */
  export type AccountsCountOutputTypeCountUnitsArgs = {
    where?: UnitsWhereInput
  }


  /**
   * AccountsCountOutputType without action
   */
  export type AccountsCountOutputTypeCountUser_messagesArgs = {
    where?: User_messagesWhereInput
  }



  /**
   * Count Type Field_typesCountOutputType
   */


  export type Field_typesCountOutputType = {
    widgets_for_fields: number
  }

  export type Field_typesCountOutputTypeSelect = {
    widgets_for_fields?: boolean | Field_typesCountOutputTypeCountWidgets_for_fieldsArgs
  }

  export type Field_typesCountOutputTypeGetPayload<S extends boolean | null | undefined | Field_typesCountOutputTypeArgs> =
    S extends { select: any, include: any } ? 'Please either choose `select` or `include`' :
    S extends true ? Field_typesCountOutputType :
    S extends undefined ? never :
    S extends { include: any } & (Field_typesCountOutputTypeArgs)
    ? Field_typesCountOutputType 
    : S extends { select: any } & (Field_typesCountOutputTypeArgs)
      ? {
    [P in TruthyKeys<S['select']>]:
    P extends keyof Field_typesCountOutputType ? Field_typesCountOutputType[P] : never
  } 
      : Field_typesCountOutputType




  // Custom InputTypes

  /**
   * Field_typesCountOutputType without action
   */
  export type Field_typesCountOutputTypeArgs = {
    /**
     * Select specific fields to fetch from the Field_typesCountOutputType
     * 
    **/
    select?: Field_typesCountOutputTypeSelect | null
  }


  /**
   * Field_typesCountOutputType without action
   */
  export type Field_typesCountOutputTypeCountWidgets_for_fieldsArgs = {
    where?: Widgets_for_fieldsWhereInput
  }



  /**
   * Count Type Goal_reportsCountOutputType
   */


  export type Goal_reportsCountOutputType = {
    goal_report_values: number
  }

  export type Goal_reportsCountOutputTypeSelect = {
    goal_report_values?: boolean | Goal_reportsCountOutputTypeCountGoal_report_valuesArgs
  }

  export type Goal_reportsCountOutputTypeGetPayload<S extends boolean | null | undefined | Goal_reportsCountOutputTypeArgs> =
    S extends { select: any, include: any } ? 'Please either choose `select` or `include`' :
    S extends true ? Goal_reportsCountOutputType :
    S extends undefined ? never :
    S extends { include: any } & (Goal_reportsCountOutputTypeArgs)
    ? Goal_reportsCountOutputType 
    : S extends { select: any } & (Goal_reportsCountOutputTypeArgs)
      ? {
    [P in TruthyKeys<S['select']>]:
    P extends keyof Goal_reportsCountOutputType ? Goal_reportsCountOutputType[P] : never
  } 
      : Goal_reportsCountOutputType




  // Custom InputTypes

  /**
   * Goal_reportsCountOutputType without action
   */
  export type Goal_reportsCountOutputTypeArgs = {
    /**
     * Select specific fields to fetch from the Goal_reportsCountOutputType
     * 
    **/
    select?: Goal_reportsCountOutputTypeSelect | null
  }


  /**
   * Goal_reportsCountOutputType without action
   */
  export type Goal_reportsCountOutputTypeCountGoal_report_valuesArgs = {
    where?: Goal_report_valuesWhereInput
  }



  /**
   * Count Type GoalsCountOutputType
   */


  export type GoalsCountOutputType = {
    goal_reports: number
  }

  export type GoalsCountOutputTypeSelect = {
    goal_reports?: boolean | GoalsCountOutputTypeCountGoal_reportsArgs
  }

  export type GoalsCountOutputTypeGetPayload<S extends boolean | null | undefined | GoalsCountOutputTypeArgs> =
    S extends { select: any, include: any } ? 'Please either choose `select` or `include`' :
    S extends true ? GoalsCountOutputType :
    S extends undefined ? never :
    S extends { include: any } & (GoalsCountOutputTypeArgs)
    ? GoalsCountOutputType 
    : S extends { select: any } & (GoalsCountOutputTypeArgs)
      ? {
    [P in TruthyKeys<S['select']>]:
    P extends keyof GoalsCountOutputType ? GoalsCountOutputType[P] : never
  } 
      : GoalsCountOutputType




  // Custom InputTypes

  /**
   * GoalsCountOutputType without action
   */
  export type GoalsCountOutputTypeArgs = {
    /**
     * Select specific fields to fetch from the GoalsCountOutputType
     * 
    **/
    select?: GoalsCountOutputTypeSelect | null
  }


  /**
   * GoalsCountOutputType without action
   */
  export type GoalsCountOutputTypeCountGoal_reportsArgs = {
    where?: Goal_reportsWhereInput
  }



  /**
   * Count Type ListsCountOutputType
   */


  export type ListsCountOutputType = {
    list_values: number
    units: number
  }

  export type ListsCountOutputTypeSelect = {
    list_values?: boolean | ListsCountOutputTypeCountList_valuesArgs
    units?: boolean | ListsCountOutputTypeCountUnitsArgs
  }

  export type ListsCountOutputTypeGetPayload<S extends boolean | null | undefined | ListsCountOutputTypeArgs> =
    S extends { select: any, include: any } ? 'Please either choose `select` or `include`' :
    S extends true ? ListsCountOutputType :
    S extends undefined ? never :
    S extends { include: any } & (ListsCountOutputTypeArgs)
    ? ListsCountOutputType 
    : S extends { select: any } & (ListsCountOutputTypeArgs)
      ? {
    [P in TruthyKeys<S['select']>]:
    P extends keyof ListsCountOutputType ? ListsCountOutputType[P] : never
  } 
      : ListsCountOutputType




  // Custom InputTypes

  /**
   * ListsCountOutputType without action
   */
  export type ListsCountOutputTypeArgs = {
    /**
     * Select specific fields to fetch from the ListsCountOutputType
     * 
    **/
    select?: ListsCountOutputTypeSelect | null
  }


  /**
   * ListsCountOutputType without action
   */
  export type ListsCountOutputTypeCountList_valuesArgs = {
    where?: List_valuesWhereInput
  }


  /**
   * ListsCountOutputType without action
   */
  export type ListsCountOutputTypeCountUnitsArgs = {
    where?: UnitsWhereInput
  }



  /**
   * Count Type MessagesCountOutputType
   */


  export type MessagesCountOutputType = {
    user_messages: number
  }

  export type MessagesCountOutputTypeSelect = {
    user_messages?: boolean | MessagesCountOutputTypeCountUser_messagesArgs
  }

  export type MessagesCountOutputTypeGetPayload<S extends boolean | null | undefined | MessagesCountOutputTypeArgs> =
    S extends { select: any, include: any } ? 'Please either choose `select` or `include`' :
    S extends true ? MessagesCountOutputType :
    S extends undefined ? never :
    S extends { include: any } & (MessagesCountOutputTypeArgs)
    ? MessagesCountOutputType 
    : S extends { select: any } & (MessagesCountOutputTypeArgs)
      ? {
    [P in TruthyKeys<S['select']>]:
    P extends keyof MessagesCountOutputType ? MessagesCountOutputType[P] : never
  } 
      : MessagesCountOutputType




  // Custom InputTypes

  /**
   * MessagesCountOutputType without action
   */
  export type MessagesCountOutputTypeArgs = {
    /**
     * Select specific fields to fetch from the MessagesCountOutputType
     * 
    **/
    select?: MessagesCountOutputTypeSelect | null
  }


  /**
   * MessagesCountOutputType without action
   */
  export type MessagesCountOutputTypeCountUser_messagesArgs = {
    where?: User_messagesWhereInput
  }



  /**
   * Count Type ProjectsCountOutputType
   */


  export type ProjectsCountOutputType = {
    gbif_occurrence_downloads: number
    gbif_occurrences: number
    gbif_taxa: number
    lists: number
    observation_sources: number
    persons: number
    place_levels: number
    project_users: number
    subprojects: number
    taxonomies: number
    tile_layers: number
    units: number
  }

  export type ProjectsCountOutputTypeSelect = {
    gbif_occurrence_downloads?: boolean | ProjectsCountOutputTypeCountGbif_occurrence_downloadsArgs
    gbif_occurrences?: boolean | ProjectsCountOutputTypeCountGbif_occurrencesArgs
    gbif_taxa?: boolean | ProjectsCountOutputTypeCountGbif_taxaArgs
    lists?: boolean | ProjectsCountOutputTypeCountListsArgs
    observation_sources?: boolean | ProjectsCountOutputTypeCountObservation_sourcesArgs
    persons?: boolean | ProjectsCountOutputTypeCountPersonsArgs
    place_levels?: boolean | ProjectsCountOutputTypeCountPlace_levelsArgs
    project_users?: boolean | ProjectsCountOutputTypeCountProject_usersArgs
    subprojects?: boolean | ProjectsCountOutputTypeCountSubprojectsArgs
    taxonomies?: boolean | ProjectsCountOutputTypeCountTaxonomiesArgs
    tile_layers?: boolean | ProjectsCountOutputTypeCountTile_layersArgs
    units?: boolean | ProjectsCountOutputTypeCountUnitsArgs
  }

  export type ProjectsCountOutputTypeGetPayload<S extends boolean | null | undefined | ProjectsCountOutputTypeArgs> =
    S extends { select: any, include: any } ? 'Please either choose `select` or `include`' :
    S extends true ? ProjectsCountOutputType :
    S extends undefined ? never :
    S extends { include: any } & (ProjectsCountOutputTypeArgs)
    ? ProjectsCountOutputType 
    : S extends { select: any } & (ProjectsCountOutputTypeArgs)
      ? {
    [P in TruthyKeys<S['select']>]:
    P extends keyof ProjectsCountOutputType ? ProjectsCountOutputType[P] : never
  } 
      : ProjectsCountOutputType




  // Custom InputTypes

  /**
   * ProjectsCountOutputType without action
   */
  export type ProjectsCountOutputTypeArgs = {
    /**
     * Select specific fields to fetch from the ProjectsCountOutputType
     * 
    **/
    select?: ProjectsCountOutputTypeSelect | null
  }


  /**
   * ProjectsCountOutputType without action
   */
  export type ProjectsCountOutputTypeCountGbif_occurrence_downloadsArgs = {
    where?: Gbif_occurrence_downloadsWhereInput
  }


  /**
   * ProjectsCountOutputType without action
   */
  export type ProjectsCountOutputTypeCountGbif_occurrencesArgs = {
    where?: Gbif_occurrencesWhereInput
  }


  /**
   * ProjectsCountOutputType without action
   */
  export type ProjectsCountOutputTypeCountGbif_taxaArgs = {
    where?: Gbif_taxaWhereInput
  }


  /**
   * ProjectsCountOutputType without action
   */
  export type ProjectsCountOutputTypeCountListsArgs = {
    where?: ListsWhereInput
  }


  /**
   * ProjectsCountOutputType without action
   */
  export type ProjectsCountOutputTypeCountObservation_sourcesArgs = {
    where?: Observation_sourcesWhereInput
  }


  /**
   * ProjectsCountOutputType without action
   */
  export type ProjectsCountOutputTypeCountPersonsArgs = {
    where?: PersonsWhereInput
  }


  /**
   * ProjectsCountOutputType without action
   */
  export type ProjectsCountOutputTypeCountPlace_levelsArgs = {
    where?: Place_levelsWhereInput
  }


  /**
   * ProjectsCountOutputType without action
   */
  export type ProjectsCountOutputTypeCountProject_usersArgs = {
    where?: Project_usersWhereInput
  }


  /**
   * ProjectsCountOutputType without action
   */
  export type ProjectsCountOutputTypeCountSubprojectsArgs = {
    where?: SubprojectsWhereInput
  }


  /**
   * ProjectsCountOutputType without action
   */
  export type ProjectsCountOutputTypeCountTaxonomiesArgs = {
    where?: TaxonomiesWhereInput
  }


  /**
   * ProjectsCountOutputType without action
   */
  export type ProjectsCountOutputTypeCountTile_layersArgs = {
    where?: Tile_layersWhereInput
  }


  /**
   * ProjectsCountOutputType without action
   */
  export type ProjectsCountOutputTypeCountUnitsArgs = {
    where?: UnitsWhereInput
  }



  /**
   * Count Type SubprojectsCountOutputType
   */


  export type SubprojectsCountOutputType = {
    gbif_occurrence_downloads: number
    gbif_occurrences: number
    goals: number
    subproject_taxa: number
    subproject_users: number
  }

  export type SubprojectsCountOutputTypeSelect = {
    gbif_occurrence_downloads?: boolean | SubprojectsCountOutputTypeCountGbif_occurrence_downloadsArgs
    gbif_occurrences?: boolean | SubprojectsCountOutputTypeCountGbif_occurrencesArgs
    goals?: boolean | SubprojectsCountOutputTypeCountGoalsArgs
    subproject_taxa?: boolean | SubprojectsCountOutputTypeCountSubproject_taxaArgs
    subproject_users?: boolean | SubprojectsCountOutputTypeCountSubproject_usersArgs
  }

  export type SubprojectsCountOutputTypeGetPayload<S extends boolean | null | undefined | SubprojectsCountOutputTypeArgs> =
    S extends { select: any, include: any } ? 'Please either choose `select` or `include`' :
    S extends true ? SubprojectsCountOutputType :
    S extends undefined ? never :
    S extends { include: any } & (SubprojectsCountOutputTypeArgs)
    ? SubprojectsCountOutputType 
    : S extends { select: any } & (SubprojectsCountOutputTypeArgs)
      ? {
    [P in TruthyKeys<S['select']>]:
    P extends keyof SubprojectsCountOutputType ? SubprojectsCountOutputType[P] : never
  } 
      : SubprojectsCountOutputType




  // Custom InputTypes

  /**
   * SubprojectsCountOutputType without action
   */
  export type SubprojectsCountOutputTypeArgs = {
    /**
     * Select specific fields to fetch from the SubprojectsCountOutputType
     * 
    **/
    select?: SubprojectsCountOutputTypeSelect | null
  }


  /**
   * SubprojectsCountOutputType without action
   */
  export type SubprojectsCountOutputTypeCountGbif_occurrence_downloadsArgs = {
    where?: Gbif_occurrence_downloadsWhereInput
  }


  /**
   * SubprojectsCountOutputType without action
   */
  export type SubprojectsCountOutputTypeCountGbif_occurrencesArgs = {
    where?: Gbif_occurrencesWhereInput
  }


  /**
   * SubprojectsCountOutputType without action
   */
  export type SubprojectsCountOutputTypeCountGoalsArgs = {
    where?: GoalsWhereInput
  }


  /**
   * SubprojectsCountOutputType without action
   */
  export type SubprojectsCountOutputTypeCountSubproject_taxaArgs = {
    where?: Subproject_taxaWhereInput
  }


  /**
   * SubprojectsCountOutputType without action
   */
  export type SubprojectsCountOutputTypeCountSubproject_usersArgs = {
    where?: Subproject_usersWhereInput
  }



  /**
   * Count Type TaxaCountOutputType
   */


  export type TaxaCountOutputType = {
    subproject_taxa: number
  }

  export type TaxaCountOutputTypeSelect = {
    subproject_taxa?: boolean | TaxaCountOutputTypeCountSubproject_taxaArgs
  }

  export type TaxaCountOutputTypeGetPayload<S extends boolean | null | undefined | TaxaCountOutputTypeArgs> =
    S extends { select: any, include: any } ? 'Please either choose `select` or `include`' :
    S extends true ? TaxaCountOutputType :
    S extends undefined ? never :
    S extends { include: any } & (TaxaCountOutputTypeArgs)
    ? TaxaCountOutputType 
    : S extends { select: any } & (TaxaCountOutputTypeArgs)
      ? {
    [P in TruthyKeys<S['select']>]:
    P extends keyof TaxaCountOutputType ? TaxaCountOutputType[P] : never
  } 
      : TaxaCountOutputType




  // Custom InputTypes

  /**
   * TaxaCountOutputType without action
   */
  export type TaxaCountOutputTypeArgs = {
    /**
     * Select specific fields to fetch from the TaxaCountOutputType
     * 
    **/
    select?: TaxaCountOutputTypeSelect | null
  }


  /**
   * TaxaCountOutputType without action
   */
  export type TaxaCountOutputTypeCountSubproject_taxaArgs = {
    where?: Subproject_taxaWhereInput
  }



  /**
   * Count Type TaxonomiesCountOutputType
   */


  export type TaxonomiesCountOutputType = {
    taxa: number
  }

  export type TaxonomiesCountOutputTypeSelect = {
    taxa?: boolean | TaxonomiesCountOutputTypeCountTaxaArgs
  }

  export type TaxonomiesCountOutputTypeGetPayload<S extends boolean | null | undefined | TaxonomiesCountOutputTypeArgs> =
    S extends { select: any, include: any } ? 'Please either choose `select` or `include`' :
    S extends true ? TaxonomiesCountOutputType :
    S extends undefined ? never :
    S extends { include: any } & (TaxonomiesCountOutputTypeArgs)
    ? TaxonomiesCountOutputType 
    : S extends { select: any } & (TaxonomiesCountOutputTypeArgs)
      ? {
    [P in TruthyKeys<S['select']>]:
    P extends keyof TaxonomiesCountOutputType ? TaxonomiesCountOutputType[P] : never
  } 
      : TaxonomiesCountOutputType




  // Custom InputTypes

  /**
   * TaxonomiesCountOutputType without action
   */
  export type TaxonomiesCountOutputTypeArgs = {
    /**
     * Select specific fields to fetch from the TaxonomiesCountOutputType
     * 
    **/
    select?: TaxonomiesCountOutputTypeSelect | null
  }


  /**
   * TaxonomiesCountOutputType without action
   */
  export type TaxonomiesCountOutputTypeCountTaxaArgs = {
    where?: TaxaWhereInput
  }



  /**
   * Count Type UnitsCountOutputType
   */


  export type UnitsCountOutputType = {
    goal_report_values: number
  }

  export type UnitsCountOutputTypeSelect = {
    goal_report_values?: boolean | UnitsCountOutputTypeCountGoal_report_valuesArgs
  }

  export type UnitsCountOutputTypeGetPayload<S extends boolean | null | undefined | UnitsCountOutputTypeArgs> =
    S extends { select: any, include: any } ? 'Please either choose `select` or `include`' :
    S extends true ? UnitsCountOutputType :
    S extends undefined ? never :
    S extends { include: any } & (UnitsCountOutputTypeArgs)
    ? UnitsCountOutputType 
    : S extends { select: any } & (UnitsCountOutputTypeArgs)
      ? {
    [P in TruthyKeys<S['select']>]:
    P extends keyof UnitsCountOutputType ? UnitsCountOutputType[P] : never
  } 
      : UnitsCountOutputType




  // Custom InputTypes

  /**
   * UnitsCountOutputType without action
   */
  export type UnitsCountOutputTypeArgs = {
    /**
     * Select specific fields to fetch from the UnitsCountOutputType
     * 
    **/
    select?: UnitsCountOutputTypeSelect | null
  }


  /**
   * UnitsCountOutputType without action
   */
  export type UnitsCountOutputTypeCountGoal_report_valuesArgs = {
    where?: Goal_report_valuesWhereInput
  }



  /**
   * Count Type UsersCountOutputType
   */


  export type UsersCountOutputType = {
    accounts: number
    project_users: number
    subproject_users: number
    user_messages: number
  }

  export type UsersCountOutputTypeSelect = {
    accounts?: boolean | UsersCountOutputTypeCountAccountsArgs
    project_users?: boolean | UsersCountOutputTypeCountProject_usersArgs
    subproject_users?: boolean | UsersCountOutputTypeCountSubproject_usersArgs
    user_messages?: boolean | UsersCountOutputTypeCountUser_messagesArgs
  }

  export type UsersCountOutputTypeGetPayload<S extends boolean | null | undefined | UsersCountOutputTypeArgs> =
    S extends { select: any, include: any } ? 'Please either choose `select` or `include`' :
    S extends true ? UsersCountOutputType :
    S extends undefined ? never :
    S extends { include: any } & (UsersCountOutputTypeArgs)
    ? UsersCountOutputType 
    : S extends { select: any } & (UsersCountOutputTypeArgs)
      ? {
    [P in TruthyKeys<S['select']>]:
    P extends keyof UsersCountOutputType ? UsersCountOutputType[P] : never
  } 
      : UsersCountOutputType




  // Custom InputTypes

  /**
   * UsersCountOutputType without action
   */
  export type UsersCountOutputTypeArgs = {
    /**
     * Select specific fields to fetch from the UsersCountOutputType
     * 
    **/
    select?: UsersCountOutputTypeSelect | null
  }


  /**
   * UsersCountOutputType without action
   */
  export type UsersCountOutputTypeCountAccountsArgs = {
    where?: AccountsWhereInput
  }


  /**
   * UsersCountOutputType without action
   */
  export type UsersCountOutputTypeCountProject_usersArgs = {
    where?: Project_usersWhereInput
  }


  /**
   * UsersCountOutputType without action
   */
  export type UsersCountOutputTypeCountSubproject_usersArgs = {
    where?: Subproject_usersWhereInput
  }


  /**
   * UsersCountOutputType without action
   */
  export type UsersCountOutputTypeCountUser_messagesArgs = {
    where?: User_messagesWhereInput
  }



  /**
   * Count Type Widget_typesCountOutputType
   */


  export type Widget_typesCountOutputType = {
    widgets_for_fields: number
  }

  export type Widget_typesCountOutputTypeSelect = {
    widgets_for_fields?: boolean | Widget_typesCountOutputTypeCountWidgets_for_fieldsArgs
  }

  export type Widget_typesCountOutputTypeGetPayload<S extends boolean | null | undefined | Widget_typesCountOutputTypeArgs> =
    S extends { select: any, include: any } ? 'Please either choose `select` or `include`' :
    S extends true ? Widget_typesCountOutputType :
    S extends undefined ? never :
    S extends { include: any } & (Widget_typesCountOutputTypeArgs)
    ? Widget_typesCountOutputType 
    : S extends { select: any } & (Widget_typesCountOutputTypeArgs)
      ? {
    [P in TruthyKeys<S['select']>]:
    P extends keyof Widget_typesCountOutputType ? Widget_typesCountOutputType[P] : never
  } 
      : Widget_typesCountOutputType




  // Custom InputTypes

  /**
   * Widget_typesCountOutputType without action
   */
  export type Widget_typesCountOutputTypeArgs = {
    /**
     * Select specific fields to fetch from the Widget_typesCountOutputType
     * 
    **/
    select?: Widget_typesCountOutputTypeSelect | null
  }


  /**
   * Widget_typesCountOutputType without action
   */
  export type Widget_typesCountOutputTypeCountWidgets_for_fieldsArgs = {
    where?: Widgets_for_fieldsWhereInput
  }



  /**
   * Models
   */

  /**
   * Model Accounts
   */


  export type AggregateAccounts = {
    _count: AccountsCountAggregateOutputType | null
    _min: AccountsMinAggregateOutputType | null
    _max: AccountsMaxAggregateOutputType | null
  }

  export type AccountsMinAggregateOutputType = {
    account_id: string | null
    user_id: string | null
    type: string | null
    period_start: Date | null
    period_end: Date | null
    projects_label_by: string | null
    label: string | null
  }

  export type AccountsMaxAggregateOutputType = {
    account_id: string | null
    user_id: string | null
    type: string | null
    period_start: Date | null
    period_end: Date | null
    projects_label_by: string | null
    label: string | null
  }

  export type AccountsCountAggregateOutputType = {
    account_id: number
    user_id: number
    type: number
    period_start: number
    period_end: number
    projects_label_by: number
    label: number
    _all: number
  }


  export type AccountsMinAggregateInputType = {
    account_id?: true
    user_id?: true
    type?: true
    period_start?: true
    period_end?: true
    projects_label_by?: true
    label?: true
  }

  export type AccountsMaxAggregateInputType = {
    account_id?: true
    user_id?: true
    type?: true
    period_start?: true
    period_end?: true
    projects_label_by?: true
    label?: true
  }

  export type AccountsCountAggregateInputType = {
    account_id?: true
    user_id?: true
    type?: true
    period_start?: true
    period_end?: true
    projects_label_by?: true
    label?: true
    _all?: true
  }

  export type AccountsAggregateArgs = {
    /**
     * Filter which Accounts to aggregate.
     * 
    **/
    where?: AccountsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Accounts to fetch.
     * 
    **/
    orderBy?: Enumerable<AccountsOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     * 
    **/
    cursor?: AccountsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Accounts from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Accounts.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Accounts
    **/
    _count?: true | AccountsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: AccountsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: AccountsMaxAggregateInputType
  }

  export type GetAccountsAggregateType<T extends AccountsAggregateArgs> = {
        [P in keyof T & keyof AggregateAccounts]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateAccounts[P]>
      : GetScalarType<T[P], AggregateAccounts[P]>
  }




  export type AccountsGroupByArgs = {
    where?: AccountsWhereInput
    orderBy?: Enumerable<AccountsOrderByWithAggregationInput>
    by: Array<AccountsScalarFieldEnum>
    having?: AccountsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: AccountsCountAggregateInputType | true
    _min?: AccountsMinAggregateInputType
    _max?: AccountsMaxAggregateInputType
  }


  export type AccountsGroupByOutputType = {
    account_id: string
    user_id: string | null
    type: string | null
    period_start: Date | null
    period_end: Date | null
    projects_label_by: string | null
    label: string | null
    _count: AccountsCountAggregateOutputType | null
    _min: AccountsMinAggregateOutputType | null
    _max: AccountsMaxAggregateOutputType | null
  }

  type GetAccountsGroupByPayload<T extends AccountsGroupByArgs> = PrismaPromise<
    Array<
      PickArray<AccountsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof AccountsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], AccountsGroupByOutputType[P]>
            : GetScalarType<T[P], AccountsGroupByOutputType[P]>
        }
      >
    >


  export type AccountsSelect = {
    account_id?: boolean
    user_id?: boolean
    type?: boolean
    period_start?: boolean
    period_end?: boolean
    projects_label_by?: boolean
    label?: boolean
    users?: boolean | Accounts$usersArgs
    gbif_occurrence_downloads?: boolean | Accounts$gbif_occurrence_downloadsArgs
    gbif_occurrences?: boolean | Accounts$gbif_occurrencesArgs
    gbif_taxa?: boolean | Accounts$gbif_taxaArgs
    goal_report_values?: boolean | Accounts$goal_report_valuesArgs
    goal_reports?: boolean | Accounts$goal_reportsArgs
    goals?: boolean | Accounts$goalsArgs
    list_values?: boolean | Accounts$list_valuesArgs
    lists?: boolean | Accounts$listsArgs
    observation_sources?: boolean | Accounts$observation_sourcesArgs
    persons?: boolean | Accounts$personsArgs
    place_levels?: boolean | Accounts$place_levelsArgs
    project_users?: boolean | Accounts$project_usersArgs
    projects?: boolean | Accounts$projectsArgs
    subproject_taxa?: boolean | Accounts$subproject_taxaArgs
    subproject_users?: boolean | Accounts$subproject_usersArgs
    subprojects?: boolean | Accounts$subprojectsArgs
    taxa?: boolean | Accounts$taxaArgs
    taxonomies?: boolean | Accounts$taxonomiesArgs
    tile_layers?: boolean | Accounts$tile_layersArgs
    ui_options?: boolean | Accounts$ui_optionsArgs
    units?: boolean | Accounts$unitsArgs
    user_messages?: boolean | Accounts$user_messagesArgs
    _count?: boolean | AccountsCountOutputTypeArgs
  }


  export type AccountsInclude = {
    users?: boolean | Accounts$usersArgs
    gbif_occurrence_downloads?: boolean | Accounts$gbif_occurrence_downloadsArgs
    gbif_occurrences?: boolean | Accounts$gbif_occurrencesArgs
    gbif_taxa?: boolean | Accounts$gbif_taxaArgs
    goal_report_values?: boolean | Accounts$goal_report_valuesArgs
    goal_reports?: boolean | Accounts$goal_reportsArgs
    goals?: boolean | Accounts$goalsArgs
    list_values?: boolean | Accounts$list_valuesArgs
    lists?: boolean | Accounts$listsArgs
    observation_sources?: boolean | Accounts$observation_sourcesArgs
    persons?: boolean | Accounts$personsArgs
    place_levels?: boolean | Accounts$place_levelsArgs
    project_users?: boolean | Accounts$project_usersArgs
    projects?: boolean | Accounts$projectsArgs
    subproject_taxa?: boolean | Accounts$subproject_taxaArgs
    subproject_users?: boolean | Accounts$subproject_usersArgs
    subprojects?: boolean | Accounts$subprojectsArgs
    taxa?: boolean | Accounts$taxaArgs
    taxonomies?: boolean | Accounts$taxonomiesArgs
    tile_layers?: boolean | Accounts$tile_layersArgs
    ui_options?: boolean | Accounts$ui_optionsArgs
    units?: boolean | Accounts$unitsArgs
    user_messages?: boolean | Accounts$user_messagesArgs
    _count?: boolean | AccountsCountOutputTypeArgs
  } 

  export type AccountsGetPayload<S extends boolean | null | undefined | AccountsArgs> =
    S extends { select: any, include: any } ? 'Please either choose `select` or `include`' :
    S extends true ? Accounts :
    S extends undefined ? never :
    S extends { include: any } & (AccountsArgs | AccountsFindManyArgs)
    ? Accounts  & {
    [P in TruthyKeys<S['include']>]:
        P extends 'users' ? UsersGetPayload<S['include'][P]> | null :
        P extends 'gbif_occurrence_downloads' ? Array < Gbif_occurrence_downloadsGetPayload<S['include'][P]>>  :
        P extends 'gbif_occurrences' ? Array < Gbif_occurrencesGetPayload<S['include'][P]>>  :
        P extends 'gbif_taxa' ? Array < Gbif_taxaGetPayload<S['include'][P]>>  :
        P extends 'goal_report_values' ? Array < Goal_report_valuesGetPayload<S['include'][P]>>  :
        P extends 'goal_reports' ? Array < Goal_reportsGetPayload<S['include'][P]>>  :
        P extends 'goals' ? Array < GoalsGetPayload<S['include'][P]>>  :
        P extends 'list_values' ? Array < List_valuesGetPayload<S['include'][P]>>  :
        P extends 'lists' ? Array < ListsGetPayload<S['include'][P]>>  :
        P extends 'observation_sources' ? Array < Observation_sourcesGetPayload<S['include'][P]>>  :
        P extends 'persons' ? Array < PersonsGetPayload<S['include'][P]>>  :
        P extends 'place_levels' ? Array < Place_levelsGetPayload<S['include'][P]>>  :
        P extends 'project_users' ? Array < Project_usersGetPayload<S['include'][P]>>  :
        P extends 'projects' ? Array < ProjectsGetPayload<S['include'][P]>>  :
        P extends 'subproject_taxa' ? Array < Subproject_taxaGetPayload<S['include'][P]>>  :
        P extends 'subproject_users' ? Array < Subproject_usersGetPayload<S['include'][P]>>  :
        P extends 'subprojects' ? Array < SubprojectsGetPayload<S['include'][P]>>  :
        P extends 'taxa' ? Array < TaxaGetPayload<S['include'][P]>>  :
        P extends 'taxonomies' ? Array < TaxonomiesGetPayload<S['include'][P]>>  :
        P extends 'tile_layers' ? Array < Tile_layersGetPayload<S['include'][P]>>  :
        P extends 'ui_options' ? Array < Ui_optionsGetPayload<S['include'][P]>>  :
        P extends 'units' ? Array < UnitsGetPayload<S['include'][P]>>  :
        P extends 'user_messages' ? Array < User_messagesGetPayload<S['include'][P]>>  :
        P extends '_count' ? AccountsCountOutputTypeGetPayload<S['include'][P]> :  never
  } 
    : S extends { select: any } & (AccountsArgs | AccountsFindManyArgs)
      ? {
    [P in TruthyKeys<S['select']>]:
        P extends 'users' ? UsersGetPayload<S['select'][P]> | null :
        P extends 'gbif_occurrence_downloads' ? Array < Gbif_occurrence_downloadsGetPayload<S['select'][P]>>  :
        P extends 'gbif_occurrences' ? Array < Gbif_occurrencesGetPayload<S['select'][P]>>  :
        P extends 'gbif_taxa' ? Array < Gbif_taxaGetPayload<S['select'][P]>>  :
        P extends 'goal_report_values' ? Array < Goal_report_valuesGetPayload<S['select'][P]>>  :
        P extends 'goal_reports' ? Array < Goal_reportsGetPayload<S['select'][P]>>  :
        P extends 'goals' ? Array < GoalsGetPayload<S['select'][P]>>  :
        P extends 'list_values' ? Array < List_valuesGetPayload<S['select'][P]>>  :
        P extends 'lists' ? Array < ListsGetPayload<S['select'][P]>>  :
        P extends 'observation_sources' ? Array < Observation_sourcesGetPayload<S['select'][P]>>  :
        P extends 'persons' ? Array < PersonsGetPayload<S['select'][P]>>  :
        P extends 'place_levels' ? Array < Place_levelsGetPayload<S['select'][P]>>  :
        P extends 'project_users' ? Array < Project_usersGetPayload<S['select'][P]>>  :
        P extends 'projects' ? Array < ProjectsGetPayload<S['select'][P]>>  :
        P extends 'subproject_taxa' ? Array < Subproject_taxaGetPayload<S['select'][P]>>  :
        P extends 'subproject_users' ? Array < Subproject_usersGetPayload<S['select'][P]>>  :
        P extends 'subprojects' ? Array < SubprojectsGetPayload<S['select'][P]>>  :
        P extends 'taxa' ? Array < TaxaGetPayload<S['select'][P]>>  :
        P extends 'taxonomies' ? Array < TaxonomiesGetPayload<S['select'][P]>>  :
        P extends 'tile_layers' ? Array < Tile_layersGetPayload<S['select'][P]>>  :
        P extends 'ui_options' ? Array < Ui_optionsGetPayload<S['select'][P]>>  :
        P extends 'units' ? Array < UnitsGetPayload<S['select'][P]>>  :
        P extends 'user_messages' ? Array < User_messagesGetPayload<S['select'][P]>>  :
        P extends '_count' ? AccountsCountOutputTypeGetPayload<S['select'][P]> :  P extends keyof Accounts ? Accounts[P] : never
  } 
      : Accounts


  type AccountsCountArgs = Merge<
    Omit<AccountsFindManyArgs, 'select' | 'include'> & {
      select?: AccountsCountAggregateInputType | true
    }
  >

  export interface AccountsDelegate<GlobalRejectSettings extends Prisma.RejectOnNotFound | Prisma.RejectPerOperation | false | undefined> {
    /**
     * Find zero or one Accounts that matches the filter.
     * @param {AccountsFindUniqueArgs} args - Arguments to find a Accounts
     * @example
     * // Get one Accounts
     * const accounts = await prisma.accounts.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends AccountsFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, AccountsFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'Accounts'> extends True ? Prisma__AccountsClient<AccountsGetPayload<T>> : Prisma__AccountsClient<AccountsGetPayload<T> | null, null>

    /**
     * Find one Accounts that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {AccountsFindUniqueOrThrowArgs} args - Arguments to find a Accounts
     * @example
     * // Get one Accounts
     * const accounts = await prisma.accounts.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends AccountsFindUniqueOrThrowArgs>(
      args?: SelectSubset<T, AccountsFindUniqueOrThrowArgs>
    ): Prisma__AccountsClient<AccountsGetPayload<T>>

    /**
     * Find the first Accounts that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AccountsFindFirstArgs} args - Arguments to find a Accounts
     * @example
     * // Get one Accounts
     * const accounts = await prisma.accounts.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends AccountsFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, AccountsFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'Accounts'> extends True ? Prisma__AccountsClient<AccountsGetPayload<T>> : Prisma__AccountsClient<AccountsGetPayload<T> | null, null>

    /**
     * Find the first Accounts that matches the filter or
     * throw `NotFoundError` if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AccountsFindFirstOrThrowArgs} args - Arguments to find a Accounts
     * @example
     * // Get one Accounts
     * const accounts = await prisma.accounts.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends AccountsFindFirstOrThrowArgs>(
      args?: SelectSubset<T, AccountsFindFirstOrThrowArgs>
    ): Prisma__AccountsClient<AccountsGetPayload<T>>

    /**
     * Find zero or more Accounts that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AccountsFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Accounts
     * const accounts = await prisma.accounts.findMany()
     * 
     * // Get first 10 Accounts
     * const accounts = await prisma.accounts.findMany({ take: 10 })
     * 
     * // Only select the `account_id`
     * const accountsWithAccount_idOnly = await prisma.accounts.findMany({ select: { account_id: true } })
     * 
    **/
    findMany<T extends AccountsFindManyArgs>(
      args?: SelectSubset<T, AccountsFindManyArgs>
    ): PrismaPromise<Array<AccountsGetPayload<T>>>

    /**
     * Create a Accounts.
     * @param {AccountsCreateArgs} args - Arguments to create a Accounts.
     * @example
     * // Create one Accounts
     * const Accounts = await prisma.accounts.create({
     *   data: {
     *     // ... data to create a Accounts
     *   }
     * })
     * 
    **/
    create<T extends AccountsCreateArgs>(
      args: SelectSubset<T, AccountsCreateArgs>
    ): Prisma__AccountsClient<AccountsGetPayload<T>>

    /**
     * Create many Accounts.
     *     @param {AccountsCreateManyArgs} args - Arguments to create many Accounts.
     *     @example
     *     // Create many Accounts
     *     const accounts = await prisma.accounts.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends AccountsCreateManyArgs>(
      args?: SelectSubset<T, AccountsCreateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Delete a Accounts.
     * @param {AccountsDeleteArgs} args - Arguments to delete one Accounts.
     * @example
     * // Delete one Accounts
     * const Accounts = await prisma.accounts.delete({
     *   where: {
     *     // ... filter to delete one Accounts
     *   }
     * })
     * 
    **/
    delete<T extends AccountsDeleteArgs>(
      args: SelectSubset<T, AccountsDeleteArgs>
    ): Prisma__AccountsClient<AccountsGetPayload<T>>

    /**
     * Update one Accounts.
     * @param {AccountsUpdateArgs} args - Arguments to update one Accounts.
     * @example
     * // Update one Accounts
     * const accounts = await prisma.accounts.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends AccountsUpdateArgs>(
      args: SelectSubset<T, AccountsUpdateArgs>
    ): Prisma__AccountsClient<AccountsGetPayload<T>>

    /**
     * Delete zero or more Accounts.
     * @param {AccountsDeleteManyArgs} args - Arguments to filter Accounts to delete.
     * @example
     * // Delete a few Accounts
     * const { count } = await prisma.accounts.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends AccountsDeleteManyArgs>(
      args?: SelectSubset<T, AccountsDeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more Accounts.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AccountsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Accounts
     * const accounts = await prisma.accounts.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends AccountsUpdateManyArgs>(
      args: SelectSubset<T, AccountsUpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one Accounts.
     * @param {AccountsUpsertArgs} args - Arguments to update or create a Accounts.
     * @example
     * // Update or create a Accounts
     * const accounts = await prisma.accounts.upsert({
     *   create: {
     *     // ... data to create a Accounts
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Accounts we want to update
     *   }
     * })
    **/
    upsert<T extends AccountsUpsertArgs>(
      args: SelectSubset<T, AccountsUpsertArgs>
    ): Prisma__AccountsClient<AccountsGetPayload<T>>

    /**
     * Count the number of Accounts.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AccountsCountArgs} args - Arguments to filter Accounts to count.
     * @example
     * // Count the number of Accounts
     * const count = await prisma.accounts.count({
     *   where: {
     *     // ... the filter for the Accounts we want to count
     *   }
     * })
    **/
    count<T extends AccountsCountArgs>(
      args?: Subset<T, AccountsCountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], AccountsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Accounts.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AccountsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends AccountsAggregateArgs>(args: Subset<T, AccountsAggregateArgs>): PrismaPromise<GetAccountsAggregateType<T>>

    /**
     * Group by Accounts.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AccountsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends AccountsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: AccountsGroupByArgs['orderBy'] }
        : { orderBy?: AccountsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, AccountsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetAccountsGroupByPayload<T> : PrismaPromise<InputErrors>

  }

  /**
   * The delegate class that acts as a "Promise-like" for Accounts.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__AccountsClient<T, Null = never> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';

    users<T extends Accounts$usersArgs= {}>(args?: Subset<T, Accounts$usersArgs>): Prisma__UsersClient<UsersGetPayload<T> | Null>;

    gbif_occurrence_downloads<T extends Accounts$gbif_occurrence_downloadsArgs= {}>(args?: Subset<T, Accounts$gbif_occurrence_downloadsArgs>): PrismaPromise<Array<Gbif_occurrence_downloadsGetPayload<T>>| Null>;

    gbif_occurrences<T extends Accounts$gbif_occurrencesArgs= {}>(args?: Subset<T, Accounts$gbif_occurrencesArgs>): PrismaPromise<Array<Gbif_occurrencesGetPayload<T>>| Null>;

    gbif_taxa<T extends Accounts$gbif_taxaArgs= {}>(args?: Subset<T, Accounts$gbif_taxaArgs>): PrismaPromise<Array<Gbif_taxaGetPayload<T>>| Null>;

    goal_report_values<T extends Accounts$goal_report_valuesArgs= {}>(args?: Subset<T, Accounts$goal_report_valuesArgs>): PrismaPromise<Array<Goal_report_valuesGetPayload<T>>| Null>;

    goal_reports<T extends Accounts$goal_reportsArgs= {}>(args?: Subset<T, Accounts$goal_reportsArgs>): PrismaPromise<Array<Goal_reportsGetPayload<T>>| Null>;

    goals<T extends Accounts$goalsArgs= {}>(args?: Subset<T, Accounts$goalsArgs>): PrismaPromise<Array<GoalsGetPayload<T>>| Null>;

    list_values<T extends Accounts$list_valuesArgs= {}>(args?: Subset<T, Accounts$list_valuesArgs>): PrismaPromise<Array<List_valuesGetPayload<T>>| Null>;

    lists<T extends Accounts$listsArgs= {}>(args?: Subset<T, Accounts$listsArgs>): PrismaPromise<Array<ListsGetPayload<T>>| Null>;

    observation_sources<T extends Accounts$observation_sourcesArgs= {}>(args?: Subset<T, Accounts$observation_sourcesArgs>): PrismaPromise<Array<Observation_sourcesGetPayload<T>>| Null>;

    persons<T extends Accounts$personsArgs= {}>(args?: Subset<T, Accounts$personsArgs>): PrismaPromise<Array<PersonsGetPayload<T>>| Null>;

    place_levels<T extends Accounts$place_levelsArgs= {}>(args?: Subset<T, Accounts$place_levelsArgs>): PrismaPromise<Array<Place_levelsGetPayload<T>>| Null>;

    project_users<T extends Accounts$project_usersArgs= {}>(args?: Subset<T, Accounts$project_usersArgs>): PrismaPromise<Array<Project_usersGetPayload<T>>| Null>;

    projects<T extends Accounts$projectsArgs= {}>(args?: Subset<T, Accounts$projectsArgs>): PrismaPromise<Array<ProjectsGetPayload<T>>| Null>;

    subproject_taxa<T extends Accounts$subproject_taxaArgs= {}>(args?: Subset<T, Accounts$subproject_taxaArgs>): PrismaPromise<Array<Subproject_taxaGetPayload<T>>| Null>;

    subproject_users<T extends Accounts$subproject_usersArgs= {}>(args?: Subset<T, Accounts$subproject_usersArgs>): PrismaPromise<Array<Subproject_usersGetPayload<T>>| Null>;

    subprojects<T extends Accounts$subprojectsArgs= {}>(args?: Subset<T, Accounts$subprojectsArgs>): PrismaPromise<Array<SubprojectsGetPayload<T>>| Null>;

    taxa<T extends Accounts$taxaArgs= {}>(args?: Subset<T, Accounts$taxaArgs>): PrismaPromise<Array<TaxaGetPayload<T>>| Null>;

    taxonomies<T extends Accounts$taxonomiesArgs= {}>(args?: Subset<T, Accounts$taxonomiesArgs>): PrismaPromise<Array<TaxonomiesGetPayload<T>>| Null>;

    tile_layers<T extends Accounts$tile_layersArgs= {}>(args?: Subset<T, Accounts$tile_layersArgs>): PrismaPromise<Array<Tile_layersGetPayload<T>>| Null>;

    ui_options<T extends Accounts$ui_optionsArgs= {}>(args?: Subset<T, Accounts$ui_optionsArgs>): PrismaPromise<Array<Ui_optionsGetPayload<T>>| Null>;

    units<T extends Accounts$unitsArgs= {}>(args?: Subset<T, Accounts$unitsArgs>): PrismaPromise<Array<UnitsGetPayload<T>>| Null>;

    user_messages<T extends Accounts$user_messagesArgs= {}>(args?: Subset<T, Accounts$user_messagesArgs>): PrismaPromise<Array<User_messagesGetPayload<T>>| Null>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }



  // Custom InputTypes

  /**
   * Accounts base type for findUnique actions
   */
  export type AccountsFindUniqueArgsBase = {
    /**
     * Select specific fields to fetch from the Accounts
     * 
    **/
    select?: AccountsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: AccountsInclude | null
    /**
     * Filter, which Accounts to fetch.
     * 
    **/
    where: AccountsWhereUniqueInput
  }

  /**
   * Accounts findUnique
   */
  export interface AccountsFindUniqueArgs extends AccountsFindUniqueArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findUniqueOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * Accounts findUniqueOrThrow
   */
  export type AccountsFindUniqueOrThrowArgs = {
    /**
     * Select specific fields to fetch from the Accounts
     * 
    **/
    select?: AccountsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: AccountsInclude | null
    /**
     * Filter, which Accounts to fetch.
     * 
    **/
    where: AccountsWhereUniqueInput
  }


  /**
   * Accounts base type for findFirst actions
   */
  export type AccountsFindFirstArgsBase = {
    /**
     * Select specific fields to fetch from the Accounts
     * 
    **/
    select?: AccountsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: AccountsInclude | null
    /**
     * Filter, which Accounts to fetch.
     * 
    **/
    where?: AccountsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Accounts to fetch.
     * 
    **/
    orderBy?: Enumerable<AccountsOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Accounts.
     * 
    **/
    cursor?: AccountsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Accounts from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Accounts.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Accounts.
     * 
    **/
    distinct?: Enumerable<AccountsScalarFieldEnum>
  }

  /**
   * Accounts findFirst
   */
  export interface AccountsFindFirstArgs extends AccountsFindFirstArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findFirstOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * Accounts findFirstOrThrow
   */
  export type AccountsFindFirstOrThrowArgs = {
    /**
     * Select specific fields to fetch from the Accounts
     * 
    **/
    select?: AccountsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: AccountsInclude | null
    /**
     * Filter, which Accounts to fetch.
     * 
    **/
    where?: AccountsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Accounts to fetch.
     * 
    **/
    orderBy?: Enumerable<AccountsOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Accounts.
     * 
    **/
    cursor?: AccountsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Accounts from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Accounts.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Accounts.
     * 
    **/
    distinct?: Enumerable<AccountsScalarFieldEnum>
  }


  /**
   * Accounts findMany
   */
  export type AccountsFindManyArgs = {
    /**
     * Select specific fields to fetch from the Accounts
     * 
    **/
    select?: AccountsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: AccountsInclude | null
    /**
     * Filter, which Accounts to fetch.
     * 
    **/
    where?: AccountsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Accounts to fetch.
     * 
    **/
    orderBy?: Enumerable<AccountsOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Accounts.
     * 
    **/
    cursor?: AccountsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Accounts from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Accounts.
     * 
    **/
    skip?: number
    distinct?: Enumerable<AccountsScalarFieldEnum>
  }


  /**
   * Accounts create
   */
  export type AccountsCreateArgs = {
    /**
     * Select specific fields to fetch from the Accounts
     * 
    **/
    select?: AccountsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: AccountsInclude | null
    /**
     * The data needed to create a Accounts.
     * 
    **/
    data: XOR<AccountsCreateInput, AccountsUncheckedCreateInput>
  }


  /**
   * Accounts createMany
   */
  export type AccountsCreateManyArgs = {
    /**
     * The data used to create many Accounts.
     * 
    **/
    data: Enumerable<AccountsCreateManyInput>
    skipDuplicates?: boolean
  }


  /**
   * Accounts update
   */
  export type AccountsUpdateArgs = {
    /**
     * Select specific fields to fetch from the Accounts
     * 
    **/
    select?: AccountsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: AccountsInclude | null
    /**
     * The data needed to update a Accounts.
     * 
    **/
    data: XOR<AccountsUpdateInput, AccountsUncheckedUpdateInput>
    /**
     * Choose, which Accounts to update.
     * 
    **/
    where: AccountsWhereUniqueInput
  }


  /**
   * Accounts updateMany
   */
  export type AccountsUpdateManyArgs = {
    /**
     * The data used to update Accounts.
     * 
    **/
    data: XOR<AccountsUpdateManyMutationInput, AccountsUncheckedUpdateManyInput>
    /**
     * Filter which Accounts to update
     * 
    **/
    where?: AccountsWhereInput
  }


  /**
   * Accounts upsert
   */
  export type AccountsUpsertArgs = {
    /**
     * Select specific fields to fetch from the Accounts
     * 
    **/
    select?: AccountsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: AccountsInclude | null
    /**
     * The filter to search for the Accounts to update in case it exists.
     * 
    **/
    where: AccountsWhereUniqueInput
    /**
     * In case the Accounts found by the `where` argument doesn't exist, create a new Accounts with this data.
     * 
    **/
    create: XOR<AccountsCreateInput, AccountsUncheckedCreateInput>
    /**
     * In case the Accounts was found with the provided `where` argument, update it with this data.
     * 
    **/
    update: XOR<AccountsUpdateInput, AccountsUncheckedUpdateInput>
  }


  /**
   * Accounts delete
   */
  export type AccountsDeleteArgs = {
    /**
     * Select specific fields to fetch from the Accounts
     * 
    **/
    select?: AccountsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: AccountsInclude | null
    /**
     * Filter which Accounts to delete.
     * 
    **/
    where: AccountsWhereUniqueInput
  }


  /**
   * Accounts deleteMany
   */
  export type AccountsDeleteManyArgs = {
    /**
     * Filter which Accounts to delete
     * 
    **/
    where?: AccountsWhereInput
  }


  /**
   * Accounts.users
   */
  export type Accounts$usersArgs = {
    /**
     * Select specific fields to fetch from the Users
     * 
    **/
    select?: UsersSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: UsersInclude | null
    where?: UsersWhereInput
  }


  /**
   * Accounts.gbif_occurrence_downloads
   */
  export type Accounts$gbif_occurrence_downloadsArgs = {
    /**
     * Select specific fields to fetch from the Gbif_occurrence_downloads
     * 
    **/
    select?: Gbif_occurrence_downloadsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: Gbif_occurrence_downloadsInclude | null
    where?: Gbif_occurrence_downloadsWhereInput
    orderBy?: Enumerable<Gbif_occurrence_downloadsOrderByWithRelationInput>
    cursor?: Gbif_occurrence_downloadsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Enumerable<Gbif_occurrence_downloadsScalarFieldEnum>
  }


  /**
   * Accounts.gbif_occurrences
   */
  export type Accounts$gbif_occurrencesArgs = {
    /**
     * Select specific fields to fetch from the Gbif_occurrences
     * 
    **/
    select?: Gbif_occurrencesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: Gbif_occurrencesInclude | null
    where?: Gbif_occurrencesWhereInput
    orderBy?: Enumerable<Gbif_occurrencesOrderByWithRelationInput>
    cursor?: Gbif_occurrencesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Enumerable<Gbif_occurrencesScalarFieldEnum>
  }


  /**
   * Accounts.gbif_taxa
   */
  export type Accounts$gbif_taxaArgs = {
    /**
     * Select specific fields to fetch from the Gbif_taxa
     * 
    **/
    select?: Gbif_taxaSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: Gbif_taxaInclude | null
    where?: Gbif_taxaWhereInput
    orderBy?: Enumerable<Gbif_taxaOrderByWithRelationInput>
    cursor?: Gbif_taxaWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Enumerable<Gbif_taxaScalarFieldEnum>
  }


  /**
   * Accounts.goal_report_values
   */
  export type Accounts$goal_report_valuesArgs = {
    /**
     * Select specific fields to fetch from the Goal_report_values
     * 
    **/
    select?: Goal_report_valuesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: Goal_report_valuesInclude | null
    where?: Goal_report_valuesWhereInput
    orderBy?: Enumerable<Goal_report_valuesOrderByWithRelationInput>
    cursor?: Goal_report_valuesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Enumerable<Goal_report_valuesScalarFieldEnum>
  }


  /**
   * Accounts.goal_reports
   */
  export type Accounts$goal_reportsArgs = {
    /**
     * Select specific fields to fetch from the Goal_reports
     * 
    **/
    select?: Goal_reportsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: Goal_reportsInclude | null
    where?: Goal_reportsWhereInput
    orderBy?: Enumerable<Goal_reportsOrderByWithRelationInput>
    cursor?: Goal_reportsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Enumerable<Goal_reportsScalarFieldEnum>
  }


  /**
   * Accounts.goals
   */
  export type Accounts$goalsArgs = {
    /**
     * Select specific fields to fetch from the Goals
     * 
    **/
    select?: GoalsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: GoalsInclude | null
    where?: GoalsWhereInput
    orderBy?: Enumerable<GoalsOrderByWithRelationInput>
    cursor?: GoalsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Enumerable<GoalsScalarFieldEnum>
  }


  /**
   * Accounts.list_values
   */
  export type Accounts$list_valuesArgs = {
    /**
     * Select specific fields to fetch from the List_values
     * 
    **/
    select?: List_valuesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: List_valuesInclude | null
    where?: List_valuesWhereInput
    orderBy?: Enumerable<List_valuesOrderByWithRelationInput>
    cursor?: List_valuesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Enumerable<List_valuesScalarFieldEnum>
  }


  /**
   * Accounts.lists
   */
  export type Accounts$listsArgs = {
    /**
     * Select specific fields to fetch from the Lists
     * 
    **/
    select?: ListsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: ListsInclude | null
    where?: ListsWhereInput
    orderBy?: Enumerable<ListsOrderByWithRelationInput>
    cursor?: ListsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Enumerable<ListsScalarFieldEnum>
  }


  /**
   * Accounts.observation_sources
   */
  export type Accounts$observation_sourcesArgs = {
    /**
     * Select specific fields to fetch from the Observation_sources
     * 
    **/
    select?: Observation_sourcesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: Observation_sourcesInclude | null
    where?: Observation_sourcesWhereInput
    orderBy?: Enumerable<Observation_sourcesOrderByWithRelationInput>
    cursor?: Observation_sourcesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Enumerable<Observation_sourcesScalarFieldEnum>
  }


  /**
   * Accounts.persons
   */
  export type Accounts$personsArgs = {
    /**
     * Select specific fields to fetch from the Persons
     * 
    **/
    select?: PersonsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: PersonsInclude | null
    where?: PersonsWhereInput
    orderBy?: Enumerable<PersonsOrderByWithRelationInput>
    cursor?: PersonsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Enumerable<PersonsScalarFieldEnum>
  }


  /**
   * Accounts.place_levels
   */
  export type Accounts$place_levelsArgs = {
    /**
     * Select specific fields to fetch from the Place_levels
     * 
    **/
    select?: Place_levelsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: Place_levelsInclude | null
    where?: Place_levelsWhereInput
    orderBy?: Enumerable<Place_levelsOrderByWithRelationInput>
    cursor?: Place_levelsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Enumerable<Place_levelsScalarFieldEnum>
  }


  /**
   * Accounts.project_users
   */
  export type Accounts$project_usersArgs = {
    /**
     * Select specific fields to fetch from the Project_users
     * 
    **/
    select?: Project_usersSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: Project_usersInclude | null
    where?: Project_usersWhereInput
    orderBy?: Enumerable<Project_usersOrderByWithRelationInput>
    cursor?: Project_usersWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Enumerable<Project_usersScalarFieldEnum>
  }


  /**
   * Accounts.projects
   */
  export type Accounts$projectsArgs = {
    /**
     * Select specific fields to fetch from the Projects
     * 
    **/
    select?: ProjectsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: ProjectsInclude | null
    where?: ProjectsWhereInput
    orderBy?: Enumerable<ProjectsOrderByWithRelationInput>
    cursor?: ProjectsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Enumerable<ProjectsScalarFieldEnum>
  }


  /**
   * Accounts.subproject_taxa
   */
  export type Accounts$subproject_taxaArgs = {
    /**
     * Select specific fields to fetch from the Subproject_taxa
     * 
    **/
    select?: Subproject_taxaSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: Subproject_taxaInclude | null
    where?: Subproject_taxaWhereInput
    orderBy?: Enumerable<Subproject_taxaOrderByWithRelationInput>
    cursor?: Subproject_taxaWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Enumerable<Subproject_taxaScalarFieldEnum>
  }


  /**
   * Accounts.subproject_users
   */
  export type Accounts$subproject_usersArgs = {
    /**
     * Select specific fields to fetch from the Subproject_users
     * 
    **/
    select?: Subproject_usersSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: Subproject_usersInclude | null
    where?: Subproject_usersWhereInput
    orderBy?: Enumerable<Subproject_usersOrderByWithRelationInput>
    cursor?: Subproject_usersWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Enumerable<Subproject_usersScalarFieldEnum>
  }


  /**
   * Accounts.subprojects
   */
  export type Accounts$subprojectsArgs = {
    /**
     * Select specific fields to fetch from the Subprojects
     * 
    **/
    select?: SubprojectsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: SubprojectsInclude | null
    where?: SubprojectsWhereInput
    orderBy?: Enumerable<SubprojectsOrderByWithRelationInput>
    cursor?: SubprojectsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Enumerable<SubprojectsScalarFieldEnum>
  }


  /**
   * Accounts.taxa
   */
  export type Accounts$taxaArgs = {
    /**
     * Select specific fields to fetch from the Taxa
     * 
    **/
    select?: TaxaSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: TaxaInclude | null
    where?: TaxaWhereInput
    orderBy?: Enumerable<TaxaOrderByWithRelationInput>
    cursor?: TaxaWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Enumerable<TaxaScalarFieldEnum>
  }


  /**
   * Accounts.taxonomies
   */
  export type Accounts$taxonomiesArgs = {
    /**
     * Select specific fields to fetch from the Taxonomies
     * 
    **/
    select?: TaxonomiesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: TaxonomiesInclude | null
    where?: TaxonomiesWhereInput
    orderBy?: Enumerable<TaxonomiesOrderByWithRelationInput>
    cursor?: TaxonomiesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Enumerable<TaxonomiesScalarFieldEnum>
  }


  /**
   * Accounts.tile_layers
   */
  export type Accounts$tile_layersArgs = {
    /**
     * Select specific fields to fetch from the Tile_layers
     * 
    **/
    select?: Tile_layersSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: Tile_layersInclude | null
    where?: Tile_layersWhereInput
    orderBy?: Enumerable<Tile_layersOrderByWithRelationInput>
    cursor?: Tile_layersWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Enumerable<Tile_layersScalarFieldEnum>
  }


  /**
   * Accounts.ui_options
   */
  export type Accounts$ui_optionsArgs = {
    /**
     * Select specific fields to fetch from the Ui_options
     * 
    **/
    select?: Ui_optionsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: Ui_optionsInclude | null
    where?: Ui_optionsWhereInput
    orderBy?: Enumerable<Ui_optionsOrderByWithRelationInput>
    cursor?: Ui_optionsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Enumerable<Ui_optionsScalarFieldEnum>
  }


  /**
   * Accounts.units
   */
  export type Accounts$unitsArgs = {
    /**
     * Select specific fields to fetch from the Units
     * 
    **/
    select?: UnitsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: UnitsInclude | null
    where?: UnitsWhereInput
    orderBy?: Enumerable<UnitsOrderByWithRelationInput>
    cursor?: UnitsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Enumerable<UnitsScalarFieldEnum>
  }


  /**
   * Accounts.user_messages
   */
  export type Accounts$user_messagesArgs = {
    /**
     * Select specific fields to fetch from the User_messages
     * 
    **/
    select?: User_messagesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: User_messagesInclude | null
    where?: User_messagesWhereInput
    orderBy?: Enumerable<User_messagesOrderByWithRelationInput>
    cursor?: User_messagesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Enumerable<User_messagesScalarFieldEnum>
  }


  /**
   * Accounts without action
   */
  export type AccountsArgs = {
    /**
     * Select specific fields to fetch from the Accounts
     * 
    **/
    select?: AccountsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: AccountsInclude | null
  }



  /**
   * Model Field_types
   */


  export type AggregateField_types = {
    _count: Field_typesCountAggregateOutputType | null
    _avg: Field_typesAvgAggregateOutputType | null
    _sum: Field_typesSumAggregateOutputType | null
    _min: Field_typesMinAggregateOutputType | null
    _max: Field_typesMaxAggregateOutputType | null
  }

  export type Field_typesAvgAggregateOutputType = {
    sort: number | null
  }

  export type Field_typesSumAggregateOutputType = {
    sort: number | null
  }

  export type Field_typesMinAggregateOutputType = {
    field_type_id: string | null
    name: string | null
    sort: number | null
    comment: string | null
    label_replace_by_generated_column: string | null
    deleted: boolean | null
  }

  export type Field_typesMaxAggregateOutputType = {
    field_type_id: string | null
    name: string | null
    sort: number | null
    comment: string | null
    label_replace_by_generated_column: string | null
    deleted: boolean | null
  }

  export type Field_typesCountAggregateOutputType = {
    field_type_id: number
    name: number
    sort: number
    comment: number
    label_replace_by_generated_column: number
    deleted: number
    _all: number
  }


  export type Field_typesAvgAggregateInputType = {
    sort?: true
  }

  export type Field_typesSumAggregateInputType = {
    sort?: true
  }

  export type Field_typesMinAggregateInputType = {
    field_type_id?: true
    name?: true
    sort?: true
    comment?: true
    label_replace_by_generated_column?: true
    deleted?: true
  }

  export type Field_typesMaxAggregateInputType = {
    field_type_id?: true
    name?: true
    sort?: true
    comment?: true
    label_replace_by_generated_column?: true
    deleted?: true
  }

  export type Field_typesCountAggregateInputType = {
    field_type_id?: true
    name?: true
    sort?: true
    comment?: true
    label_replace_by_generated_column?: true
    deleted?: true
    _all?: true
  }

  export type Field_typesAggregateArgs = {
    /**
     * Filter which Field_types to aggregate.
     * 
    **/
    where?: Field_typesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Field_types to fetch.
     * 
    **/
    orderBy?: Enumerable<Field_typesOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     * 
    **/
    cursor?: Field_typesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Field_types from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Field_types.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Field_types
    **/
    _count?: true | Field_typesCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Field_typesAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Field_typesSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Field_typesMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Field_typesMaxAggregateInputType
  }

  export type GetField_typesAggregateType<T extends Field_typesAggregateArgs> = {
        [P in keyof T & keyof AggregateField_types]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateField_types[P]>
      : GetScalarType<T[P], AggregateField_types[P]>
  }




  export type Field_typesGroupByArgs = {
    where?: Field_typesWhereInput
    orderBy?: Enumerable<Field_typesOrderByWithAggregationInput>
    by: Array<Field_typesScalarFieldEnum>
    having?: Field_typesScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Field_typesCountAggregateInputType | true
    _avg?: Field_typesAvgAggregateInputType
    _sum?: Field_typesSumAggregateInputType
    _min?: Field_typesMinAggregateInputType
    _max?: Field_typesMaxAggregateInputType
  }


  export type Field_typesGroupByOutputType = {
    field_type_id: string
    name: string | null
    sort: number | null
    comment: string | null
    label_replace_by_generated_column: string | null
    deleted: boolean | null
    _count: Field_typesCountAggregateOutputType | null
    _avg: Field_typesAvgAggregateOutputType | null
    _sum: Field_typesSumAggregateOutputType | null
    _min: Field_typesMinAggregateOutputType | null
    _max: Field_typesMaxAggregateOutputType | null
  }

  type GetField_typesGroupByPayload<T extends Field_typesGroupByArgs> = PrismaPromise<
    Array<
      PickArray<Field_typesGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Field_typesGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Field_typesGroupByOutputType[P]>
            : GetScalarType<T[P], Field_typesGroupByOutputType[P]>
        }
      >
    >


  export type Field_typesSelect = {
    field_type_id?: boolean
    name?: boolean
    sort?: boolean
    comment?: boolean
    label_replace_by_generated_column?: boolean
    deleted?: boolean
    widgets_for_fields?: boolean | Field_types$widgets_for_fieldsArgs
    _count?: boolean | Field_typesCountOutputTypeArgs
  }


  export type Field_typesInclude = {
    widgets_for_fields?: boolean | Field_types$widgets_for_fieldsArgs
    _count?: boolean | Field_typesCountOutputTypeArgs
  } 

  export type Field_typesGetPayload<S extends boolean | null | undefined | Field_typesArgs> =
    S extends { select: any, include: any } ? 'Please either choose `select` or `include`' :
    S extends true ? Field_types :
    S extends undefined ? never :
    S extends { include: any } & (Field_typesArgs | Field_typesFindManyArgs)
    ? Field_types  & {
    [P in TruthyKeys<S['include']>]:
        P extends 'widgets_for_fields' ? Array < Widgets_for_fieldsGetPayload<S['include'][P]>>  :
        P extends '_count' ? Field_typesCountOutputTypeGetPayload<S['include'][P]> :  never
  } 
    : S extends { select: any } & (Field_typesArgs | Field_typesFindManyArgs)
      ? {
    [P in TruthyKeys<S['select']>]:
        P extends 'widgets_for_fields' ? Array < Widgets_for_fieldsGetPayload<S['select'][P]>>  :
        P extends '_count' ? Field_typesCountOutputTypeGetPayload<S['select'][P]> :  P extends keyof Field_types ? Field_types[P] : never
  } 
      : Field_types


  type Field_typesCountArgs = Merge<
    Omit<Field_typesFindManyArgs, 'select' | 'include'> & {
      select?: Field_typesCountAggregateInputType | true
    }
  >

  export interface Field_typesDelegate<GlobalRejectSettings extends Prisma.RejectOnNotFound | Prisma.RejectPerOperation | false | undefined> {
    /**
     * Find zero or one Field_types that matches the filter.
     * @param {Field_typesFindUniqueArgs} args - Arguments to find a Field_types
     * @example
     * // Get one Field_types
     * const field_types = await prisma.field_types.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends Field_typesFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, Field_typesFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'Field_types'> extends True ? Prisma__Field_typesClient<Field_typesGetPayload<T>> : Prisma__Field_typesClient<Field_typesGetPayload<T> | null, null>

    /**
     * Find one Field_types that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {Field_typesFindUniqueOrThrowArgs} args - Arguments to find a Field_types
     * @example
     * // Get one Field_types
     * const field_types = await prisma.field_types.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends Field_typesFindUniqueOrThrowArgs>(
      args?: SelectSubset<T, Field_typesFindUniqueOrThrowArgs>
    ): Prisma__Field_typesClient<Field_typesGetPayload<T>>

    /**
     * Find the first Field_types that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Field_typesFindFirstArgs} args - Arguments to find a Field_types
     * @example
     * // Get one Field_types
     * const field_types = await prisma.field_types.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends Field_typesFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, Field_typesFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'Field_types'> extends True ? Prisma__Field_typesClient<Field_typesGetPayload<T>> : Prisma__Field_typesClient<Field_typesGetPayload<T> | null, null>

    /**
     * Find the first Field_types that matches the filter or
     * throw `NotFoundError` if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Field_typesFindFirstOrThrowArgs} args - Arguments to find a Field_types
     * @example
     * // Get one Field_types
     * const field_types = await prisma.field_types.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends Field_typesFindFirstOrThrowArgs>(
      args?: SelectSubset<T, Field_typesFindFirstOrThrowArgs>
    ): Prisma__Field_typesClient<Field_typesGetPayload<T>>

    /**
     * Find zero or more Field_types that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Field_typesFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Field_types
     * const field_types = await prisma.field_types.findMany()
     * 
     * // Get first 10 Field_types
     * const field_types = await prisma.field_types.findMany({ take: 10 })
     * 
     * // Only select the `field_type_id`
     * const field_typesWithField_type_idOnly = await prisma.field_types.findMany({ select: { field_type_id: true } })
     * 
    **/
    findMany<T extends Field_typesFindManyArgs>(
      args?: SelectSubset<T, Field_typesFindManyArgs>
    ): PrismaPromise<Array<Field_typesGetPayload<T>>>

    /**
     * Create a Field_types.
     * @param {Field_typesCreateArgs} args - Arguments to create a Field_types.
     * @example
     * // Create one Field_types
     * const Field_types = await prisma.field_types.create({
     *   data: {
     *     // ... data to create a Field_types
     *   }
     * })
     * 
    **/
    create<T extends Field_typesCreateArgs>(
      args: SelectSubset<T, Field_typesCreateArgs>
    ): Prisma__Field_typesClient<Field_typesGetPayload<T>>

    /**
     * Create many Field_types.
     *     @param {Field_typesCreateManyArgs} args - Arguments to create many Field_types.
     *     @example
     *     // Create many Field_types
     *     const field_types = await prisma.field_types.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends Field_typesCreateManyArgs>(
      args?: SelectSubset<T, Field_typesCreateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Delete a Field_types.
     * @param {Field_typesDeleteArgs} args - Arguments to delete one Field_types.
     * @example
     * // Delete one Field_types
     * const Field_types = await prisma.field_types.delete({
     *   where: {
     *     // ... filter to delete one Field_types
     *   }
     * })
     * 
    **/
    delete<T extends Field_typesDeleteArgs>(
      args: SelectSubset<T, Field_typesDeleteArgs>
    ): Prisma__Field_typesClient<Field_typesGetPayload<T>>

    /**
     * Update one Field_types.
     * @param {Field_typesUpdateArgs} args - Arguments to update one Field_types.
     * @example
     * // Update one Field_types
     * const field_types = await prisma.field_types.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends Field_typesUpdateArgs>(
      args: SelectSubset<T, Field_typesUpdateArgs>
    ): Prisma__Field_typesClient<Field_typesGetPayload<T>>

    /**
     * Delete zero or more Field_types.
     * @param {Field_typesDeleteManyArgs} args - Arguments to filter Field_types to delete.
     * @example
     * // Delete a few Field_types
     * const { count } = await prisma.field_types.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends Field_typesDeleteManyArgs>(
      args?: SelectSubset<T, Field_typesDeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more Field_types.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Field_typesUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Field_types
     * const field_types = await prisma.field_types.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends Field_typesUpdateManyArgs>(
      args: SelectSubset<T, Field_typesUpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one Field_types.
     * @param {Field_typesUpsertArgs} args - Arguments to update or create a Field_types.
     * @example
     * // Update or create a Field_types
     * const field_types = await prisma.field_types.upsert({
     *   create: {
     *     // ... data to create a Field_types
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Field_types we want to update
     *   }
     * })
    **/
    upsert<T extends Field_typesUpsertArgs>(
      args: SelectSubset<T, Field_typesUpsertArgs>
    ): Prisma__Field_typesClient<Field_typesGetPayload<T>>

    /**
     * Count the number of Field_types.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Field_typesCountArgs} args - Arguments to filter Field_types to count.
     * @example
     * // Count the number of Field_types
     * const count = await prisma.field_types.count({
     *   where: {
     *     // ... the filter for the Field_types we want to count
     *   }
     * })
    **/
    count<T extends Field_typesCountArgs>(
      args?: Subset<T, Field_typesCountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Field_typesCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Field_types.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Field_typesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Field_typesAggregateArgs>(args: Subset<T, Field_typesAggregateArgs>): PrismaPromise<GetField_typesAggregateType<T>>

    /**
     * Group by Field_types.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Field_typesGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends Field_typesGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: Field_typesGroupByArgs['orderBy'] }
        : { orderBy?: Field_typesGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, Field_typesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetField_typesGroupByPayload<T> : PrismaPromise<InputErrors>

  }

  /**
   * The delegate class that acts as a "Promise-like" for Field_types.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__Field_typesClient<T, Null = never> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';

    widgets_for_fields<T extends Field_types$widgets_for_fieldsArgs= {}>(args?: Subset<T, Field_types$widgets_for_fieldsArgs>): PrismaPromise<Array<Widgets_for_fieldsGetPayload<T>>| Null>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }



  // Custom InputTypes

  /**
   * Field_types base type for findUnique actions
   */
  export type Field_typesFindUniqueArgsBase = {
    /**
     * Select specific fields to fetch from the Field_types
     * 
    **/
    select?: Field_typesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: Field_typesInclude | null
    /**
     * Filter, which Field_types to fetch.
     * 
    **/
    where: Field_typesWhereUniqueInput
  }

  /**
   * Field_types findUnique
   */
  export interface Field_typesFindUniqueArgs extends Field_typesFindUniqueArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findUniqueOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * Field_types findUniqueOrThrow
   */
  export type Field_typesFindUniqueOrThrowArgs = {
    /**
     * Select specific fields to fetch from the Field_types
     * 
    **/
    select?: Field_typesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: Field_typesInclude | null
    /**
     * Filter, which Field_types to fetch.
     * 
    **/
    where: Field_typesWhereUniqueInput
  }


  /**
   * Field_types base type for findFirst actions
   */
  export type Field_typesFindFirstArgsBase = {
    /**
     * Select specific fields to fetch from the Field_types
     * 
    **/
    select?: Field_typesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: Field_typesInclude | null
    /**
     * Filter, which Field_types to fetch.
     * 
    **/
    where?: Field_typesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Field_types to fetch.
     * 
    **/
    orderBy?: Enumerable<Field_typesOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Field_types.
     * 
    **/
    cursor?: Field_typesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Field_types from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Field_types.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Field_types.
     * 
    **/
    distinct?: Enumerable<Field_typesScalarFieldEnum>
  }

  /**
   * Field_types findFirst
   */
  export interface Field_typesFindFirstArgs extends Field_typesFindFirstArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findFirstOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * Field_types findFirstOrThrow
   */
  export type Field_typesFindFirstOrThrowArgs = {
    /**
     * Select specific fields to fetch from the Field_types
     * 
    **/
    select?: Field_typesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: Field_typesInclude | null
    /**
     * Filter, which Field_types to fetch.
     * 
    **/
    where?: Field_typesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Field_types to fetch.
     * 
    **/
    orderBy?: Enumerable<Field_typesOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Field_types.
     * 
    **/
    cursor?: Field_typesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Field_types from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Field_types.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Field_types.
     * 
    **/
    distinct?: Enumerable<Field_typesScalarFieldEnum>
  }


  /**
   * Field_types findMany
   */
  export type Field_typesFindManyArgs = {
    /**
     * Select specific fields to fetch from the Field_types
     * 
    **/
    select?: Field_typesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: Field_typesInclude | null
    /**
     * Filter, which Field_types to fetch.
     * 
    **/
    where?: Field_typesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Field_types to fetch.
     * 
    **/
    orderBy?: Enumerable<Field_typesOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Field_types.
     * 
    **/
    cursor?: Field_typesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Field_types from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Field_types.
     * 
    **/
    skip?: number
    distinct?: Enumerable<Field_typesScalarFieldEnum>
  }


  /**
   * Field_types create
   */
  export type Field_typesCreateArgs = {
    /**
     * Select specific fields to fetch from the Field_types
     * 
    **/
    select?: Field_typesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: Field_typesInclude | null
    /**
     * The data needed to create a Field_types.
     * 
    **/
    data: XOR<Field_typesCreateInput, Field_typesUncheckedCreateInput>
  }


  /**
   * Field_types createMany
   */
  export type Field_typesCreateManyArgs = {
    /**
     * The data used to create many Field_types.
     * 
    **/
    data: Enumerable<Field_typesCreateManyInput>
    skipDuplicates?: boolean
  }


  /**
   * Field_types update
   */
  export type Field_typesUpdateArgs = {
    /**
     * Select specific fields to fetch from the Field_types
     * 
    **/
    select?: Field_typesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: Field_typesInclude | null
    /**
     * The data needed to update a Field_types.
     * 
    **/
    data: XOR<Field_typesUpdateInput, Field_typesUncheckedUpdateInput>
    /**
     * Choose, which Field_types to update.
     * 
    **/
    where: Field_typesWhereUniqueInput
  }


  /**
   * Field_types updateMany
   */
  export type Field_typesUpdateManyArgs = {
    /**
     * The data used to update Field_types.
     * 
    **/
    data: XOR<Field_typesUpdateManyMutationInput, Field_typesUncheckedUpdateManyInput>
    /**
     * Filter which Field_types to update
     * 
    **/
    where?: Field_typesWhereInput
  }


  /**
   * Field_types upsert
   */
  export type Field_typesUpsertArgs = {
    /**
     * Select specific fields to fetch from the Field_types
     * 
    **/
    select?: Field_typesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: Field_typesInclude | null
    /**
     * The filter to search for the Field_types to update in case it exists.
     * 
    **/
    where: Field_typesWhereUniqueInput
    /**
     * In case the Field_types found by the `where` argument doesn't exist, create a new Field_types with this data.
     * 
    **/
    create: XOR<Field_typesCreateInput, Field_typesUncheckedCreateInput>
    /**
     * In case the Field_types was found with the provided `where` argument, update it with this data.
     * 
    **/
    update: XOR<Field_typesUpdateInput, Field_typesUncheckedUpdateInput>
  }


  /**
   * Field_types delete
   */
  export type Field_typesDeleteArgs = {
    /**
     * Select specific fields to fetch from the Field_types
     * 
    **/
    select?: Field_typesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: Field_typesInclude | null
    /**
     * Filter which Field_types to delete.
     * 
    **/
    where: Field_typesWhereUniqueInput
  }


  /**
   * Field_types deleteMany
   */
  export type Field_typesDeleteManyArgs = {
    /**
     * Filter which Field_types to delete
     * 
    **/
    where?: Field_typesWhereInput
  }


  /**
   * Field_types.widgets_for_fields
   */
  export type Field_types$widgets_for_fieldsArgs = {
    /**
     * Select specific fields to fetch from the Widgets_for_fields
     * 
    **/
    select?: Widgets_for_fieldsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: Widgets_for_fieldsInclude | null
    where?: Widgets_for_fieldsWhereInput
    orderBy?: Enumerable<Widgets_for_fieldsOrderByWithRelationInput>
    cursor?: Widgets_for_fieldsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Enumerable<Widgets_for_fieldsScalarFieldEnum>
  }


  /**
   * Field_types without action
   */
  export type Field_typesArgs = {
    /**
     * Select specific fields to fetch from the Field_types
     * 
    **/
    select?: Field_typesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: Field_typesInclude | null
  }



  /**
   * Model Gbif_occurrence_downloads
   */


  export type AggregateGbif_occurrence_downloads = {
    _count: Gbif_occurrence_downloadsCountAggregateOutputType | null
    _avg: Gbif_occurrence_downloadsAvgAggregateOutputType | null
    _sum: Gbif_occurrence_downloadsSumAggregateOutputType | null
    _min: Gbif_occurrence_downloadsMinAggregateOutputType | null
    _max: Gbif_occurrence_downloadsMaxAggregateOutputType | null
  }

  export type Gbif_occurrence_downloadsAvgAggregateOutputType = {
    inserted_count: number | null
  }

  export type Gbif_occurrence_downloadsSumAggregateOutputType = {
    inserted_count: number | null
  }

  export type Gbif_occurrence_downloadsMinAggregateOutputType = {
    gbif_occurrence_download_id: string | null
    account_id: string | null
    project_id: string | null
    subproject_id: string | null
    gbif_table: gbif_table | null
    created_time: Date | null
    download_key: string | null
    error: string | null
    inserted_time: Date | null
    inserted_count: number | null
    attribution: string | null
    deleted: boolean | null
  }

  export type Gbif_occurrence_downloadsMaxAggregateOutputType = {
    gbif_occurrence_download_id: string | null
    account_id: string | null
    project_id: string | null
    subproject_id: string | null
    gbif_table: gbif_table | null
    created_time: Date | null
    download_key: string | null
    error: string | null
    inserted_time: Date | null
    inserted_count: number | null
    attribution: string | null
    deleted: boolean | null
  }

  export type Gbif_occurrence_downloadsCountAggregateOutputType = {
    gbif_occurrence_download_id: number
    account_id: number
    project_id: number
    subproject_id: number
    gbif_table: number
    filters: number
    created_time: number
    download_key: number
    error: number
    inserted_time: number
    inserted_count: number
    attribution: number
    deleted: number
    _all: number
  }


  export type Gbif_occurrence_downloadsAvgAggregateInputType = {
    inserted_count?: true
  }

  export type Gbif_occurrence_downloadsSumAggregateInputType = {
    inserted_count?: true
  }

  export type Gbif_occurrence_downloadsMinAggregateInputType = {
    gbif_occurrence_download_id?: true
    account_id?: true
    project_id?: true
    subproject_id?: true
    gbif_table?: true
    created_time?: true
    download_key?: true
    error?: true
    inserted_time?: true
    inserted_count?: true
    attribution?: true
    deleted?: true
  }

  export type Gbif_occurrence_downloadsMaxAggregateInputType = {
    gbif_occurrence_download_id?: true
    account_id?: true
    project_id?: true
    subproject_id?: true
    gbif_table?: true
    created_time?: true
    download_key?: true
    error?: true
    inserted_time?: true
    inserted_count?: true
    attribution?: true
    deleted?: true
  }

  export type Gbif_occurrence_downloadsCountAggregateInputType = {
    gbif_occurrence_download_id?: true
    account_id?: true
    project_id?: true
    subproject_id?: true
    gbif_table?: true
    filters?: true
    created_time?: true
    download_key?: true
    error?: true
    inserted_time?: true
    inserted_count?: true
    attribution?: true
    deleted?: true
    _all?: true
  }

  export type Gbif_occurrence_downloadsAggregateArgs = {
    /**
     * Filter which Gbif_occurrence_downloads to aggregate.
     * 
    **/
    where?: Gbif_occurrence_downloadsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Gbif_occurrence_downloads to fetch.
     * 
    **/
    orderBy?: Enumerable<Gbif_occurrence_downloadsOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     * 
    **/
    cursor?: Gbif_occurrence_downloadsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Gbif_occurrence_downloads from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Gbif_occurrence_downloads.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Gbif_occurrence_downloads
    **/
    _count?: true | Gbif_occurrence_downloadsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Gbif_occurrence_downloadsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Gbif_occurrence_downloadsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Gbif_occurrence_downloadsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Gbif_occurrence_downloadsMaxAggregateInputType
  }

  export type GetGbif_occurrence_downloadsAggregateType<T extends Gbif_occurrence_downloadsAggregateArgs> = {
        [P in keyof T & keyof AggregateGbif_occurrence_downloads]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateGbif_occurrence_downloads[P]>
      : GetScalarType<T[P], AggregateGbif_occurrence_downloads[P]>
  }




  export type Gbif_occurrence_downloadsGroupByArgs = {
    where?: Gbif_occurrence_downloadsWhereInput
    orderBy?: Enumerable<Gbif_occurrence_downloadsOrderByWithAggregationInput>
    by: Array<Gbif_occurrence_downloadsScalarFieldEnum>
    having?: Gbif_occurrence_downloadsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Gbif_occurrence_downloadsCountAggregateInputType | true
    _avg?: Gbif_occurrence_downloadsAvgAggregateInputType
    _sum?: Gbif_occurrence_downloadsSumAggregateInputType
    _min?: Gbif_occurrence_downloadsMinAggregateInputType
    _max?: Gbif_occurrence_downloadsMaxAggregateInputType
  }


  export type Gbif_occurrence_downloadsGroupByOutputType = {
    gbif_occurrence_download_id: string
    account_id: string | null
    project_id: string | null
    subproject_id: string | null
    gbif_table: gbif_table | null
    filters: JsonValue | null
    created_time: Date | null
    download_key: string | null
    error: string | null
    inserted_time: Date | null
    inserted_count: number | null
    attribution: string | null
    deleted: boolean | null
    _count: Gbif_occurrence_downloadsCountAggregateOutputType | null
    _avg: Gbif_occurrence_downloadsAvgAggregateOutputType | null
    _sum: Gbif_occurrence_downloadsSumAggregateOutputType | null
    _min: Gbif_occurrence_downloadsMinAggregateOutputType | null
    _max: Gbif_occurrence_downloadsMaxAggregateOutputType | null
  }

  type GetGbif_occurrence_downloadsGroupByPayload<T extends Gbif_occurrence_downloadsGroupByArgs> = PrismaPromise<
    Array<
      PickArray<Gbif_occurrence_downloadsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Gbif_occurrence_downloadsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Gbif_occurrence_downloadsGroupByOutputType[P]>
            : GetScalarType<T[P], Gbif_occurrence_downloadsGroupByOutputType[P]>
        }
      >
    >


  export type Gbif_occurrence_downloadsSelect = {
    gbif_occurrence_download_id?: boolean
    account_id?: boolean
    project_id?: boolean
    subproject_id?: boolean
    gbif_table?: boolean
    filters?: boolean
    created_time?: boolean
    download_key?: boolean
    error?: boolean
    inserted_time?: boolean
    inserted_count?: boolean
    attribution?: boolean
    deleted?: boolean
    accounts?: boolean | Gbif_occurrence_downloads$accountsArgs
    projects?: boolean | Gbif_occurrence_downloads$projectsArgs
    subprojects?: boolean | Gbif_occurrence_downloads$subprojectsArgs
  }


  export type Gbif_occurrence_downloadsInclude = {
    accounts?: boolean | Gbif_occurrence_downloads$accountsArgs
    projects?: boolean | Gbif_occurrence_downloads$projectsArgs
    subprojects?: boolean | Gbif_occurrence_downloads$subprojectsArgs
  } 

  export type Gbif_occurrence_downloadsGetPayload<S extends boolean | null | undefined | Gbif_occurrence_downloadsArgs> =
    S extends { select: any, include: any } ? 'Please either choose `select` or `include`' :
    S extends true ? Gbif_occurrence_downloads :
    S extends undefined ? never :
    S extends { include: any } & (Gbif_occurrence_downloadsArgs | Gbif_occurrence_downloadsFindManyArgs)
    ? Gbif_occurrence_downloads  & {
    [P in TruthyKeys<S['include']>]:
        P extends 'accounts' ? AccountsGetPayload<S['include'][P]> | null :
        P extends 'projects' ? ProjectsGetPayload<S['include'][P]> | null :
        P extends 'subprojects' ? SubprojectsGetPayload<S['include'][P]> | null :  never
  } 
    : S extends { select: any } & (Gbif_occurrence_downloadsArgs | Gbif_occurrence_downloadsFindManyArgs)
      ? {
    [P in TruthyKeys<S['select']>]:
        P extends 'accounts' ? AccountsGetPayload<S['select'][P]> | null :
        P extends 'projects' ? ProjectsGetPayload<S['select'][P]> | null :
        P extends 'subprojects' ? SubprojectsGetPayload<S['select'][P]> | null :  P extends keyof Gbif_occurrence_downloads ? Gbif_occurrence_downloads[P] : never
  } 
      : Gbif_occurrence_downloads


  type Gbif_occurrence_downloadsCountArgs = Merge<
    Omit<Gbif_occurrence_downloadsFindManyArgs, 'select' | 'include'> & {
      select?: Gbif_occurrence_downloadsCountAggregateInputType | true
    }
  >

  export interface Gbif_occurrence_downloadsDelegate<GlobalRejectSettings extends Prisma.RejectOnNotFound | Prisma.RejectPerOperation | false | undefined> {
    /**
     * Find zero or one Gbif_occurrence_downloads that matches the filter.
     * @param {Gbif_occurrence_downloadsFindUniqueArgs} args - Arguments to find a Gbif_occurrence_downloads
     * @example
     * // Get one Gbif_occurrence_downloads
     * const gbif_occurrence_downloads = await prisma.gbif_occurrence_downloads.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends Gbif_occurrence_downloadsFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, Gbif_occurrence_downloadsFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'Gbif_occurrence_downloads'> extends True ? Prisma__Gbif_occurrence_downloadsClient<Gbif_occurrence_downloadsGetPayload<T>> : Prisma__Gbif_occurrence_downloadsClient<Gbif_occurrence_downloadsGetPayload<T> | null, null>

    /**
     * Find one Gbif_occurrence_downloads that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {Gbif_occurrence_downloadsFindUniqueOrThrowArgs} args - Arguments to find a Gbif_occurrence_downloads
     * @example
     * // Get one Gbif_occurrence_downloads
     * const gbif_occurrence_downloads = await prisma.gbif_occurrence_downloads.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends Gbif_occurrence_downloadsFindUniqueOrThrowArgs>(
      args?: SelectSubset<T, Gbif_occurrence_downloadsFindUniqueOrThrowArgs>
    ): Prisma__Gbif_occurrence_downloadsClient<Gbif_occurrence_downloadsGetPayload<T>>

    /**
     * Find the first Gbif_occurrence_downloads that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Gbif_occurrence_downloadsFindFirstArgs} args - Arguments to find a Gbif_occurrence_downloads
     * @example
     * // Get one Gbif_occurrence_downloads
     * const gbif_occurrence_downloads = await prisma.gbif_occurrence_downloads.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends Gbif_occurrence_downloadsFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, Gbif_occurrence_downloadsFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'Gbif_occurrence_downloads'> extends True ? Prisma__Gbif_occurrence_downloadsClient<Gbif_occurrence_downloadsGetPayload<T>> : Prisma__Gbif_occurrence_downloadsClient<Gbif_occurrence_downloadsGetPayload<T> | null, null>

    /**
     * Find the first Gbif_occurrence_downloads that matches the filter or
     * throw `NotFoundError` if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Gbif_occurrence_downloadsFindFirstOrThrowArgs} args - Arguments to find a Gbif_occurrence_downloads
     * @example
     * // Get one Gbif_occurrence_downloads
     * const gbif_occurrence_downloads = await prisma.gbif_occurrence_downloads.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends Gbif_occurrence_downloadsFindFirstOrThrowArgs>(
      args?: SelectSubset<T, Gbif_occurrence_downloadsFindFirstOrThrowArgs>
    ): Prisma__Gbif_occurrence_downloadsClient<Gbif_occurrence_downloadsGetPayload<T>>

    /**
     * Find zero or more Gbif_occurrence_downloads that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Gbif_occurrence_downloadsFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Gbif_occurrence_downloads
     * const gbif_occurrence_downloads = await prisma.gbif_occurrence_downloads.findMany()
     * 
     * // Get first 10 Gbif_occurrence_downloads
     * const gbif_occurrence_downloads = await prisma.gbif_occurrence_downloads.findMany({ take: 10 })
     * 
     * // Only select the `gbif_occurrence_download_id`
     * const gbif_occurrence_downloadsWithGbif_occurrence_download_idOnly = await prisma.gbif_occurrence_downloads.findMany({ select: { gbif_occurrence_download_id: true } })
     * 
    **/
    findMany<T extends Gbif_occurrence_downloadsFindManyArgs>(
      args?: SelectSubset<T, Gbif_occurrence_downloadsFindManyArgs>
    ): PrismaPromise<Array<Gbif_occurrence_downloadsGetPayload<T>>>

    /**
     * Create a Gbif_occurrence_downloads.
     * @param {Gbif_occurrence_downloadsCreateArgs} args - Arguments to create a Gbif_occurrence_downloads.
     * @example
     * // Create one Gbif_occurrence_downloads
     * const Gbif_occurrence_downloads = await prisma.gbif_occurrence_downloads.create({
     *   data: {
     *     // ... data to create a Gbif_occurrence_downloads
     *   }
     * })
     * 
    **/
    create<T extends Gbif_occurrence_downloadsCreateArgs>(
      args: SelectSubset<T, Gbif_occurrence_downloadsCreateArgs>
    ): Prisma__Gbif_occurrence_downloadsClient<Gbif_occurrence_downloadsGetPayload<T>>

    /**
     * Create many Gbif_occurrence_downloads.
     *     @param {Gbif_occurrence_downloadsCreateManyArgs} args - Arguments to create many Gbif_occurrence_downloads.
     *     @example
     *     // Create many Gbif_occurrence_downloads
     *     const gbif_occurrence_downloads = await prisma.gbif_occurrence_downloads.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends Gbif_occurrence_downloadsCreateManyArgs>(
      args?: SelectSubset<T, Gbif_occurrence_downloadsCreateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Delete a Gbif_occurrence_downloads.
     * @param {Gbif_occurrence_downloadsDeleteArgs} args - Arguments to delete one Gbif_occurrence_downloads.
     * @example
     * // Delete one Gbif_occurrence_downloads
     * const Gbif_occurrence_downloads = await prisma.gbif_occurrence_downloads.delete({
     *   where: {
     *     // ... filter to delete one Gbif_occurrence_downloads
     *   }
     * })
     * 
    **/
    delete<T extends Gbif_occurrence_downloadsDeleteArgs>(
      args: SelectSubset<T, Gbif_occurrence_downloadsDeleteArgs>
    ): Prisma__Gbif_occurrence_downloadsClient<Gbif_occurrence_downloadsGetPayload<T>>

    /**
     * Update one Gbif_occurrence_downloads.
     * @param {Gbif_occurrence_downloadsUpdateArgs} args - Arguments to update one Gbif_occurrence_downloads.
     * @example
     * // Update one Gbif_occurrence_downloads
     * const gbif_occurrence_downloads = await prisma.gbif_occurrence_downloads.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends Gbif_occurrence_downloadsUpdateArgs>(
      args: SelectSubset<T, Gbif_occurrence_downloadsUpdateArgs>
    ): Prisma__Gbif_occurrence_downloadsClient<Gbif_occurrence_downloadsGetPayload<T>>

    /**
     * Delete zero or more Gbif_occurrence_downloads.
     * @param {Gbif_occurrence_downloadsDeleteManyArgs} args - Arguments to filter Gbif_occurrence_downloads to delete.
     * @example
     * // Delete a few Gbif_occurrence_downloads
     * const { count } = await prisma.gbif_occurrence_downloads.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends Gbif_occurrence_downloadsDeleteManyArgs>(
      args?: SelectSubset<T, Gbif_occurrence_downloadsDeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more Gbif_occurrence_downloads.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Gbif_occurrence_downloadsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Gbif_occurrence_downloads
     * const gbif_occurrence_downloads = await prisma.gbif_occurrence_downloads.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends Gbif_occurrence_downloadsUpdateManyArgs>(
      args: SelectSubset<T, Gbif_occurrence_downloadsUpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one Gbif_occurrence_downloads.
     * @param {Gbif_occurrence_downloadsUpsertArgs} args - Arguments to update or create a Gbif_occurrence_downloads.
     * @example
     * // Update or create a Gbif_occurrence_downloads
     * const gbif_occurrence_downloads = await prisma.gbif_occurrence_downloads.upsert({
     *   create: {
     *     // ... data to create a Gbif_occurrence_downloads
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Gbif_occurrence_downloads we want to update
     *   }
     * })
    **/
    upsert<T extends Gbif_occurrence_downloadsUpsertArgs>(
      args: SelectSubset<T, Gbif_occurrence_downloadsUpsertArgs>
    ): Prisma__Gbif_occurrence_downloadsClient<Gbif_occurrence_downloadsGetPayload<T>>

    /**
     * Count the number of Gbif_occurrence_downloads.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Gbif_occurrence_downloadsCountArgs} args - Arguments to filter Gbif_occurrence_downloads to count.
     * @example
     * // Count the number of Gbif_occurrence_downloads
     * const count = await prisma.gbif_occurrence_downloads.count({
     *   where: {
     *     // ... the filter for the Gbif_occurrence_downloads we want to count
     *   }
     * })
    **/
    count<T extends Gbif_occurrence_downloadsCountArgs>(
      args?: Subset<T, Gbif_occurrence_downloadsCountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Gbif_occurrence_downloadsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Gbif_occurrence_downloads.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Gbif_occurrence_downloadsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Gbif_occurrence_downloadsAggregateArgs>(args: Subset<T, Gbif_occurrence_downloadsAggregateArgs>): PrismaPromise<GetGbif_occurrence_downloadsAggregateType<T>>

    /**
     * Group by Gbif_occurrence_downloads.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Gbif_occurrence_downloadsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends Gbif_occurrence_downloadsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: Gbif_occurrence_downloadsGroupByArgs['orderBy'] }
        : { orderBy?: Gbif_occurrence_downloadsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, Gbif_occurrence_downloadsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetGbif_occurrence_downloadsGroupByPayload<T> : PrismaPromise<InputErrors>

  }

  /**
   * The delegate class that acts as a "Promise-like" for Gbif_occurrence_downloads.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__Gbif_occurrence_downloadsClient<T, Null = never> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';

    accounts<T extends Gbif_occurrence_downloads$accountsArgs= {}>(args?: Subset<T, Gbif_occurrence_downloads$accountsArgs>): Prisma__AccountsClient<AccountsGetPayload<T> | Null>;

    projects<T extends Gbif_occurrence_downloads$projectsArgs= {}>(args?: Subset<T, Gbif_occurrence_downloads$projectsArgs>): Prisma__ProjectsClient<ProjectsGetPayload<T> | Null>;

    subprojects<T extends Gbif_occurrence_downloads$subprojectsArgs= {}>(args?: Subset<T, Gbif_occurrence_downloads$subprojectsArgs>): Prisma__SubprojectsClient<SubprojectsGetPayload<T> | Null>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }



  // Custom InputTypes

  /**
   * Gbif_occurrence_downloads base type for findUnique actions
   */
  export type Gbif_occurrence_downloadsFindUniqueArgsBase = {
    /**
     * Select specific fields to fetch from the Gbif_occurrence_downloads
     * 
    **/
    select?: Gbif_occurrence_downloadsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: Gbif_occurrence_downloadsInclude | null
    /**
     * Filter, which Gbif_occurrence_downloads to fetch.
     * 
    **/
    where: Gbif_occurrence_downloadsWhereUniqueInput
  }

  /**
   * Gbif_occurrence_downloads findUnique
   */
  export interface Gbif_occurrence_downloadsFindUniqueArgs extends Gbif_occurrence_downloadsFindUniqueArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findUniqueOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * Gbif_occurrence_downloads findUniqueOrThrow
   */
  export type Gbif_occurrence_downloadsFindUniqueOrThrowArgs = {
    /**
     * Select specific fields to fetch from the Gbif_occurrence_downloads
     * 
    **/
    select?: Gbif_occurrence_downloadsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: Gbif_occurrence_downloadsInclude | null
    /**
     * Filter, which Gbif_occurrence_downloads to fetch.
     * 
    **/
    where: Gbif_occurrence_downloadsWhereUniqueInput
  }


  /**
   * Gbif_occurrence_downloads base type for findFirst actions
   */
  export type Gbif_occurrence_downloadsFindFirstArgsBase = {
    /**
     * Select specific fields to fetch from the Gbif_occurrence_downloads
     * 
    **/
    select?: Gbif_occurrence_downloadsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: Gbif_occurrence_downloadsInclude | null
    /**
     * Filter, which Gbif_occurrence_downloads to fetch.
     * 
    **/
    where?: Gbif_occurrence_downloadsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Gbif_occurrence_downloads to fetch.
     * 
    **/
    orderBy?: Enumerable<Gbif_occurrence_downloadsOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Gbif_occurrence_downloads.
     * 
    **/
    cursor?: Gbif_occurrence_downloadsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Gbif_occurrence_downloads from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Gbif_occurrence_downloads.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Gbif_occurrence_downloads.
     * 
    **/
    distinct?: Enumerable<Gbif_occurrence_downloadsScalarFieldEnum>
  }

  /**
   * Gbif_occurrence_downloads findFirst
   */
  export interface Gbif_occurrence_downloadsFindFirstArgs extends Gbif_occurrence_downloadsFindFirstArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findFirstOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * Gbif_occurrence_downloads findFirstOrThrow
   */
  export type Gbif_occurrence_downloadsFindFirstOrThrowArgs = {
    /**
     * Select specific fields to fetch from the Gbif_occurrence_downloads
     * 
    **/
    select?: Gbif_occurrence_downloadsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: Gbif_occurrence_downloadsInclude | null
    /**
     * Filter, which Gbif_occurrence_downloads to fetch.
     * 
    **/
    where?: Gbif_occurrence_downloadsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Gbif_occurrence_downloads to fetch.
     * 
    **/
    orderBy?: Enumerable<Gbif_occurrence_downloadsOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Gbif_occurrence_downloads.
     * 
    **/
    cursor?: Gbif_occurrence_downloadsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Gbif_occurrence_downloads from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Gbif_occurrence_downloads.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Gbif_occurrence_downloads.
     * 
    **/
    distinct?: Enumerable<Gbif_occurrence_downloadsScalarFieldEnum>
  }


  /**
   * Gbif_occurrence_downloads findMany
   */
  export type Gbif_occurrence_downloadsFindManyArgs = {
    /**
     * Select specific fields to fetch from the Gbif_occurrence_downloads
     * 
    **/
    select?: Gbif_occurrence_downloadsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: Gbif_occurrence_downloadsInclude | null
    /**
     * Filter, which Gbif_occurrence_downloads to fetch.
     * 
    **/
    where?: Gbif_occurrence_downloadsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Gbif_occurrence_downloads to fetch.
     * 
    **/
    orderBy?: Enumerable<Gbif_occurrence_downloadsOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Gbif_occurrence_downloads.
     * 
    **/
    cursor?: Gbif_occurrence_downloadsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Gbif_occurrence_downloads from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Gbif_occurrence_downloads.
     * 
    **/
    skip?: number
    distinct?: Enumerable<Gbif_occurrence_downloadsScalarFieldEnum>
  }


  /**
   * Gbif_occurrence_downloads create
   */
  export type Gbif_occurrence_downloadsCreateArgs = {
    /**
     * Select specific fields to fetch from the Gbif_occurrence_downloads
     * 
    **/
    select?: Gbif_occurrence_downloadsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: Gbif_occurrence_downloadsInclude | null
    /**
     * The data needed to create a Gbif_occurrence_downloads.
     * 
    **/
    data: XOR<Gbif_occurrence_downloadsCreateInput, Gbif_occurrence_downloadsUncheckedCreateInput>
  }


  /**
   * Gbif_occurrence_downloads createMany
   */
  export type Gbif_occurrence_downloadsCreateManyArgs = {
    /**
     * The data used to create many Gbif_occurrence_downloads.
     * 
    **/
    data: Enumerable<Gbif_occurrence_downloadsCreateManyInput>
    skipDuplicates?: boolean
  }


  /**
   * Gbif_occurrence_downloads update
   */
  export type Gbif_occurrence_downloadsUpdateArgs = {
    /**
     * Select specific fields to fetch from the Gbif_occurrence_downloads
     * 
    **/
    select?: Gbif_occurrence_downloadsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: Gbif_occurrence_downloadsInclude | null
    /**
     * The data needed to update a Gbif_occurrence_downloads.
     * 
    **/
    data: XOR<Gbif_occurrence_downloadsUpdateInput, Gbif_occurrence_downloadsUncheckedUpdateInput>
    /**
     * Choose, which Gbif_occurrence_downloads to update.
     * 
    **/
    where: Gbif_occurrence_downloadsWhereUniqueInput
  }


  /**
   * Gbif_occurrence_downloads updateMany
   */
  export type Gbif_occurrence_downloadsUpdateManyArgs = {
    /**
     * The data used to update Gbif_occurrence_downloads.
     * 
    **/
    data: XOR<Gbif_occurrence_downloadsUpdateManyMutationInput, Gbif_occurrence_downloadsUncheckedUpdateManyInput>
    /**
     * Filter which Gbif_occurrence_downloads to update
     * 
    **/
    where?: Gbif_occurrence_downloadsWhereInput
  }


  /**
   * Gbif_occurrence_downloads upsert
   */
  export type Gbif_occurrence_downloadsUpsertArgs = {
    /**
     * Select specific fields to fetch from the Gbif_occurrence_downloads
     * 
    **/
    select?: Gbif_occurrence_downloadsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: Gbif_occurrence_downloadsInclude | null
    /**
     * The filter to search for the Gbif_occurrence_downloads to update in case it exists.
     * 
    **/
    where: Gbif_occurrence_downloadsWhereUniqueInput
    /**
     * In case the Gbif_occurrence_downloads found by the `where` argument doesn't exist, create a new Gbif_occurrence_downloads with this data.
     * 
    **/
    create: XOR<Gbif_occurrence_downloadsCreateInput, Gbif_occurrence_downloadsUncheckedCreateInput>
    /**
     * In case the Gbif_occurrence_downloads was found with the provided `where` argument, update it with this data.
     * 
    **/
    update: XOR<Gbif_occurrence_downloadsUpdateInput, Gbif_occurrence_downloadsUncheckedUpdateInput>
  }


  /**
   * Gbif_occurrence_downloads delete
   */
  export type Gbif_occurrence_downloadsDeleteArgs = {
    /**
     * Select specific fields to fetch from the Gbif_occurrence_downloads
     * 
    **/
    select?: Gbif_occurrence_downloadsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: Gbif_occurrence_downloadsInclude | null
    /**
     * Filter which Gbif_occurrence_downloads to delete.
     * 
    **/
    where: Gbif_occurrence_downloadsWhereUniqueInput
  }


  /**
   * Gbif_occurrence_downloads deleteMany
   */
  export type Gbif_occurrence_downloadsDeleteManyArgs = {
    /**
     * Filter which Gbif_occurrence_downloads to delete
     * 
    **/
    where?: Gbif_occurrence_downloadsWhereInput
  }


  /**
   * Gbif_occurrence_downloads.accounts
   */
  export type Gbif_occurrence_downloads$accountsArgs = {
    /**
     * Select specific fields to fetch from the Accounts
     * 
    **/
    select?: AccountsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: AccountsInclude | null
    where?: AccountsWhereInput
  }


  /**
   * Gbif_occurrence_downloads.projects
   */
  export type Gbif_occurrence_downloads$projectsArgs = {
    /**
     * Select specific fields to fetch from the Projects
     * 
    **/
    select?: ProjectsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: ProjectsInclude | null
    where?: ProjectsWhereInput
  }


  /**
   * Gbif_occurrence_downloads.subprojects
   */
  export type Gbif_occurrence_downloads$subprojectsArgs = {
    /**
     * Select specific fields to fetch from the Subprojects
     * 
    **/
    select?: SubprojectsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: SubprojectsInclude | null
    where?: SubprojectsWhereInput
  }


  /**
   * Gbif_occurrence_downloads without action
   */
  export type Gbif_occurrence_downloadsArgs = {
    /**
     * Select specific fields to fetch from the Gbif_occurrence_downloads
     * 
    **/
    select?: Gbif_occurrence_downloadsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: Gbif_occurrence_downloadsInclude | null
  }



  /**
   * Model Gbif_occurrences
   */


  export type AggregateGbif_occurrences = {
    _count: Gbif_occurrencesCountAggregateOutputType | null
    _min: Gbif_occurrencesMinAggregateOutputType | null
    _max: Gbif_occurrencesMaxAggregateOutputType | null
  }

  export type Gbif_occurrencesMinAggregateOutputType = {
    gbif_occurrence_id: string | null
    account_id: string | null
    project_id: string | null
    subproject_id: string | null
    label: string | null
  }

  export type Gbif_occurrencesMaxAggregateOutputType = {
    gbif_occurrence_id: string | null
    account_id: string | null
    project_id: string | null
    subproject_id: string | null
    label: string | null
  }

  export type Gbif_occurrencesCountAggregateOutputType = {
    gbif_occurrence_id: number
    account_id: number
    project_id: number
    subproject_id: number
    gbif_data: number
    label: number
    _all: number
  }


  export type Gbif_occurrencesMinAggregateInputType = {
    gbif_occurrence_id?: true
    account_id?: true
    project_id?: true
    subproject_id?: true
    label?: true
  }

  export type Gbif_occurrencesMaxAggregateInputType = {
    gbif_occurrence_id?: true
    account_id?: true
    project_id?: true
    subproject_id?: true
    label?: true
  }

  export type Gbif_occurrencesCountAggregateInputType = {
    gbif_occurrence_id?: true
    account_id?: true
    project_id?: true
    subproject_id?: true
    gbif_data?: true
    label?: true
    _all?: true
  }

  export type Gbif_occurrencesAggregateArgs = {
    /**
     * Filter which Gbif_occurrences to aggregate.
     * 
    **/
    where?: Gbif_occurrencesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Gbif_occurrences to fetch.
     * 
    **/
    orderBy?: Enumerable<Gbif_occurrencesOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     * 
    **/
    cursor?: Gbif_occurrencesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Gbif_occurrences from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Gbif_occurrences.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Gbif_occurrences
    **/
    _count?: true | Gbif_occurrencesCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Gbif_occurrencesMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Gbif_occurrencesMaxAggregateInputType
  }

  export type GetGbif_occurrencesAggregateType<T extends Gbif_occurrencesAggregateArgs> = {
        [P in keyof T & keyof AggregateGbif_occurrences]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateGbif_occurrences[P]>
      : GetScalarType<T[P], AggregateGbif_occurrences[P]>
  }




  export type Gbif_occurrencesGroupByArgs = {
    where?: Gbif_occurrencesWhereInput
    orderBy?: Enumerable<Gbif_occurrencesOrderByWithAggregationInput>
    by: Array<Gbif_occurrencesScalarFieldEnum>
    having?: Gbif_occurrencesScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Gbif_occurrencesCountAggregateInputType | true
    _min?: Gbif_occurrencesMinAggregateInputType
    _max?: Gbif_occurrencesMaxAggregateInputType
  }


  export type Gbif_occurrencesGroupByOutputType = {
    gbif_occurrence_id: string
    account_id: string | null
    project_id: string | null
    subproject_id: string | null
    gbif_data: JsonValue | null
    label: string | null
    _count: Gbif_occurrencesCountAggregateOutputType | null
    _min: Gbif_occurrencesMinAggregateOutputType | null
    _max: Gbif_occurrencesMaxAggregateOutputType | null
  }

  type GetGbif_occurrencesGroupByPayload<T extends Gbif_occurrencesGroupByArgs> = PrismaPromise<
    Array<
      PickArray<Gbif_occurrencesGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Gbif_occurrencesGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Gbif_occurrencesGroupByOutputType[P]>
            : GetScalarType<T[P], Gbif_occurrencesGroupByOutputType[P]>
        }
      >
    >


  export type Gbif_occurrencesSelect = {
    gbif_occurrence_id?: boolean
    account_id?: boolean
    project_id?: boolean
    subproject_id?: boolean
    gbif_data?: boolean
    label?: boolean
    accounts?: boolean | Gbif_occurrences$accountsArgs
    projects?: boolean | Gbif_occurrences$projectsArgs
    subprojects?: boolean | Gbif_occurrences$subprojectsArgs
  }


  export type Gbif_occurrencesInclude = {
    accounts?: boolean | Gbif_occurrences$accountsArgs
    projects?: boolean | Gbif_occurrences$projectsArgs
    subprojects?: boolean | Gbif_occurrences$subprojectsArgs
  } 

  export type Gbif_occurrencesGetPayload<S extends boolean | null | undefined | Gbif_occurrencesArgs> =
    S extends { select: any, include: any } ? 'Please either choose `select` or `include`' :
    S extends true ? Gbif_occurrences :
    S extends undefined ? never :
    S extends { include: any } & (Gbif_occurrencesArgs | Gbif_occurrencesFindManyArgs)
    ? Gbif_occurrences  & {
    [P in TruthyKeys<S['include']>]:
        P extends 'accounts' ? AccountsGetPayload<S['include'][P]> | null :
        P extends 'projects' ? ProjectsGetPayload<S['include'][P]> | null :
        P extends 'subprojects' ? SubprojectsGetPayload<S['include'][P]> | null :  never
  } 
    : S extends { select: any } & (Gbif_occurrencesArgs | Gbif_occurrencesFindManyArgs)
      ? {
    [P in TruthyKeys<S['select']>]:
        P extends 'accounts' ? AccountsGetPayload<S['select'][P]> | null :
        P extends 'projects' ? ProjectsGetPayload<S['select'][P]> | null :
        P extends 'subprojects' ? SubprojectsGetPayload<S['select'][P]> | null :  P extends keyof Gbif_occurrences ? Gbif_occurrences[P] : never
  } 
      : Gbif_occurrences


  type Gbif_occurrencesCountArgs = Merge<
    Omit<Gbif_occurrencesFindManyArgs, 'select' | 'include'> & {
      select?: Gbif_occurrencesCountAggregateInputType | true
    }
  >

  export interface Gbif_occurrencesDelegate<GlobalRejectSettings extends Prisma.RejectOnNotFound | Prisma.RejectPerOperation | false | undefined> {
    /**
     * Find zero or one Gbif_occurrences that matches the filter.
     * @param {Gbif_occurrencesFindUniqueArgs} args - Arguments to find a Gbif_occurrences
     * @example
     * // Get one Gbif_occurrences
     * const gbif_occurrences = await prisma.gbif_occurrences.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends Gbif_occurrencesFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, Gbif_occurrencesFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'Gbif_occurrences'> extends True ? Prisma__Gbif_occurrencesClient<Gbif_occurrencesGetPayload<T>> : Prisma__Gbif_occurrencesClient<Gbif_occurrencesGetPayload<T> | null, null>

    /**
     * Find one Gbif_occurrences that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {Gbif_occurrencesFindUniqueOrThrowArgs} args - Arguments to find a Gbif_occurrences
     * @example
     * // Get one Gbif_occurrences
     * const gbif_occurrences = await prisma.gbif_occurrences.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends Gbif_occurrencesFindUniqueOrThrowArgs>(
      args?: SelectSubset<T, Gbif_occurrencesFindUniqueOrThrowArgs>
    ): Prisma__Gbif_occurrencesClient<Gbif_occurrencesGetPayload<T>>

    /**
     * Find the first Gbif_occurrences that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Gbif_occurrencesFindFirstArgs} args - Arguments to find a Gbif_occurrences
     * @example
     * // Get one Gbif_occurrences
     * const gbif_occurrences = await prisma.gbif_occurrences.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends Gbif_occurrencesFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, Gbif_occurrencesFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'Gbif_occurrences'> extends True ? Prisma__Gbif_occurrencesClient<Gbif_occurrencesGetPayload<T>> : Prisma__Gbif_occurrencesClient<Gbif_occurrencesGetPayload<T> | null, null>

    /**
     * Find the first Gbif_occurrences that matches the filter or
     * throw `NotFoundError` if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Gbif_occurrencesFindFirstOrThrowArgs} args - Arguments to find a Gbif_occurrences
     * @example
     * // Get one Gbif_occurrences
     * const gbif_occurrences = await prisma.gbif_occurrences.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends Gbif_occurrencesFindFirstOrThrowArgs>(
      args?: SelectSubset<T, Gbif_occurrencesFindFirstOrThrowArgs>
    ): Prisma__Gbif_occurrencesClient<Gbif_occurrencesGetPayload<T>>

    /**
     * Find zero or more Gbif_occurrences that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Gbif_occurrencesFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Gbif_occurrences
     * const gbif_occurrences = await prisma.gbif_occurrences.findMany()
     * 
     * // Get first 10 Gbif_occurrences
     * const gbif_occurrences = await prisma.gbif_occurrences.findMany({ take: 10 })
     * 
     * // Only select the `gbif_occurrence_id`
     * const gbif_occurrencesWithGbif_occurrence_idOnly = await prisma.gbif_occurrences.findMany({ select: { gbif_occurrence_id: true } })
     * 
    **/
    findMany<T extends Gbif_occurrencesFindManyArgs>(
      args?: SelectSubset<T, Gbif_occurrencesFindManyArgs>
    ): PrismaPromise<Array<Gbif_occurrencesGetPayload<T>>>

    /**
     * Create a Gbif_occurrences.
     * @param {Gbif_occurrencesCreateArgs} args - Arguments to create a Gbif_occurrences.
     * @example
     * // Create one Gbif_occurrences
     * const Gbif_occurrences = await prisma.gbif_occurrences.create({
     *   data: {
     *     // ... data to create a Gbif_occurrences
     *   }
     * })
     * 
    **/
    create<T extends Gbif_occurrencesCreateArgs>(
      args: SelectSubset<T, Gbif_occurrencesCreateArgs>
    ): Prisma__Gbif_occurrencesClient<Gbif_occurrencesGetPayload<T>>

    /**
     * Create many Gbif_occurrences.
     *     @param {Gbif_occurrencesCreateManyArgs} args - Arguments to create many Gbif_occurrences.
     *     @example
     *     // Create many Gbif_occurrences
     *     const gbif_occurrences = await prisma.gbif_occurrences.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends Gbif_occurrencesCreateManyArgs>(
      args?: SelectSubset<T, Gbif_occurrencesCreateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Delete a Gbif_occurrences.
     * @param {Gbif_occurrencesDeleteArgs} args - Arguments to delete one Gbif_occurrences.
     * @example
     * // Delete one Gbif_occurrences
     * const Gbif_occurrences = await prisma.gbif_occurrences.delete({
     *   where: {
     *     // ... filter to delete one Gbif_occurrences
     *   }
     * })
     * 
    **/
    delete<T extends Gbif_occurrencesDeleteArgs>(
      args: SelectSubset<T, Gbif_occurrencesDeleteArgs>
    ): Prisma__Gbif_occurrencesClient<Gbif_occurrencesGetPayload<T>>

    /**
     * Update one Gbif_occurrences.
     * @param {Gbif_occurrencesUpdateArgs} args - Arguments to update one Gbif_occurrences.
     * @example
     * // Update one Gbif_occurrences
     * const gbif_occurrences = await prisma.gbif_occurrences.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends Gbif_occurrencesUpdateArgs>(
      args: SelectSubset<T, Gbif_occurrencesUpdateArgs>
    ): Prisma__Gbif_occurrencesClient<Gbif_occurrencesGetPayload<T>>

    /**
     * Delete zero or more Gbif_occurrences.
     * @param {Gbif_occurrencesDeleteManyArgs} args - Arguments to filter Gbif_occurrences to delete.
     * @example
     * // Delete a few Gbif_occurrences
     * const { count } = await prisma.gbif_occurrences.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends Gbif_occurrencesDeleteManyArgs>(
      args?: SelectSubset<T, Gbif_occurrencesDeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more Gbif_occurrences.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Gbif_occurrencesUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Gbif_occurrences
     * const gbif_occurrences = await prisma.gbif_occurrences.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends Gbif_occurrencesUpdateManyArgs>(
      args: SelectSubset<T, Gbif_occurrencesUpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one Gbif_occurrences.
     * @param {Gbif_occurrencesUpsertArgs} args - Arguments to update or create a Gbif_occurrences.
     * @example
     * // Update or create a Gbif_occurrences
     * const gbif_occurrences = await prisma.gbif_occurrences.upsert({
     *   create: {
     *     // ... data to create a Gbif_occurrences
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Gbif_occurrences we want to update
     *   }
     * })
    **/
    upsert<T extends Gbif_occurrencesUpsertArgs>(
      args: SelectSubset<T, Gbif_occurrencesUpsertArgs>
    ): Prisma__Gbif_occurrencesClient<Gbif_occurrencesGetPayload<T>>

    /**
     * Count the number of Gbif_occurrences.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Gbif_occurrencesCountArgs} args - Arguments to filter Gbif_occurrences to count.
     * @example
     * // Count the number of Gbif_occurrences
     * const count = await prisma.gbif_occurrences.count({
     *   where: {
     *     // ... the filter for the Gbif_occurrences we want to count
     *   }
     * })
    **/
    count<T extends Gbif_occurrencesCountArgs>(
      args?: Subset<T, Gbif_occurrencesCountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Gbif_occurrencesCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Gbif_occurrences.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Gbif_occurrencesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Gbif_occurrencesAggregateArgs>(args: Subset<T, Gbif_occurrencesAggregateArgs>): PrismaPromise<GetGbif_occurrencesAggregateType<T>>

    /**
     * Group by Gbif_occurrences.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Gbif_occurrencesGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends Gbif_occurrencesGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: Gbif_occurrencesGroupByArgs['orderBy'] }
        : { orderBy?: Gbif_occurrencesGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, Gbif_occurrencesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetGbif_occurrencesGroupByPayload<T> : PrismaPromise<InputErrors>

  }

  /**
   * The delegate class that acts as a "Promise-like" for Gbif_occurrences.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__Gbif_occurrencesClient<T, Null = never> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';

    accounts<T extends Gbif_occurrences$accountsArgs= {}>(args?: Subset<T, Gbif_occurrences$accountsArgs>): Prisma__AccountsClient<AccountsGetPayload<T> | Null>;

    projects<T extends Gbif_occurrences$projectsArgs= {}>(args?: Subset<T, Gbif_occurrences$projectsArgs>): Prisma__ProjectsClient<ProjectsGetPayload<T> | Null>;

    subprojects<T extends Gbif_occurrences$subprojectsArgs= {}>(args?: Subset<T, Gbif_occurrences$subprojectsArgs>): Prisma__SubprojectsClient<SubprojectsGetPayload<T> | Null>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }



  // Custom InputTypes

  /**
   * Gbif_occurrences base type for findUnique actions
   */
  export type Gbif_occurrencesFindUniqueArgsBase = {
    /**
     * Select specific fields to fetch from the Gbif_occurrences
     * 
    **/
    select?: Gbif_occurrencesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: Gbif_occurrencesInclude | null
    /**
     * Filter, which Gbif_occurrences to fetch.
     * 
    **/
    where: Gbif_occurrencesWhereUniqueInput
  }

  /**
   * Gbif_occurrences findUnique
   */
  export interface Gbif_occurrencesFindUniqueArgs extends Gbif_occurrencesFindUniqueArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findUniqueOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * Gbif_occurrences findUniqueOrThrow
   */
  export type Gbif_occurrencesFindUniqueOrThrowArgs = {
    /**
     * Select specific fields to fetch from the Gbif_occurrences
     * 
    **/
    select?: Gbif_occurrencesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: Gbif_occurrencesInclude | null
    /**
     * Filter, which Gbif_occurrences to fetch.
     * 
    **/
    where: Gbif_occurrencesWhereUniqueInput
  }


  /**
   * Gbif_occurrences base type for findFirst actions
   */
  export type Gbif_occurrencesFindFirstArgsBase = {
    /**
     * Select specific fields to fetch from the Gbif_occurrences
     * 
    **/
    select?: Gbif_occurrencesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: Gbif_occurrencesInclude | null
    /**
     * Filter, which Gbif_occurrences to fetch.
     * 
    **/
    where?: Gbif_occurrencesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Gbif_occurrences to fetch.
     * 
    **/
    orderBy?: Enumerable<Gbif_occurrencesOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Gbif_occurrences.
     * 
    **/
    cursor?: Gbif_occurrencesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Gbif_occurrences from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Gbif_occurrences.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Gbif_occurrences.
     * 
    **/
    distinct?: Enumerable<Gbif_occurrencesScalarFieldEnum>
  }

  /**
   * Gbif_occurrences findFirst
   */
  export interface Gbif_occurrencesFindFirstArgs extends Gbif_occurrencesFindFirstArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findFirstOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * Gbif_occurrences findFirstOrThrow
   */
  export type Gbif_occurrencesFindFirstOrThrowArgs = {
    /**
     * Select specific fields to fetch from the Gbif_occurrences
     * 
    **/
    select?: Gbif_occurrencesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: Gbif_occurrencesInclude | null
    /**
     * Filter, which Gbif_occurrences to fetch.
     * 
    **/
    where?: Gbif_occurrencesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Gbif_occurrences to fetch.
     * 
    **/
    orderBy?: Enumerable<Gbif_occurrencesOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Gbif_occurrences.
     * 
    **/
    cursor?: Gbif_occurrencesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Gbif_occurrences from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Gbif_occurrences.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Gbif_occurrences.
     * 
    **/
    distinct?: Enumerable<Gbif_occurrencesScalarFieldEnum>
  }


  /**
   * Gbif_occurrences findMany
   */
  export type Gbif_occurrencesFindManyArgs = {
    /**
     * Select specific fields to fetch from the Gbif_occurrences
     * 
    **/
    select?: Gbif_occurrencesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: Gbif_occurrencesInclude | null
    /**
     * Filter, which Gbif_occurrences to fetch.
     * 
    **/
    where?: Gbif_occurrencesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Gbif_occurrences to fetch.
     * 
    **/
    orderBy?: Enumerable<Gbif_occurrencesOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Gbif_occurrences.
     * 
    **/
    cursor?: Gbif_occurrencesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Gbif_occurrences from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Gbif_occurrences.
     * 
    **/
    skip?: number
    distinct?: Enumerable<Gbif_occurrencesScalarFieldEnum>
  }


  /**
   * Gbif_occurrences create
   */
  export type Gbif_occurrencesCreateArgs = {
    /**
     * Select specific fields to fetch from the Gbif_occurrences
     * 
    **/
    select?: Gbif_occurrencesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: Gbif_occurrencesInclude | null
    /**
     * The data needed to create a Gbif_occurrences.
     * 
    **/
    data: XOR<Gbif_occurrencesCreateInput, Gbif_occurrencesUncheckedCreateInput>
  }


  /**
   * Gbif_occurrences createMany
   */
  export type Gbif_occurrencesCreateManyArgs = {
    /**
     * The data used to create many Gbif_occurrences.
     * 
    **/
    data: Enumerable<Gbif_occurrencesCreateManyInput>
    skipDuplicates?: boolean
  }


  /**
   * Gbif_occurrences update
   */
  export type Gbif_occurrencesUpdateArgs = {
    /**
     * Select specific fields to fetch from the Gbif_occurrences
     * 
    **/
    select?: Gbif_occurrencesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: Gbif_occurrencesInclude | null
    /**
     * The data needed to update a Gbif_occurrences.
     * 
    **/
    data: XOR<Gbif_occurrencesUpdateInput, Gbif_occurrencesUncheckedUpdateInput>
    /**
     * Choose, which Gbif_occurrences to update.
     * 
    **/
    where: Gbif_occurrencesWhereUniqueInput
  }


  /**
   * Gbif_occurrences updateMany
   */
  export type Gbif_occurrencesUpdateManyArgs = {
    /**
     * The data used to update Gbif_occurrences.
     * 
    **/
    data: XOR<Gbif_occurrencesUpdateManyMutationInput, Gbif_occurrencesUncheckedUpdateManyInput>
    /**
     * Filter which Gbif_occurrences to update
     * 
    **/
    where?: Gbif_occurrencesWhereInput
  }


  /**
   * Gbif_occurrences upsert
   */
  export type Gbif_occurrencesUpsertArgs = {
    /**
     * Select specific fields to fetch from the Gbif_occurrences
     * 
    **/
    select?: Gbif_occurrencesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: Gbif_occurrencesInclude | null
    /**
     * The filter to search for the Gbif_occurrences to update in case it exists.
     * 
    **/
    where: Gbif_occurrencesWhereUniqueInput
    /**
     * In case the Gbif_occurrences found by the `where` argument doesn't exist, create a new Gbif_occurrences with this data.
     * 
    **/
    create: XOR<Gbif_occurrencesCreateInput, Gbif_occurrencesUncheckedCreateInput>
    /**
     * In case the Gbif_occurrences was found with the provided `where` argument, update it with this data.
     * 
    **/
    update: XOR<Gbif_occurrencesUpdateInput, Gbif_occurrencesUncheckedUpdateInput>
  }


  /**
   * Gbif_occurrences delete
   */
  export type Gbif_occurrencesDeleteArgs = {
    /**
     * Select specific fields to fetch from the Gbif_occurrences
     * 
    **/
    select?: Gbif_occurrencesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: Gbif_occurrencesInclude | null
    /**
     * Filter which Gbif_occurrences to delete.
     * 
    **/
    where: Gbif_occurrencesWhereUniqueInput
  }


  /**
   * Gbif_occurrences deleteMany
   */
  export type Gbif_occurrencesDeleteManyArgs = {
    /**
     * Filter which Gbif_occurrences to delete
     * 
    **/
    where?: Gbif_occurrencesWhereInput
  }


  /**
   * Gbif_occurrences.accounts
   */
  export type Gbif_occurrences$accountsArgs = {
    /**
     * Select specific fields to fetch from the Accounts
     * 
    **/
    select?: AccountsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: AccountsInclude | null
    where?: AccountsWhereInput
  }


  /**
   * Gbif_occurrences.projects
   */
  export type Gbif_occurrences$projectsArgs = {
    /**
     * Select specific fields to fetch from the Projects
     * 
    **/
    select?: ProjectsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: ProjectsInclude | null
    where?: ProjectsWhereInput
  }


  /**
   * Gbif_occurrences.subprojects
   */
  export type Gbif_occurrences$subprojectsArgs = {
    /**
     * Select specific fields to fetch from the Subprojects
     * 
    **/
    select?: SubprojectsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: SubprojectsInclude | null
    where?: SubprojectsWhereInput
  }


  /**
   * Gbif_occurrences without action
   */
  export type Gbif_occurrencesArgs = {
    /**
     * Select specific fields to fetch from the Gbif_occurrences
     * 
    **/
    select?: Gbif_occurrencesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: Gbif_occurrencesInclude | null
  }



  /**
   * Model Gbif_taxa
   */


  export type AggregateGbif_taxa = {
    _count: Gbif_taxaCountAggregateOutputType | null
    _min: Gbif_taxaMinAggregateOutputType | null
    _max: Gbif_taxaMaxAggregateOutputType | null
  }

  export type Gbif_taxaMinAggregateOutputType = {
    gbif_taxon_id: string | null
    account_id: string | null
    project_id: string | null
    label: string | null
  }

  export type Gbif_taxaMaxAggregateOutputType = {
    gbif_taxon_id: string | null
    account_id: string | null
    project_id: string | null
    label: string | null
  }

  export type Gbif_taxaCountAggregateOutputType = {
    gbif_taxon_id: number
    account_id: number
    project_id: number
    gbif_data: number
    label: number
    _all: number
  }


  export type Gbif_taxaMinAggregateInputType = {
    gbif_taxon_id?: true
    account_id?: true
    project_id?: true
    label?: true
  }

  export type Gbif_taxaMaxAggregateInputType = {
    gbif_taxon_id?: true
    account_id?: true
    project_id?: true
    label?: true
  }

  export type Gbif_taxaCountAggregateInputType = {
    gbif_taxon_id?: true
    account_id?: true
    project_id?: true
    gbif_data?: true
    label?: true
    _all?: true
  }

  export type Gbif_taxaAggregateArgs = {
    /**
     * Filter which Gbif_taxa to aggregate.
     * 
    **/
    where?: Gbif_taxaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Gbif_taxas to fetch.
     * 
    **/
    orderBy?: Enumerable<Gbif_taxaOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     * 
    **/
    cursor?: Gbif_taxaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Gbif_taxas from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Gbif_taxas.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Gbif_taxas
    **/
    _count?: true | Gbif_taxaCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Gbif_taxaMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Gbif_taxaMaxAggregateInputType
  }

  export type GetGbif_taxaAggregateType<T extends Gbif_taxaAggregateArgs> = {
        [P in keyof T & keyof AggregateGbif_taxa]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateGbif_taxa[P]>
      : GetScalarType<T[P], AggregateGbif_taxa[P]>
  }




  export type Gbif_taxaGroupByArgs = {
    where?: Gbif_taxaWhereInput
    orderBy?: Enumerable<Gbif_taxaOrderByWithAggregationInput>
    by: Array<Gbif_taxaScalarFieldEnum>
    having?: Gbif_taxaScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Gbif_taxaCountAggregateInputType | true
    _min?: Gbif_taxaMinAggregateInputType
    _max?: Gbif_taxaMaxAggregateInputType
  }


  export type Gbif_taxaGroupByOutputType = {
    gbif_taxon_id: string
    account_id: string | null
    project_id: string | null
    gbif_data: JsonValue | null
    label: string | null
    _count: Gbif_taxaCountAggregateOutputType | null
    _min: Gbif_taxaMinAggregateOutputType | null
    _max: Gbif_taxaMaxAggregateOutputType | null
  }

  type GetGbif_taxaGroupByPayload<T extends Gbif_taxaGroupByArgs> = PrismaPromise<
    Array<
      PickArray<Gbif_taxaGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Gbif_taxaGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Gbif_taxaGroupByOutputType[P]>
            : GetScalarType<T[P], Gbif_taxaGroupByOutputType[P]>
        }
      >
    >


  export type Gbif_taxaSelect = {
    gbif_taxon_id?: boolean
    account_id?: boolean
    project_id?: boolean
    gbif_data?: boolean
    label?: boolean
    accounts?: boolean | Gbif_taxa$accountsArgs
    projects?: boolean | Gbif_taxa$projectsArgs
  }


  export type Gbif_taxaInclude = {
    accounts?: boolean | Gbif_taxa$accountsArgs
    projects?: boolean | Gbif_taxa$projectsArgs
  } 

  export type Gbif_taxaGetPayload<S extends boolean | null | undefined | Gbif_taxaArgs> =
    S extends { select: any, include: any } ? 'Please either choose `select` or `include`' :
    S extends true ? Gbif_taxa :
    S extends undefined ? never :
    S extends { include: any } & (Gbif_taxaArgs | Gbif_taxaFindManyArgs)
    ? Gbif_taxa  & {
    [P in TruthyKeys<S['include']>]:
        P extends 'accounts' ? AccountsGetPayload<S['include'][P]> | null :
        P extends 'projects' ? ProjectsGetPayload<S['include'][P]> | null :  never
  } 
    : S extends { select: any } & (Gbif_taxaArgs | Gbif_taxaFindManyArgs)
      ? {
    [P in TruthyKeys<S['select']>]:
        P extends 'accounts' ? AccountsGetPayload<S['select'][P]> | null :
        P extends 'projects' ? ProjectsGetPayload<S['select'][P]> | null :  P extends keyof Gbif_taxa ? Gbif_taxa[P] : never
  } 
      : Gbif_taxa


  type Gbif_taxaCountArgs = Merge<
    Omit<Gbif_taxaFindManyArgs, 'select' | 'include'> & {
      select?: Gbif_taxaCountAggregateInputType | true
    }
  >

  export interface Gbif_taxaDelegate<GlobalRejectSettings extends Prisma.RejectOnNotFound | Prisma.RejectPerOperation | false | undefined> {
    /**
     * Find zero or one Gbif_taxa that matches the filter.
     * @param {Gbif_taxaFindUniqueArgs} args - Arguments to find a Gbif_taxa
     * @example
     * // Get one Gbif_taxa
     * const gbif_taxa = await prisma.gbif_taxa.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends Gbif_taxaFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, Gbif_taxaFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'Gbif_taxa'> extends True ? Prisma__Gbif_taxaClient<Gbif_taxaGetPayload<T>> : Prisma__Gbif_taxaClient<Gbif_taxaGetPayload<T> | null, null>

    /**
     * Find one Gbif_taxa that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {Gbif_taxaFindUniqueOrThrowArgs} args - Arguments to find a Gbif_taxa
     * @example
     * // Get one Gbif_taxa
     * const gbif_taxa = await prisma.gbif_taxa.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends Gbif_taxaFindUniqueOrThrowArgs>(
      args?: SelectSubset<T, Gbif_taxaFindUniqueOrThrowArgs>
    ): Prisma__Gbif_taxaClient<Gbif_taxaGetPayload<T>>

    /**
     * Find the first Gbif_taxa that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Gbif_taxaFindFirstArgs} args - Arguments to find a Gbif_taxa
     * @example
     * // Get one Gbif_taxa
     * const gbif_taxa = await prisma.gbif_taxa.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends Gbif_taxaFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, Gbif_taxaFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'Gbif_taxa'> extends True ? Prisma__Gbif_taxaClient<Gbif_taxaGetPayload<T>> : Prisma__Gbif_taxaClient<Gbif_taxaGetPayload<T> | null, null>

    /**
     * Find the first Gbif_taxa that matches the filter or
     * throw `NotFoundError` if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Gbif_taxaFindFirstOrThrowArgs} args - Arguments to find a Gbif_taxa
     * @example
     * // Get one Gbif_taxa
     * const gbif_taxa = await prisma.gbif_taxa.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends Gbif_taxaFindFirstOrThrowArgs>(
      args?: SelectSubset<T, Gbif_taxaFindFirstOrThrowArgs>
    ): Prisma__Gbif_taxaClient<Gbif_taxaGetPayload<T>>

    /**
     * Find zero or more Gbif_taxas that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Gbif_taxaFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Gbif_taxas
     * const gbif_taxas = await prisma.gbif_taxa.findMany()
     * 
     * // Get first 10 Gbif_taxas
     * const gbif_taxas = await prisma.gbif_taxa.findMany({ take: 10 })
     * 
     * // Only select the `gbif_taxon_id`
     * const gbif_taxaWithGbif_taxon_idOnly = await prisma.gbif_taxa.findMany({ select: { gbif_taxon_id: true } })
     * 
    **/
    findMany<T extends Gbif_taxaFindManyArgs>(
      args?: SelectSubset<T, Gbif_taxaFindManyArgs>
    ): PrismaPromise<Array<Gbif_taxaGetPayload<T>>>

    /**
     * Create a Gbif_taxa.
     * @param {Gbif_taxaCreateArgs} args - Arguments to create a Gbif_taxa.
     * @example
     * // Create one Gbif_taxa
     * const Gbif_taxa = await prisma.gbif_taxa.create({
     *   data: {
     *     // ... data to create a Gbif_taxa
     *   }
     * })
     * 
    **/
    create<T extends Gbif_taxaCreateArgs>(
      args: SelectSubset<T, Gbif_taxaCreateArgs>
    ): Prisma__Gbif_taxaClient<Gbif_taxaGetPayload<T>>

    /**
     * Create many Gbif_taxas.
     *     @param {Gbif_taxaCreateManyArgs} args - Arguments to create many Gbif_taxas.
     *     @example
     *     // Create many Gbif_taxas
     *     const gbif_taxa = await prisma.gbif_taxa.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends Gbif_taxaCreateManyArgs>(
      args?: SelectSubset<T, Gbif_taxaCreateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Delete a Gbif_taxa.
     * @param {Gbif_taxaDeleteArgs} args - Arguments to delete one Gbif_taxa.
     * @example
     * // Delete one Gbif_taxa
     * const Gbif_taxa = await prisma.gbif_taxa.delete({
     *   where: {
     *     // ... filter to delete one Gbif_taxa
     *   }
     * })
     * 
    **/
    delete<T extends Gbif_taxaDeleteArgs>(
      args: SelectSubset<T, Gbif_taxaDeleteArgs>
    ): Prisma__Gbif_taxaClient<Gbif_taxaGetPayload<T>>

    /**
     * Update one Gbif_taxa.
     * @param {Gbif_taxaUpdateArgs} args - Arguments to update one Gbif_taxa.
     * @example
     * // Update one Gbif_taxa
     * const gbif_taxa = await prisma.gbif_taxa.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends Gbif_taxaUpdateArgs>(
      args: SelectSubset<T, Gbif_taxaUpdateArgs>
    ): Prisma__Gbif_taxaClient<Gbif_taxaGetPayload<T>>

    /**
     * Delete zero or more Gbif_taxas.
     * @param {Gbif_taxaDeleteManyArgs} args - Arguments to filter Gbif_taxas to delete.
     * @example
     * // Delete a few Gbif_taxas
     * const { count } = await prisma.gbif_taxa.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends Gbif_taxaDeleteManyArgs>(
      args?: SelectSubset<T, Gbif_taxaDeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more Gbif_taxas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Gbif_taxaUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Gbif_taxas
     * const gbif_taxa = await prisma.gbif_taxa.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends Gbif_taxaUpdateManyArgs>(
      args: SelectSubset<T, Gbif_taxaUpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one Gbif_taxa.
     * @param {Gbif_taxaUpsertArgs} args - Arguments to update or create a Gbif_taxa.
     * @example
     * // Update or create a Gbif_taxa
     * const gbif_taxa = await prisma.gbif_taxa.upsert({
     *   create: {
     *     // ... data to create a Gbif_taxa
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Gbif_taxa we want to update
     *   }
     * })
    **/
    upsert<T extends Gbif_taxaUpsertArgs>(
      args: SelectSubset<T, Gbif_taxaUpsertArgs>
    ): Prisma__Gbif_taxaClient<Gbif_taxaGetPayload<T>>

    /**
     * Count the number of Gbif_taxas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Gbif_taxaCountArgs} args - Arguments to filter Gbif_taxas to count.
     * @example
     * // Count the number of Gbif_taxas
     * const count = await prisma.gbif_taxa.count({
     *   where: {
     *     // ... the filter for the Gbif_taxas we want to count
     *   }
     * })
    **/
    count<T extends Gbif_taxaCountArgs>(
      args?: Subset<T, Gbif_taxaCountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Gbif_taxaCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Gbif_taxa.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Gbif_taxaAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Gbif_taxaAggregateArgs>(args: Subset<T, Gbif_taxaAggregateArgs>): PrismaPromise<GetGbif_taxaAggregateType<T>>

    /**
     * Group by Gbif_taxa.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Gbif_taxaGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends Gbif_taxaGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: Gbif_taxaGroupByArgs['orderBy'] }
        : { orderBy?: Gbif_taxaGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, Gbif_taxaGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetGbif_taxaGroupByPayload<T> : PrismaPromise<InputErrors>

  }

  /**
   * The delegate class that acts as a "Promise-like" for Gbif_taxa.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__Gbif_taxaClient<T, Null = never> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';

    accounts<T extends Gbif_taxa$accountsArgs= {}>(args?: Subset<T, Gbif_taxa$accountsArgs>): Prisma__AccountsClient<AccountsGetPayload<T> | Null>;

    projects<T extends Gbif_taxa$projectsArgs= {}>(args?: Subset<T, Gbif_taxa$projectsArgs>): Prisma__ProjectsClient<ProjectsGetPayload<T> | Null>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }



  // Custom InputTypes

  /**
   * Gbif_taxa base type for findUnique actions
   */
  export type Gbif_taxaFindUniqueArgsBase = {
    /**
     * Select specific fields to fetch from the Gbif_taxa
     * 
    **/
    select?: Gbif_taxaSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: Gbif_taxaInclude | null
    /**
     * Filter, which Gbif_taxa to fetch.
     * 
    **/
    where: Gbif_taxaWhereUniqueInput
  }

  /**
   * Gbif_taxa findUnique
   */
  export interface Gbif_taxaFindUniqueArgs extends Gbif_taxaFindUniqueArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findUniqueOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * Gbif_taxa findUniqueOrThrow
   */
  export type Gbif_taxaFindUniqueOrThrowArgs = {
    /**
     * Select specific fields to fetch from the Gbif_taxa
     * 
    **/
    select?: Gbif_taxaSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: Gbif_taxaInclude | null
    /**
     * Filter, which Gbif_taxa to fetch.
     * 
    **/
    where: Gbif_taxaWhereUniqueInput
  }


  /**
   * Gbif_taxa base type for findFirst actions
   */
  export type Gbif_taxaFindFirstArgsBase = {
    /**
     * Select specific fields to fetch from the Gbif_taxa
     * 
    **/
    select?: Gbif_taxaSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: Gbif_taxaInclude | null
    /**
     * Filter, which Gbif_taxa to fetch.
     * 
    **/
    where?: Gbif_taxaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Gbif_taxas to fetch.
     * 
    **/
    orderBy?: Enumerable<Gbif_taxaOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Gbif_taxas.
     * 
    **/
    cursor?: Gbif_taxaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Gbif_taxas from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Gbif_taxas.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Gbif_taxas.
     * 
    **/
    distinct?: Enumerable<Gbif_taxaScalarFieldEnum>
  }

  /**
   * Gbif_taxa findFirst
   */
  export interface Gbif_taxaFindFirstArgs extends Gbif_taxaFindFirstArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findFirstOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * Gbif_taxa findFirstOrThrow
   */
  export type Gbif_taxaFindFirstOrThrowArgs = {
    /**
     * Select specific fields to fetch from the Gbif_taxa
     * 
    **/
    select?: Gbif_taxaSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: Gbif_taxaInclude | null
    /**
     * Filter, which Gbif_taxa to fetch.
     * 
    **/
    where?: Gbif_taxaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Gbif_taxas to fetch.
     * 
    **/
    orderBy?: Enumerable<Gbif_taxaOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Gbif_taxas.
     * 
    **/
    cursor?: Gbif_taxaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Gbif_taxas from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Gbif_taxas.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Gbif_taxas.
     * 
    **/
    distinct?: Enumerable<Gbif_taxaScalarFieldEnum>
  }


  /**
   * Gbif_taxa findMany
   */
  export type Gbif_taxaFindManyArgs = {
    /**
     * Select specific fields to fetch from the Gbif_taxa
     * 
    **/
    select?: Gbif_taxaSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: Gbif_taxaInclude | null
    /**
     * Filter, which Gbif_taxas to fetch.
     * 
    **/
    where?: Gbif_taxaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Gbif_taxas to fetch.
     * 
    **/
    orderBy?: Enumerable<Gbif_taxaOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Gbif_taxas.
     * 
    **/
    cursor?: Gbif_taxaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Gbif_taxas from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Gbif_taxas.
     * 
    **/
    skip?: number
    distinct?: Enumerable<Gbif_taxaScalarFieldEnum>
  }


  /**
   * Gbif_taxa create
   */
  export type Gbif_taxaCreateArgs = {
    /**
     * Select specific fields to fetch from the Gbif_taxa
     * 
    **/
    select?: Gbif_taxaSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: Gbif_taxaInclude | null
    /**
     * The data needed to create a Gbif_taxa.
     * 
    **/
    data: XOR<Gbif_taxaCreateInput, Gbif_taxaUncheckedCreateInput>
  }


  /**
   * Gbif_taxa createMany
   */
  export type Gbif_taxaCreateManyArgs = {
    /**
     * The data used to create many Gbif_taxas.
     * 
    **/
    data: Enumerable<Gbif_taxaCreateManyInput>
    skipDuplicates?: boolean
  }


  /**
   * Gbif_taxa update
   */
  export type Gbif_taxaUpdateArgs = {
    /**
     * Select specific fields to fetch from the Gbif_taxa
     * 
    **/
    select?: Gbif_taxaSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: Gbif_taxaInclude | null
    /**
     * The data needed to update a Gbif_taxa.
     * 
    **/
    data: XOR<Gbif_taxaUpdateInput, Gbif_taxaUncheckedUpdateInput>
    /**
     * Choose, which Gbif_taxa to update.
     * 
    **/
    where: Gbif_taxaWhereUniqueInput
  }


  /**
   * Gbif_taxa updateMany
   */
  export type Gbif_taxaUpdateManyArgs = {
    /**
     * The data used to update Gbif_taxas.
     * 
    **/
    data: XOR<Gbif_taxaUpdateManyMutationInput, Gbif_taxaUncheckedUpdateManyInput>
    /**
     * Filter which Gbif_taxas to update
     * 
    **/
    where?: Gbif_taxaWhereInput
  }


  /**
   * Gbif_taxa upsert
   */
  export type Gbif_taxaUpsertArgs = {
    /**
     * Select specific fields to fetch from the Gbif_taxa
     * 
    **/
    select?: Gbif_taxaSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: Gbif_taxaInclude | null
    /**
     * The filter to search for the Gbif_taxa to update in case it exists.
     * 
    **/
    where: Gbif_taxaWhereUniqueInput
    /**
     * In case the Gbif_taxa found by the `where` argument doesn't exist, create a new Gbif_taxa with this data.
     * 
    **/
    create: XOR<Gbif_taxaCreateInput, Gbif_taxaUncheckedCreateInput>
    /**
     * In case the Gbif_taxa was found with the provided `where` argument, update it with this data.
     * 
    **/
    update: XOR<Gbif_taxaUpdateInput, Gbif_taxaUncheckedUpdateInput>
  }


  /**
   * Gbif_taxa delete
   */
  export type Gbif_taxaDeleteArgs = {
    /**
     * Select specific fields to fetch from the Gbif_taxa
     * 
    **/
    select?: Gbif_taxaSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: Gbif_taxaInclude | null
    /**
     * Filter which Gbif_taxa to delete.
     * 
    **/
    where: Gbif_taxaWhereUniqueInput
  }


  /**
   * Gbif_taxa deleteMany
   */
  export type Gbif_taxaDeleteManyArgs = {
    /**
     * Filter which Gbif_taxas to delete
     * 
    **/
    where?: Gbif_taxaWhereInput
  }


  /**
   * Gbif_taxa.accounts
   */
  export type Gbif_taxa$accountsArgs = {
    /**
     * Select specific fields to fetch from the Accounts
     * 
    **/
    select?: AccountsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: AccountsInclude | null
    where?: AccountsWhereInput
  }


  /**
   * Gbif_taxa.projects
   */
  export type Gbif_taxa$projectsArgs = {
    /**
     * Select specific fields to fetch from the Projects
     * 
    **/
    select?: ProjectsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: ProjectsInclude | null
    where?: ProjectsWhereInput
  }


  /**
   * Gbif_taxa without action
   */
  export type Gbif_taxaArgs = {
    /**
     * Select specific fields to fetch from the Gbif_taxa
     * 
    **/
    select?: Gbif_taxaSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: Gbif_taxaInclude | null
  }



  /**
   * Model Goal_report_values
   */


  export type AggregateGoal_report_values = {
    _count: Goal_report_valuesCountAggregateOutputType | null
    _avg: Goal_report_valuesAvgAggregateOutputType | null
    _sum: Goal_report_valuesSumAggregateOutputType | null
    _min: Goal_report_valuesMinAggregateOutputType | null
    _max: Goal_report_valuesMaxAggregateOutputType | null
  }

  export type Goal_report_valuesAvgAggregateOutputType = {
    value_integer: number | null
    value_numeric: number | null
  }

  export type Goal_report_valuesSumAggregateOutputType = {
    value_integer: number | null
    value_numeric: number | null
  }

  export type Goal_report_valuesMinAggregateOutputType = {
    goal_report_value_id: string | null
    account_id: string | null
    goal_report_id: string | null
    unit_id: string | null
    value_integer: number | null
    value_numeric: number | null
    value_text: string | null
    label: string | null
    deleted: boolean | null
  }

  export type Goal_report_valuesMaxAggregateOutputType = {
    goal_report_value_id: string | null
    account_id: string | null
    goal_report_id: string | null
    unit_id: string | null
    value_integer: number | null
    value_numeric: number | null
    value_text: string | null
    label: string | null
    deleted: boolean | null
  }

  export type Goal_report_valuesCountAggregateOutputType = {
    goal_report_value_id: number
    account_id: number
    goal_report_id: number
    unit_id: number
    value_integer: number
    value_numeric: number
    value_text: number
    label: number
    deleted: number
    _all: number
  }


  export type Goal_report_valuesAvgAggregateInputType = {
    value_integer?: true
    value_numeric?: true
  }

  export type Goal_report_valuesSumAggregateInputType = {
    value_integer?: true
    value_numeric?: true
  }

  export type Goal_report_valuesMinAggregateInputType = {
    goal_report_value_id?: true
    account_id?: true
    goal_report_id?: true
    unit_id?: true
    value_integer?: true
    value_numeric?: true
    value_text?: true
    label?: true
    deleted?: true
  }

  export type Goal_report_valuesMaxAggregateInputType = {
    goal_report_value_id?: true
    account_id?: true
    goal_report_id?: true
    unit_id?: true
    value_integer?: true
    value_numeric?: true
    value_text?: true
    label?: true
    deleted?: true
  }

  export type Goal_report_valuesCountAggregateInputType = {
    goal_report_value_id?: true
    account_id?: true
    goal_report_id?: true
    unit_id?: true
    value_integer?: true
    value_numeric?: true
    value_text?: true
    label?: true
    deleted?: true
    _all?: true
  }

  export type Goal_report_valuesAggregateArgs = {
    /**
     * Filter which Goal_report_values to aggregate.
     * 
    **/
    where?: Goal_report_valuesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Goal_report_values to fetch.
     * 
    **/
    orderBy?: Enumerable<Goal_report_valuesOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     * 
    **/
    cursor?: Goal_report_valuesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Goal_report_values from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Goal_report_values.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Goal_report_values
    **/
    _count?: true | Goal_report_valuesCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Goal_report_valuesAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Goal_report_valuesSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Goal_report_valuesMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Goal_report_valuesMaxAggregateInputType
  }

  export type GetGoal_report_valuesAggregateType<T extends Goal_report_valuesAggregateArgs> = {
        [P in keyof T & keyof AggregateGoal_report_values]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateGoal_report_values[P]>
      : GetScalarType<T[P], AggregateGoal_report_values[P]>
  }




  export type Goal_report_valuesGroupByArgs = {
    where?: Goal_report_valuesWhereInput
    orderBy?: Enumerable<Goal_report_valuesOrderByWithAggregationInput>
    by: Array<Goal_report_valuesScalarFieldEnum>
    having?: Goal_report_valuesScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Goal_report_valuesCountAggregateInputType | true
    _avg?: Goal_report_valuesAvgAggregateInputType
    _sum?: Goal_report_valuesSumAggregateInputType
    _min?: Goal_report_valuesMinAggregateInputType
    _max?: Goal_report_valuesMaxAggregateInputType
  }


  export type Goal_report_valuesGroupByOutputType = {
    goal_report_value_id: string
    account_id: string | null
    goal_report_id: string | null
    unit_id: string | null
    value_integer: number | null
    value_numeric: number | null
    value_text: string | null
    label: string | null
    deleted: boolean | null
    _count: Goal_report_valuesCountAggregateOutputType | null
    _avg: Goal_report_valuesAvgAggregateOutputType | null
    _sum: Goal_report_valuesSumAggregateOutputType | null
    _min: Goal_report_valuesMinAggregateOutputType | null
    _max: Goal_report_valuesMaxAggregateOutputType | null
  }

  type GetGoal_report_valuesGroupByPayload<T extends Goal_report_valuesGroupByArgs> = PrismaPromise<
    Array<
      PickArray<Goal_report_valuesGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Goal_report_valuesGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Goal_report_valuesGroupByOutputType[P]>
            : GetScalarType<T[P], Goal_report_valuesGroupByOutputType[P]>
        }
      >
    >


  export type Goal_report_valuesSelect = {
    goal_report_value_id?: boolean
    account_id?: boolean
    goal_report_id?: boolean
    unit_id?: boolean
    value_integer?: boolean
    value_numeric?: boolean
    value_text?: boolean
    label?: boolean
    deleted?: boolean
    accounts?: boolean | Goal_report_values$accountsArgs
    goal_reports?: boolean | Goal_report_values$goal_reportsArgs
    units?: boolean | Goal_report_values$unitsArgs
  }


  export type Goal_report_valuesInclude = {
    accounts?: boolean | Goal_report_values$accountsArgs
    goal_reports?: boolean | Goal_report_values$goal_reportsArgs
    units?: boolean | Goal_report_values$unitsArgs
  } 

  export type Goal_report_valuesGetPayload<S extends boolean | null | undefined | Goal_report_valuesArgs> =
    S extends { select: any, include: any } ? 'Please either choose `select` or `include`' :
    S extends true ? Goal_report_values :
    S extends undefined ? never :
    S extends { include: any } & (Goal_report_valuesArgs | Goal_report_valuesFindManyArgs)
    ? Goal_report_values  & {
    [P in TruthyKeys<S['include']>]:
        P extends 'accounts' ? AccountsGetPayload<S['include'][P]> | null :
        P extends 'goal_reports' ? Goal_reportsGetPayload<S['include'][P]> | null :
        P extends 'units' ? UnitsGetPayload<S['include'][P]> | null :  never
  } 
    : S extends { select: any } & (Goal_report_valuesArgs | Goal_report_valuesFindManyArgs)
      ? {
    [P in TruthyKeys<S['select']>]:
        P extends 'accounts' ? AccountsGetPayload<S['select'][P]> | null :
        P extends 'goal_reports' ? Goal_reportsGetPayload<S['select'][P]> | null :
        P extends 'units' ? UnitsGetPayload<S['select'][P]> | null :  P extends keyof Goal_report_values ? Goal_report_values[P] : never
  } 
      : Goal_report_values


  type Goal_report_valuesCountArgs = Merge<
    Omit<Goal_report_valuesFindManyArgs, 'select' | 'include'> & {
      select?: Goal_report_valuesCountAggregateInputType | true
    }
  >

  export interface Goal_report_valuesDelegate<GlobalRejectSettings extends Prisma.RejectOnNotFound | Prisma.RejectPerOperation | false | undefined> {
    /**
     * Find zero or one Goal_report_values that matches the filter.
     * @param {Goal_report_valuesFindUniqueArgs} args - Arguments to find a Goal_report_values
     * @example
     * // Get one Goal_report_values
     * const goal_report_values = await prisma.goal_report_values.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends Goal_report_valuesFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, Goal_report_valuesFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'Goal_report_values'> extends True ? Prisma__Goal_report_valuesClient<Goal_report_valuesGetPayload<T>> : Prisma__Goal_report_valuesClient<Goal_report_valuesGetPayload<T> | null, null>

    /**
     * Find one Goal_report_values that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {Goal_report_valuesFindUniqueOrThrowArgs} args - Arguments to find a Goal_report_values
     * @example
     * // Get one Goal_report_values
     * const goal_report_values = await prisma.goal_report_values.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends Goal_report_valuesFindUniqueOrThrowArgs>(
      args?: SelectSubset<T, Goal_report_valuesFindUniqueOrThrowArgs>
    ): Prisma__Goal_report_valuesClient<Goal_report_valuesGetPayload<T>>

    /**
     * Find the first Goal_report_values that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Goal_report_valuesFindFirstArgs} args - Arguments to find a Goal_report_values
     * @example
     * // Get one Goal_report_values
     * const goal_report_values = await prisma.goal_report_values.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends Goal_report_valuesFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, Goal_report_valuesFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'Goal_report_values'> extends True ? Prisma__Goal_report_valuesClient<Goal_report_valuesGetPayload<T>> : Prisma__Goal_report_valuesClient<Goal_report_valuesGetPayload<T> | null, null>

    /**
     * Find the first Goal_report_values that matches the filter or
     * throw `NotFoundError` if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Goal_report_valuesFindFirstOrThrowArgs} args - Arguments to find a Goal_report_values
     * @example
     * // Get one Goal_report_values
     * const goal_report_values = await prisma.goal_report_values.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends Goal_report_valuesFindFirstOrThrowArgs>(
      args?: SelectSubset<T, Goal_report_valuesFindFirstOrThrowArgs>
    ): Prisma__Goal_report_valuesClient<Goal_report_valuesGetPayload<T>>

    /**
     * Find zero or more Goal_report_values that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Goal_report_valuesFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Goal_report_values
     * const goal_report_values = await prisma.goal_report_values.findMany()
     * 
     * // Get first 10 Goal_report_values
     * const goal_report_values = await prisma.goal_report_values.findMany({ take: 10 })
     * 
     * // Only select the `goal_report_value_id`
     * const goal_report_valuesWithGoal_report_value_idOnly = await prisma.goal_report_values.findMany({ select: { goal_report_value_id: true } })
     * 
    **/
    findMany<T extends Goal_report_valuesFindManyArgs>(
      args?: SelectSubset<T, Goal_report_valuesFindManyArgs>
    ): PrismaPromise<Array<Goal_report_valuesGetPayload<T>>>

    /**
     * Create a Goal_report_values.
     * @param {Goal_report_valuesCreateArgs} args - Arguments to create a Goal_report_values.
     * @example
     * // Create one Goal_report_values
     * const Goal_report_values = await prisma.goal_report_values.create({
     *   data: {
     *     // ... data to create a Goal_report_values
     *   }
     * })
     * 
    **/
    create<T extends Goal_report_valuesCreateArgs>(
      args: SelectSubset<T, Goal_report_valuesCreateArgs>
    ): Prisma__Goal_report_valuesClient<Goal_report_valuesGetPayload<T>>

    /**
     * Create many Goal_report_values.
     *     @param {Goal_report_valuesCreateManyArgs} args - Arguments to create many Goal_report_values.
     *     @example
     *     // Create many Goal_report_values
     *     const goal_report_values = await prisma.goal_report_values.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends Goal_report_valuesCreateManyArgs>(
      args?: SelectSubset<T, Goal_report_valuesCreateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Delete a Goal_report_values.
     * @param {Goal_report_valuesDeleteArgs} args - Arguments to delete one Goal_report_values.
     * @example
     * // Delete one Goal_report_values
     * const Goal_report_values = await prisma.goal_report_values.delete({
     *   where: {
     *     // ... filter to delete one Goal_report_values
     *   }
     * })
     * 
    **/
    delete<T extends Goal_report_valuesDeleteArgs>(
      args: SelectSubset<T, Goal_report_valuesDeleteArgs>
    ): Prisma__Goal_report_valuesClient<Goal_report_valuesGetPayload<T>>

    /**
     * Update one Goal_report_values.
     * @param {Goal_report_valuesUpdateArgs} args - Arguments to update one Goal_report_values.
     * @example
     * // Update one Goal_report_values
     * const goal_report_values = await prisma.goal_report_values.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends Goal_report_valuesUpdateArgs>(
      args: SelectSubset<T, Goal_report_valuesUpdateArgs>
    ): Prisma__Goal_report_valuesClient<Goal_report_valuesGetPayload<T>>

    /**
     * Delete zero or more Goal_report_values.
     * @param {Goal_report_valuesDeleteManyArgs} args - Arguments to filter Goal_report_values to delete.
     * @example
     * // Delete a few Goal_report_values
     * const { count } = await prisma.goal_report_values.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends Goal_report_valuesDeleteManyArgs>(
      args?: SelectSubset<T, Goal_report_valuesDeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more Goal_report_values.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Goal_report_valuesUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Goal_report_values
     * const goal_report_values = await prisma.goal_report_values.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends Goal_report_valuesUpdateManyArgs>(
      args: SelectSubset<T, Goal_report_valuesUpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one Goal_report_values.
     * @param {Goal_report_valuesUpsertArgs} args - Arguments to update or create a Goal_report_values.
     * @example
     * // Update or create a Goal_report_values
     * const goal_report_values = await prisma.goal_report_values.upsert({
     *   create: {
     *     // ... data to create a Goal_report_values
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Goal_report_values we want to update
     *   }
     * })
    **/
    upsert<T extends Goal_report_valuesUpsertArgs>(
      args: SelectSubset<T, Goal_report_valuesUpsertArgs>
    ): Prisma__Goal_report_valuesClient<Goal_report_valuesGetPayload<T>>

    /**
     * Count the number of Goal_report_values.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Goal_report_valuesCountArgs} args - Arguments to filter Goal_report_values to count.
     * @example
     * // Count the number of Goal_report_values
     * const count = await prisma.goal_report_values.count({
     *   where: {
     *     // ... the filter for the Goal_report_values we want to count
     *   }
     * })
    **/
    count<T extends Goal_report_valuesCountArgs>(
      args?: Subset<T, Goal_report_valuesCountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Goal_report_valuesCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Goal_report_values.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Goal_report_valuesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Goal_report_valuesAggregateArgs>(args: Subset<T, Goal_report_valuesAggregateArgs>): PrismaPromise<GetGoal_report_valuesAggregateType<T>>

    /**
     * Group by Goal_report_values.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Goal_report_valuesGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends Goal_report_valuesGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: Goal_report_valuesGroupByArgs['orderBy'] }
        : { orderBy?: Goal_report_valuesGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, Goal_report_valuesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetGoal_report_valuesGroupByPayload<T> : PrismaPromise<InputErrors>

  }

  /**
   * The delegate class that acts as a "Promise-like" for Goal_report_values.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__Goal_report_valuesClient<T, Null = never> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';

    accounts<T extends Goal_report_values$accountsArgs= {}>(args?: Subset<T, Goal_report_values$accountsArgs>): Prisma__AccountsClient<AccountsGetPayload<T> | Null>;

    goal_reports<T extends Goal_report_values$goal_reportsArgs= {}>(args?: Subset<T, Goal_report_values$goal_reportsArgs>): Prisma__Goal_reportsClient<Goal_reportsGetPayload<T> | Null>;

    units<T extends Goal_report_values$unitsArgs= {}>(args?: Subset<T, Goal_report_values$unitsArgs>): Prisma__UnitsClient<UnitsGetPayload<T> | Null>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }



  // Custom InputTypes

  /**
   * Goal_report_values base type for findUnique actions
   */
  export type Goal_report_valuesFindUniqueArgsBase = {
    /**
     * Select specific fields to fetch from the Goal_report_values
     * 
    **/
    select?: Goal_report_valuesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: Goal_report_valuesInclude | null
    /**
     * Filter, which Goal_report_values to fetch.
     * 
    **/
    where: Goal_report_valuesWhereUniqueInput
  }

  /**
   * Goal_report_values findUnique
   */
  export interface Goal_report_valuesFindUniqueArgs extends Goal_report_valuesFindUniqueArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findUniqueOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * Goal_report_values findUniqueOrThrow
   */
  export type Goal_report_valuesFindUniqueOrThrowArgs = {
    /**
     * Select specific fields to fetch from the Goal_report_values
     * 
    **/
    select?: Goal_report_valuesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: Goal_report_valuesInclude | null
    /**
     * Filter, which Goal_report_values to fetch.
     * 
    **/
    where: Goal_report_valuesWhereUniqueInput
  }


  /**
   * Goal_report_values base type for findFirst actions
   */
  export type Goal_report_valuesFindFirstArgsBase = {
    /**
     * Select specific fields to fetch from the Goal_report_values
     * 
    **/
    select?: Goal_report_valuesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: Goal_report_valuesInclude | null
    /**
     * Filter, which Goal_report_values to fetch.
     * 
    **/
    where?: Goal_report_valuesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Goal_report_values to fetch.
     * 
    **/
    orderBy?: Enumerable<Goal_report_valuesOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Goal_report_values.
     * 
    **/
    cursor?: Goal_report_valuesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Goal_report_values from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Goal_report_values.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Goal_report_values.
     * 
    **/
    distinct?: Enumerable<Goal_report_valuesScalarFieldEnum>
  }

  /**
   * Goal_report_values findFirst
   */
  export interface Goal_report_valuesFindFirstArgs extends Goal_report_valuesFindFirstArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findFirstOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * Goal_report_values findFirstOrThrow
   */
  export type Goal_report_valuesFindFirstOrThrowArgs = {
    /**
     * Select specific fields to fetch from the Goal_report_values
     * 
    **/
    select?: Goal_report_valuesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: Goal_report_valuesInclude | null
    /**
     * Filter, which Goal_report_values to fetch.
     * 
    **/
    where?: Goal_report_valuesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Goal_report_values to fetch.
     * 
    **/
    orderBy?: Enumerable<Goal_report_valuesOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Goal_report_values.
     * 
    **/
    cursor?: Goal_report_valuesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Goal_report_values from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Goal_report_values.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Goal_report_values.
     * 
    **/
    distinct?: Enumerable<Goal_report_valuesScalarFieldEnum>
  }


  /**
   * Goal_report_values findMany
   */
  export type Goal_report_valuesFindManyArgs = {
    /**
     * Select specific fields to fetch from the Goal_report_values
     * 
    **/
    select?: Goal_report_valuesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: Goal_report_valuesInclude | null
    /**
     * Filter, which Goal_report_values to fetch.
     * 
    **/
    where?: Goal_report_valuesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Goal_report_values to fetch.
     * 
    **/
    orderBy?: Enumerable<Goal_report_valuesOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Goal_report_values.
     * 
    **/
    cursor?: Goal_report_valuesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Goal_report_values from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Goal_report_values.
     * 
    **/
    skip?: number
    distinct?: Enumerable<Goal_report_valuesScalarFieldEnum>
  }


  /**
   * Goal_report_values create
   */
  export type Goal_report_valuesCreateArgs = {
    /**
     * Select specific fields to fetch from the Goal_report_values
     * 
    **/
    select?: Goal_report_valuesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: Goal_report_valuesInclude | null
    /**
     * The data needed to create a Goal_report_values.
     * 
    **/
    data: XOR<Goal_report_valuesCreateInput, Goal_report_valuesUncheckedCreateInput>
  }


  /**
   * Goal_report_values createMany
   */
  export type Goal_report_valuesCreateManyArgs = {
    /**
     * The data used to create many Goal_report_values.
     * 
    **/
    data: Enumerable<Goal_report_valuesCreateManyInput>
    skipDuplicates?: boolean
  }


  /**
   * Goal_report_values update
   */
  export type Goal_report_valuesUpdateArgs = {
    /**
     * Select specific fields to fetch from the Goal_report_values
     * 
    **/
    select?: Goal_report_valuesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: Goal_report_valuesInclude | null
    /**
     * The data needed to update a Goal_report_values.
     * 
    **/
    data: XOR<Goal_report_valuesUpdateInput, Goal_report_valuesUncheckedUpdateInput>
    /**
     * Choose, which Goal_report_values to update.
     * 
    **/
    where: Goal_report_valuesWhereUniqueInput
  }


  /**
   * Goal_report_values updateMany
   */
  export type Goal_report_valuesUpdateManyArgs = {
    /**
     * The data used to update Goal_report_values.
     * 
    **/
    data: XOR<Goal_report_valuesUpdateManyMutationInput, Goal_report_valuesUncheckedUpdateManyInput>
    /**
     * Filter which Goal_report_values to update
     * 
    **/
    where?: Goal_report_valuesWhereInput
  }


  /**
   * Goal_report_values upsert
   */
  export type Goal_report_valuesUpsertArgs = {
    /**
     * Select specific fields to fetch from the Goal_report_values
     * 
    **/
    select?: Goal_report_valuesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: Goal_report_valuesInclude | null
    /**
     * The filter to search for the Goal_report_values to update in case it exists.
     * 
    **/
    where: Goal_report_valuesWhereUniqueInput
    /**
     * In case the Goal_report_values found by the `where` argument doesn't exist, create a new Goal_report_values with this data.
     * 
    **/
    create: XOR<Goal_report_valuesCreateInput, Goal_report_valuesUncheckedCreateInput>
    /**
     * In case the Goal_report_values was found with the provided `where` argument, update it with this data.
     * 
    **/
    update: XOR<Goal_report_valuesUpdateInput, Goal_report_valuesUncheckedUpdateInput>
  }


  /**
   * Goal_report_values delete
   */
  export type Goal_report_valuesDeleteArgs = {
    /**
     * Select specific fields to fetch from the Goal_report_values
     * 
    **/
    select?: Goal_report_valuesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: Goal_report_valuesInclude | null
    /**
     * Filter which Goal_report_values to delete.
     * 
    **/
    where: Goal_report_valuesWhereUniqueInput
  }


  /**
   * Goal_report_values deleteMany
   */
  export type Goal_report_valuesDeleteManyArgs = {
    /**
     * Filter which Goal_report_values to delete
     * 
    **/
    where?: Goal_report_valuesWhereInput
  }


  /**
   * Goal_report_values.accounts
   */
  export type Goal_report_values$accountsArgs = {
    /**
     * Select specific fields to fetch from the Accounts
     * 
    **/
    select?: AccountsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: AccountsInclude | null
    where?: AccountsWhereInput
  }


  /**
   * Goal_report_values.goal_reports
   */
  export type Goal_report_values$goal_reportsArgs = {
    /**
     * Select specific fields to fetch from the Goal_reports
     * 
    **/
    select?: Goal_reportsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: Goal_reportsInclude | null
    where?: Goal_reportsWhereInput
  }


  /**
   * Goal_report_values.units
   */
  export type Goal_report_values$unitsArgs = {
    /**
     * Select specific fields to fetch from the Units
     * 
    **/
    select?: UnitsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: UnitsInclude | null
    where?: UnitsWhereInput
  }


  /**
   * Goal_report_values without action
   */
  export type Goal_report_valuesArgs = {
    /**
     * Select specific fields to fetch from the Goal_report_values
     * 
    **/
    select?: Goal_report_valuesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: Goal_report_valuesInclude | null
  }



  /**
   * Model Goal_reports
   */


  export type AggregateGoal_reports = {
    _count: Goal_reportsCountAggregateOutputType | null
    _min: Goal_reportsMinAggregateOutputType | null
    _max: Goal_reportsMaxAggregateOutputType | null
  }

  export type Goal_reportsMinAggregateOutputType = {
    goal_report_id: string | null
    account_id: string | null
    goal_id: string | null
    label: string | null
    deleted: boolean | null
  }

  export type Goal_reportsMaxAggregateOutputType = {
    goal_report_id: string | null
    account_id: string | null
    goal_id: string | null
    label: string | null
    deleted: boolean | null
  }

  export type Goal_reportsCountAggregateOutputType = {
    goal_report_id: number
    account_id: number
    goal_id: number
    data: number
    label: number
    deleted: number
    _all: number
  }


  export type Goal_reportsMinAggregateInputType = {
    goal_report_id?: true
    account_id?: true
    goal_id?: true
    label?: true
    deleted?: true
  }

  export type Goal_reportsMaxAggregateInputType = {
    goal_report_id?: true
    account_id?: true
    goal_id?: true
    label?: true
    deleted?: true
  }

  export type Goal_reportsCountAggregateInputType = {
    goal_report_id?: true
    account_id?: true
    goal_id?: true
    data?: true
    label?: true
    deleted?: true
    _all?: true
  }

  export type Goal_reportsAggregateArgs = {
    /**
     * Filter which Goal_reports to aggregate.
     * 
    **/
    where?: Goal_reportsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Goal_reports to fetch.
     * 
    **/
    orderBy?: Enumerable<Goal_reportsOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     * 
    **/
    cursor?: Goal_reportsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Goal_reports from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Goal_reports.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Goal_reports
    **/
    _count?: true | Goal_reportsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Goal_reportsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Goal_reportsMaxAggregateInputType
  }

  export type GetGoal_reportsAggregateType<T extends Goal_reportsAggregateArgs> = {
        [P in keyof T & keyof AggregateGoal_reports]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateGoal_reports[P]>
      : GetScalarType<T[P], AggregateGoal_reports[P]>
  }




  export type Goal_reportsGroupByArgs = {
    where?: Goal_reportsWhereInput
    orderBy?: Enumerable<Goal_reportsOrderByWithAggregationInput>
    by: Array<Goal_reportsScalarFieldEnum>
    having?: Goal_reportsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Goal_reportsCountAggregateInputType | true
    _min?: Goal_reportsMinAggregateInputType
    _max?: Goal_reportsMaxAggregateInputType
  }


  export type Goal_reportsGroupByOutputType = {
    goal_report_id: string
    account_id: string | null
    goal_id: string | null
    data: JsonValue | null
    label: string | null
    deleted: boolean | null
    _count: Goal_reportsCountAggregateOutputType | null
    _min: Goal_reportsMinAggregateOutputType | null
    _max: Goal_reportsMaxAggregateOutputType | null
  }

  type GetGoal_reportsGroupByPayload<T extends Goal_reportsGroupByArgs> = PrismaPromise<
    Array<
      PickArray<Goal_reportsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Goal_reportsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Goal_reportsGroupByOutputType[P]>
            : GetScalarType<T[P], Goal_reportsGroupByOutputType[P]>
        }
      >
    >


  export type Goal_reportsSelect = {
    goal_report_id?: boolean
    account_id?: boolean
    goal_id?: boolean
    data?: boolean
    label?: boolean
    deleted?: boolean
    goal_report_values?: boolean | Goal_reports$goal_report_valuesArgs
    accounts?: boolean | Goal_reports$accountsArgs
    goals?: boolean | Goal_reports$goalsArgs
    _count?: boolean | Goal_reportsCountOutputTypeArgs
  }


  export type Goal_reportsInclude = {
    goal_report_values?: boolean | Goal_reports$goal_report_valuesArgs
    accounts?: boolean | Goal_reports$accountsArgs
    goals?: boolean | Goal_reports$goalsArgs
    _count?: boolean | Goal_reportsCountOutputTypeArgs
  } 

  export type Goal_reportsGetPayload<S extends boolean | null | undefined | Goal_reportsArgs> =
    S extends { select: any, include: any } ? 'Please either choose `select` or `include`' :
    S extends true ? Goal_reports :
    S extends undefined ? never :
    S extends { include: any } & (Goal_reportsArgs | Goal_reportsFindManyArgs)
    ? Goal_reports  & {
    [P in TruthyKeys<S['include']>]:
        P extends 'goal_report_values' ? Array < Goal_report_valuesGetPayload<S['include'][P]>>  :
        P extends 'accounts' ? AccountsGetPayload<S['include'][P]> | null :
        P extends 'goals' ? GoalsGetPayload<S['include'][P]> | null :
        P extends '_count' ? Goal_reportsCountOutputTypeGetPayload<S['include'][P]> :  never
  } 
    : S extends { select: any } & (Goal_reportsArgs | Goal_reportsFindManyArgs)
      ? {
    [P in TruthyKeys<S['select']>]:
        P extends 'goal_report_values' ? Array < Goal_report_valuesGetPayload<S['select'][P]>>  :
        P extends 'accounts' ? AccountsGetPayload<S['select'][P]> | null :
        P extends 'goals' ? GoalsGetPayload<S['select'][P]> | null :
        P extends '_count' ? Goal_reportsCountOutputTypeGetPayload<S['select'][P]> :  P extends keyof Goal_reports ? Goal_reports[P] : never
  } 
      : Goal_reports


  type Goal_reportsCountArgs = Merge<
    Omit<Goal_reportsFindManyArgs, 'select' | 'include'> & {
      select?: Goal_reportsCountAggregateInputType | true
    }
  >

  export interface Goal_reportsDelegate<GlobalRejectSettings extends Prisma.RejectOnNotFound | Prisma.RejectPerOperation | false | undefined> {
    /**
     * Find zero or one Goal_reports that matches the filter.
     * @param {Goal_reportsFindUniqueArgs} args - Arguments to find a Goal_reports
     * @example
     * // Get one Goal_reports
     * const goal_reports = await prisma.goal_reports.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends Goal_reportsFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, Goal_reportsFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'Goal_reports'> extends True ? Prisma__Goal_reportsClient<Goal_reportsGetPayload<T>> : Prisma__Goal_reportsClient<Goal_reportsGetPayload<T> | null, null>

    /**
     * Find one Goal_reports that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {Goal_reportsFindUniqueOrThrowArgs} args - Arguments to find a Goal_reports
     * @example
     * // Get one Goal_reports
     * const goal_reports = await prisma.goal_reports.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends Goal_reportsFindUniqueOrThrowArgs>(
      args?: SelectSubset<T, Goal_reportsFindUniqueOrThrowArgs>
    ): Prisma__Goal_reportsClient<Goal_reportsGetPayload<T>>

    /**
     * Find the first Goal_reports that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Goal_reportsFindFirstArgs} args - Arguments to find a Goal_reports
     * @example
     * // Get one Goal_reports
     * const goal_reports = await prisma.goal_reports.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends Goal_reportsFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, Goal_reportsFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'Goal_reports'> extends True ? Prisma__Goal_reportsClient<Goal_reportsGetPayload<T>> : Prisma__Goal_reportsClient<Goal_reportsGetPayload<T> | null, null>

    /**
     * Find the first Goal_reports that matches the filter or
     * throw `NotFoundError` if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Goal_reportsFindFirstOrThrowArgs} args - Arguments to find a Goal_reports
     * @example
     * // Get one Goal_reports
     * const goal_reports = await prisma.goal_reports.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends Goal_reportsFindFirstOrThrowArgs>(
      args?: SelectSubset<T, Goal_reportsFindFirstOrThrowArgs>
    ): Prisma__Goal_reportsClient<Goal_reportsGetPayload<T>>

    /**
     * Find zero or more Goal_reports that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Goal_reportsFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Goal_reports
     * const goal_reports = await prisma.goal_reports.findMany()
     * 
     * // Get first 10 Goal_reports
     * const goal_reports = await prisma.goal_reports.findMany({ take: 10 })
     * 
     * // Only select the `goal_report_id`
     * const goal_reportsWithGoal_report_idOnly = await prisma.goal_reports.findMany({ select: { goal_report_id: true } })
     * 
    **/
    findMany<T extends Goal_reportsFindManyArgs>(
      args?: SelectSubset<T, Goal_reportsFindManyArgs>
    ): PrismaPromise<Array<Goal_reportsGetPayload<T>>>

    /**
     * Create a Goal_reports.
     * @param {Goal_reportsCreateArgs} args - Arguments to create a Goal_reports.
     * @example
     * // Create one Goal_reports
     * const Goal_reports = await prisma.goal_reports.create({
     *   data: {
     *     // ... data to create a Goal_reports
     *   }
     * })
     * 
    **/
    create<T extends Goal_reportsCreateArgs>(
      args: SelectSubset<T, Goal_reportsCreateArgs>
    ): Prisma__Goal_reportsClient<Goal_reportsGetPayload<T>>

    /**
     * Create many Goal_reports.
     *     @param {Goal_reportsCreateManyArgs} args - Arguments to create many Goal_reports.
     *     @example
     *     // Create many Goal_reports
     *     const goal_reports = await prisma.goal_reports.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends Goal_reportsCreateManyArgs>(
      args?: SelectSubset<T, Goal_reportsCreateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Delete a Goal_reports.
     * @param {Goal_reportsDeleteArgs} args - Arguments to delete one Goal_reports.
     * @example
     * // Delete one Goal_reports
     * const Goal_reports = await prisma.goal_reports.delete({
     *   where: {
     *     // ... filter to delete one Goal_reports
     *   }
     * })
     * 
    **/
    delete<T extends Goal_reportsDeleteArgs>(
      args: SelectSubset<T, Goal_reportsDeleteArgs>
    ): Prisma__Goal_reportsClient<Goal_reportsGetPayload<T>>

    /**
     * Update one Goal_reports.
     * @param {Goal_reportsUpdateArgs} args - Arguments to update one Goal_reports.
     * @example
     * // Update one Goal_reports
     * const goal_reports = await prisma.goal_reports.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends Goal_reportsUpdateArgs>(
      args: SelectSubset<T, Goal_reportsUpdateArgs>
    ): Prisma__Goal_reportsClient<Goal_reportsGetPayload<T>>

    /**
     * Delete zero or more Goal_reports.
     * @param {Goal_reportsDeleteManyArgs} args - Arguments to filter Goal_reports to delete.
     * @example
     * // Delete a few Goal_reports
     * const { count } = await prisma.goal_reports.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends Goal_reportsDeleteManyArgs>(
      args?: SelectSubset<T, Goal_reportsDeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more Goal_reports.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Goal_reportsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Goal_reports
     * const goal_reports = await prisma.goal_reports.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends Goal_reportsUpdateManyArgs>(
      args: SelectSubset<T, Goal_reportsUpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one Goal_reports.
     * @param {Goal_reportsUpsertArgs} args - Arguments to update or create a Goal_reports.
     * @example
     * // Update or create a Goal_reports
     * const goal_reports = await prisma.goal_reports.upsert({
     *   create: {
     *     // ... data to create a Goal_reports
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Goal_reports we want to update
     *   }
     * })
    **/
    upsert<T extends Goal_reportsUpsertArgs>(
      args: SelectSubset<T, Goal_reportsUpsertArgs>
    ): Prisma__Goal_reportsClient<Goal_reportsGetPayload<T>>

    /**
     * Count the number of Goal_reports.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Goal_reportsCountArgs} args - Arguments to filter Goal_reports to count.
     * @example
     * // Count the number of Goal_reports
     * const count = await prisma.goal_reports.count({
     *   where: {
     *     // ... the filter for the Goal_reports we want to count
     *   }
     * })
    **/
    count<T extends Goal_reportsCountArgs>(
      args?: Subset<T, Goal_reportsCountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Goal_reportsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Goal_reports.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Goal_reportsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Goal_reportsAggregateArgs>(args: Subset<T, Goal_reportsAggregateArgs>): PrismaPromise<GetGoal_reportsAggregateType<T>>

    /**
     * Group by Goal_reports.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Goal_reportsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends Goal_reportsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: Goal_reportsGroupByArgs['orderBy'] }
        : { orderBy?: Goal_reportsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, Goal_reportsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetGoal_reportsGroupByPayload<T> : PrismaPromise<InputErrors>

  }

  /**
   * The delegate class that acts as a "Promise-like" for Goal_reports.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__Goal_reportsClient<T, Null = never> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';

    goal_report_values<T extends Goal_reports$goal_report_valuesArgs= {}>(args?: Subset<T, Goal_reports$goal_report_valuesArgs>): PrismaPromise<Array<Goal_report_valuesGetPayload<T>>| Null>;

    accounts<T extends Goal_reports$accountsArgs= {}>(args?: Subset<T, Goal_reports$accountsArgs>): Prisma__AccountsClient<AccountsGetPayload<T> | Null>;

    goals<T extends Goal_reports$goalsArgs= {}>(args?: Subset<T, Goal_reports$goalsArgs>): Prisma__GoalsClient<GoalsGetPayload<T> | Null>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }



  // Custom InputTypes

  /**
   * Goal_reports base type for findUnique actions
   */
  export type Goal_reportsFindUniqueArgsBase = {
    /**
     * Select specific fields to fetch from the Goal_reports
     * 
    **/
    select?: Goal_reportsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: Goal_reportsInclude | null
    /**
     * Filter, which Goal_reports to fetch.
     * 
    **/
    where: Goal_reportsWhereUniqueInput
  }

  /**
   * Goal_reports findUnique
   */
  export interface Goal_reportsFindUniqueArgs extends Goal_reportsFindUniqueArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findUniqueOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * Goal_reports findUniqueOrThrow
   */
  export type Goal_reportsFindUniqueOrThrowArgs = {
    /**
     * Select specific fields to fetch from the Goal_reports
     * 
    **/
    select?: Goal_reportsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: Goal_reportsInclude | null
    /**
     * Filter, which Goal_reports to fetch.
     * 
    **/
    where: Goal_reportsWhereUniqueInput
  }


  /**
   * Goal_reports base type for findFirst actions
   */
  export type Goal_reportsFindFirstArgsBase = {
    /**
     * Select specific fields to fetch from the Goal_reports
     * 
    **/
    select?: Goal_reportsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: Goal_reportsInclude | null
    /**
     * Filter, which Goal_reports to fetch.
     * 
    **/
    where?: Goal_reportsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Goal_reports to fetch.
     * 
    **/
    orderBy?: Enumerable<Goal_reportsOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Goal_reports.
     * 
    **/
    cursor?: Goal_reportsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Goal_reports from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Goal_reports.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Goal_reports.
     * 
    **/
    distinct?: Enumerable<Goal_reportsScalarFieldEnum>
  }

  /**
   * Goal_reports findFirst
   */
  export interface Goal_reportsFindFirstArgs extends Goal_reportsFindFirstArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findFirstOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * Goal_reports findFirstOrThrow
   */
  export type Goal_reportsFindFirstOrThrowArgs = {
    /**
     * Select specific fields to fetch from the Goal_reports
     * 
    **/
    select?: Goal_reportsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: Goal_reportsInclude | null
    /**
     * Filter, which Goal_reports to fetch.
     * 
    **/
    where?: Goal_reportsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Goal_reports to fetch.
     * 
    **/
    orderBy?: Enumerable<Goal_reportsOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Goal_reports.
     * 
    **/
    cursor?: Goal_reportsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Goal_reports from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Goal_reports.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Goal_reports.
     * 
    **/
    distinct?: Enumerable<Goal_reportsScalarFieldEnum>
  }


  /**
   * Goal_reports findMany
   */
  export type Goal_reportsFindManyArgs = {
    /**
     * Select specific fields to fetch from the Goal_reports
     * 
    **/
    select?: Goal_reportsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: Goal_reportsInclude | null
    /**
     * Filter, which Goal_reports to fetch.
     * 
    **/
    where?: Goal_reportsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Goal_reports to fetch.
     * 
    **/
    orderBy?: Enumerable<Goal_reportsOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Goal_reports.
     * 
    **/
    cursor?: Goal_reportsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Goal_reports from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Goal_reports.
     * 
    **/
    skip?: number
    distinct?: Enumerable<Goal_reportsScalarFieldEnum>
  }


  /**
   * Goal_reports create
   */
  export type Goal_reportsCreateArgs = {
    /**
     * Select specific fields to fetch from the Goal_reports
     * 
    **/
    select?: Goal_reportsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: Goal_reportsInclude | null
    /**
     * The data needed to create a Goal_reports.
     * 
    **/
    data: XOR<Goal_reportsCreateInput, Goal_reportsUncheckedCreateInput>
  }


  /**
   * Goal_reports createMany
   */
  export type Goal_reportsCreateManyArgs = {
    /**
     * The data used to create many Goal_reports.
     * 
    **/
    data: Enumerable<Goal_reportsCreateManyInput>
    skipDuplicates?: boolean
  }


  /**
   * Goal_reports update
   */
  export type Goal_reportsUpdateArgs = {
    /**
     * Select specific fields to fetch from the Goal_reports
     * 
    **/
    select?: Goal_reportsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: Goal_reportsInclude | null
    /**
     * The data needed to update a Goal_reports.
     * 
    **/
    data: XOR<Goal_reportsUpdateInput, Goal_reportsUncheckedUpdateInput>
    /**
     * Choose, which Goal_reports to update.
     * 
    **/
    where: Goal_reportsWhereUniqueInput
  }


  /**
   * Goal_reports updateMany
   */
  export type Goal_reportsUpdateManyArgs = {
    /**
     * The data used to update Goal_reports.
     * 
    **/
    data: XOR<Goal_reportsUpdateManyMutationInput, Goal_reportsUncheckedUpdateManyInput>
    /**
     * Filter which Goal_reports to update
     * 
    **/
    where?: Goal_reportsWhereInput
  }


  /**
   * Goal_reports upsert
   */
  export type Goal_reportsUpsertArgs = {
    /**
     * Select specific fields to fetch from the Goal_reports
     * 
    **/
    select?: Goal_reportsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: Goal_reportsInclude | null
    /**
     * The filter to search for the Goal_reports to update in case it exists.
     * 
    **/
    where: Goal_reportsWhereUniqueInput
    /**
     * In case the Goal_reports found by the `where` argument doesn't exist, create a new Goal_reports with this data.
     * 
    **/
    create: XOR<Goal_reportsCreateInput, Goal_reportsUncheckedCreateInput>
    /**
     * In case the Goal_reports was found with the provided `where` argument, update it with this data.
     * 
    **/
    update: XOR<Goal_reportsUpdateInput, Goal_reportsUncheckedUpdateInput>
  }


  /**
   * Goal_reports delete
   */
  export type Goal_reportsDeleteArgs = {
    /**
     * Select specific fields to fetch from the Goal_reports
     * 
    **/
    select?: Goal_reportsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: Goal_reportsInclude | null
    /**
     * Filter which Goal_reports to delete.
     * 
    **/
    where: Goal_reportsWhereUniqueInput
  }


  /**
   * Goal_reports deleteMany
   */
  export type Goal_reportsDeleteManyArgs = {
    /**
     * Filter which Goal_reports to delete
     * 
    **/
    where?: Goal_reportsWhereInput
  }


  /**
   * Goal_reports.goal_report_values
   */
  export type Goal_reports$goal_report_valuesArgs = {
    /**
     * Select specific fields to fetch from the Goal_report_values
     * 
    **/
    select?: Goal_report_valuesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: Goal_report_valuesInclude | null
    where?: Goal_report_valuesWhereInput
    orderBy?: Enumerable<Goal_report_valuesOrderByWithRelationInput>
    cursor?: Goal_report_valuesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Enumerable<Goal_report_valuesScalarFieldEnum>
  }


  /**
   * Goal_reports.accounts
   */
  export type Goal_reports$accountsArgs = {
    /**
     * Select specific fields to fetch from the Accounts
     * 
    **/
    select?: AccountsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: AccountsInclude | null
    where?: AccountsWhereInput
  }


  /**
   * Goal_reports.goals
   */
  export type Goal_reports$goalsArgs = {
    /**
     * Select specific fields to fetch from the Goals
     * 
    **/
    select?: GoalsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: GoalsInclude | null
    where?: GoalsWhereInput
  }


  /**
   * Goal_reports without action
   */
  export type Goal_reportsArgs = {
    /**
     * Select specific fields to fetch from the Goal_reports
     * 
    **/
    select?: Goal_reportsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: Goal_reportsInclude | null
  }



  /**
   * Model Goals
   */


  export type AggregateGoals = {
    _count: GoalsCountAggregateOutputType | null
    _avg: GoalsAvgAggregateOutputType | null
    _sum: GoalsSumAggregateOutputType | null
    _min: GoalsMinAggregateOutputType | null
    _max: GoalsMaxAggregateOutputType | null
  }

  export type GoalsAvgAggregateOutputType = {
    year: number | null
  }

  export type GoalsSumAggregateOutputType = {
    year: number | null
  }

  export type GoalsMinAggregateOutputType = {
    goal_id: string | null
    account_id: string | null
    subproject_id: string | null
    year: number | null
    name: string | null
    label_replace_by_generated_column: string | null
    deleted: boolean | null
  }

  export type GoalsMaxAggregateOutputType = {
    goal_id: string | null
    account_id: string | null
    subproject_id: string | null
    year: number | null
    name: string | null
    label_replace_by_generated_column: string | null
    deleted: boolean | null
  }

  export type GoalsCountAggregateOutputType = {
    goal_id: number
    account_id: number
    subproject_id: number
    year: number
    name: number
    data: number
    label_replace_by_generated_column: number
    deleted: number
    _all: number
  }


  export type GoalsAvgAggregateInputType = {
    year?: true
  }

  export type GoalsSumAggregateInputType = {
    year?: true
  }

  export type GoalsMinAggregateInputType = {
    goal_id?: true
    account_id?: true
    subproject_id?: true
    year?: true
    name?: true
    label_replace_by_generated_column?: true
    deleted?: true
  }

  export type GoalsMaxAggregateInputType = {
    goal_id?: true
    account_id?: true
    subproject_id?: true
    year?: true
    name?: true
    label_replace_by_generated_column?: true
    deleted?: true
  }

  export type GoalsCountAggregateInputType = {
    goal_id?: true
    account_id?: true
    subproject_id?: true
    year?: true
    name?: true
    data?: true
    label_replace_by_generated_column?: true
    deleted?: true
    _all?: true
  }

  export type GoalsAggregateArgs = {
    /**
     * Filter which Goals to aggregate.
     * 
    **/
    where?: GoalsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Goals to fetch.
     * 
    **/
    orderBy?: Enumerable<GoalsOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     * 
    **/
    cursor?: GoalsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Goals from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Goals.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Goals
    **/
    _count?: true | GoalsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: GoalsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: GoalsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: GoalsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: GoalsMaxAggregateInputType
  }

  export type GetGoalsAggregateType<T extends GoalsAggregateArgs> = {
        [P in keyof T & keyof AggregateGoals]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateGoals[P]>
      : GetScalarType<T[P], AggregateGoals[P]>
  }




  export type GoalsGroupByArgs = {
    where?: GoalsWhereInput
    orderBy?: Enumerable<GoalsOrderByWithAggregationInput>
    by: Array<GoalsScalarFieldEnum>
    having?: GoalsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: GoalsCountAggregateInputType | true
    _avg?: GoalsAvgAggregateInputType
    _sum?: GoalsSumAggregateInputType
    _min?: GoalsMinAggregateInputType
    _max?: GoalsMaxAggregateInputType
  }


  export type GoalsGroupByOutputType = {
    goal_id: string
    account_id: string | null
    subproject_id: string | null
    year: number | null
    name: string | null
    data: JsonValue | null
    label_replace_by_generated_column: string | null
    deleted: boolean | null
    _count: GoalsCountAggregateOutputType | null
    _avg: GoalsAvgAggregateOutputType | null
    _sum: GoalsSumAggregateOutputType | null
    _min: GoalsMinAggregateOutputType | null
    _max: GoalsMaxAggregateOutputType | null
  }

  type GetGoalsGroupByPayload<T extends GoalsGroupByArgs> = PrismaPromise<
    Array<
      PickArray<GoalsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof GoalsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], GoalsGroupByOutputType[P]>
            : GetScalarType<T[P], GoalsGroupByOutputType[P]>
        }
      >
    >


  export type GoalsSelect = {
    goal_id?: boolean
    account_id?: boolean
    subproject_id?: boolean
    year?: boolean
    name?: boolean
    data?: boolean
    label_replace_by_generated_column?: boolean
    deleted?: boolean
    goal_reports?: boolean | Goals$goal_reportsArgs
    accounts?: boolean | Goals$accountsArgs
    subprojects?: boolean | Goals$subprojectsArgs
    _count?: boolean | GoalsCountOutputTypeArgs
  }


  export type GoalsInclude = {
    goal_reports?: boolean | Goals$goal_reportsArgs
    accounts?: boolean | Goals$accountsArgs
    subprojects?: boolean | Goals$subprojectsArgs
    _count?: boolean | GoalsCountOutputTypeArgs
  } 

  export type GoalsGetPayload<S extends boolean | null | undefined | GoalsArgs> =
    S extends { select: any, include: any } ? 'Please either choose `select` or `include`' :
    S extends true ? Goals :
    S extends undefined ? never :
    S extends { include: any } & (GoalsArgs | GoalsFindManyArgs)
    ? Goals  & {
    [P in TruthyKeys<S['include']>]:
        P extends 'goal_reports' ? Array < Goal_reportsGetPayload<S['include'][P]>>  :
        P extends 'accounts' ? AccountsGetPayload<S['include'][P]> | null :
        P extends 'subprojects' ? SubprojectsGetPayload<S['include'][P]> | null :
        P extends '_count' ? GoalsCountOutputTypeGetPayload<S['include'][P]> :  never
  } 
    : S extends { select: any } & (GoalsArgs | GoalsFindManyArgs)
      ? {
    [P in TruthyKeys<S['select']>]:
        P extends 'goal_reports' ? Array < Goal_reportsGetPayload<S['select'][P]>>  :
        P extends 'accounts' ? AccountsGetPayload<S['select'][P]> | null :
        P extends 'subprojects' ? SubprojectsGetPayload<S['select'][P]> | null :
        P extends '_count' ? GoalsCountOutputTypeGetPayload<S['select'][P]> :  P extends keyof Goals ? Goals[P] : never
  } 
      : Goals


  type GoalsCountArgs = Merge<
    Omit<GoalsFindManyArgs, 'select' | 'include'> & {
      select?: GoalsCountAggregateInputType | true
    }
  >

  export interface GoalsDelegate<GlobalRejectSettings extends Prisma.RejectOnNotFound | Prisma.RejectPerOperation | false | undefined> {
    /**
     * Find zero or one Goals that matches the filter.
     * @param {GoalsFindUniqueArgs} args - Arguments to find a Goals
     * @example
     * // Get one Goals
     * const goals = await prisma.goals.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends GoalsFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, GoalsFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'Goals'> extends True ? Prisma__GoalsClient<GoalsGetPayload<T>> : Prisma__GoalsClient<GoalsGetPayload<T> | null, null>

    /**
     * Find one Goals that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {GoalsFindUniqueOrThrowArgs} args - Arguments to find a Goals
     * @example
     * // Get one Goals
     * const goals = await prisma.goals.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends GoalsFindUniqueOrThrowArgs>(
      args?: SelectSubset<T, GoalsFindUniqueOrThrowArgs>
    ): Prisma__GoalsClient<GoalsGetPayload<T>>

    /**
     * Find the first Goals that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {GoalsFindFirstArgs} args - Arguments to find a Goals
     * @example
     * // Get one Goals
     * const goals = await prisma.goals.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends GoalsFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, GoalsFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'Goals'> extends True ? Prisma__GoalsClient<GoalsGetPayload<T>> : Prisma__GoalsClient<GoalsGetPayload<T> | null, null>

    /**
     * Find the first Goals that matches the filter or
     * throw `NotFoundError` if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {GoalsFindFirstOrThrowArgs} args - Arguments to find a Goals
     * @example
     * // Get one Goals
     * const goals = await prisma.goals.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends GoalsFindFirstOrThrowArgs>(
      args?: SelectSubset<T, GoalsFindFirstOrThrowArgs>
    ): Prisma__GoalsClient<GoalsGetPayload<T>>

    /**
     * Find zero or more Goals that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {GoalsFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Goals
     * const goals = await prisma.goals.findMany()
     * 
     * // Get first 10 Goals
     * const goals = await prisma.goals.findMany({ take: 10 })
     * 
     * // Only select the `goal_id`
     * const goalsWithGoal_idOnly = await prisma.goals.findMany({ select: { goal_id: true } })
     * 
    **/
    findMany<T extends GoalsFindManyArgs>(
      args?: SelectSubset<T, GoalsFindManyArgs>
    ): PrismaPromise<Array<GoalsGetPayload<T>>>

    /**
     * Create a Goals.
     * @param {GoalsCreateArgs} args - Arguments to create a Goals.
     * @example
     * // Create one Goals
     * const Goals = await prisma.goals.create({
     *   data: {
     *     // ... data to create a Goals
     *   }
     * })
     * 
    **/
    create<T extends GoalsCreateArgs>(
      args: SelectSubset<T, GoalsCreateArgs>
    ): Prisma__GoalsClient<GoalsGetPayload<T>>

    /**
     * Create many Goals.
     *     @param {GoalsCreateManyArgs} args - Arguments to create many Goals.
     *     @example
     *     // Create many Goals
     *     const goals = await prisma.goals.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends GoalsCreateManyArgs>(
      args?: SelectSubset<T, GoalsCreateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Delete a Goals.
     * @param {GoalsDeleteArgs} args - Arguments to delete one Goals.
     * @example
     * // Delete one Goals
     * const Goals = await prisma.goals.delete({
     *   where: {
     *     // ... filter to delete one Goals
     *   }
     * })
     * 
    **/
    delete<T extends GoalsDeleteArgs>(
      args: SelectSubset<T, GoalsDeleteArgs>
    ): Prisma__GoalsClient<GoalsGetPayload<T>>

    /**
     * Update one Goals.
     * @param {GoalsUpdateArgs} args - Arguments to update one Goals.
     * @example
     * // Update one Goals
     * const goals = await prisma.goals.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends GoalsUpdateArgs>(
      args: SelectSubset<T, GoalsUpdateArgs>
    ): Prisma__GoalsClient<GoalsGetPayload<T>>

    /**
     * Delete zero or more Goals.
     * @param {GoalsDeleteManyArgs} args - Arguments to filter Goals to delete.
     * @example
     * // Delete a few Goals
     * const { count } = await prisma.goals.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends GoalsDeleteManyArgs>(
      args?: SelectSubset<T, GoalsDeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more Goals.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {GoalsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Goals
     * const goals = await prisma.goals.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends GoalsUpdateManyArgs>(
      args: SelectSubset<T, GoalsUpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one Goals.
     * @param {GoalsUpsertArgs} args - Arguments to update or create a Goals.
     * @example
     * // Update or create a Goals
     * const goals = await prisma.goals.upsert({
     *   create: {
     *     // ... data to create a Goals
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Goals we want to update
     *   }
     * })
    **/
    upsert<T extends GoalsUpsertArgs>(
      args: SelectSubset<T, GoalsUpsertArgs>
    ): Prisma__GoalsClient<GoalsGetPayload<T>>

    /**
     * Count the number of Goals.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {GoalsCountArgs} args - Arguments to filter Goals to count.
     * @example
     * // Count the number of Goals
     * const count = await prisma.goals.count({
     *   where: {
     *     // ... the filter for the Goals we want to count
     *   }
     * })
    **/
    count<T extends GoalsCountArgs>(
      args?: Subset<T, GoalsCountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], GoalsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Goals.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {GoalsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends GoalsAggregateArgs>(args: Subset<T, GoalsAggregateArgs>): PrismaPromise<GetGoalsAggregateType<T>>

    /**
     * Group by Goals.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {GoalsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends GoalsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: GoalsGroupByArgs['orderBy'] }
        : { orderBy?: GoalsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, GoalsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetGoalsGroupByPayload<T> : PrismaPromise<InputErrors>

  }

  /**
   * The delegate class that acts as a "Promise-like" for Goals.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__GoalsClient<T, Null = never> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';

    goal_reports<T extends Goals$goal_reportsArgs= {}>(args?: Subset<T, Goals$goal_reportsArgs>): PrismaPromise<Array<Goal_reportsGetPayload<T>>| Null>;

    accounts<T extends Goals$accountsArgs= {}>(args?: Subset<T, Goals$accountsArgs>): Prisma__AccountsClient<AccountsGetPayload<T> | Null>;

    subprojects<T extends Goals$subprojectsArgs= {}>(args?: Subset<T, Goals$subprojectsArgs>): Prisma__SubprojectsClient<SubprojectsGetPayload<T> | Null>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }



  // Custom InputTypes

  /**
   * Goals base type for findUnique actions
   */
  export type GoalsFindUniqueArgsBase = {
    /**
     * Select specific fields to fetch from the Goals
     * 
    **/
    select?: GoalsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: GoalsInclude | null
    /**
     * Filter, which Goals to fetch.
     * 
    **/
    where: GoalsWhereUniqueInput
  }

  /**
   * Goals findUnique
   */
  export interface GoalsFindUniqueArgs extends GoalsFindUniqueArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findUniqueOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * Goals findUniqueOrThrow
   */
  export type GoalsFindUniqueOrThrowArgs = {
    /**
     * Select specific fields to fetch from the Goals
     * 
    **/
    select?: GoalsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: GoalsInclude | null
    /**
     * Filter, which Goals to fetch.
     * 
    **/
    where: GoalsWhereUniqueInput
  }


  /**
   * Goals base type for findFirst actions
   */
  export type GoalsFindFirstArgsBase = {
    /**
     * Select specific fields to fetch from the Goals
     * 
    **/
    select?: GoalsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: GoalsInclude | null
    /**
     * Filter, which Goals to fetch.
     * 
    **/
    where?: GoalsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Goals to fetch.
     * 
    **/
    orderBy?: Enumerable<GoalsOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Goals.
     * 
    **/
    cursor?: GoalsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Goals from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Goals.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Goals.
     * 
    **/
    distinct?: Enumerable<GoalsScalarFieldEnum>
  }

  /**
   * Goals findFirst
   */
  export interface GoalsFindFirstArgs extends GoalsFindFirstArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findFirstOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * Goals findFirstOrThrow
   */
  export type GoalsFindFirstOrThrowArgs = {
    /**
     * Select specific fields to fetch from the Goals
     * 
    **/
    select?: GoalsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: GoalsInclude | null
    /**
     * Filter, which Goals to fetch.
     * 
    **/
    where?: GoalsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Goals to fetch.
     * 
    **/
    orderBy?: Enumerable<GoalsOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Goals.
     * 
    **/
    cursor?: GoalsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Goals from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Goals.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Goals.
     * 
    **/
    distinct?: Enumerable<GoalsScalarFieldEnum>
  }


  /**
   * Goals findMany
   */
  export type GoalsFindManyArgs = {
    /**
     * Select specific fields to fetch from the Goals
     * 
    **/
    select?: GoalsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: GoalsInclude | null
    /**
     * Filter, which Goals to fetch.
     * 
    **/
    where?: GoalsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Goals to fetch.
     * 
    **/
    orderBy?: Enumerable<GoalsOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Goals.
     * 
    **/
    cursor?: GoalsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Goals from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Goals.
     * 
    **/
    skip?: number
    distinct?: Enumerable<GoalsScalarFieldEnum>
  }


  /**
   * Goals create
   */
  export type GoalsCreateArgs = {
    /**
     * Select specific fields to fetch from the Goals
     * 
    **/
    select?: GoalsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: GoalsInclude | null
    /**
     * The data needed to create a Goals.
     * 
    **/
    data: XOR<GoalsCreateInput, GoalsUncheckedCreateInput>
  }


  /**
   * Goals createMany
   */
  export type GoalsCreateManyArgs = {
    /**
     * The data used to create many Goals.
     * 
    **/
    data: Enumerable<GoalsCreateManyInput>
    skipDuplicates?: boolean
  }


  /**
   * Goals update
   */
  export type GoalsUpdateArgs = {
    /**
     * Select specific fields to fetch from the Goals
     * 
    **/
    select?: GoalsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: GoalsInclude | null
    /**
     * The data needed to update a Goals.
     * 
    **/
    data: XOR<GoalsUpdateInput, GoalsUncheckedUpdateInput>
    /**
     * Choose, which Goals to update.
     * 
    **/
    where: GoalsWhereUniqueInput
  }


  /**
   * Goals updateMany
   */
  export type GoalsUpdateManyArgs = {
    /**
     * The data used to update Goals.
     * 
    **/
    data: XOR<GoalsUpdateManyMutationInput, GoalsUncheckedUpdateManyInput>
    /**
     * Filter which Goals to update
     * 
    **/
    where?: GoalsWhereInput
  }


  /**
   * Goals upsert
   */
  export type GoalsUpsertArgs = {
    /**
     * Select specific fields to fetch from the Goals
     * 
    **/
    select?: GoalsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: GoalsInclude | null
    /**
     * The filter to search for the Goals to update in case it exists.
     * 
    **/
    where: GoalsWhereUniqueInput
    /**
     * In case the Goals found by the `where` argument doesn't exist, create a new Goals with this data.
     * 
    **/
    create: XOR<GoalsCreateInput, GoalsUncheckedCreateInput>
    /**
     * In case the Goals was found with the provided `where` argument, update it with this data.
     * 
    **/
    update: XOR<GoalsUpdateInput, GoalsUncheckedUpdateInput>
  }


  /**
   * Goals delete
   */
  export type GoalsDeleteArgs = {
    /**
     * Select specific fields to fetch from the Goals
     * 
    **/
    select?: GoalsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: GoalsInclude | null
    /**
     * Filter which Goals to delete.
     * 
    **/
    where: GoalsWhereUniqueInput
  }


  /**
   * Goals deleteMany
   */
  export type GoalsDeleteManyArgs = {
    /**
     * Filter which Goals to delete
     * 
    **/
    where?: GoalsWhereInput
  }


  /**
   * Goals.goal_reports
   */
  export type Goals$goal_reportsArgs = {
    /**
     * Select specific fields to fetch from the Goal_reports
     * 
    **/
    select?: Goal_reportsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: Goal_reportsInclude | null
    where?: Goal_reportsWhereInput
    orderBy?: Enumerable<Goal_reportsOrderByWithRelationInput>
    cursor?: Goal_reportsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Enumerable<Goal_reportsScalarFieldEnum>
  }


  /**
   * Goals.accounts
   */
  export type Goals$accountsArgs = {
    /**
     * Select specific fields to fetch from the Accounts
     * 
    **/
    select?: AccountsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: AccountsInclude | null
    where?: AccountsWhereInput
  }


  /**
   * Goals.subprojects
   */
  export type Goals$subprojectsArgs = {
    /**
     * Select specific fields to fetch from the Subprojects
     * 
    **/
    select?: SubprojectsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: SubprojectsInclude | null
    where?: SubprojectsWhereInput
  }


  /**
   * Goals without action
   */
  export type GoalsArgs = {
    /**
     * Select specific fields to fetch from the Goals
     * 
    **/
    select?: GoalsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: GoalsInclude | null
  }



  /**
   * Model List_values
   */


  export type AggregateList_values = {
    _count: List_valuesCountAggregateOutputType | null
    _min: List_valuesMinAggregateOutputType | null
    _max: List_valuesMaxAggregateOutputType | null
  }

  export type List_valuesMinAggregateOutputType = {
    list_value_id: string | null
    account_id: string | null
    list_id: string | null
    value: string | null
    obsolete: boolean | null
    label_replace_by_generated_column: string | null
    deleted: boolean | null
  }

  export type List_valuesMaxAggregateOutputType = {
    list_value_id: string | null
    account_id: string | null
    list_id: string | null
    value: string | null
    obsolete: boolean | null
    label_replace_by_generated_column: string | null
    deleted: boolean | null
  }

  export type List_valuesCountAggregateOutputType = {
    list_value_id: number
    account_id: number
    list_id: number
    value: number
    obsolete: number
    label_replace_by_generated_column: number
    deleted: number
    _all: number
  }


  export type List_valuesMinAggregateInputType = {
    list_value_id?: true
    account_id?: true
    list_id?: true
    value?: true
    obsolete?: true
    label_replace_by_generated_column?: true
    deleted?: true
  }

  export type List_valuesMaxAggregateInputType = {
    list_value_id?: true
    account_id?: true
    list_id?: true
    value?: true
    obsolete?: true
    label_replace_by_generated_column?: true
    deleted?: true
  }

  export type List_valuesCountAggregateInputType = {
    list_value_id?: true
    account_id?: true
    list_id?: true
    value?: true
    obsolete?: true
    label_replace_by_generated_column?: true
    deleted?: true
    _all?: true
  }

  export type List_valuesAggregateArgs = {
    /**
     * Filter which List_values to aggregate.
     * 
    **/
    where?: List_valuesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of List_values to fetch.
     * 
    **/
    orderBy?: Enumerable<List_valuesOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     * 
    **/
    cursor?: List_valuesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` List_values from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` List_values.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned List_values
    **/
    _count?: true | List_valuesCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: List_valuesMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: List_valuesMaxAggregateInputType
  }

  export type GetList_valuesAggregateType<T extends List_valuesAggregateArgs> = {
        [P in keyof T & keyof AggregateList_values]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateList_values[P]>
      : GetScalarType<T[P], AggregateList_values[P]>
  }




  export type List_valuesGroupByArgs = {
    where?: List_valuesWhereInput
    orderBy?: Enumerable<List_valuesOrderByWithAggregationInput>
    by: Array<List_valuesScalarFieldEnum>
    having?: List_valuesScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: List_valuesCountAggregateInputType | true
    _min?: List_valuesMinAggregateInputType
    _max?: List_valuesMaxAggregateInputType
  }


  export type List_valuesGroupByOutputType = {
    list_value_id: string
    account_id: string | null
    list_id: string | null
    value: string | null
    obsolete: boolean | null
    label_replace_by_generated_column: string | null
    deleted: boolean | null
    _count: List_valuesCountAggregateOutputType | null
    _min: List_valuesMinAggregateOutputType | null
    _max: List_valuesMaxAggregateOutputType | null
  }

  type GetList_valuesGroupByPayload<T extends List_valuesGroupByArgs> = PrismaPromise<
    Array<
      PickArray<List_valuesGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof List_valuesGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], List_valuesGroupByOutputType[P]>
            : GetScalarType<T[P], List_valuesGroupByOutputType[P]>
        }
      >
    >


  export type List_valuesSelect = {
    list_value_id?: boolean
    account_id?: boolean
    list_id?: boolean
    value?: boolean
    obsolete?: boolean
    label_replace_by_generated_column?: boolean
    deleted?: boolean
    accounts?: boolean | List_values$accountsArgs
    lists?: boolean | List_values$listsArgs
  }


  export type List_valuesInclude = {
    accounts?: boolean | List_values$accountsArgs
    lists?: boolean | List_values$listsArgs
  } 

  export type List_valuesGetPayload<S extends boolean | null | undefined | List_valuesArgs> =
    S extends { select: any, include: any } ? 'Please either choose `select` or `include`' :
    S extends true ? List_values :
    S extends undefined ? never :
    S extends { include: any } & (List_valuesArgs | List_valuesFindManyArgs)
    ? List_values  & {
    [P in TruthyKeys<S['include']>]:
        P extends 'accounts' ? AccountsGetPayload<S['include'][P]> | null :
        P extends 'lists' ? ListsGetPayload<S['include'][P]> | null :  never
  } 
    : S extends { select: any } & (List_valuesArgs | List_valuesFindManyArgs)
      ? {
    [P in TruthyKeys<S['select']>]:
        P extends 'accounts' ? AccountsGetPayload<S['select'][P]> | null :
        P extends 'lists' ? ListsGetPayload<S['select'][P]> | null :  P extends keyof List_values ? List_values[P] : never
  } 
      : List_values


  type List_valuesCountArgs = Merge<
    Omit<List_valuesFindManyArgs, 'select' | 'include'> & {
      select?: List_valuesCountAggregateInputType | true
    }
  >

  export interface List_valuesDelegate<GlobalRejectSettings extends Prisma.RejectOnNotFound | Prisma.RejectPerOperation | false | undefined> {
    /**
     * Find zero or one List_values that matches the filter.
     * @param {List_valuesFindUniqueArgs} args - Arguments to find a List_values
     * @example
     * // Get one List_values
     * const list_values = await prisma.list_values.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends List_valuesFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, List_valuesFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'List_values'> extends True ? Prisma__List_valuesClient<List_valuesGetPayload<T>> : Prisma__List_valuesClient<List_valuesGetPayload<T> | null, null>

    /**
     * Find one List_values that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {List_valuesFindUniqueOrThrowArgs} args - Arguments to find a List_values
     * @example
     * // Get one List_values
     * const list_values = await prisma.list_values.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends List_valuesFindUniqueOrThrowArgs>(
      args?: SelectSubset<T, List_valuesFindUniqueOrThrowArgs>
    ): Prisma__List_valuesClient<List_valuesGetPayload<T>>

    /**
     * Find the first List_values that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {List_valuesFindFirstArgs} args - Arguments to find a List_values
     * @example
     * // Get one List_values
     * const list_values = await prisma.list_values.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends List_valuesFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, List_valuesFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'List_values'> extends True ? Prisma__List_valuesClient<List_valuesGetPayload<T>> : Prisma__List_valuesClient<List_valuesGetPayload<T> | null, null>

    /**
     * Find the first List_values that matches the filter or
     * throw `NotFoundError` if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {List_valuesFindFirstOrThrowArgs} args - Arguments to find a List_values
     * @example
     * // Get one List_values
     * const list_values = await prisma.list_values.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends List_valuesFindFirstOrThrowArgs>(
      args?: SelectSubset<T, List_valuesFindFirstOrThrowArgs>
    ): Prisma__List_valuesClient<List_valuesGetPayload<T>>

    /**
     * Find zero or more List_values that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {List_valuesFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all List_values
     * const list_values = await prisma.list_values.findMany()
     * 
     * // Get first 10 List_values
     * const list_values = await prisma.list_values.findMany({ take: 10 })
     * 
     * // Only select the `list_value_id`
     * const list_valuesWithList_value_idOnly = await prisma.list_values.findMany({ select: { list_value_id: true } })
     * 
    **/
    findMany<T extends List_valuesFindManyArgs>(
      args?: SelectSubset<T, List_valuesFindManyArgs>
    ): PrismaPromise<Array<List_valuesGetPayload<T>>>

    /**
     * Create a List_values.
     * @param {List_valuesCreateArgs} args - Arguments to create a List_values.
     * @example
     * // Create one List_values
     * const List_values = await prisma.list_values.create({
     *   data: {
     *     // ... data to create a List_values
     *   }
     * })
     * 
    **/
    create<T extends List_valuesCreateArgs>(
      args: SelectSubset<T, List_valuesCreateArgs>
    ): Prisma__List_valuesClient<List_valuesGetPayload<T>>

    /**
     * Create many List_values.
     *     @param {List_valuesCreateManyArgs} args - Arguments to create many List_values.
     *     @example
     *     // Create many List_values
     *     const list_values = await prisma.list_values.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends List_valuesCreateManyArgs>(
      args?: SelectSubset<T, List_valuesCreateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Delete a List_values.
     * @param {List_valuesDeleteArgs} args - Arguments to delete one List_values.
     * @example
     * // Delete one List_values
     * const List_values = await prisma.list_values.delete({
     *   where: {
     *     // ... filter to delete one List_values
     *   }
     * })
     * 
    **/
    delete<T extends List_valuesDeleteArgs>(
      args: SelectSubset<T, List_valuesDeleteArgs>
    ): Prisma__List_valuesClient<List_valuesGetPayload<T>>

    /**
     * Update one List_values.
     * @param {List_valuesUpdateArgs} args - Arguments to update one List_values.
     * @example
     * // Update one List_values
     * const list_values = await prisma.list_values.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends List_valuesUpdateArgs>(
      args: SelectSubset<T, List_valuesUpdateArgs>
    ): Prisma__List_valuesClient<List_valuesGetPayload<T>>

    /**
     * Delete zero or more List_values.
     * @param {List_valuesDeleteManyArgs} args - Arguments to filter List_values to delete.
     * @example
     * // Delete a few List_values
     * const { count } = await prisma.list_values.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends List_valuesDeleteManyArgs>(
      args?: SelectSubset<T, List_valuesDeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more List_values.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {List_valuesUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many List_values
     * const list_values = await prisma.list_values.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends List_valuesUpdateManyArgs>(
      args: SelectSubset<T, List_valuesUpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one List_values.
     * @param {List_valuesUpsertArgs} args - Arguments to update or create a List_values.
     * @example
     * // Update or create a List_values
     * const list_values = await prisma.list_values.upsert({
     *   create: {
     *     // ... data to create a List_values
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the List_values we want to update
     *   }
     * })
    **/
    upsert<T extends List_valuesUpsertArgs>(
      args: SelectSubset<T, List_valuesUpsertArgs>
    ): Prisma__List_valuesClient<List_valuesGetPayload<T>>

    /**
     * Count the number of List_values.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {List_valuesCountArgs} args - Arguments to filter List_values to count.
     * @example
     * // Count the number of List_values
     * const count = await prisma.list_values.count({
     *   where: {
     *     // ... the filter for the List_values we want to count
     *   }
     * })
    **/
    count<T extends List_valuesCountArgs>(
      args?: Subset<T, List_valuesCountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], List_valuesCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a List_values.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {List_valuesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends List_valuesAggregateArgs>(args: Subset<T, List_valuesAggregateArgs>): PrismaPromise<GetList_valuesAggregateType<T>>

    /**
     * Group by List_values.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {List_valuesGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends List_valuesGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: List_valuesGroupByArgs['orderBy'] }
        : { orderBy?: List_valuesGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, List_valuesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetList_valuesGroupByPayload<T> : PrismaPromise<InputErrors>

  }

  /**
   * The delegate class that acts as a "Promise-like" for List_values.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__List_valuesClient<T, Null = never> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';

    accounts<T extends List_values$accountsArgs= {}>(args?: Subset<T, List_values$accountsArgs>): Prisma__AccountsClient<AccountsGetPayload<T> | Null>;

    lists<T extends List_values$listsArgs= {}>(args?: Subset<T, List_values$listsArgs>): Prisma__ListsClient<ListsGetPayload<T> | Null>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }



  // Custom InputTypes

  /**
   * List_values base type for findUnique actions
   */
  export type List_valuesFindUniqueArgsBase = {
    /**
     * Select specific fields to fetch from the List_values
     * 
    **/
    select?: List_valuesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: List_valuesInclude | null
    /**
     * Filter, which List_values to fetch.
     * 
    **/
    where: List_valuesWhereUniqueInput
  }

  /**
   * List_values findUnique
   */
  export interface List_valuesFindUniqueArgs extends List_valuesFindUniqueArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findUniqueOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * List_values findUniqueOrThrow
   */
  export type List_valuesFindUniqueOrThrowArgs = {
    /**
     * Select specific fields to fetch from the List_values
     * 
    **/
    select?: List_valuesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: List_valuesInclude | null
    /**
     * Filter, which List_values to fetch.
     * 
    **/
    where: List_valuesWhereUniqueInput
  }


  /**
   * List_values base type for findFirst actions
   */
  export type List_valuesFindFirstArgsBase = {
    /**
     * Select specific fields to fetch from the List_values
     * 
    **/
    select?: List_valuesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: List_valuesInclude | null
    /**
     * Filter, which List_values to fetch.
     * 
    **/
    where?: List_valuesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of List_values to fetch.
     * 
    **/
    orderBy?: Enumerable<List_valuesOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for List_values.
     * 
    **/
    cursor?: List_valuesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` List_values from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` List_values.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of List_values.
     * 
    **/
    distinct?: Enumerable<List_valuesScalarFieldEnum>
  }

  /**
   * List_values findFirst
   */
  export interface List_valuesFindFirstArgs extends List_valuesFindFirstArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findFirstOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * List_values findFirstOrThrow
   */
  export type List_valuesFindFirstOrThrowArgs = {
    /**
     * Select specific fields to fetch from the List_values
     * 
    **/
    select?: List_valuesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: List_valuesInclude | null
    /**
     * Filter, which List_values to fetch.
     * 
    **/
    where?: List_valuesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of List_values to fetch.
     * 
    **/
    orderBy?: Enumerable<List_valuesOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for List_values.
     * 
    **/
    cursor?: List_valuesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` List_values from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` List_values.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of List_values.
     * 
    **/
    distinct?: Enumerable<List_valuesScalarFieldEnum>
  }


  /**
   * List_values findMany
   */
  export type List_valuesFindManyArgs = {
    /**
     * Select specific fields to fetch from the List_values
     * 
    **/
    select?: List_valuesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: List_valuesInclude | null
    /**
     * Filter, which List_values to fetch.
     * 
    **/
    where?: List_valuesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of List_values to fetch.
     * 
    **/
    orderBy?: Enumerable<List_valuesOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing List_values.
     * 
    **/
    cursor?: List_valuesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` List_values from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` List_values.
     * 
    **/
    skip?: number
    distinct?: Enumerable<List_valuesScalarFieldEnum>
  }


  /**
   * List_values create
   */
  export type List_valuesCreateArgs = {
    /**
     * Select specific fields to fetch from the List_values
     * 
    **/
    select?: List_valuesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: List_valuesInclude | null
    /**
     * The data needed to create a List_values.
     * 
    **/
    data: XOR<List_valuesCreateInput, List_valuesUncheckedCreateInput>
  }


  /**
   * List_values createMany
   */
  export type List_valuesCreateManyArgs = {
    /**
     * The data used to create many List_values.
     * 
    **/
    data: Enumerable<List_valuesCreateManyInput>
    skipDuplicates?: boolean
  }


  /**
   * List_values update
   */
  export type List_valuesUpdateArgs = {
    /**
     * Select specific fields to fetch from the List_values
     * 
    **/
    select?: List_valuesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: List_valuesInclude | null
    /**
     * The data needed to update a List_values.
     * 
    **/
    data: XOR<List_valuesUpdateInput, List_valuesUncheckedUpdateInput>
    /**
     * Choose, which List_values to update.
     * 
    **/
    where: List_valuesWhereUniqueInput
  }


  /**
   * List_values updateMany
   */
  export type List_valuesUpdateManyArgs = {
    /**
     * The data used to update List_values.
     * 
    **/
    data: XOR<List_valuesUpdateManyMutationInput, List_valuesUncheckedUpdateManyInput>
    /**
     * Filter which List_values to update
     * 
    **/
    where?: List_valuesWhereInput
  }


  /**
   * List_values upsert
   */
  export type List_valuesUpsertArgs = {
    /**
     * Select specific fields to fetch from the List_values
     * 
    **/
    select?: List_valuesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: List_valuesInclude | null
    /**
     * The filter to search for the List_values to update in case it exists.
     * 
    **/
    where: List_valuesWhereUniqueInput
    /**
     * In case the List_values found by the `where` argument doesn't exist, create a new List_values with this data.
     * 
    **/
    create: XOR<List_valuesCreateInput, List_valuesUncheckedCreateInput>
    /**
     * In case the List_values was found with the provided `where` argument, update it with this data.
     * 
    **/
    update: XOR<List_valuesUpdateInput, List_valuesUncheckedUpdateInput>
  }


  /**
   * List_values delete
   */
  export type List_valuesDeleteArgs = {
    /**
     * Select specific fields to fetch from the List_values
     * 
    **/
    select?: List_valuesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: List_valuesInclude | null
    /**
     * Filter which List_values to delete.
     * 
    **/
    where: List_valuesWhereUniqueInput
  }


  /**
   * List_values deleteMany
   */
  export type List_valuesDeleteManyArgs = {
    /**
     * Filter which List_values to delete
     * 
    **/
    where?: List_valuesWhereInput
  }


  /**
   * List_values.accounts
   */
  export type List_values$accountsArgs = {
    /**
     * Select specific fields to fetch from the Accounts
     * 
    **/
    select?: AccountsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: AccountsInclude | null
    where?: AccountsWhereInput
  }


  /**
   * List_values.lists
   */
  export type List_values$listsArgs = {
    /**
     * Select specific fields to fetch from the Lists
     * 
    **/
    select?: ListsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: ListsInclude | null
    where?: ListsWhereInput
  }


  /**
   * List_values without action
   */
  export type List_valuesArgs = {
    /**
     * Select specific fields to fetch from the List_values
     * 
    **/
    select?: List_valuesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: List_valuesInclude | null
  }



  /**
   * Model Lists
   */


  export type AggregateLists = {
    _count: ListsCountAggregateOutputType | null
    _min: ListsMinAggregateOutputType | null
    _max: ListsMaxAggregateOutputType | null
  }

  export type ListsMinAggregateOutputType = {
    list_id: string | null
    account_id: string | null
    project_id: string | null
    name: string | null
    obsolete: boolean | null
    label_replace_by_generated_column: string | null
    deleted: boolean | null
  }

  export type ListsMaxAggregateOutputType = {
    list_id: string | null
    account_id: string | null
    project_id: string | null
    name: string | null
    obsolete: boolean | null
    label_replace_by_generated_column: string | null
    deleted: boolean | null
  }

  export type ListsCountAggregateOutputType = {
    list_id: number
    account_id: number
    project_id: number
    name: number
    data: number
    obsolete: number
    label_replace_by_generated_column: number
    deleted: number
    _all: number
  }


  export type ListsMinAggregateInputType = {
    list_id?: true
    account_id?: true
    project_id?: true
    name?: true
    obsolete?: true
    label_replace_by_generated_column?: true
    deleted?: true
  }

  export type ListsMaxAggregateInputType = {
    list_id?: true
    account_id?: true
    project_id?: true
    name?: true
    obsolete?: true
    label_replace_by_generated_column?: true
    deleted?: true
  }

  export type ListsCountAggregateInputType = {
    list_id?: true
    account_id?: true
    project_id?: true
    name?: true
    data?: true
    obsolete?: true
    label_replace_by_generated_column?: true
    deleted?: true
    _all?: true
  }

  export type ListsAggregateArgs = {
    /**
     * Filter which Lists to aggregate.
     * 
    **/
    where?: ListsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Lists to fetch.
     * 
    **/
    orderBy?: Enumerable<ListsOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     * 
    **/
    cursor?: ListsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Lists from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Lists.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Lists
    **/
    _count?: true | ListsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ListsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ListsMaxAggregateInputType
  }

  export type GetListsAggregateType<T extends ListsAggregateArgs> = {
        [P in keyof T & keyof AggregateLists]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateLists[P]>
      : GetScalarType<T[P], AggregateLists[P]>
  }




  export type ListsGroupByArgs = {
    where?: ListsWhereInput
    orderBy?: Enumerable<ListsOrderByWithAggregationInput>
    by: Array<ListsScalarFieldEnum>
    having?: ListsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ListsCountAggregateInputType | true
    _min?: ListsMinAggregateInputType
    _max?: ListsMaxAggregateInputType
  }


  export type ListsGroupByOutputType = {
    list_id: string
    account_id: string | null
    project_id: string | null
    name: string | null
    data: JsonValue | null
    obsolete: boolean | null
    label_replace_by_generated_column: string | null
    deleted: boolean | null
    _count: ListsCountAggregateOutputType | null
    _min: ListsMinAggregateOutputType | null
    _max: ListsMaxAggregateOutputType | null
  }

  type GetListsGroupByPayload<T extends ListsGroupByArgs> = PrismaPromise<
    Array<
      PickArray<ListsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ListsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ListsGroupByOutputType[P]>
            : GetScalarType<T[P], ListsGroupByOutputType[P]>
        }
      >
    >


  export type ListsSelect = {
    list_id?: boolean
    account_id?: boolean
    project_id?: boolean
    name?: boolean
    data?: boolean
    obsolete?: boolean
    label_replace_by_generated_column?: boolean
    deleted?: boolean
    list_values?: boolean | Lists$list_valuesArgs
    accounts?: boolean | Lists$accountsArgs
    projects?: boolean | Lists$projectsArgs
    units?: boolean | Lists$unitsArgs
    _count?: boolean | ListsCountOutputTypeArgs
  }


  export type ListsInclude = {
    list_values?: boolean | Lists$list_valuesArgs
    accounts?: boolean | Lists$accountsArgs
    projects?: boolean | Lists$projectsArgs
    units?: boolean | Lists$unitsArgs
    _count?: boolean | ListsCountOutputTypeArgs
  } 

  export type ListsGetPayload<S extends boolean | null | undefined | ListsArgs> =
    S extends { select: any, include: any } ? 'Please either choose `select` or `include`' :
    S extends true ? Lists :
    S extends undefined ? never :
    S extends { include: any } & (ListsArgs | ListsFindManyArgs)
    ? Lists  & {
    [P in TruthyKeys<S['include']>]:
        P extends 'list_values' ? Array < List_valuesGetPayload<S['include'][P]>>  :
        P extends 'accounts' ? AccountsGetPayload<S['include'][P]> | null :
        P extends 'projects' ? ProjectsGetPayload<S['include'][P]> | null :
        P extends 'units' ? Array < UnitsGetPayload<S['include'][P]>>  :
        P extends '_count' ? ListsCountOutputTypeGetPayload<S['include'][P]> :  never
  } 
    : S extends { select: any } & (ListsArgs | ListsFindManyArgs)
      ? {
    [P in TruthyKeys<S['select']>]:
        P extends 'list_values' ? Array < List_valuesGetPayload<S['select'][P]>>  :
        P extends 'accounts' ? AccountsGetPayload<S['select'][P]> | null :
        P extends 'projects' ? ProjectsGetPayload<S['select'][P]> | null :
        P extends 'units' ? Array < UnitsGetPayload<S['select'][P]>>  :
        P extends '_count' ? ListsCountOutputTypeGetPayload<S['select'][P]> :  P extends keyof Lists ? Lists[P] : never
  } 
      : Lists


  type ListsCountArgs = Merge<
    Omit<ListsFindManyArgs, 'select' | 'include'> & {
      select?: ListsCountAggregateInputType | true
    }
  >

  export interface ListsDelegate<GlobalRejectSettings extends Prisma.RejectOnNotFound | Prisma.RejectPerOperation | false | undefined> {
    /**
     * Find zero or one Lists that matches the filter.
     * @param {ListsFindUniqueArgs} args - Arguments to find a Lists
     * @example
     * // Get one Lists
     * const lists = await prisma.lists.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends ListsFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, ListsFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'Lists'> extends True ? Prisma__ListsClient<ListsGetPayload<T>> : Prisma__ListsClient<ListsGetPayload<T> | null, null>

    /**
     * Find one Lists that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {ListsFindUniqueOrThrowArgs} args - Arguments to find a Lists
     * @example
     * // Get one Lists
     * const lists = await prisma.lists.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends ListsFindUniqueOrThrowArgs>(
      args?: SelectSubset<T, ListsFindUniqueOrThrowArgs>
    ): Prisma__ListsClient<ListsGetPayload<T>>

    /**
     * Find the first Lists that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ListsFindFirstArgs} args - Arguments to find a Lists
     * @example
     * // Get one Lists
     * const lists = await prisma.lists.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends ListsFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, ListsFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'Lists'> extends True ? Prisma__ListsClient<ListsGetPayload<T>> : Prisma__ListsClient<ListsGetPayload<T> | null, null>

    /**
     * Find the first Lists that matches the filter or
     * throw `NotFoundError` if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ListsFindFirstOrThrowArgs} args - Arguments to find a Lists
     * @example
     * // Get one Lists
     * const lists = await prisma.lists.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends ListsFindFirstOrThrowArgs>(
      args?: SelectSubset<T, ListsFindFirstOrThrowArgs>
    ): Prisma__ListsClient<ListsGetPayload<T>>

    /**
     * Find zero or more Lists that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ListsFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Lists
     * const lists = await prisma.lists.findMany()
     * 
     * // Get first 10 Lists
     * const lists = await prisma.lists.findMany({ take: 10 })
     * 
     * // Only select the `list_id`
     * const listsWithList_idOnly = await prisma.lists.findMany({ select: { list_id: true } })
     * 
    **/
    findMany<T extends ListsFindManyArgs>(
      args?: SelectSubset<T, ListsFindManyArgs>
    ): PrismaPromise<Array<ListsGetPayload<T>>>

    /**
     * Create a Lists.
     * @param {ListsCreateArgs} args - Arguments to create a Lists.
     * @example
     * // Create one Lists
     * const Lists = await prisma.lists.create({
     *   data: {
     *     // ... data to create a Lists
     *   }
     * })
     * 
    **/
    create<T extends ListsCreateArgs>(
      args: SelectSubset<T, ListsCreateArgs>
    ): Prisma__ListsClient<ListsGetPayload<T>>

    /**
     * Create many Lists.
     *     @param {ListsCreateManyArgs} args - Arguments to create many Lists.
     *     @example
     *     // Create many Lists
     *     const lists = await prisma.lists.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends ListsCreateManyArgs>(
      args?: SelectSubset<T, ListsCreateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Delete a Lists.
     * @param {ListsDeleteArgs} args - Arguments to delete one Lists.
     * @example
     * // Delete one Lists
     * const Lists = await prisma.lists.delete({
     *   where: {
     *     // ... filter to delete one Lists
     *   }
     * })
     * 
    **/
    delete<T extends ListsDeleteArgs>(
      args: SelectSubset<T, ListsDeleteArgs>
    ): Prisma__ListsClient<ListsGetPayload<T>>

    /**
     * Update one Lists.
     * @param {ListsUpdateArgs} args - Arguments to update one Lists.
     * @example
     * // Update one Lists
     * const lists = await prisma.lists.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends ListsUpdateArgs>(
      args: SelectSubset<T, ListsUpdateArgs>
    ): Prisma__ListsClient<ListsGetPayload<T>>

    /**
     * Delete zero or more Lists.
     * @param {ListsDeleteManyArgs} args - Arguments to filter Lists to delete.
     * @example
     * // Delete a few Lists
     * const { count } = await prisma.lists.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends ListsDeleteManyArgs>(
      args?: SelectSubset<T, ListsDeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more Lists.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ListsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Lists
     * const lists = await prisma.lists.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends ListsUpdateManyArgs>(
      args: SelectSubset<T, ListsUpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one Lists.
     * @param {ListsUpsertArgs} args - Arguments to update or create a Lists.
     * @example
     * // Update or create a Lists
     * const lists = await prisma.lists.upsert({
     *   create: {
     *     // ... data to create a Lists
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Lists we want to update
     *   }
     * })
    **/
    upsert<T extends ListsUpsertArgs>(
      args: SelectSubset<T, ListsUpsertArgs>
    ): Prisma__ListsClient<ListsGetPayload<T>>

    /**
     * Count the number of Lists.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ListsCountArgs} args - Arguments to filter Lists to count.
     * @example
     * // Count the number of Lists
     * const count = await prisma.lists.count({
     *   where: {
     *     // ... the filter for the Lists we want to count
     *   }
     * })
    **/
    count<T extends ListsCountArgs>(
      args?: Subset<T, ListsCountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ListsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Lists.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ListsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ListsAggregateArgs>(args: Subset<T, ListsAggregateArgs>): PrismaPromise<GetListsAggregateType<T>>

    /**
     * Group by Lists.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ListsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ListsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ListsGroupByArgs['orderBy'] }
        : { orderBy?: ListsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ListsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetListsGroupByPayload<T> : PrismaPromise<InputErrors>

  }

  /**
   * The delegate class that acts as a "Promise-like" for Lists.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__ListsClient<T, Null = never> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';

    list_values<T extends Lists$list_valuesArgs= {}>(args?: Subset<T, Lists$list_valuesArgs>): PrismaPromise<Array<List_valuesGetPayload<T>>| Null>;

    accounts<T extends Lists$accountsArgs= {}>(args?: Subset<T, Lists$accountsArgs>): Prisma__AccountsClient<AccountsGetPayload<T> | Null>;

    projects<T extends Lists$projectsArgs= {}>(args?: Subset<T, Lists$projectsArgs>): Prisma__ProjectsClient<ProjectsGetPayload<T> | Null>;

    units<T extends Lists$unitsArgs= {}>(args?: Subset<T, Lists$unitsArgs>): PrismaPromise<Array<UnitsGetPayload<T>>| Null>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }



  // Custom InputTypes

  /**
   * Lists base type for findUnique actions
   */
  export type ListsFindUniqueArgsBase = {
    /**
     * Select specific fields to fetch from the Lists
     * 
    **/
    select?: ListsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: ListsInclude | null
    /**
     * Filter, which Lists to fetch.
     * 
    **/
    where: ListsWhereUniqueInput
  }

  /**
   * Lists findUnique
   */
  export interface ListsFindUniqueArgs extends ListsFindUniqueArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findUniqueOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * Lists findUniqueOrThrow
   */
  export type ListsFindUniqueOrThrowArgs = {
    /**
     * Select specific fields to fetch from the Lists
     * 
    **/
    select?: ListsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: ListsInclude | null
    /**
     * Filter, which Lists to fetch.
     * 
    **/
    where: ListsWhereUniqueInput
  }


  /**
   * Lists base type for findFirst actions
   */
  export type ListsFindFirstArgsBase = {
    /**
     * Select specific fields to fetch from the Lists
     * 
    **/
    select?: ListsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: ListsInclude | null
    /**
     * Filter, which Lists to fetch.
     * 
    **/
    where?: ListsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Lists to fetch.
     * 
    **/
    orderBy?: Enumerable<ListsOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Lists.
     * 
    **/
    cursor?: ListsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Lists from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Lists.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Lists.
     * 
    **/
    distinct?: Enumerable<ListsScalarFieldEnum>
  }

  /**
   * Lists findFirst
   */
  export interface ListsFindFirstArgs extends ListsFindFirstArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findFirstOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * Lists findFirstOrThrow
   */
  export type ListsFindFirstOrThrowArgs = {
    /**
     * Select specific fields to fetch from the Lists
     * 
    **/
    select?: ListsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: ListsInclude | null
    /**
     * Filter, which Lists to fetch.
     * 
    **/
    where?: ListsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Lists to fetch.
     * 
    **/
    orderBy?: Enumerable<ListsOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Lists.
     * 
    **/
    cursor?: ListsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Lists from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Lists.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Lists.
     * 
    **/
    distinct?: Enumerable<ListsScalarFieldEnum>
  }


  /**
   * Lists findMany
   */
  export type ListsFindManyArgs = {
    /**
     * Select specific fields to fetch from the Lists
     * 
    **/
    select?: ListsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: ListsInclude | null
    /**
     * Filter, which Lists to fetch.
     * 
    **/
    where?: ListsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Lists to fetch.
     * 
    **/
    orderBy?: Enumerable<ListsOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Lists.
     * 
    **/
    cursor?: ListsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Lists from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Lists.
     * 
    **/
    skip?: number
    distinct?: Enumerable<ListsScalarFieldEnum>
  }


  /**
   * Lists create
   */
  export type ListsCreateArgs = {
    /**
     * Select specific fields to fetch from the Lists
     * 
    **/
    select?: ListsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: ListsInclude | null
    /**
     * The data needed to create a Lists.
     * 
    **/
    data: XOR<ListsCreateInput, ListsUncheckedCreateInput>
  }


  /**
   * Lists createMany
   */
  export type ListsCreateManyArgs = {
    /**
     * The data used to create many Lists.
     * 
    **/
    data: Enumerable<ListsCreateManyInput>
    skipDuplicates?: boolean
  }


  /**
   * Lists update
   */
  export type ListsUpdateArgs = {
    /**
     * Select specific fields to fetch from the Lists
     * 
    **/
    select?: ListsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: ListsInclude | null
    /**
     * The data needed to update a Lists.
     * 
    **/
    data: XOR<ListsUpdateInput, ListsUncheckedUpdateInput>
    /**
     * Choose, which Lists to update.
     * 
    **/
    where: ListsWhereUniqueInput
  }


  /**
   * Lists updateMany
   */
  export type ListsUpdateManyArgs = {
    /**
     * The data used to update Lists.
     * 
    **/
    data: XOR<ListsUpdateManyMutationInput, ListsUncheckedUpdateManyInput>
    /**
     * Filter which Lists to update
     * 
    **/
    where?: ListsWhereInput
  }


  /**
   * Lists upsert
   */
  export type ListsUpsertArgs = {
    /**
     * Select specific fields to fetch from the Lists
     * 
    **/
    select?: ListsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: ListsInclude | null
    /**
     * The filter to search for the Lists to update in case it exists.
     * 
    **/
    where: ListsWhereUniqueInput
    /**
     * In case the Lists found by the `where` argument doesn't exist, create a new Lists with this data.
     * 
    **/
    create: XOR<ListsCreateInput, ListsUncheckedCreateInput>
    /**
     * In case the Lists was found with the provided `where` argument, update it with this data.
     * 
    **/
    update: XOR<ListsUpdateInput, ListsUncheckedUpdateInput>
  }


  /**
   * Lists delete
   */
  export type ListsDeleteArgs = {
    /**
     * Select specific fields to fetch from the Lists
     * 
    **/
    select?: ListsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: ListsInclude | null
    /**
     * Filter which Lists to delete.
     * 
    **/
    where: ListsWhereUniqueInput
  }


  /**
   * Lists deleteMany
   */
  export type ListsDeleteManyArgs = {
    /**
     * Filter which Lists to delete
     * 
    **/
    where?: ListsWhereInput
  }


  /**
   * Lists.list_values
   */
  export type Lists$list_valuesArgs = {
    /**
     * Select specific fields to fetch from the List_values
     * 
    **/
    select?: List_valuesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: List_valuesInclude | null
    where?: List_valuesWhereInput
    orderBy?: Enumerable<List_valuesOrderByWithRelationInput>
    cursor?: List_valuesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Enumerable<List_valuesScalarFieldEnum>
  }


  /**
   * Lists.accounts
   */
  export type Lists$accountsArgs = {
    /**
     * Select specific fields to fetch from the Accounts
     * 
    **/
    select?: AccountsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: AccountsInclude | null
    where?: AccountsWhereInput
  }


  /**
   * Lists.projects
   */
  export type Lists$projectsArgs = {
    /**
     * Select specific fields to fetch from the Projects
     * 
    **/
    select?: ProjectsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: ProjectsInclude | null
    where?: ProjectsWhereInput
  }


  /**
   * Lists.units
   */
  export type Lists$unitsArgs = {
    /**
     * Select specific fields to fetch from the Units
     * 
    **/
    select?: UnitsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: UnitsInclude | null
    where?: UnitsWhereInput
    orderBy?: Enumerable<UnitsOrderByWithRelationInput>
    cursor?: UnitsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Enumerable<UnitsScalarFieldEnum>
  }


  /**
   * Lists without action
   */
  export type ListsArgs = {
    /**
     * Select specific fields to fetch from the Lists
     * 
    **/
    select?: ListsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: ListsInclude | null
  }



  /**
   * Model Messages
   */


  export type AggregateMessages = {
    _count: MessagesCountAggregateOutputType | null
    _min: MessagesMinAggregateOutputType | null
    _max: MessagesMaxAggregateOutputType | null
  }

  export type MessagesMinAggregateOutputType = {
    message_id: string | null
    label_replace_by_generated_column: string | null
    date: Date | null
    message: string | null
  }

  export type MessagesMaxAggregateOutputType = {
    message_id: string | null
    label_replace_by_generated_column: string | null
    date: Date | null
    message: string | null
  }

  export type MessagesCountAggregateOutputType = {
    message_id: number
    label_replace_by_generated_column: number
    date: number
    message: number
    _all: number
  }


  export type MessagesMinAggregateInputType = {
    message_id?: true
    label_replace_by_generated_column?: true
    date?: true
    message?: true
  }

  export type MessagesMaxAggregateInputType = {
    message_id?: true
    label_replace_by_generated_column?: true
    date?: true
    message?: true
  }

  export type MessagesCountAggregateInputType = {
    message_id?: true
    label_replace_by_generated_column?: true
    date?: true
    message?: true
    _all?: true
  }

  export type MessagesAggregateArgs = {
    /**
     * Filter which Messages to aggregate.
     * 
    **/
    where?: MessagesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Messages to fetch.
     * 
    **/
    orderBy?: Enumerable<MessagesOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     * 
    **/
    cursor?: MessagesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Messages from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Messages.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Messages
    **/
    _count?: true | MessagesCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: MessagesMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: MessagesMaxAggregateInputType
  }

  export type GetMessagesAggregateType<T extends MessagesAggregateArgs> = {
        [P in keyof T & keyof AggregateMessages]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateMessages[P]>
      : GetScalarType<T[P], AggregateMessages[P]>
  }




  export type MessagesGroupByArgs = {
    where?: MessagesWhereInput
    orderBy?: Enumerable<MessagesOrderByWithAggregationInput>
    by: Array<MessagesScalarFieldEnum>
    having?: MessagesScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: MessagesCountAggregateInputType | true
    _min?: MessagesMinAggregateInputType
    _max?: MessagesMaxAggregateInputType
  }


  export type MessagesGroupByOutputType = {
    message_id: string
    label_replace_by_generated_column: string | null
    date: Date | null
    message: string | null
    _count: MessagesCountAggregateOutputType | null
    _min: MessagesMinAggregateOutputType | null
    _max: MessagesMaxAggregateOutputType | null
  }

  type GetMessagesGroupByPayload<T extends MessagesGroupByArgs> = PrismaPromise<
    Array<
      PickArray<MessagesGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof MessagesGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], MessagesGroupByOutputType[P]>
            : GetScalarType<T[P], MessagesGroupByOutputType[P]>
        }
      >
    >


  export type MessagesSelect = {
    message_id?: boolean
    label_replace_by_generated_column?: boolean
    date?: boolean
    message?: boolean
    user_messages?: boolean | Messages$user_messagesArgs
    _count?: boolean | MessagesCountOutputTypeArgs
  }


  export type MessagesInclude = {
    user_messages?: boolean | Messages$user_messagesArgs
    _count?: boolean | MessagesCountOutputTypeArgs
  } 

  export type MessagesGetPayload<S extends boolean | null | undefined | MessagesArgs> =
    S extends { select: any, include: any } ? 'Please either choose `select` or `include`' :
    S extends true ? Messages :
    S extends undefined ? never :
    S extends { include: any } & (MessagesArgs | MessagesFindManyArgs)
    ? Messages  & {
    [P in TruthyKeys<S['include']>]:
        P extends 'user_messages' ? Array < User_messagesGetPayload<S['include'][P]>>  :
        P extends '_count' ? MessagesCountOutputTypeGetPayload<S['include'][P]> :  never
  } 
    : S extends { select: any } & (MessagesArgs | MessagesFindManyArgs)
      ? {
    [P in TruthyKeys<S['select']>]:
        P extends 'user_messages' ? Array < User_messagesGetPayload<S['select'][P]>>  :
        P extends '_count' ? MessagesCountOutputTypeGetPayload<S['select'][P]> :  P extends keyof Messages ? Messages[P] : never
  } 
      : Messages


  type MessagesCountArgs = Merge<
    Omit<MessagesFindManyArgs, 'select' | 'include'> & {
      select?: MessagesCountAggregateInputType | true
    }
  >

  export interface MessagesDelegate<GlobalRejectSettings extends Prisma.RejectOnNotFound | Prisma.RejectPerOperation | false | undefined> {
    /**
     * Find zero or one Messages that matches the filter.
     * @param {MessagesFindUniqueArgs} args - Arguments to find a Messages
     * @example
     * // Get one Messages
     * const messages = await prisma.messages.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends MessagesFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, MessagesFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'Messages'> extends True ? Prisma__MessagesClient<MessagesGetPayload<T>> : Prisma__MessagesClient<MessagesGetPayload<T> | null, null>

    /**
     * Find one Messages that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {MessagesFindUniqueOrThrowArgs} args - Arguments to find a Messages
     * @example
     * // Get one Messages
     * const messages = await prisma.messages.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends MessagesFindUniqueOrThrowArgs>(
      args?: SelectSubset<T, MessagesFindUniqueOrThrowArgs>
    ): Prisma__MessagesClient<MessagesGetPayload<T>>

    /**
     * Find the first Messages that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MessagesFindFirstArgs} args - Arguments to find a Messages
     * @example
     * // Get one Messages
     * const messages = await prisma.messages.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends MessagesFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, MessagesFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'Messages'> extends True ? Prisma__MessagesClient<MessagesGetPayload<T>> : Prisma__MessagesClient<MessagesGetPayload<T> | null, null>

    /**
     * Find the first Messages that matches the filter or
     * throw `NotFoundError` if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MessagesFindFirstOrThrowArgs} args - Arguments to find a Messages
     * @example
     * // Get one Messages
     * const messages = await prisma.messages.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends MessagesFindFirstOrThrowArgs>(
      args?: SelectSubset<T, MessagesFindFirstOrThrowArgs>
    ): Prisma__MessagesClient<MessagesGetPayload<T>>

    /**
     * Find zero or more Messages that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MessagesFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Messages
     * const messages = await prisma.messages.findMany()
     * 
     * // Get first 10 Messages
     * const messages = await prisma.messages.findMany({ take: 10 })
     * 
     * // Only select the `message_id`
     * const messagesWithMessage_idOnly = await prisma.messages.findMany({ select: { message_id: true } })
     * 
    **/
    findMany<T extends MessagesFindManyArgs>(
      args?: SelectSubset<T, MessagesFindManyArgs>
    ): PrismaPromise<Array<MessagesGetPayload<T>>>

    /**
     * Create a Messages.
     * @param {MessagesCreateArgs} args - Arguments to create a Messages.
     * @example
     * // Create one Messages
     * const Messages = await prisma.messages.create({
     *   data: {
     *     // ... data to create a Messages
     *   }
     * })
     * 
    **/
    create<T extends MessagesCreateArgs>(
      args: SelectSubset<T, MessagesCreateArgs>
    ): Prisma__MessagesClient<MessagesGetPayload<T>>

    /**
     * Create many Messages.
     *     @param {MessagesCreateManyArgs} args - Arguments to create many Messages.
     *     @example
     *     // Create many Messages
     *     const messages = await prisma.messages.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends MessagesCreateManyArgs>(
      args?: SelectSubset<T, MessagesCreateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Delete a Messages.
     * @param {MessagesDeleteArgs} args - Arguments to delete one Messages.
     * @example
     * // Delete one Messages
     * const Messages = await prisma.messages.delete({
     *   where: {
     *     // ... filter to delete one Messages
     *   }
     * })
     * 
    **/
    delete<T extends MessagesDeleteArgs>(
      args: SelectSubset<T, MessagesDeleteArgs>
    ): Prisma__MessagesClient<MessagesGetPayload<T>>

    /**
     * Update one Messages.
     * @param {MessagesUpdateArgs} args - Arguments to update one Messages.
     * @example
     * // Update one Messages
     * const messages = await prisma.messages.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends MessagesUpdateArgs>(
      args: SelectSubset<T, MessagesUpdateArgs>
    ): Prisma__MessagesClient<MessagesGetPayload<T>>

    /**
     * Delete zero or more Messages.
     * @param {MessagesDeleteManyArgs} args - Arguments to filter Messages to delete.
     * @example
     * // Delete a few Messages
     * const { count } = await prisma.messages.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends MessagesDeleteManyArgs>(
      args?: SelectSubset<T, MessagesDeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more Messages.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MessagesUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Messages
     * const messages = await prisma.messages.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends MessagesUpdateManyArgs>(
      args: SelectSubset<T, MessagesUpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one Messages.
     * @param {MessagesUpsertArgs} args - Arguments to update or create a Messages.
     * @example
     * // Update or create a Messages
     * const messages = await prisma.messages.upsert({
     *   create: {
     *     // ... data to create a Messages
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Messages we want to update
     *   }
     * })
    **/
    upsert<T extends MessagesUpsertArgs>(
      args: SelectSubset<T, MessagesUpsertArgs>
    ): Prisma__MessagesClient<MessagesGetPayload<T>>

    /**
     * Count the number of Messages.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MessagesCountArgs} args - Arguments to filter Messages to count.
     * @example
     * // Count the number of Messages
     * const count = await prisma.messages.count({
     *   where: {
     *     // ... the filter for the Messages we want to count
     *   }
     * })
    **/
    count<T extends MessagesCountArgs>(
      args?: Subset<T, MessagesCountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], MessagesCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Messages.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MessagesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends MessagesAggregateArgs>(args: Subset<T, MessagesAggregateArgs>): PrismaPromise<GetMessagesAggregateType<T>>

    /**
     * Group by Messages.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MessagesGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends MessagesGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: MessagesGroupByArgs['orderBy'] }
        : { orderBy?: MessagesGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, MessagesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetMessagesGroupByPayload<T> : PrismaPromise<InputErrors>

  }

  /**
   * The delegate class that acts as a "Promise-like" for Messages.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__MessagesClient<T, Null = never> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';

    user_messages<T extends Messages$user_messagesArgs= {}>(args?: Subset<T, Messages$user_messagesArgs>): PrismaPromise<Array<User_messagesGetPayload<T>>| Null>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }



  // Custom InputTypes

  /**
   * Messages base type for findUnique actions
   */
  export type MessagesFindUniqueArgsBase = {
    /**
     * Select specific fields to fetch from the Messages
     * 
    **/
    select?: MessagesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: MessagesInclude | null
    /**
     * Filter, which Messages to fetch.
     * 
    **/
    where: MessagesWhereUniqueInput
  }

  /**
   * Messages findUnique
   */
  export interface MessagesFindUniqueArgs extends MessagesFindUniqueArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findUniqueOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * Messages findUniqueOrThrow
   */
  export type MessagesFindUniqueOrThrowArgs = {
    /**
     * Select specific fields to fetch from the Messages
     * 
    **/
    select?: MessagesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: MessagesInclude | null
    /**
     * Filter, which Messages to fetch.
     * 
    **/
    where: MessagesWhereUniqueInput
  }


  /**
   * Messages base type for findFirst actions
   */
  export type MessagesFindFirstArgsBase = {
    /**
     * Select specific fields to fetch from the Messages
     * 
    **/
    select?: MessagesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: MessagesInclude | null
    /**
     * Filter, which Messages to fetch.
     * 
    **/
    where?: MessagesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Messages to fetch.
     * 
    **/
    orderBy?: Enumerable<MessagesOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Messages.
     * 
    **/
    cursor?: MessagesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Messages from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Messages.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Messages.
     * 
    **/
    distinct?: Enumerable<MessagesScalarFieldEnum>
  }

  /**
   * Messages findFirst
   */
  export interface MessagesFindFirstArgs extends MessagesFindFirstArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findFirstOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * Messages findFirstOrThrow
   */
  export type MessagesFindFirstOrThrowArgs = {
    /**
     * Select specific fields to fetch from the Messages
     * 
    **/
    select?: MessagesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: MessagesInclude | null
    /**
     * Filter, which Messages to fetch.
     * 
    **/
    where?: MessagesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Messages to fetch.
     * 
    **/
    orderBy?: Enumerable<MessagesOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Messages.
     * 
    **/
    cursor?: MessagesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Messages from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Messages.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Messages.
     * 
    **/
    distinct?: Enumerable<MessagesScalarFieldEnum>
  }


  /**
   * Messages findMany
   */
  export type MessagesFindManyArgs = {
    /**
     * Select specific fields to fetch from the Messages
     * 
    **/
    select?: MessagesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: MessagesInclude | null
    /**
     * Filter, which Messages to fetch.
     * 
    **/
    where?: MessagesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Messages to fetch.
     * 
    **/
    orderBy?: Enumerable<MessagesOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Messages.
     * 
    **/
    cursor?: MessagesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Messages from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Messages.
     * 
    **/
    skip?: number
    distinct?: Enumerable<MessagesScalarFieldEnum>
  }


  /**
   * Messages create
   */
  export type MessagesCreateArgs = {
    /**
     * Select specific fields to fetch from the Messages
     * 
    **/
    select?: MessagesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: MessagesInclude | null
    /**
     * The data needed to create a Messages.
     * 
    **/
    data: XOR<MessagesCreateInput, MessagesUncheckedCreateInput>
  }


  /**
   * Messages createMany
   */
  export type MessagesCreateManyArgs = {
    /**
     * The data used to create many Messages.
     * 
    **/
    data: Enumerable<MessagesCreateManyInput>
    skipDuplicates?: boolean
  }


  /**
   * Messages update
   */
  export type MessagesUpdateArgs = {
    /**
     * Select specific fields to fetch from the Messages
     * 
    **/
    select?: MessagesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: MessagesInclude | null
    /**
     * The data needed to update a Messages.
     * 
    **/
    data: XOR<MessagesUpdateInput, MessagesUncheckedUpdateInput>
    /**
     * Choose, which Messages to update.
     * 
    **/
    where: MessagesWhereUniqueInput
  }


  /**
   * Messages updateMany
   */
  export type MessagesUpdateManyArgs = {
    /**
     * The data used to update Messages.
     * 
    **/
    data: XOR<MessagesUpdateManyMutationInput, MessagesUncheckedUpdateManyInput>
    /**
     * Filter which Messages to update
     * 
    **/
    where?: MessagesWhereInput
  }


  /**
   * Messages upsert
   */
  export type MessagesUpsertArgs = {
    /**
     * Select specific fields to fetch from the Messages
     * 
    **/
    select?: MessagesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: MessagesInclude | null
    /**
     * The filter to search for the Messages to update in case it exists.
     * 
    **/
    where: MessagesWhereUniqueInput
    /**
     * In case the Messages found by the `where` argument doesn't exist, create a new Messages with this data.
     * 
    **/
    create: XOR<MessagesCreateInput, MessagesUncheckedCreateInput>
    /**
     * In case the Messages was found with the provided `where` argument, update it with this data.
     * 
    **/
    update: XOR<MessagesUpdateInput, MessagesUncheckedUpdateInput>
  }


  /**
   * Messages delete
   */
  export type MessagesDeleteArgs = {
    /**
     * Select specific fields to fetch from the Messages
     * 
    **/
    select?: MessagesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: MessagesInclude | null
    /**
     * Filter which Messages to delete.
     * 
    **/
    where: MessagesWhereUniqueInput
  }


  /**
   * Messages deleteMany
   */
  export type MessagesDeleteManyArgs = {
    /**
     * Filter which Messages to delete
     * 
    **/
    where?: MessagesWhereInput
  }


  /**
   * Messages.user_messages
   */
  export type Messages$user_messagesArgs = {
    /**
     * Select specific fields to fetch from the User_messages
     * 
    **/
    select?: User_messagesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: User_messagesInclude | null
    where?: User_messagesWhereInput
    orderBy?: Enumerable<User_messagesOrderByWithRelationInput>
    cursor?: User_messagesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Enumerable<User_messagesScalarFieldEnum>
  }


  /**
   * Messages without action
   */
  export type MessagesArgs = {
    /**
     * Select specific fields to fetch from the Messages
     * 
    **/
    select?: MessagesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: MessagesInclude | null
  }



  /**
   * Model Observation_sources
   */


  export type AggregateObservation_sources = {
    _count: Observation_sourcesCountAggregateOutputType | null
    _min: Observation_sourcesMinAggregateOutputType | null
    _max: Observation_sourcesMaxAggregateOutputType | null
  }

  export type Observation_sourcesMinAggregateOutputType = {
    observation_source_id: string | null
    account_id: string | null
    project_id: string | null
    name: string | null
    url: string | null
    label_replace_by_generated_column: string | null
    deleted: boolean | null
  }

  export type Observation_sourcesMaxAggregateOutputType = {
    observation_source_id: string | null
    account_id: string | null
    project_id: string | null
    name: string | null
    url: string | null
    label_replace_by_generated_column: string | null
    deleted: boolean | null
  }

  export type Observation_sourcesCountAggregateOutputType = {
    observation_source_id: number
    account_id: number
    project_id: number
    name: number
    url: number
    data: number
    label_replace_by_generated_column: number
    deleted: number
    _all: number
  }


  export type Observation_sourcesMinAggregateInputType = {
    observation_source_id?: true
    account_id?: true
    project_id?: true
    name?: true
    url?: true
    label_replace_by_generated_column?: true
    deleted?: true
  }

  export type Observation_sourcesMaxAggregateInputType = {
    observation_source_id?: true
    account_id?: true
    project_id?: true
    name?: true
    url?: true
    label_replace_by_generated_column?: true
    deleted?: true
  }

  export type Observation_sourcesCountAggregateInputType = {
    observation_source_id?: true
    account_id?: true
    project_id?: true
    name?: true
    url?: true
    data?: true
    label_replace_by_generated_column?: true
    deleted?: true
    _all?: true
  }

  export type Observation_sourcesAggregateArgs = {
    /**
     * Filter which Observation_sources to aggregate.
     * 
    **/
    where?: Observation_sourcesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Observation_sources to fetch.
     * 
    **/
    orderBy?: Enumerable<Observation_sourcesOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     * 
    **/
    cursor?: Observation_sourcesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Observation_sources from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Observation_sources.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Observation_sources
    **/
    _count?: true | Observation_sourcesCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Observation_sourcesMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Observation_sourcesMaxAggregateInputType
  }

  export type GetObservation_sourcesAggregateType<T extends Observation_sourcesAggregateArgs> = {
        [P in keyof T & keyof AggregateObservation_sources]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateObservation_sources[P]>
      : GetScalarType<T[P], AggregateObservation_sources[P]>
  }




  export type Observation_sourcesGroupByArgs = {
    where?: Observation_sourcesWhereInput
    orderBy?: Enumerable<Observation_sourcesOrderByWithAggregationInput>
    by: Array<Observation_sourcesScalarFieldEnum>
    having?: Observation_sourcesScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Observation_sourcesCountAggregateInputType | true
    _min?: Observation_sourcesMinAggregateInputType
    _max?: Observation_sourcesMaxAggregateInputType
  }


  export type Observation_sourcesGroupByOutputType = {
    observation_source_id: string
    account_id: string | null
    project_id: string | null
    name: string | null
    url: string | null
    data: JsonValue | null
    label_replace_by_generated_column: string | null
    deleted: boolean | null
    _count: Observation_sourcesCountAggregateOutputType | null
    _min: Observation_sourcesMinAggregateOutputType | null
    _max: Observation_sourcesMaxAggregateOutputType | null
  }

  type GetObservation_sourcesGroupByPayload<T extends Observation_sourcesGroupByArgs> = PrismaPromise<
    Array<
      PickArray<Observation_sourcesGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Observation_sourcesGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Observation_sourcesGroupByOutputType[P]>
            : GetScalarType<T[P], Observation_sourcesGroupByOutputType[P]>
        }
      >
    >


  export type Observation_sourcesSelect = {
    observation_source_id?: boolean
    account_id?: boolean
    project_id?: boolean
    name?: boolean
    url?: boolean
    data?: boolean
    label_replace_by_generated_column?: boolean
    deleted?: boolean
    accounts?: boolean | Observation_sources$accountsArgs
    projects?: boolean | Observation_sources$projectsArgs
  }


  export type Observation_sourcesInclude = {
    accounts?: boolean | Observation_sources$accountsArgs
    projects?: boolean | Observation_sources$projectsArgs
  } 

  export type Observation_sourcesGetPayload<S extends boolean | null | undefined | Observation_sourcesArgs> =
    S extends { select: any, include: any } ? 'Please either choose `select` or `include`' :
    S extends true ? Observation_sources :
    S extends undefined ? never :
    S extends { include: any } & (Observation_sourcesArgs | Observation_sourcesFindManyArgs)
    ? Observation_sources  & {
    [P in TruthyKeys<S['include']>]:
        P extends 'accounts' ? AccountsGetPayload<S['include'][P]> | null :
        P extends 'projects' ? ProjectsGetPayload<S['include'][P]> | null :  never
  } 
    : S extends { select: any } & (Observation_sourcesArgs | Observation_sourcesFindManyArgs)
      ? {
    [P in TruthyKeys<S['select']>]:
        P extends 'accounts' ? AccountsGetPayload<S['select'][P]> | null :
        P extends 'projects' ? ProjectsGetPayload<S['select'][P]> | null :  P extends keyof Observation_sources ? Observation_sources[P] : never
  } 
      : Observation_sources


  type Observation_sourcesCountArgs = Merge<
    Omit<Observation_sourcesFindManyArgs, 'select' | 'include'> & {
      select?: Observation_sourcesCountAggregateInputType | true
    }
  >

  export interface Observation_sourcesDelegate<GlobalRejectSettings extends Prisma.RejectOnNotFound | Prisma.RejectPerOperation | false | undefined> {
    /**
     * Find zero or one Observation_sources that matches the filter.
     * @param {Observation_sourcesFindUniqueArgs} args - Arguments to find a Observation_sources
     * @example
     * // Get one Observation_sources
     * const observation_sources = await prisma.observation_sources.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends Observation_sourcesFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, Observation_sourcesFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'Observation_sources'> extends True ? Prisma__Observation_sourcesClient<Observation_sourcesGetPayload<T>> : Prisma__Observation_sourcesClient<Observation_sourcesGetPayload<T> | null, null>

    /**
     * Find one Observation_sources that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {Observation_sourcesFindUniqueOrThrowArgs} args - Arguments to find a Observation_sources
     * @example
     * // Get one Observation_sources
     * const observation_sources = await prisma.observation_sources.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends Observation_sourcesFindUniqueOrThrowArgs>(
      args?: SelectSubset<T, Observation_sourcesFindUniqueOrThrowArgs>
    ): Prisma__Observation_sourcesClient<Observation_sourcesGetPayload<T>>

    /**
     * Find the first Observation_sources that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Observation_sourcesFindFirstArgs} args - Arguments to find a Observation_sources
     * @example
     * // Get one Observation_sources
     * const observation_sources = await prisma.observation_sources.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends Observation_sourcesFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, Observation_sourcesFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'Observation_sources'> extends True ? Prisma__Observation_sourcesClient<Observation_sourcesGetPayload<T>> : Prisma__Observation_sourcesClient<Observation_sourcesGetPayload<T> | null, null>

    /**
     * Find the first Observation_sources that matches the filter or
     * throw `NotFoundError` if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Observation_sourcesFindFirstOrThrowArgs} args - Arguments to find a Observation_sources
     * @example
     * // Get one Observation_sources
     * const observation_sources = await prisma.observation_sources.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends Observation_sourcesFindFirstOrThrowArgs>(
      args?: SelectSubset<T, Observation_sourcesFindFirstOrThrowArgs>
    ): Prisma__Observation_sourcesClient<Observation_sourcesGetPayload<T>>

    /**
     * Find zero or more Observation_sources that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Observation_sourcesFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Observation_sources
     * const observation_sources = await prisma.observation_sources.findMany()
     * 
     * // Get first 10 Observation_sources
     * const observation_sources = await prisma.observation_sources.findMany({ take: 10 })
     * 
     * // Only select the `observation_source_id`
     * const observation_sourcesWithObservation_source_idOnly = await prisma.observation_sources.findMany({ select: { observation_source_id: true } })
     * 
    **/
    findMany<T extends Observation_sourcesFindManyArgs>(
      args?: SelectSubset<T, Observation_sourcesFindManyArgs>
    ): PrismaPromise<Array<Observation_sourcesGetPayload<T>>>

    /**
     * Create a Observation_sources.
     * @param {Observation_sourcesCreateArgs} args - Arguments to create a Observation_sources.
     * @example
     * // Create one Observation_sources
     * const Observation_sources = await prisma.observation_sources.create({
     *   data: {
     *     // ... data to create a Observation_sources
     *   }
     * })
     * 
    **/
    create<T extends Observation_sourcesCreateArgs>(
      args: SelectSubset<T, Observation_sourcesCreateArgs>
    ): Prisma__Observation_sourcesClient<Observation_sourcesGetPayload<T>>

    /**
     * Create many Observation_sources.
     *     @param {Observation_sourcesCreateManyArgs} args - Arguments to create many Observation_sources.
     *     @example
     *     // Create many Observation_sources
     *     const observation_sources = await prisma.observation_sources.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends Observation_sourcesCreateManyArgs>(
      args?: SelectSubset<T, Observation_sourcesCreateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Delete a Observation_sources.
     * @param {Observation_sourcesDeleteArgs} args - Arguments to delete one Observation_sources.
     * @example
     * // Delete one Observation_sources
     * const Observation_sources = await prisma.observation_sources.delete({
     *   where: {
     *     // ... filter to delete one Observation_sources
     *   }
     * })
     * 
    **/
    delete<T extends Observation_sourcesDeleteArgs>(
      args: SelectSubset<T, Observation_sourcesDeleteArgs>
    ): Prisma__Observation_sourcesClient<Observation_sourcesGetPayload<T>>

    /**
     * Update one Observation_sources.
     * @param {Observation_sourcesUpdateArgs} args - Arguments to update one Observation_sources.
     * @example
     * // Update one Observation_sources
     * const observation_sources = await prisma.observation_sources.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends Observation_sourcesUpdateArgs>(
      args: SelectSubset<T, Observation_sourcesUpdateArgs>
    ): Prisma__Observation_sourcesClient<Observation_sourcesGetPayload<T>>

    /**
     * Delete zero or more Observation_sources.
     * @param {Observation_sourcesDeleteManyArgs} args - Arguments to filter Observation_sources to delete.
     * @example
     * // Delete a few Observation_sources
     * const { count } = await prisma.observation_sources.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends Observation_sourcesDeleteManyArgs>(
      args?: SelectSubset<T, Observation_sourcesDeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more Observation_sources.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Observation_sourcesUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Observation_sources
     * const observation_sources = await prisma.observation_sources.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends Observation_sourcesUpdateManyArgs>(
      args: SelectSubset<T, Observation_sourcesUpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one Observation_sources.
     * @param {Observation_sourcesUpsertArgs} args - Arguments to update or create a Observation_sources.
     * @example
     * // Update or create a Observation_sources
     * const observation_sources = await prisma.observation_sources.upsert({
     *   create: {
     *     // ... data to create a Observation_sources
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Observation_sources we want to update
     *   }
     * })
    **/
    upsert<T extends Observation_sourcesUpsertArgs>(
      args: SelectSubset<T, Observation_sourcesUpsertArgs>
    ): Prisma__Observation_sourcesClient<Observation_sourcesGetPayload<T>>

    /**
     * Count the number of Observation_sources.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Observation_sourcesCountArgs} args - Arguments to filter Observation_sources to count.
     * @example
     * // Count the number of Observation_sources
     * const count = await prisma.observation_sources.count({
     *   where: {
     *     // ... the filter for the Observation_sources we want to count
     *   }
     * })
    **/
    count<T extends Observation_sourcesCountArgs>(
      args?: Subset<T, Observation_sourcesCountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Observation_sourcesCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Observation_sources.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Observation_sourcesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Observation_sourcesAggregateArgs>(args: Subset<T, Observation_sourcesAggregateArgs>): PrismaPromise<GetObservation_sourcesAggregateType<T>>

    /**
     * Group by Observation_sources.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Observation_sourcesGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends Observation_sourcesGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: Observation_sourcesGroupByArgs['orderBy'] }
        : { orderBy?: Observation_sourcesGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, Observation_sourcesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetObservation_sourcesGroupByPayload<T> : PrismaPromise<InputErrors>

  }

  /**
   * The delegate class that acts as a "Promise-like" for Observation_sources.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__Observation_sourcesClient<T, Null = never> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';

    accounts<T extends Observation_sources$accountsArgs= {}>(args?: Subset<T, Observation_sources$accountsArgs>): Prisma__AccountsClient<AccountsGetPayload<T> | Null>;

    projects<T extends Observation_sources$projectsArgs= {}>(args?: Subset<T, Observation_sources$projectsArgs>): Prisma__ProjectsClient<ProjectsGetPayload<T> | Null>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }



  // Custom InputTypes

  /**
   * Observation_sources base type for findUnique actions
   */
  export type Observation_sourcesFindUniqueArgsBase = {
    /**
     * Select specific fields to fetch from the Observation_sources
     * 
    **/
    select?: Observation_sourcesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: Observation_sourcesInclude | null
    /**
     * Filter, which Observation_sources to fetch.
     * 
    **/
    where: Observation_sourcesWhereUniqueInput
  }

  /**
   * Observation_sources findUnique
   */
  export interface Observation_sourcesFindUniqueArgs extends Observation_sourcesFindUniqueArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findUniqueOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * Observation_sources findUniqueOrThrow
   */
  export type Observation_sourcesFindUniqueOrThrowArgs = {
    /**
     * Select specific fields to fetch from the Observation_sources
     * 
    **/
    select?: Observation_sourcesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: Observation_sourcesInclude | null
    /**
     * Filter, which Observation_sources to fetch.
     * 
    **/
    where: Observation_sourcesWhereUniqueInput
  }


  /**
   * Observation_sources base type for findFirst actions
   */
  export type Observation_sourcesFindFirstArgsBase = {
    /**
     * Select specific fields to fetch from the Observation_sources
     * 
    **/
    select?: Observation_sourcesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: Observation_sourcesInclude | null
    /**
     * Filter, which Observation_sources to fetch.
     * 
    **/
    where?: Observation_sourcesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Observation_sources to fetch.
     * 
    **/
    orderBy?: Enumerable<Observation_sourcesOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Observation_sources.
     * 
    **/
    cursor?: Observation_sourcesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Observation_sources from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Observation_sources.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Observation_sources.
     * 
    **/
    distinct?: Enumerable<Observation_sourcesScalarFieldEnum>
  }

  /**
   * Observation_sources findFirst
   */
  export interface Observation_sourcesFindFirstArgs extends Observation_sourcesFindFirstArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findFirstOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * Observation_sources findFirstOrThrow
   */
  export type Observation_sourcesFindFirstOrThrowArgs = {
    /**
     * Select specific fields to fetch from the Observation_sources
     * 
    **/
    select?: Observation_sourcesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: Observation_sourcesInclude | null
    /**
     * Filter, which Observation_sources to fetch.
     * 
    **/
    where?: Observation_sourcesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Observation_sources to fetch.
     * 
    **/
    orderBy?: Enumerable<Observation_sourcesOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Observation_sources.
     * 
    **/
    cursor?: Observation_sourcesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Observation_sources from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Observation_sources.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Observation_sources.
     * 
    **/
    distinct?: Enumerable<Observation_sourcesScalarFieldEnum>
  }


  /**
   * Observation_sources findMany
   */
  export type Observation_sourcesFindManyArgs = {
    /**
     * Select specific fields to fetch from the Observation_sources
     * 
    **/
    select?: Observation_sourcesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: Observation_sourcesInclude | null
    /**
     * Filter, which Observation_sources to fetch.
     * 
    **/
    where?: Observation_sourcesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Observation_sources to fetch.
     * 
    **/
    orderBy?: Enumerable<Observation_sourcesOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Observation_sources.
     * 
    **/
    cursor?: Observation_sourcesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Observation_sources from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Observation_sources.
     * 
    **/
    skip?: number
    distinct?: Enumerable<Observation_sourcesScalarFieldEnum>
  }


  /**
   * Observation_sources create
   */
  export type Observation_sourcesCreateArgs = {
    /**
     * Select specific fields to fetch from the Observation_sources
     * 
    **/
    select?: Observation_sourcesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: Observation_sourcesInclude | null
    /**
     * The data needed to create a Observation_sources.
     * 
    **/
    data: XOR<Observation_sourcesCreateInput, Observation_sourcesUncheckedCreateInput>
  }


  /**
   * Observation_sources createMany
   */
  export type Observation_sourcesCreateManyArgs = {
    /**
     * The data used to create many Observation_sources.
     * 
    **/
    data: Enumerable<Observation_sourcesCreateManyInput>
    skipDuplicates?: boolean
  }


  /**
   * Observation_sources update
   */
  export type Observation_sourcesUpdateArgs = {
    /**
     * Select specific fields to fetch from the Observation_sources
     * 
    **/
    select?: Observation_sourcesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: Observation_sourcesInclude | null
    /**
     * The data needed to update a Observation_sources.
     * 
    **/
    data: XOR<Observation_sourcesUpdateInput, Observation_sourcesUncheckedUpdateInput>
    /**
     * Choose, which Observation_sources to update.
     * 
    **/
    where: Observation_sourcesWhereUniqueInput
  }


  /**
   * Observation_sources updateMany
   */
  export type Observation_sourcesUpdateManyArgs = {
    /**
     * The data used to update Observation_sources.
     * 
    **/
    data: XOR<Observation_sourcesUpdateManyMutationInput, Observation_sourcesUncheckedUpdateManyInput>
    /**
     * Filter which Observation_sources to update
     * 
    **/
    where?: Observation_sourcesWhereInput
  }


  /**
   * Observation_sources upsert
   */
  export type Observation_sourcesUpsertArgs = {
    /**
     * Select specific fields to fetch from the Observation_sources
     * 
    **/
    select?: Observation_sourcesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: Observation_sourcesInclude | null
    /**
     * The filter to search for the Observation_sources to update in case it exists.
     * 
    **/
    where: Observation_sourcesWhereUniqueInput
    /**
     * In case the Observation_sources found by the `where` argument doesn't exist, create a new Observation_sources with this data.
     * 
    **/
    create: XOR<Observation_sourcesCreateInput, Observation_sourcesUncheckedCreateInput>
    /**
     * In case the Observation_sources was found with the provided `where` argument, update it with this data.
     * 
    **/
    update: XOR<Observation_sourcesUpdateInput, Observation_sourcesUncheckedUpdateInput>
  }


  /**
   * Observation_sources delete
   */
  export type Observation_sourcesDeleteArgs = {
    /**
     * Select specific fields to fetch from the Observation_sources
     * 
    **/
    select?: Observation_sourcesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: Observation_sourcesInclude | null
    /**
     * Filter which Observation_sources to delete.
     * 
    **/
    where: Observation_sourcesWhereUniqueInput
  }


  /**
   * Observation_sources deleteMany
   */
  export type Observation_sourcesDeleteManyArgs = {
    /**
     * Filter which Observation_sources to delete
     * 
    **/
    where?: Observation_sourcesWhereInput
  }


  /**
   * Observation_sources.accounts
   */
  export type Observation_sources$accountsArgs = {
    /**
     * Select specific fields to fetch from the Accounts
     * 
    **/
    select?: AccountsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: AccountsInclude | null
    where?: AccountsWhereInput
  }


  /**
   * Observation_sources.projects
   */
  export type Observation_sources$projectsArgs = {
    /**
     * Select specific fields to fetch from the Projects
     * 
    **/
    select?: ProjectsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: ProjectsInclude | null
    where?: ProjectsWhereInput
  }


  /**
   * Observation_sources without action
   */
  export type Observation_sourcesArgs = {
    /**
     * Select specific fields to fetch from the Observation_sources
     * 
    **/
    select?: Observation_sourcesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: Observation_sourcesInclude | null
  }



  /**
   * Model Persons
   */


  export type AggregatePersons = {
    _count: PersonsCountAggregateOutputType | null
    _min: PersonsMinAggregateOutputType | null
    _max: PersonsMaxAggregateOutputType | null
  }

  export type PersonsMinAggregateOutputType = {
    person_id: string | null
    project_id: string | null
    account_id: string | null
    email: string | null
    label_replace_by_generated_column: string | null
    deleted: boolean | null
  }

  export type PersonsMaxAggregateOutputType = {
    person_id: string | null
    project_id: string | null
    account_id: string | null
    email: string | null
    label_replace_by_generated_column: string | null
    deleted: boolean | null
  }

  export type PersonsCountAggregateOutputType = {
    person_id: number
    project_id: number
    account_id: number
    email: number
    data: number
    label_replace_by_generated_column: number
    deleted: number
    _all: number
  }


  export type PersonsMinAggregateInputType = {
    person_id?: true
    project_id?: true
    account_id?: true
    email?: true
    label_replace_by_generated_column?: true
    deleted?: true
  }

  export type PersonsMaxAggregateInputType = {
    person_id?: true
    project_id?: true
    account_id?: true
    email?: true
    label_replace_by_generated_column?: true
    deleted?: true
  }

  export type PersonsCountAggregateInputType = {
    person_id?: true
    project_id?: true
    account_id?: true
    email?: true
    data?: true
    label_replace_by_generated_column?: true
    deleted?: true
    _all?: true
  }

  export type PersonsAggregateArgs = {
    /**
     * Filter which Persons to aggregate.
     * 
    **/
    where?: PersonsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Persons to fetch.
     * 
    **/
    orderBy?: Enumerable<PersonsOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     * 
    **/
    cursor?: PersonsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Persons from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Persons.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Persons
    **/
    _count?: true | PersonsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: PersonsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: PersonsMaxAggregateInputType
  }

  export type GetPersonsAggregateType<T extends PersonsAggregateArgs> = {
        [P in keyof T & keyof AggregatePersons]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePersons[P]>
      : GetScalarType<T[P], AggregatePersons[P]>
  }




  export type PersonsGroupByArgs = {
    where?: PersonsWhereInput
    orderBy?: Enumerable<PersonsOrderByWithAggregationInput>
    by: Array<PersonsScalarFieldEnum>
    having?: PersonsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: PersonsCountAggregateInputType | true
    _min?: PersonsMinAggregateInputType
    _max?: PersonsMaxAggregateInputType
  }


  export type PersonsGroupByOutputType = {
    person_id: string
    project_id: string | null
    account_id: string | null
    email: string | null
    data: JsonValue | null
    label_replace_by_generated_column: string | null
    deleted: boolean | null
    _count: PersonsCountAggregateOutputType | null
    _min: PersonsMinAggregateOutputType | null
    _max: PersonsMaxAggregateOutputType | null
  }

  type GetPersonsGroupByPayload<T extends PersonsGroupByArgs> = PrismaPromise<
    Array<
      PickArray<PersonsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof PersonsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], PersonsGroupByOutputType[P]>
            : GetScalarType<T[P], PersonsGroupByOutputType[P]>
        }
      >
    >


  export type PersonsSelect = {
    person_id?: boolean
    project_id?: boolean
    account_id?: boolean
    email?: boolean
    data?: boolean
    label_replace_by_generated_column?: boolean
    deleted?: boolean
    accounts?: boolean | Persons$accountsArgs
    projects?: boolean | Persons$projectsArgs
  }


  export type PersonsInclude = {
    accounts?: boolean | Persons$accountsArgs
    projects?: boolean | Persons$projectsArgs
  } 

  export type PersonsGetPayload<S extends boolean | null | undefined | PersonsArgs> =
    S extends { select: any, include: any } ? 'Please either choose `select` or `include`' :
    S extends true ? Persons :
    S extends undefined ? never :
    S extends { include: any } & (PersonsArgs | PersonsFindManyArgs)
    ? Persons  & {
    [P in TruthyKeys<S['include']>]:
        P extends 'accounts' ? AccountsGetPayload<S['include'][P]> | null :
        P extends 'projects' ? ProjectsGetPayload<S['include'][P]> | null :  never
  } 
    : S extends { select: any } & (PersonsArgs | PersonsFindManyArgs)
      ? {
    [P in TruthyKeys<S['select']>]:
        P extends 'accounts' ? AccountsGetPayload<S['select'][P]> | null :
        P extends 'projects' ? ProjectsGetPayload<S['select'][P]> | null :  P extends keyof Persons ? Persons[P] : never
  } 
      : Persons


  type PersonsCountArgs = Merge<
    Omit<PersonsFindManyArgs, 'select' | 'include'> & {
      select?: PersonsCountAggregateInputType | true
    }
  >

  export interface PersonsDelegate<GlobalRejectSettings extends Prisma.RejectOnNotFound | Prisma.RejectPerOperation | false | undefined> {
    /**
     * Find zero or one Persons that matches the filter.
     * @param {PersonsFindUniqueArgs} args - Arguments to find a Persons
     * @example
     * // Get one Persons
     * const persons = await prisma.persons.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends PersonsFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, PersonsFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'Persons'> extends True ? Prisma__PersonsClient<PersonsGetPayload<T>> : Prisma__PersonsClient<PersonsGetPayload<T> | null, null>

    /**
     * Find one Persons that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {PersonsFindUniqueOrThrowArgs} args - Arguments to find a Persons
     * @example
     * // Get one Persons
     * const persons = await prisma.persons.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends PersonsFindUniqueOrThrowArgs>(
      args?: SelectSubset<T, PersonsFindUniqueOrThrowArgs>
    ): Prisma__PersonsClient<PersonsGetPayload<T>>

    /**
     * Find the first Persons that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PersonsFindFirstArgs} args - Arguments to find a Persons
     * @example
     * // Get one Persons
     * const persons = await prisma.persons.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends PersonsFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, PersonsFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'Persons'> extends True ? Prisma__PersonsClient<PersonsGetPayload<T>> : Prisma__PersonsClient<PersonsGetPayload<T> | null, null>

    /**
     * Find the first Persons that matches the filter or
     * throw `NotFoundError` if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PersonsFindFirstOrThrowArgs} args - Arguments to find a Persons
     * @example
     * // Get one Persons
     * const persons = await prisma.persons.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends PersonsFindFirstOrThrowArgs>(
      args?: SelectSubset<T, PersonsFindFirstOrThrowArgs>
    ): Prisma__PersonsClient<PersonsGetPayload<T>>

    /**
     * Find zero or more Persons that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PersonsFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Persons
     * const persons = await prisma.persons.findMany()
     * 
     * // Get first 10 Persons
     * const persons = await prisma.persons.findMany({ take: 10 })
     * 
     * // Only select the `person_id`
     * const personsWithPerson_idOnly = await prisma.persons.findMany({ select: { person_id: true } })
     * 
    **/
    findMany<T extends PersonsFindManyArgs>(
      args?: SelectSubset<T, PersonsFindManyArgs>
    ): PrismaPromise<Array<PersonsGetPayload<T>>>

    /**
     * Create a Persons.
     * @param {PersonsCreateArgs} args - Arguments to create a Persons.
     * @example
     * // Create one Persons
     * const Persons = await prisma.persons.create({
     *   data: {
     *     // ... data to create a Persons
     *   }
     * })
     * 
    **/
    create<T extends PersonsCreateArgs>(
      args: SelectSubset<T, PersonsCreateArgs>
    ): Prisma__PersonsClient<PersonsGetPayload<T>>

    /**
     * Create many Persons.
     *     @param {PersonsCreateManyArgs} args - Arguments to create many Persons.
     *     @example
     *     // Create many Persons
     *     const persons = await prisma.persons.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends PersonsCreateManyArgs>(
      args?: SelectSubset<T, PersonsCreateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Delete a Persons.
     * @param {PersonsDeleteArgs} args - Arguments to delete one Persons.
     * @example
     * // Delete one Persons
     * const Persons = await prisma.persons.delete({
     *   where: {
     *     // ... filter to delete one Persons
     *   }
     * })
     * 
    **/
    delete<T extends PersonsDeleteArgs>(
      args: SelectSubset<T, PersonsDeleteArgs>
    ): Prisma__PersonsClient<PersonsGetPayload<T>>

    /**
     * Update one Persons.
     * @param {PersonsUpdateArgs} args - Arguments to update one Persons.
     * @example
     * // Update one Persons
     * const persons = await prisma.persons.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends PersonsUpdateArgs>(
      args: SelectSubset<T, PersonsUpdateArgs>
    ): Prisma__PersonsClient<PersonsGetPayload<T>>

    /**
     * Delete zero or more Persons.
     * @param {PersonsDeleteManyArgs} args - Arguments to filter Persons to delete.
     * @example
     * // Delete a few Persons
     * const { count } = await prisma.persons.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends PersonsDeleteManyArgs>(
      args?: SelectSubset<T, PersonsDeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more Persons.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PersonsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Persons
     * const persons = await prisma.persons.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends PersonsUpdateManyArgs>(
      args: SelectSubset<T, PersonsUpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one Persons.
     * @param {PersonsUpsertArgs} args - Arguments to update or create a Persons.
     * @example
     * // Update or create a Persons
     * const persons = await prisma.persons.upsert({
     *   create: {
     *     // ... data to create a Persons
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Persons we want to update
     *   }
     * })
    **/
    upsert<T extends PersonsUpsertArgs>(
      args: SelectSubset<T, PersonsUpsertArgs>
    ): Prisma__PersonsClient<PersonsGetPayload<T>>

    /**
     * Count the number of Persons.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PersonsCountArgs} args - Arguments to filter Persons to count.
     * @example
     * // Count the number of Persons
     * const count = await prisma.persons.count({
     *   where: {
     *     // ... the filter for the Persons we want to count
     *   }
     * })
    **/
    count<T extends PersonsCountArgs>(
      args?: Subset<T, PersonsCountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], PersonsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Persons.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PersonsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends PersonsAggregateArgs>(args: Subset<T, PersonsAggregateArgs>): PrismaPromise<GetPersonsAggregateType<T>>

    /**
     * Group by Persons.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PersonsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends PersonsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: PersonsGroupByArgs['orderBy'] }
        : { orderBy?: PersonsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, PersonsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPersonsGroupByPayload<T> : PrismaPromise<InputErrors>

  }

  /**
   * The delegate class that acts as a "Promise-like" for Persons.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__PersonsClient<T, Null = never> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';

    accounts<T extends Persons$accountsArgs= {}>(args?: Subset<T, Persons$accountsArgs>): Prisma__AccountsClient<AccountsGetPayload<T> | Null>;

    projects<T extends Persons$projectsArgs= {}>(args?: Subset<T, Persons$projectsArgs>): Prisma__ProjectsClient<ProjectsGetPayload<T> | Null>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }



  // Custom InputTypes

  /**
   * Persons base type for findUnique actions
   */
  export type PersonsFindUniqueArgsBase = {
    /**
     * Select specific fields to fetch from the Persons
     * 
    **/
    select?: PersonsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: PersonsInclude | null
    /**
     * Filter, which Persons to fetch.
     * 
    **/
    where: PersonsWhereUniqueInput
  }

  /**
   * Persons findUnique
   */
  export interface PersonsFindUniqueArgs extends PersonsFindUniqueArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findUniqueOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * Persons findUniqueOrThrow
   */
  export type PersonsFindUniqueOrThrowArgs = {
    /**
     * Select specific fields to fetch from the Persons
     * 
    **/
    select?: PersonsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: PersonsInclude | null
    /**
     * Filter, which Persons to fetch.
     * 
    **/
    where: PersonsWhereUniqueInput
  }


  /**
   * Persons base type for findFirst actions
   */
  export type PersonsFindFirstArgsBase = {
    /**
     * Select specific fields to fetch from the Persons
     * 
    **/
    select?: PersonsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: PersonsInclude | null
    /**
     * Filter, which Persons to fetch.
     * 
    **/
    where?: PersonsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Persons to fetch.
     * 
    **/
    orderBy?: Enumerable<PersonsOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Persons.
     * 
    **/
    cursor?: PersonsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Persons from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Persons.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Persons.
     * 
    **/
    distinct?: Enumerable<PersonsScalarFieldEnum>
  }

  /**
   * Persons findFirst
   */
  export interface PersonsFindFirstArgs extends PersonsFindFirstArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findFirstOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * Persons findFirstOrThrow
   */
  export type PersonsFindFirstOrThrowArgs = {
    /**
     * Select specific fields to fetch from the Persons
     * 
    **/
    select?: PersonsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: PersonsInclude | null
    /**
     * Filter, which Persons to fetch.
     * 
    **/
    where?: PersonsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Persons to fetch.
     * 
    **/
    orderBy?: Enumerable<PersonsOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Persons.
     * 
    **/
    cursor?: PersonsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Persons from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Persons.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Persons.
     * 
    **/
    distinct?: Enumerable<PersonsScalarFieldEnum>
  }


  /**
   * Persons findMany
   */
  export type PersonsFindManyArgs = {
    /**
     * Select specific fields to fetch from the Persons
     * 
    **/
    select?: PersonsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: PersonsInclude | null
    /**
     * Filter, which Persons to fetch.
     * 
    **/
    where?: PersonsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Persons to fetch.
     * 
    **/
    orderBy?: Enumerable<PersonsOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Persons.
     * 
    **/
    cursor?: PersonsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Persons from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Persons.
     * 
    **/
    skip?: number
    distinct?: Enumerable<PersonsScalarFieldEnum>
  }


  /**
   * Persons create
   */
  export type PersonsCreateArgs = {
    /**
     * Select specific fields to fetch from the Persons
     * 
    **/
    select?: PersonsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: PersonsInclude | null
    /**
     * The data needed to create a Persons.
     * 
    **/
    data: XOR<PersonsCreateInput, PersonsUncheckedCreateInput>
  }


  /**
   * Persons createMany
   */
  export type PersonsCreateManyArgs = {
    /**
     * The data used to create many Persons.
     * 
    **/
    data: Enumerable<PersonsCreateManyInput>
    skipDuplicates?: boolean
  }


  /**
   * Persons update
   */
  export type PersonsUpdateArgs = {
    /**
     * Select specific fields to fetch from the Persons
     * 
    **/
    select?: PersonsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: PersonsInclude | null
    /**
     * The data needed to update a Persons.
     * 
    **/
    data: XOR<PersonsUpdateInput, PersonsUncheckedUpdateInput>
    /**
     * Choose, which Persons to update.
     * 
    **/
    where: PersonsWhereUniqueInput
  }


  /**
   * Persons updateMany
   */
  export type PersonsUpdateManyArgs = {
    /**
     * The data used to update Persons.
     * 
    **/
    data: XOR<PersonsUpdateManyMutationInput, PersonsUncheckedUpdateManyInput>
    /**
     * Filter which Persons to update
     * 
    **/
    where?: PersonsWhereInput
  }


  /**
   * Persons upsert
   */
  export type PersonsUpsertArgs = {
    /**
     * Select specific fields to fetch from the Persons
     * 
    **/
    select?: PersonsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: PersonsInclude | null
    /**
     * The filter to search for the Persons to update in case it exists.
     * 
    **/
    where: PersonsWhereUniqueInput
    /**
     * In case the Persons found by the `where` argument doesn't exist, create a new Persons with this data.
     * 
    **/
    create: XOR<PersonsCreateInput, PersonsUncheckedCreateInput>
    /**
     * In case the Persons was found with the provided `where` argument, update it with this data.
     * 
    **/
    update: XOR<PersonsUpdateInput, PersonsUncheckedUpdateInput>
  }


  /**
   * Persons delete
   */
  export type PersonsDeleteArgs = {
    /**
     * Select specific fields to fetch from the Persons
     * 
    **/
    select?: PersonsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: PersonsInclude | null
    /**
     * Filter which Persons to delete.
     * 
    **/
    where: PersonsWhereUniqueInput
  }


  /**
   * Persons deleteMany
   */
  export type PersonsDeleteManyArgs = {
    /**
     * Filter which Persons to delete
     * 
    **/
    where?: PersonsWhereInput
  }


  /**
   * Persons.accounts
   */
  export type Persons$accountsArgs = {
    /**
     * Select specific fields to fetch from the Accounts
     * 
    **/
    select?: AccountsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: AccountsInclude | null
    where?: AccountsWhereInput
  }


  /**
   * Persons.projects
   */
  export type Persons$projectsArgs = {
    /**
     * Select specific fields to fetch from the Projects
     * 
    **/
    select?: ProjectsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: ProjectsInclude | null
    where?: ProjectsWhereInput
  }


  /**
   * Persons without action
   */
  export type PersonsArgs = {
    /**
     * Select specific fields to fetch from the Persons
     * 
    **/
    select?: PersonsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: PersonsInclude | null
  }



  /**
   * Model Place_levels
   */


  export type AggregatePlace_levels = {
    _count: Place_levelsCountAggregateOutputType | null
    _avg: Place_levelsAvgAggregateOutputType | null
    _sum: Place_levelsSumAggregateOutputType | null
    _min: Place_levelsMinAggregateOutputType | null
    _max: Place_levelsMaxAggregateOutputType | null
  }

  export type Place_levelsAvgAggregateOutputType = {
    level: number | null
  }

  export type Place_levelsSumAggregateOutputType = {
    level: number | null
  }

  export type Place_levelsMinAggregateOutputType = {
    place_level_id: string | null
    account_id: string | null
    project_id: string | null
    level: number | null
    name_singular: string | null
    name_plural: string | null
    name_short: string | null
    reports: boolean | null
    report_values: boolean | null
    actions: boolean | null
    action_values: boolean | null
    action_reports: boolean | null
    checks: boolean | null
    check_values: boolean | null
    check_taxa: boolean | null
    observations: boolean | null
    label_replace_by_generated_column: string | null
    deleted: boolean | null
  }

  export type Place_levelsMaxAggregateOutputType = {
    place_level_id: string | null
    account_id: string | null
    project_id: string | null
    level: number | null
    name_singular: string | null
    name_plural: string | null
    name_short: string | null
    reports: boolean | null
    report_values: boolean | null
    actions: boolean | null
    action_values: boolean | null
    action_reports: boolean | null
    checks: boolean | null
    check_values: boolean | null
    check_taxa: boolean | null
    observations: boolean | null
    label_replace_by_generated_column: string | null
    deleted: boolean | null
  }

  export type Place_levelsCountAggregateOutputType = {
    place_level_id: number
    account_id: number
    project_id: number
    level: number
    name_singular: number
    name_plural: number
    name_short: number
    reports: number
    report_values: number
    actions: number
    action_values: number
    action_reports: number
    checks: number
    check_values: number
    check_taxa: number
    observations: number
    label_replace_by_generated_column: number
    deleted: number
    _all: number
  }


  export type Place_levelsAvgAggregateInputType = {
    level?: true
  }

  export type Place_levelsSumAggregateInputType = {
    level?: true
  }

  export type Place_levelsMinAggregateInputType = {
    place_level_id?: true
    account_id?: true
    project_id?: true
    level?: true
    name_singular?: true
    name_plural?: true
    name_short?: true
    reports?: true
    report_values?: true
    actions?: true
    action_values?: true
    action_reports?: true
    checks?: true
    check_values?: true
    check_taxa?: true
    observations?: true
    label_replace_by_generated_column?: true
    deleted?: true
  }

  export type Place_levelsMaxAggregateInputType = {
    place_level_id?: true
    account_id?: true
    project_id?: true
    level?: true
    name_singular?: true
    name_plural?: true
    name_short?: true
    reports?: true
    report_values?: true
    actions?: true
    action_values?: true
    action_reports?: true
    checks?: true
    check_values?: true
    check_taxa?: true
    observations?: true
    label_replace_by_generated_column?: true
    deleted?: true
  }

  export type Place_levelsCountAggregateInputType = {
    place_level_id?: true
    account_id?: true
    project_id?: true
    level?: true
    name_singular?: true
    name_plural?: true
    name_short?: true
    reports?: true
    report_values?: true
    actions?: true
    action_values?: true
    action_reports?: true
    checks?: true
    check_values?: true
    check_taxa?: true
    observations?: true
    label_replace_by_generated_column?: true
    deleted?: true
    _all?: true
  }

  export type Place_levelsAggregateArgs = {
    /**
     * Filter which Place_levels to aggregate.
     * 
    **/
    where?: Place_levelsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Place_levels to fetch.
     * 
    **/
    orderBy?: Enumerable<Place_levelsOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     * 
    **/
    cursor?: Place_levelsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Place_levels from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Place_levels.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Place_levels
    **/
    _count?: true | Place_levelsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Place_levelsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Place_levelsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Place_levelsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Place_levelsMaxAggregateInputType
  }

  export type GetPlace_levelsAggregateType<T extends Place_levelsAggregateArgs> = {
        [P in keyof T & keyof AggregatePlace_levels]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePlace_levels[P]>
      : GetScalarType<T[P], AggregatePlace_levels[P]>
  }




  export type Place_levelsGroupByArgs = {
    where?: Place_levelsWhereInput
    orderBy?: Enumerable<Place_levelsOrderByWithAggregationInput>
    by: Array<Place_levelsScalarFieldEnum>
    having?: Place_levelsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Place_levelsCountAggregateInputType | true
    _avg?: Place_levelsAvgAggregateInputType
    _sum?: Place_levelsSumAggregateInputType
    _min?: Place_levelsMinAggregateInputType
    _max?: Place_levelsMaxAggregateInputType
  }


  export type Place_levelsGroupByOutputType = {
    place_level_id: string
    account_id: string | null
    project_id: string | null
    level: number | null
    name_singular: string | null
    name_plural: string | null
    name_short: string | null
    reports: boolean | null
    report_values: boolean | null
    actions: boolean | null
    action_values: boolean | null
    action_reports: boolean | null
    checks: boolean | null
    check_values: boolean | null
    check_taxa: boolean | null
    observations: boolean | null
    label_replace_by_generated_column: string | null
    deleted: boolean | null
    _count: Place_levelsCountAggregateOutputType | null
    _avg: Place_levelsAvgAggregateOutputType | null
    _sum: Place_levelsSumAggregateOutputType | null
    _min: Place_levelsMinAggregateOutputType | null
    _max: Place_levelsMaxAggregateOutputType | null
  }

  type GetPlace_levelsGroupByPayload<T extends Place_levelsGroupByArgs> = PrismaPromise<
    Array<
      PickArray<Place_levelsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Place_levelsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Place_levelsGroupByOutputType[P]>
            : GetScalarType<T[P], Place_levelsGroupByOutputType[P]>
        }
      >
    >


  export type Place_levelsSelect = {
    place_level_id?: boolean
    account_id?: boolean
    project_id?: boolean
    level?: boolean
    name_singular?: boolean
    name_plural?: boolean
    name_short?: boolean
    reports?: boolean
    report_values?: boolean
    actions?: boolean
    action_values?: boolean
    action_reports?: boolean
    checks?: boolean
    check_values?: boolean
    check_taxa?: boolean
    observations?: boolean
    label_replace_by_generated_column?: boolean
    deleted?: boolean
    accounts?: boolean | Place_levels$accountsArgs
    projects?: boolean | Place_levels$projectsArgs
  }


  export type Place_levelsInclude = {
    accounts?: boolean | Place_levels$accountsArgs
    projects?: boolean | Place_levels$projectsArgs
  } 

  export type Place_levelsGetPayload<S extends boolean | null | undefined | Place_levelsArgs> =
    S extends { select: any, include: any } ? 'Please either choose `select` or `include`' :
    S extends true ? Place_levels :
    S extends undefined ? never :
    S extends { include: any } & (Place_levelsArgs | Place_levelsFindManyArgs)
    ? Place_levels  & {
    [P in TruthyKeys<S['include']>]:
        P extends 'accounts' ? AccountsGetPayload<S['include'][P]> | null :
        P extends 'projects' ? ProjectsGetPayload<S['include'][P]> | null :  never
  } 
    : S extends { select: any } & (Place_levelsArgs | Place_levelsFindManyArgs)
      ? {
    [P in TruthyKeys<S['select']>]:
        P extends 'accounts' ? AccountsGetPayload<S['select'][P]> | null :
        P extends 'projects' ? ProjectsGetPayload<S['select'][P]> | null :  P extends keyof Place_levels ? Place_levels[P] : never
  } 
      : Place_levels


  type Place_levelsCountArgs = Merge<
    Omit<Place_levelsFindManyArgs, 'select' | 'include'> & {
      select?: Place_levelsCountAggregateInputType | true
    }
  >

  export interface Place_levelsDelegate<GlobalRejectSettings extends Prisma.RejectOnNotFound | Prisma.RejectPerOperation | false | undefined> {
    /**
     * Find zero or one Place_levels that matches the filter.
     * @param {Place_levelsFindUniqueArgs} args - Arguments to find a Place_levels
     * @example
     * // Get one Place_levels
     * const place_levels = await prisma.place_levels.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends Place_levelsFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, Place_levelsFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'Place_levels'> extends True ? Prisma__Place_levelsClient<Place_levelsGetPayload<T>> : Prisma__Place_levelsClient<Place_levelsGetPayload<T> | null, null>

    /**
     * Find one Place_levels that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {Place_levelsFindUniqueOrThrowArgs} args - Arguments to find a Place_levels
     * @example
     * // Get one Place_levels
     * const place_levels = await prisma.place_levels.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends Place_levelsFindUniqueOrThrowArgs>(
      args?: SelectSubset<T, Place_levelsFindUniqueOrThrowArgs>
    ): Prisma__Place_levelsClient<Place_levelsGetPayload<T>>

    /**
     * Find the first Place_levels that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Place_levelsFindFirstArgs} args - Arguments to find a Place_levels
     * @example
     * // Get one Place_levels
     * const place_levels = await prisma.place_levels.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends Place_levelsFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, Place_levelsFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'Place_levels'> extends True ? Prisma__Place_levelsClient<Place_levelsGetPayload<T>> : Prisma__Place_levelsClient<Place_levelsGetPayload<T> | null, null>

    /**
     * Find the first Place_levels that matches the filter or
     * throw `NotFoundError` if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Place_levelsFindFirstOrThrowArgs} args - Arguments to find a Place_levels
     * @example
     * // Get one Place_levels
     * const place_levels = await prisma.place_levels.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends Place_levelsFindFirstOrThrowArgs>(
      args?: SelectSubset<T, Place_levelsFindFirstOrThrowArgs>
    ): Prisma__Place_levelsClient<Place_levelsGetPayload<T>>

    /**
     * Find zero or more Place_levels that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Place_levelsFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Place_levels
     * const place_levels = await prisma.place_levels.findMany()
     * 
     * // Get first 10 Place_levels
     * const place_levels = await prisma.place_levels.findMany({ take: 10 })
     * 
     * // Only select the `place_level_id`
     * const place_levelsWithPlace_level_idOnly = await prisma.place_levels.findMany({ select: { place_level_id: true } })
     * 
    **/
    findMany<T extends Place_levelsFindManyArgs>(
      args?: SelectSubset<T, Place_levelsFindManyArgs>
    ): PrismaPromise<Array<Place_levelsGetPayload<T>>>

    /**
     * Create a Place_levels.
     * @param {Place_levelsCreateArgs} args - Arguments to create a Place_levels.
     * @example
     * // Create one Place_levels
     * const Place_levels = await prisma.place_levels.create({
     *   data: {
     *     // ... data to create a Place_levels
     *   }
     * })
     * 
    **/
    create<T extends Place_levelsCreateArgs>(
      args: SelectSubset<T, Place_levelsCreateArgs>
    ): Prisma__Place_levelsClient<Place_levelsGetPayload<T>>

    /**
     * Create many Place_levels.
     *     @param {Place_levelsCreateManyArgs} args - Arguments to create many Place_levels.
     *     @example
     *     // Create many Place_levels
     *     const place_levels = await prisma.place_levels.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends Place_levelsCreateManyArgs>(
      args?: SelectSubset<T, Place_levelsCreateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Delete a Place_levels.
     * @param {Place_levelsDeleteArgs} args - Arguments to delete one Place_levels.
     * @example
     * // Delete one Place_levels
     * const Place_levels = await prisma.place_levels.delete({
     *   where: {
     *     // ... filter to delete one Place_levels
     *   }
     * })
     * 
    **/
    delete<T extends Place_levelsDeleteArgs>(
      args: SelectSubset<T, Place_levelsDeleteArgs>
    ): Prisma__Place_levelsClient<Place_levelsGetPayload<T>>

    /**
     * Update one Place_levels.
     * @param {Place_levelsUpdateArgs} args - Arguments to update one Place_levels.
     * @example
     * // Update one Place_levels
     * const place_levels = await prisma.place_levels.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends Place_levelsUpdateArgs>(
      args: SelectSubset<T, Place_levelsUpdateArgs>
    ): Prisma__Place_levelsClient<Place_levelsGetPayload<T>>

    /**
     * Delete zero or more Place_levels.
     * @param {Place_levelsDeleteManyArgs} args - Arguments to filter Place_levels to delete.
     * @example
     * // Delete a few Place_levels
     * const { count } = await prisma.place_levels.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends Place_levelsDeleteManyArgs>(
      args?: SelectSubset<T, Place_levelsDeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more Place_levels.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Place_levelsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Place_levels
     * const place_levels = await prisma.place_levels.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends Place_levelsUpdateManyArgs>(
      args: SelectSubset<T, Place_levelsUpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one Place_levels.
     * @param {Place_levelsUpsertArgs} args - Arguments to update or create a Place_levels.
     * @example
     * // Update or create a Place_levels
     * const place_levels = await prisma.place_levels.upsert({
     *   create: {
     *     // ... data to create a Place_levels
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Place_levels we want to update
     *   }
     * })
    **/
    upsert<T extends Place_levelsUpsertArgs>(
      args: SelectSubset<T, Place_levelsUpsertArgs>
    ): Prisma__Place_levelsClient<Place_levelsGetPayload<T>>

    /**
     * Count the number of Place_levels.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Place_levelsCountArgs} args - Arguments to filter Place_levels to count.
     * @example
     * // Count the number of Place_levels
     * const count = await prisma.place_levels.count({
     *   where: {
     *     // ... the filter for the Place_levels we want to count
     *   }
     * })
    **/
    count<T extends Place_levelsCountArgs>(
      args?: Subset<T, Place_levelsCountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Place_levelsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Place_levels.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Place_levelsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Place_levelsAggregateArgs>(args: Subset<T, Place_levelsAggregateArgs>): PrismaPromise<GetPlace_levelsAggregateType<T>>

    /**
     * Group by Place_levels.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Place_levelsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends Place_levelsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: Place_levelsGroupByArgs['orderBy'] }
        : { orderBy?: Place_levelsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, Place_levelsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPlace_levelsGroupByPayload<T> : PrismaPromise<InputErrors>

  }

  /**
   * The delegate class that acts as a "Promise-like" for Place_levels.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__Place_levelsClient<T, Null = never> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';

    accounts<T extends Place_levels$accountsArgs= {}>(args?: Subset<T, Place_levels$accountsArgs>): Prisma__AccountsClient<AccountsGetPayload<T> | Null>;

    projects<T extends Place_levels$projectsArgs= {}>(args?: Subset<T, Place_levels$projectsArgs>): Prisma__ProjectsClient<ProjectsGetPayload<T> | Null>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }



  // Custom InputTypes

  /**
   * Place_levels base type for findUnique actions
   */
  export type Place_levelsFindUniqueArgsBase = {
    /**
     * Select specific fields to fetch from the Place_levels
     * 
    **/
    select?: Place_levelsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: Place_levelsInclude | null
    /**
     * Filter, which Place_levels to fetch.
     * 
    **/
    where: Place_levelsWhereUniqueInput
  }

  /**
   * Place_levels findUnique
   */
  export interface Place_levelsFindUniqueArgs extends Place_levelsFindUniqueArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findUniqueOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * Place_levels findUniqueOrThrow
   */
  export type Place_levelsFindUniqueOrThrowArgs = {
    /**
     * Select specific fields to fetch from the Place_levels
     * 
    **/
    select?: Place_levelsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: Place_levelsInclude | null
    /**
     * Filter, which Place_levels to fetch.
     * 
    **/
    where: Place_levelsWhereUniqueInput
  }


  /**
   * Place_levels base type for findFirst actions
   */
  export type Place_levelsFindFirstArgsBase = {
    /**
     * Select specific fields to fetch from the Place_levels
     * 
    **/
    select?: Place_levelsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: Place_levelsInclude | null
    /**
     * Filter, which Place_levels to fetch.
     * 
    **/
    where?: Place_levelsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Place_levels to fetch.
     * 
    **/
    orderBy?: Enumerable<Place_levelsOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Place_levels.
     * 
    **/
    cursor?: Place_levelsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Place_levels from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Place_levels.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Place_levels.
     * 
    **/
    distinct?: Enumerable<Place_levelsScalarFieldEnum>
  }

  /**
   * Place_levels findFirst
   */
  export interface Place_levelsFindFirstArgs extends Place_levelsFindFirstArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findFirstOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * Place_levels findFirstOrThrow
   */
  export type Place_levelsFindFirstOrThrowArgs = {
    /**
     * Select specific fields to fetch from the Place_levels
     * 
    **/
    select?: Place_levelsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: Place_levelsInclude | null
    /**
     * Filter, which Place_levels to fetch.
     * 
    **/
    where?: Place_levelsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Place_levels to fetch.
     * 
    **/
    orderBy?: Enumerable<Place_levelsOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Place_levels.
     * 
    **/
    cursor?: Place_levelsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Place_levels from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Place_levels.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Place_levels.
     * 
    **/
    distinct?: Enumerable<Place_levelsScalarFieldEnum>
  }


  /**
   * Place_levels findMany
   */
  export type Place_levelsFindManyArgs = {
    /**
     * Select specific fields to fetch from the Place_levels
     * 
    **/
    select?: Place_levelsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: Place_levelsInclude | null
    /**
     * Filter, which Place_levels to fetch.
     * 
    **/
    where?: Place_levelsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Place_levels to fetch.
     * 
    **/
    orderBy?: Enumerable<Place_levelsOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Place_levels.
     * 
    **/
    cursor?: Place_levelsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Place_levels from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Place_levels.
     * 
    **/
    skip?: number
    distinct?: Enumerable<Place_levelsScalarFieldEnum>
  }


  /**
   * Place_levels create
   */
  export type Place_levelsCreateArgs = {
    /**
     * Select specific fields to fetch from the Place_levels
     * 
    **/
    select?: Place_levelsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: Place_levelsInclude | null
    /**
     * The data needed to create a Place_levels.
     * 
    **/
    data: XOR<Place_levelsCreateInput, Place_levelsUncheckedCreateInput>
  }


  /**
   * Place_levels createMany
   */
  export type Place_levelsCreateManyArgs = {
    /**
     * The data used to create many Place_levels.
     * 
    **/
    data: Enumerable<Place_levelsCreateManyInput>
    skipDuplicates?: boolean
  }


  /**
   * Place_levels update
   */
  export type Place_levelsUpdateArgs = {
    /**
     * Select specific fields to fetch from the Place_levels
     * 
    **/
    select?: Place_levelsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: Place_levelsInclude | null
    /**
     * The data needed to update a Place_levels.
     * 
    **/
    data: XOR<Place_levelsUpdateInput, Place_levelsUncheckedUpdateInput>
    /**
     * Choose, which Place_levels to update.
     * 
    **/
    where: Place_levelsWhereUniqueInput
  }


  /**
   * Place_levels updateMany
   */
  export type Place_levelsUpdateManyArgs = {
    /**
     * The data used to update Place_levels.
     * 
    **/
    data: XOR<Place_levelsUpdateManyMutationInput, Place_levelsUncheckedUpdateManyInput>
    /**
     * Filter which Place_levels to update
     * 
    **/
    where?: Place_levelsWhereInput
  }


  /**
   * Place_levels upsert
   */
  export type Place_levelsUpsertArgs = {
    /**
     * Select specific fields to fetch from the Place_levels
     * 
    **/
    select?: Place_levelsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: Place_levelsInclude | null
    /**
     * The filter to search for the Place_levels to update in case it exists.
     * 
    **/
    where: Place_levelsWhereUniqueInput
    /**
     * In case the Place_levels found by the `where` argument doesn't exist, create a new Place_levels with this data.
     * 
    **/
    create: XOR<Place_levelsCreateInput, Place_levelsUncheckedCreateInput>
    /**
     * In case the Place_levels was found with the provided `where` argument, update it with this data.
     * 
    **/
    update: XOR<Place_levelsUpdateInput, Place_levelsUncheckedUpdateInput>
  }


  /**
   * Place_levels delete
   */
  export type Place_levelsDeleteArgs = {
    /**
     * Select specific fields to fetch from the Place_levels
     * 
    **/
    select?: Place_levelsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: Place_levelsInclude | null
    /**
     * Filter which Place_levels to delete.
     * 
    **/
    where: Place_levelsWhereUniqueInput
  }


  /**
   * Place_levels deleteMany
   */
  export type Place_levelsDeleteManyArgs = {
    /**
     * Filter which Place_levels to delete
     * 
    **/
    where?: Place_levelsWhereInput
  }


  /**
   * Place_levels.accounts
   */
  export type Place_levels$accountsArgs = {
    /**
     * Select specific fields to fetch from the Accounts
     * 
    **/
    select?: AccountsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: AccountsInclude | null
    where?: AccountsWhereInput
  }


  /**
   * Place_levels.projects
   */
  export type Place_levels$projectsArgs = {
    /**
     * Select specific fields to fetch from the Projects
     * 
    **/
    select?: ProjectsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: ProjectsInclude | null
    where?: ProjectsWhereInput
  }


  /**
   * Place_levels without action
   */
  export type Place_levelsArgs = {
    /**
     * Select specific fields to fetch from the Place_levels
     * 
    **/
    select?: Place_levelsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: Place_levelsInclude | null
  }



  /**
   * Model Project_users
   */


  export type AggregateProject_users = {
    _count: Project_usersCountAggregateOutputType | null
    _min: Project_usersMinAggregateOutputType | null
    _max: Project_usersMaxAggregateOutputType | null
  }

  export type Project_usersMinAggregateOutputType = {
    project_user_id: string | null
    account_id: string | null
    project_id: string | null
    user_id: string | null
    role: string | null
    label: string | null
    deleted: boolean | null
  }

  export type Project_usersMaxAggregateOutputType = {
    project_user_id: string | null
    account_id: string | null
    project_id: string | null
    user_id: string | null
    role: string | null
    label: string | null
    deleted: boolean | null
  }

  export type Project_usersCountAggregateOutputType = {
    project_user_id: number
    account_id: number
    project_id: number
    user_id: number
    role: number
    label: number
    deleted: number
    _all: number
  }


  export type Project_usersMinAggregateInputType = {
    project_user_id?: true
    account_id?: true
    project_id?: true
    user_id?: true
    role?: true
    label?: true
    deleted?: true
  }

  export type Project_usersMaxAggregateInputType = {
    project_user_id?: true
    account_id?: true
    project_id?: true
    user_id?: true
    role?: true
    label?: true
    deleted?: true
  }

  export type Project_usersCountAggregateInputType = {
    project_user_id?: true
    account_id?: true
    project_id?: true
    user_id?: true
    role?: true
    label?: true
    deleted?: true
    _all?: true
  }

  export type Project_usersAggregateArgs = {
    /**
     * Filter which Project_users to aggregate.
     * 
    **/
    where?: Project_usersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Project_users to fetch.
     * 
    **/
    orderBy?: Enumerable<Project_usersOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     * 
    **/
    cursor?: Project_usersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Project_users from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Project_users.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Project_users
    **/
    _count?: true | Project_usersCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Project_usersMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Project_usersMaxAggregateInputType
  }

  export type GetProject_usersAggregateType<T extends Project_usersAggregateArgs> = {
        [P in keyof T & keyof AggregateProject_users]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateProject_users[P]>
      : GetScalarType<T[P], AggregateProject_users[P]>
  }




  export type Project_usersGroupByArgs = {
    where?: Project_usersWhereInput
    orderBy?: Enumerable<Project_usersOrderByWithAggregationInput>
    by: Array<Project_usersScalarFieldEnum>
    having?: Project_usersScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Project_usersCountAggregateInputType | true
    _min?: Project_usersMinAggregateInputType
    _max?: Project_usersMaxAggregateInputType
  }


  export type Project_usersGroupByOutputType = {
    project_user_id: string
    account_id: string | null
    project_id: string | null
    user_id: string | null
    role: string | null
    label: string | null
    deleted: boolean | null
    _count: Project_usersCountAggregateOutputType | null
    _min: Project_usersMinAggregateOutputType | null
    _max: Project_usersMaxAggregateOutputType | null
  }

  type GetProject_usersGroupByPayload<T extends Project_usersGroupByArgs> = PrismaPromise<
    Array<
      PickArray<Project_usersGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Project_usersGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Project_usersGroupByOutputType[P]>
            : GetScalarType<T[P], Project_usersGroupByOutputType[P]>
        }
      >
    >


  export type Project_usersSelect = {
    project_user_id?: boolean
    account_id?: boolean
    project_id?: boolean
    user_id?: boolean
    role?: boolean
    label?: boolean
    deleted?: boolean
    accounts?: boolean | Project_users$accountsArgs
    projects?: boolean | Project_users$projectsArgs
    users?: boolean | Project_users$usersArgs
  }


  export type Project_usersInclude = {
    accounts?: boolean | Project_users$accountsArgs
    projects?: boolean | Project_users$projectsArgs
    users?: boolean | Project_users$usersArgs
  } 

  export type Project_usersGetPayload<S extends boolean | null | undefined | Project_usersArgs> =
    S extends { select: any, include: any } ? 'Please either choose `select` or `include`' :
    S extends true ? Project_users :
    S extends undefined ? never :
    S extends { include: any } & (Project_usersArgs | Project_usersFindManyArgs)
    ? Project_users  & {
    [P in TruthyKeys<S['include']>]:
        P extends 'accounts' ? AccountsGetPayload<S['include'][P]> | null :
        P extends 'projects' ? ProjectsGetPayload<S['include'][P]> | null :
        P extends 'users' ? UsersGetPayload<S['include'][P]> | null :  never
  } 
    : S extends { select: any } & (Project_usersArgs | Project_usersFindManyArgs)
      ? {
    [P in TruthyKeys<S['select']>]:
        P extends 'accounts' ? AccountsGetPayload<S['select'][P]> | null :
        P extends 'projects' ? ProjectsGetPayload<S['select'][P]> | null :
        P extends 'users' ? UsersGetPayload<S['select'][P]> | null :  P extends keyof Project_users ? Project_users[P] : never
  } 
      : Project_users


  type Project_usersCountArgs = Merge<
    Omit<Project_usersFindManyArgs, 'select' | 'include'> & {
      select?: Project_usersCountAggregateInputType | true
    }
  >

  export interface Project_usersDelegate<GlobalRejectSettings extends Prisma.RejectOnNotFound | Prisma.RejectPerOperation | false | undefined> {
    /**
     * Find zero or one Project_users that matches the filter.
     * @param {Project_usersFindUniqueArgs} args - Arguments to find a Project_users
     * @example
     * // Get one Project_users
     * const project_users = await prisma.project_users.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends Project_usersFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, Project_usersFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'Project_users'> extends True ? Prisma__Project_usersClient<Project_usersGetPayload<T>> : Prisma__Project_usersClient<Project_usersGetPayload<T> | null, null>

    /**
     * Find one Project_users that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {Project_usersFindUniqueOrThrowArgs} args - Arguments to find a Project_users
     * @example
     * // Get one Project_users
     * const project_users = await prisma.project_users.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends Project_usersFindUniqueOrThrowArgs>(
      args?: SelectSubset<T, Project_usersFindUniqueOrThrowArgs>
    ): Prisma__Project_usersClient<Project_usersGetPayload<T>>

    /**
     * Find the first Project_users that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Project_usersFindFirstArgs} args - Arguments to find a Project_users
     * @example
     * // Get one Project_users
     * const project_users = await prisma.project_users.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends Project_usersFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, Project_usersFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'Project_users'> extends True ? Prisma__Project_usersClient<Project_usersGetPayload<T>> : Prisma__Project_usersClient<Project_usersGetPayload<T> | null, null>

    /**
     * Find the first Project_users that matches the filter or
     * throw `NotFoundError` if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Project_usersFindFirstOrThrowArgs} args - Arguments to find a Project_users
     * @example
     * // Get one Project_users
     * const project_users = await prisma.project_users.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends Project_usersFindFirstOrThrowArgs>(
      args?: SelectSubset<T, Project_usersFindFirstOrThrowArgs>
    ): Prisma__Project_usersClient<Project_usersGetPayload<T>>

    /**
     * Find zero or more Project_users that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Project_usersFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Project_users
     * const project_users = await prisma.project_users.findMany()
     * 
     * // Get first 10 Project_users
     * const project_users = await prisma.project_users.findMany({ take: 10 })
     * 
     * // Only select the `project_user_id`
     * const project_usersWithProject_user_idOnly = await prisma.project_users.findMany({ select: { project_user_id: true } })
     * 
    **/
    findMany<T extends Project_usersFindManyArgs>(
      args?: SelectSubset<T, Project_usersFindManyArgs>
    ): PrismaPromise<Array<Project_usersGetPayload<T>>>

    /**
     * Create a Project_users.
     * @param {Project_usersCreateArgs} args - Arguments to create a Project_users.
     * @example
     * // Create one Project_users
     * const Project_users = await prisma.project_users.create({
     *   data: {
     *     // ... data to create a Project_users
     *   }
     * })
     * 
    **/
    create<T extends Project_usersCreateArgs>(
      args: SelectSubset<T, Project_usersCreateArgs>
    ): Prisma__Project_usersClient<Project_usersGetPayload<T>>

    /**
     * Create many Project_users.
     *     @param {Project_usersCreateManyArgs} args - Arguments to create many Project_users.
     *     @example
     *     // Create many Project_users
     *     const project_users = await prisma.project_users.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends Project_usersCreateManyArgs>(
      args?: SelectSubset<T, Project_usersCreateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Delete a Project_users.
     * @param {Project_usersDeleteArgs} args - Arguments to delete one Project_users.
     * @example
     * // Delete one Project_users
     * const Project_users = await prisma.project_users.delete({
     *   where: {
     *     // ... filter to delete one Project_users
     *   }
     * })
     * 
    **/
    delete<T extends Project_usersDeleteArgs>(
      args: SelectSubset<T, Project_usersDeleteArgs>
    ): Prisma__Project_usersClient<Project_usersGetPayload<T>>

    /**
     * Update one Project_users.
     * @param {Project_usersUpdateArgs} args - Arguments to update one Project_users.
     * @example
     * // Update one Project_users
     * const project_users = await prisma.project_users.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends Project_usersUpdateArgs>(
      args: SelectSubset<T, Project_usersUpdateArgs>
    ): Prisma__Project_usersClient<Project_usersGetPayload<T>>

    /**
     * Delete zero or more Project_users.
     * @param {Project_usersDeleteManyArgs} args - Arguments to filter Project_users to delete.
     * @example
     * // Delete a few Project_users
     * const { count } = await prisma.project_users.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends Project_usersDeleteManyArgs>(
      args?: SelectSubset<T, Project_usersDeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more Project_users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Project_usersUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Project_users
     * const project_users = await prisma.project_users.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends Project_usersUpdateManyArgs>(
      args: SelectSubset<T, Project_usersUpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one Project_users.
     * @param {Project_usersUpsertArgs} args - Arguments to update or create a Project_users.
     * @example
     * // Update or create a Project_users
     * const project_users = await prisma.project_users.upsert({
     *   create: {
     *     // ... data to create a Project_users
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Project_users we want to update
     *   }
     * })
    **/
    upsert<T extends Project_usersUpsertArgs>(
      args: SelectSubset<T, Project_usersUpsertArgs>
    ): Prisma__Project_usersClient<Project_usersGetPayload<T>>

    /**
     * Count the number of Project_users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Project_usersCountArgs} args - Arguments to filter Project_users to count.
     * @example
     * // Count the number of Project_users
     * const count = await prisma.project_users.count({
     *   where: {
     *     // ... the filter for the Project_users we want to count
     *   }
     * })
    **/
    count<T extends Project_usersCountArgs>(
      args?: Subset<T, Project_usersCountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Project_usersCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Project_users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Project_usersAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Project_usersAggregateArgs>(args: Subset<T, Project_usersAggregateArgs>): PrismaPromise<GetProject_usersAggregateType<T>>

    /**
     * Group by Project_users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Project_usersGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends Project_usersGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: Project_usersGroupByArgs['orderBy'] }
        : { orderBy?: Project_usersGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, Project_usersGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetProject_usersGroupByPayload<T> : PrismaPromise<InputErrors>

  }

  /**
   * The delegate class that acts as a "Promise-like" for Project_users.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__Project_usersClient<T, Null = never> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';

    accounts<T extends Project_users$accountsArgs= {}>(args?: Subset<T, Project_users$accountsArgs>): Prisma__AccountsClient<AccountsGetPayload<T> | Null>;

    projects<T extends Project_users$projectsArgs= {}>(args?: Subset<T, Project_users$projectsArgs>): Prisma__ProjectsClient<ProjectsGetPayload<T> | Null>;

    users<T extends Project_users$usersArgs= {}>(args?: Subset<T, Project_users$usersArgs>): Prisma__UsersClient<UsersGetPayload<T> | Null>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }



  // Custom InputTypes

  /**
   * Project_users base type for findUnique actions
   */
  export type Project_usersFindUniqueArgsBase = {
    /**
     * Select specific fields to fetch from the Project_users
     * 
    **/
    select?: Project_usersSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: Project_usersInclude | null
    /**
     * Filter, which Project_users to fetch.
     * 
    **/
    where: Project_usersWhereUniqueInput
  }

  /**
   * Project_users findUnique
   */
  export interface Project_usersFindUniqueArgs extends Project_usersFindUniqueArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findUniqueOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * Project_users findUniqueOrThrow
   */
  export type Project_usersFindUniqueOrThrowArgs = {
    /**
     * Select specific fields to fetch from the Project_users
     * 
    **/
    select?: Project_usersSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: Project_usersInclude | null
    /**
     * Filter, which Project_users to fetch.
     * 
    **/
    where: Project_usersWhereUniqueInput
  }


  /**
   * Project_users base type for findFirst actions
   */
  export type Project_usersFindFirstArgsBase = {
    /**
     * Select specific fields to fetch from the Project_users
     * 
    **/
    select?: Project_usersSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: Project_usersInclude | null
    /**
     * Filter, which Project_users to fetch.
     * 
    **/
    where?: Project_usersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Project_users to fetch.
     * 
    **/
    orderBy?: Enumerable<Project_usersOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Project_users.
     * 
    **/
    cursor?: Project_usersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Project_users from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Project_users.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Project_users.
     * 
    **/
    distinct?: Enumerable<Project_usersScalarFieldEnum>
  }

  /**
   * Project_users findFirst
   */
  export interface Project_usersFindFirstArgs extends Project_usersFindFirstArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findFirstOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * Project_users findFirstOrThrow
   */
  export type Project_usersFindFirstOrThrowArgs = {
    /**
     * Select specific fields to fetch from the Project_users
     * 
    **/
    select?: Project_usersSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: Project_usersInclude | null
    /**
     * Filter, which Project_users to fetch.
     * 
    **/
    where?: Project_usersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Project_users to fetch.
     * 
    **/
    orderBy?: Enumerable<Project_usersOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Project_users.
     * 
    **/
    cursor?: Project_usersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Project_users from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Project_users.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Project_users.
     * 
    **/
    distinct?: Enumerable<Project_usersScalarFieldEnum>
  }


  /**
   * Project_users findMany
   */
  export type Project_usersFindManyArgs = {
    /**
     * Select specific fields to fetch from the Project_users
     * 
    **/
    select?: Project_usersSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: Project_usersInclude | null
    /**
     * Filter, which Project_users to fetch.
     * 
    **/
    where?: Project_usersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Project_users to fetch.
     * 
    **/
    orderBy?: Enumerable<Project_usersOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Project_users.
     * 
    **/
    cursor?: Project_usersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Project_users from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Project_users.
     * 
    **/
    skip?: number
    distinct?: Enumerable<Project_usersScalarFieldEnum>
  }


  /**
   * Project_users create
   */
  export type Project_usersCreateArgs = {
    /**
     * Select specific fields to fetch from the Project_users
     * 
    **/
    select?: Project_usersSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: Project_usersInclude | null
    /**
     * The data needed to create a Project_users.
     * 
    **/
    data: XOR<Project_usersCreateInput, Project_usersUncheckedCreateInput>
  }


  /**
   * Project_users createMany
   */
  export type Project_usersCreateManyArgs = {
    /**
     * The data used to create many Project_users.
     * 
    **/
    data: Enumerable<Project_usersCreateManyInput>
    skipDuplicates?: boolean
  }


  /**
   * Project_users update
   */
  export type Project_usersUpdateArgs = {
    /**
     * Select specific fields to fetch from the Project_users
     * 
    **/
    select?: Project_usersSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: Project_usersInclude | null
    /**
     * The data needed to update a Project_users.
     * 
    **/
    data: XOR<Project_usersUpdateInput, Project_usersUncheckedUpdateInput>
    /**
     * Choose, which Project_users to update.
     * 
    **/
    where: Project_usersWhereUniqueInput
  }


  /**
   * Project_users updateMany
   */
  export type Project_usersUpdateManyArgs = {
    /**
     * The data used to update Project_users.
     * 
    **/
    data: XOR<Project_usersUpdateManyMutationInput, Project_usersUncheckedUpdateManyInput>
    /**
     * Filter which Project_users to update
     * 
    **/
    where?: Project_usersWhereInput
  }


  /**
   * Project_users upsert
   */
  export type Project_usersUpsertArgs = {
    /**
     * Select specific fields to fetch from the Project_users
     * 
    **/
    select?: Project_usersSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: Project_usersInclude | null
    /**
     * The filter to search for the Project_users to update in case it exists.
     * 
    **/
    where: Project_usersWhereUniqueInput
    /**
     * In case the Project_users found by the `where` argument doesn't exist, create a new Project_users with this data.
     * 
    **/
    create: XOR<Project_usersCreateInput, Project_usersUncheckedCreateInput>
    /**
     * In case the Project_users was found with the provided `where` argument, update it with this data.
     * 
    **/
    update: XOR<Project_usersUpdateInput, Project_usersUncheckedUpdateInput>
  }


  /**
   * Project_users delete
   */
  export type Project_usersDeleteArgs = {
    /**
     * Select specific fields to fetch from the Project_users
     * 
    **/
    select?: Project_usersSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: Project_usersInclude | null
    /**
     * Filter which Project_users to delete.
     * 
    **/
    where: Project_usersWhereUniqueInput
  }


  /**
   * Project_users deleteMany
   */
  export type Project_usersDeleteManyArgs = {
    /**
     * Filter which Project_users to delete
     * 
    **/
    where?: Project_usersWhereInput
  }


  /**
   * Project_users.accounts
   */
  export type Project_users$accountsArgs = {
    /**
     * Select specific fields to fetch from the Accounts
     * 
    **/
    select?: AccountsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: AccountsInclude | null
    where?: AccountsWhereInput
  }


  /**
   * Project_users.projects
   */
  export type Project_users$projectsArgs = {
    /**
     * Select specific fields to fetch from the Projects
     * 
    **/
    select?: ProjectsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: ProjectsInclude | null
    where?: ProjectsWhereInput
  }


  /**
   * Project_users.users
   */
  export type Project_users$usersArgs = {
    /**
     * Select specific fields to fetch from the Users
     * 
    **/
    select?: UsersSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: UsersInclude | null
    where?: UsersWhereInput
  }


  /**
   * Project_users without action
   */
  export type Project_usersArgs = {
    /**
     * Select specific fields to fetch from the Project_users
     * 
    **/
    select?: Project_usersSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: Project_usersInclude | null
  }



  /**
   * Model Projects
   */


  export type AggregateProjects = {
    _count: ProjectsCountAggregateOutputType | null
    _min: ProjectsMinAggregateOutputType | null
    _max: ProjectsMaxAggregateOutputType | null
  }

  export type ProjectsMinAggregateOutputType = {
    project_id: string | null
    account_id: string | null
    name: string | null
    label: string | null
    type: project_type | null
    subproject_name_singular: string | null
    subproject_name_plural: string | null
    subproject_order_by: string | null
    places_label_by: string | null
    persons_label_by: string | null
    persons_order_by: string | null
    goal_reports_label_by: string | null
    goal_reports_order_by: string | null
    values_on_multiple_levels: string | null
    multiple_action_values_on_same_level: string | null
    multiple_check_values_on_same_level: string | null
    files_offline: boolean | null
    files_active_projects: boolean | null
    files_active_subprojects: boolean | null
    files_active_places: boolean | null
    files_active_actions: boolean | null
    files_active_checks: boolean | null
    deleted: boolean | null
  }

  export type ProjectsMaxAggregateOutputType = {
    project_id: string | null
    account_id: string | null
    name: string | null
    label: string | null
    type: project_type | null
    subproject_name_singular: string | null
    subproject_name_plural: string | null
    subproject_order_by: string | null
    places_label_by: string | null
    persons_label_by: string | null
    persons_order_by: string | null
    goal_reports_label_by: string | null
    goal_reports_order_by: string | null
    values_on_multiple_levels: string | null
    multiple_action_values_on_same_level: string | null
    multiple_check_values_on_same_level: string | null
    files_offline: boolean | null
    files_active_projects: boolean | null
    files_active_subprojects: boolean | null
    files_active_places: boolean | null
    files_active_actions: boolean | null
    files_active_checks: boolean | null
    deleted: boolean | null
  }

  export type ProjectsCountAggregateOutputType = {
    project_id: number
    account_id: number
    name: number
    label: number
    type: number
    subproject_name_singular: number
    subproject_name_plural: number
    subproject_order_by: number
    places_label_by: number
    places_order_by: number
    persons_label_by: number
    persons_order_by: number
    goal_reports_label_by: number
    goal_reports_order_by: number
    values_on_multiple_levels: number
    multiple_action_values_on_same_level: number
    multiple_check_values_on_same_level: number
    data: number
    files_offline: number
    files_active_projects: number
    files_active_subprojects: number
    files_active_places: number
    files_active_actions: number
    files_active_checks: number
    deleted: number
    _all: number
  }


  export type ProjectsMinAggregateInputType = {
    project_id?: true
    account_id?: true
    name?: true
    label?: true
    type?: true
    subproject_name_singular?: true
    subproject_name_plural?: true
    subproject_order_by?: true
    places_label_by?: true
    persons_label_by?: true
    persons_order_by?: true
    goal_reports_label_by?: true
    goal_reports_order_by?: true
    values_on_multiple_levels?: true
    multiple_action_values_on_same_level?: true
    multiple_check_values_on_same_level?: true
    files_offline?: true
    files_active_projects?: true
    files_active_subprojects?: true
    files_active_places?: true
    files_active_actions?: true
    files_active_checks?: true
    deleted?: true
  }

  export type ProjectsMaxAggregateInputType = {
    project_id?: true
    account_id?: true
    name?: true
    label?: true
    type?: true
    subproject_name_singular?: true
    subproject_name_plural?: true
    subproject_order_by?: true
    places_label_by?: true
    persons_label_by?: true
    persons_order_by?: true
    goal_reports_label_by?: true
    goal_reports_order_by?: true
    values_on_multiple_levels?: true
    multiple_action_values_on_same_level?: true
    multiple_check_values_on_same_level?: true
    files_offline?: true
    files_active_projects?: true
    files_active_subprojects?: true
    files_active_places?: true
    files_active_actions?: true
    files_active_checks?: true
    deleted?: true
  }

  export type ProjectsCountAggregateInputType = {
    project_id?: true
    account_id?: true
    name?: true
    label?: true
    type?: true
    subproject_name_singular?: true
    subproject_name_plural?: true
    subproject_order_by?: true
    places_label_by?: true
    places_order_by?: true
    persons_label_by?: true
    persons_order_by?: true
    goal_reports_label_by?: true
    goal_reports_order_by?: true
    values_on_multiple_levels?: true
    multiple_action_values_on_same_level?: true
    multiple_check_values_on_same_level?: true
    data?: true
    files_offline?: true
    files_active_projects?: true
    files_active_subprojects?: true
    files_active_places?: true
    files_active_actions?: true
    files_active_checks?: true
    deleted?: true
    _all?: true
  }

  export type ProjectsAggregateArgs = {
    /**
     * Filter which Projects to aggregate.
     * 
    **/
    where?: ProjectsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Projects to fetch.
     * 
    **/
    orderBy?: Enumerable<ProjectsOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     * 
    **/
    cursor?: ProjectsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Projects from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Projects.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Projects
    **/
    _count?: true | ProjectsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ProjectsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ProjectsMaxAggregateInputType
  }

  export type GetProjectsAggregateType<T extends ProjectsAggregateArgs> = {
        [P in keyof T & keyof AggregateProjects]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateProjects[P]>
      : GetScalarType<T[P], AggregateProjects[P]>
  }




  export type ProjectsGroupByArgs = {
    where?: ProjectsWhereInput
    orderBy?: Enumerable<ProjectsOrderByWithAggregationInput>
    by: Array<ProjectsScalarFieldEnum>
    having?: ProjectsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ProjectsCountAggregateInputType | true
    _min?: ProjectsMinAggregateInputType
    _max?: ProjectsMaxAggregateInputType
  }


  export type ProjectsGroupByOutputType = {
    project_id: string
    account_id: string | null
    name: string | null
    label: string | null
    type: project_type | null
    subproject_name_singular: string | null
    subproject_name_plural: string | null
    subproject_order_by: string | null
    places_label_by: string | null
    places_order_by: JsonValue | null
    persons_label_by: string | null
    persons_order_by: string | null
    goal_reports_label_by: string | null
    goal_reports_order_by: string | null
    values_on_multiple_levels: string | null
    multiple_action_values_on_same_level: string | null
    multiple_check_values_on_same_level: string | null
    data: JsonValue | null
    files_offline: boolean | null
    files_active_projects: boolean | null
    files_active_subprojects: boolean | null
    files_active_places: boolean | null
    files_active_actions: boolean | null
    files_active_checks: boolean | null
    deleted: boolean | null
    _count: ProjectsCountAggregateOutputType | null
    _min: ProjectsMinAggregateOutputType | null
    _max: ProjectsMaxAggregateOutputType | null
  }

  type GetProjectsGroupByPayload<T extends ProjectsGroupByArgs> = PrismaPromise<
    Array<
      PickArray<ProjectsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ProjectsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ProjectsGroupByOutputType[P]>
            : GetScalarType<T[P], ProjectsGroupByOutputType[P]>
        }
      >
    >


  export type ProjectsSelect = {
    project_id?: boolean
    account_id?: boolean
    name?: boolean
    label?: boolean
    type?: boolean
    subproject_name_singular?: boolean
    subproject_name_plural?: boolean
    subproject_order_by?: boolean
    places_label_by?: boolean
    places_order_by?: boolean
    persons_label_by?: boolean
    persons_order_by?: boolean
    goal_reports_label_by?: boolean
    goal_reports_order_by?: boolean
    values_on_multiple_levels?: boolean
    multiple_action_values_on_same_level?: boolean
    multiple_check_values_on_same_level?: boolean
    data?: boolean
    files_offline?: boolean
    files_active_projects?: boolean
    files_active_subprojects?: boolean
    files_active_places?: boolean
    files_active_actions?: boolean
    files_active_checks?: boolean
    deleted?: boolean
    gbif_occurrence_downloads?: boolean | Projects$gbif_occurrence_downloadsArgs
    gbif_occurrences?: boolean | Projects$gbif_occurrencesArgs
    gbif_taxa?: boolean | Projects$gbif_taxaArgs
    lists?: boolean | Projects$listsArgs
    observation_sources?: boolean | Projects$observation_sourcesArgs
    persons?: boolean | Projects$personsArgs
    place_levels?: boolean | Projects$place_levelsArgs
    project_users?: boolean | Projects$project_usersArgs
    accounts?: boolean | Projects$accountsArgs
    subprojects?: boolean | Projects$subprojectsArgs
    taxonomies?: boolean | Projects$taxonomiesArgs
    tile_layers?: boolean | Projects$tile_layersArgs
    units?: boolean | Projects$unitsArgs
    _count?: boolean | ProjectsCountOutputTypeArgs
  }


  export type ProjectsInclude = {
    gbif_occurrence_downloads?: boolean | Projects$gbif_occurrence_downloadsArgs
    gbif_occurrences?: boolean | Projects$gbif_occurrencesArgs
    gbif_taxa?: boolean | Projects$gbif_taxaArgs
    lists?: boolean | Projects$listsArgs
    observation_sources?: boolean | Projects$observation_sourcesArgs
    persons?: boolean | Projects$personsArgs
    place_levels?: boolean | Projects$place_levelsArgs
    project_users?: boolean | Projects$project_usersArgs
    accounts?: boolean | Projects$accountsArgs
    subprojects?: boolean | Projects$subprojectsArgs
    taxonomies?: boolean | Projects$taxonomiesArgs
    tile_layers?: boolean | Projects$tile_layersArgs
    units?: boolean | Projects$unitsArgs
    _count?: boolean | ProjectsCountOutputTypeArgs
  } 

  export type ProjectsGetPayload<S extends boolean | null | undefined | ProjectsArgs> =
    S extends { select: any, include: any } ? 'Please either choose `select` or `include`' :
    S extends true ? Projects :
    S extends undefined ? never :
    S extends { include: any } & (ProjectsArgs | ProjectsFindManyArgs)
    ? Projects  & {
    [P in TruthyKeys<S['include']>]:
        P extends 'gbif_occurrence_downloads' ? Array < Gbif_occurrence_downloadsGetPayload<S['include'][P]>>  :
        P extends 'gbif_occurrences' ? Array < Gbif_occurrencesGetPayload<S['include'][P]>>  :
        P extends 'gbif_taxa' ? Array < Gbif_taxaGetPayload<S['include'][P]>>  :
        P extends 'lists' ? Array < ListsGetPayload<S['include'][P]>>  :
        P extends 'observation_sources' ? Array < Observation_sourcesGetPayload<S['include'][P]>>  :
        P extends 'persons' ? Array < PersonsGetPayload<S['include'][P]>>  :
        P extends 'place_levels' ? Array < Place_levelsGetPayload<S['include'][P]>>  :
        P extends 'project_users' ? Array < Project_usersGetPayload<S['include'][P]>>  :
        P extends 'accounts' ? AccountsGetPayload<S['include'][P]> | null :
        P extends 'subprojects' ? Array < SubprojectsGetPayload<S['include'][P]>>  :
        P extends 'taxonomies' ? Array < TaxonomiesGetPayload<S['include'][P]>>  :
        P extends 'tile_layers' ? Array < Tile_layersGetPayload<S['include'][P]>>  :
        P extends 'units' ? Array < UnitsGetPayload<S['include'][P]>>  :
        P extends '_count' ? ProjectsCountOutputTypeGetPayload<S['include'][P]> :  never
  } 
    : S extends { select: any } & (ProjectsArgs | ProjectsFindManyArgs)
      ? {
    [P in TruthyKeys<S['select']>]:
        P extends 'gbif_occurrence_downloads' ? Array < Gbif_occurrence_downloadsGetPayload<S['select'][P]>>  :
        P extends 'gbif_occurrences' ? Array < Gbif_occurrencesGetPayload<S['select'][P]>>  :
        P extends 'gbif_taxa' ? Array < Gbif_taxaGetPayload<S['select'][P]>>  :
        P extends 'lists' ? Array < ListsGetPayload<S['select'][P]>>  :
        P extends 'observation_sources' ? Array < Observation_sourcesGetPayload<S['select'][P]>>  :
        P extends 'persons' ? Array < PersonsGetPayload<S['select'][P]>>  :
        P extends 'place_levels' ? Array < Place_levelsGetPayload<S['select'][P]>>  :
        P extends 'project_users' ? Array < Project_usersGetPayload<S['select'][P]>>  :
        P extends 'accounts' ? AccountsGetPayload<S['select'][P]> | null :
        P extends 'subprojects' ? Array < SubprojectsGetPayload<S['select'][P]>>  :
        P extends 'taxonomies' ? Array < TaxonomiesGetPayload<S['select'][P]>>  :
        P extends 'tile_layers' ? Array < Tile_layersGetPayload<S['select'][P]>>  :
        P extends 'units' ? Array < UnitsGetPayload<S['select'][P]>>  :
        P extends '_count' ? ProjectsCountOutputTypeGetPayload<S['select'][P]> :  P extends keyof Projects ? Projects[P] : never
  } 
      : Projects


  type ProjectsCountArgs = Merge<
    Omit<ProjectsFindManyArgs, 'select' | 'include'> & {
      select?: ProjectsCountAggregateInputType | true
    }
  >

  export interface ProjectsDelegate<GlobalRejectSettings extends Prisma.RejectOnNotFound | Prisma.RejectPerOperation | false | undefined> {
    /**
     * Find zero or one Projects that matches the filter.
     * @param {ProjectsFindUniqueArgs} args - Arguments to find a Projects
     * @example
     * // Get one Projects
     * const projects = await prisma.projects.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends ProjectsFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, ProjectsFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'Projects'> extends True ? Prisma__ProjectsClient<ProjectsGetPayload<T>> : Prisma__ProjectsClient<ProjectsGetPayload<T> | null, null>

    /**
     * Find one Projects that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {ProjectsFindUniqueOrThrowArgs} args - Arguments to find a Projects
     * @example
     * // Get one Projects
     * const projects = await prisma.projects.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends ProjectsFindUniqueOrThrowArgs>(
      args?: SelectSubset<T, ProjectsFindUniqueOrThrowArgs>
    ): Prisma__ProjectsClient<ProjectsGetPayload<T>>

    /**
     * Find the first Projects that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProjectsFindFirstArgs} args - Arguments to find a Projects
     * @example
     * // Get one Projects
     * const projects = await prisma.projects.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends ProjectsFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, ProjectsFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'Projects'> extends True ? Prisma__ProjectsClient<ProjectsGetPayload<T>> : Prisma__ProjectsClient<ProjectsGetPayload<T> | null, null>

    /**
     * Find the first Projects that matches the filter or
     * throw `NotFoundError` if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProjectsFindFirstOrThrowArgs} args - Arguments to find a Projects
     * @example
     * // Get one Projects
     * const projects = await prisma.projects.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends ProjectsFindFirstOrThrowArgs>(
      args?: SelectSubset<T, ProjectsFindFirstOrThrowArgs>
    ): Prisma__ProjectsClient<ProjectsGetPayload<T>>

    /**
     * Find zero or more Projects that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProjectsFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Projects
     * const projects = await prisma.projects.findMany()
     * 
     * // Get first 10 Projects
     * const projects = await prisma.projects.findMany({ take: 10 })
     * 
     * // Only select the `project_id`
     * const projectsWithProject_idOnly = await prisma.projects.findMany({ select: { project_id: true } })
     * 
    **/
    findMany<T extends ProjectsFindManyArgs>(
      args?: SelectSubset<T, ProjectsFindManyArgs>
    ): PrismaPromise<Array<ProjectsGetPayload<T>>>

    /**
     * Create a Projects.
     * @param {ProjectsCreateArgs} args - Arguments to create a Projects.
     * @example
     * // Create one Projects
     * const Projects = await prisma.projects.create({
     *   data: {
     *     // ... data to create a Projects
     *   }
     * })
     * 
    **/
    create<T extends ProjectsCreateArgs>(
      args: SelectSubset<T, ProjectsCreateArgs>
    ): Prisma__ProjectsClient<ProjectsGetPayload<T>>

    /**
     * Create many Projects.
     *     @param {ProjectsCreateManyArgs} args - Arguments to create many Projects.
     *     @example
     *     // Create many Projects
     *     const projects = await prisma.projects.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends ProjectsCreateManyArgs>(
      args?: SelectSubset<T, ProjectsCreateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Delete a Projects.
     * @param {ProjectsDeleteArgs} args - Arguments to delete one Projects.
     * @example
     * // Delete one Projects
     * const Projects = await prisma.projects.delete({
     *   where: {
     *     // ... filter to delete one Projects
     *   }
     * })
     * 
    **/
    delete<T extends ProjectsDeleteArgs>(
      args: SelectSubset<T, ProjectsDeleteArgs>
    ): Prisma__ProjectsClient<ProjectsGetPayload<T>>

    /**
     * Update one Projects.
     * @param {ProjectsUpdateArgs} args - Arguments to update one Projects.
     * @example
     * // Update one Projects
     * const projects = await prisma.projects.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends ProjectsUpdateArgs>(
      args: SelectSubset<T, ProjectsUpdateArgs>
    ): Prisma__ProjectsClient<ProjectsGetPayload<T>>

    /**
     * Delete zero or more Projects.
     * @param {ProjectsDeleteManyArgs} args - Arguments to filter Projects to delete.
     * @example
     * // Delete a few Projects
     * const { count } = await prisma.projects.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends ProjectsDeleteManyArgs>(
      args?: SelectSubset<T, ProjectsDeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more Projects.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProjectsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Projects
     * const projects = await prisma.projects.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends ProjectsUpdateManyArgs>(
      args: SelectSubset<T, ProjectsUpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one Projects.
     * @param {ProjectsUpsertArgs} args - Arguments to update or create a Projects.
     * @example
     * // Update or create a Projects
     * const projects = await prisma.projects.upsert({
     *   create: {
     *     // ... data to create a Projects
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Projects we want to update
     *   }
     * })
    **/
    upsert<T extends ProjectsUpsertArgs>(
      args: SelectSubset<T, ProjectsUpsertArgs>
    ): Prisma__ProjectsClient<ProjectsGetPayload<T>>

    /**
     * Count the number of Projects.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProjectsCountArgs} args - Arguments to filter Projects to count.
     * @example
     * // Count the number of Projects
     * const count = await prisma.projects.count({
     *   where: {
     *     // ... the filter for the Projects we want to count
     *   }
     * })
    **/
    count<T extends ProjectsCountArgs>(
      args?: Subset<T, ProjectsCountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ProjectsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Projects.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProjectsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ProjectsAggregateArgs>(args: Subset<T, ProjectsAggregateArgs>): PrismaPromise<GetProjectsAggregateType<T>>

    /**
     * Group by Projects.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProjectsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ProjectsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ProjectsGroupByArgs['orderBy'] }
        : { orderBy?: ProjectsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ProjectsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetProjectsGroupByPayload<T> : PrismaPromise<InputErrors>

  }

  /**
   * The delegate class that acts as a "Promise-like" for Projects.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__ProjectsClient<T, Null = never> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';

    gbif_occurrence_downloads<T extends Projects$gbif_occurrence_downloadsArgs= {}>(args?: Subset<T, Projects$gbif_occurrence_downloadsArgs>): PrismaPromise<Array<Gbif_occurrence_downloadsGetPayload<T>>| Null>;

    gbif_occurrences<T extends Projects$gbif_occurrencesArgs= {}>(args?: Subset<T, Projects$gbif_occurrencesArgs>): PrismaPromise<Array<Gbif_occurrencesGetPayload<T>>| Null>;

    gbif_taxa<T extends Projects$gbif_taxaArgs= {}>(args?: Subset<T, Projects$gbif_taxaArgs>): PrismaPromise<Array<Gbif_taxaGetPayload<T>>| Null>;

    lists<T extends Projects$listsArgs= {}>(args?: Subset<T, Projects$listsArgs>): PrismaPromise<Array<ListsGetPayload<T>>| Null>;

    observation_sources<T extends Projects$observation_sourcesArgs= {}>(args?: Subset<T, Projects$observation_sourcesArgs>): PrismaPromise<Array<Observation_sourcesGetPayload<T>>| Null>;

    persons<T extends Projects$personsArgs= {}>(args?: Subset<T, Projects$personsArgs>): PrismaPromise<Array<PersonsGetPayload<T>>| Null>;

    place_levels<T extends Projects$place_levelsArgs= {}>(args?: Subset<T, Projects$place_levelsArgs>): PrismaPromise<Array<Place_levelsGetPayload<T>>| Null>;

    project_users<T extends Projects$project_usersArgs= {}>(args?: Subset<T, Projects$project_usersArgs>): PrismaPromise<Array<Project_usersGetPayload<T>>| Null>;

    accounts<T extends Projects$accountsArgs= {}>(args?: Subset<T, Projects$accountsArgs>): Prisma__AccountsClient<AccountsGetPayload<T> | Null>;

    subprojects<T extends Projects$subprojectsArgs= {}>(args?: Subset<T, Projects$subprojectsArgs>): PrismaPromise<Array<SubprojectsGetPayload<T>>| Null>;

    taxonomies<T extends Projects$taxonomiesArgs= {}>(args?: Subset<T, Projects$taxonomiesArgs>): PrismaPromise<Array<TaxonomiesGetPayload<T>>| Null>;

    tile_layers<T extends Projects$tile_layersArgs= {}>(args?: Subset<T, Projects$tile_layersArgs>): PrismaPromise<Array<Tile_layersGetPayload<T>>| Null>;

    units<T extends Projects$unitsArgs= {}>(args?: Subset<T, Projects$unitsArgs>): PrismaPromise<Array<UnitsGetPayload<T>>| Null>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }



  // Custom InputTypes

  /**
   * Projects base type for findUnique actions
   */
  export type ProjectsFindUniqueArgsBase = {
    /**
     * Select specific fields to fetch from the Projects
     * 
    **/
    select?: ProjectsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: ProjectsInclude | null
    /**
     * Filter, which Projects to fetch.
     * 
    **/
    where: ProjectsWhereUniqueInput
  }

  /**
   * Projects findUnique
   */
  export interface ProjectsFindUniqueArgs extends ProjectsFindUniqueArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findUniqueOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * Projects findUniqueOrThrow
   */
  export type ProjectsFindUniqueOrThrowArgs = {
    /**
     * Select specific fields to fetch from the Projects
     * 
    **/
    select?: ProjectsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: ProjectsInclude | null
    /**
     * Filter, which Projects to fetch.
     * 
    **/
    where: ProjectsWhereUniqueInput
  }


  /**
   * Projects base type for findFirst actions
   */
  export type ProjectsFindFirstArgsBase = {
    /**
     * Select specific fields to fetch from the Projects
     * 
    **/
    select?: ProjectsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: ProjectsInclude | null
    /**
     * Filter, which Projects to fetch.
     * 
    **/
    where?: ProjectsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Projects to fetch.
     * 
    **/
    orderBy?: Enumerable<ProjectsOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Projects.
     * 
    **/
    cursor?: ProjectsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Projects from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Projects.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Projects.
     * 
    **/
    distinct?: Enumerable<ProjectsScalarFieldEnum>
  }

  /**
   * Projects findFirst
   */
  export interface ProjectsFindFirstArgs extends ProjectsFindFirstArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findFirstOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * Projects findFirstOrThrow
   */
  export type ProjectsFindFirstOrThrowArgs = {
    /**
     * Select specific fields to fetch from the Projects
     * 
    **/
    select?: ProjectsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: ProjectsInclude | null
    /**
     * Filter, which Projects to fetch.
     * 
    **/
    where?: ProjectsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Projects to fetch.
     * 
    **/
    orderBy?: Enumerable<ProjectsOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Projects.
     * 
    **/
    cursor?: ProjectsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Projects from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Projects.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Projects.
     * 
    **/
    distinct?: Enumerable<ProjectsScalarFieldEnum>
  }


  /**
   * Projects findMany
   */
  export type ProjectsFindManyArgs = {
    /**
     * Select specific fields to fetch from the Projects
     * 
    **/
    select?: ProjectsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: ProjectsInclude | null
    /**
     * Filter, which Projects to fetch.
     * 
    **/
    where?: ProjectsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Projects to fetch.
     * 
    **/
    orderBy?: Enumerable<ProjectsOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Projects.
     * 
    **/
    cursor?: ProjectsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Projects from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Projects.
     * 
    **/
    skip?: number
    distinct?: Enumerable<ProjectsScalarFieldEnum>
  }


  /**
   * Projects create
   */
  export type ProjectsCreateArgs = {
    /**
     * Select specific fields to fetch from the Projects
     * 
    **/
    select?: ProjectsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: ProjectsInclude | null
    /**
     * The data needed to create a Projects.
     * 
    **/
    data: XOR<ProjectsCreateInput, ProjectsUncheckedCreateInput>
  }


  /**
   * Projects createMany
   */
  export type ProjectsCreateManyArgs = {
    /**
     * The data used to create many Projects.
     * 
    **/
    data: Enumerable<ProjectsCreateManyInput>
    skipDuplicates?: boolean
  }


  /**
   * Projects update
   */
  export type ProjectsUpdateArgs = {
    /**
     * Select specific fields to fetch from the Projects
     * 
    **/
    select?: ProjectsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: ProjectsInclude | null
    /**
     * The data needed to update a Projects.
     * 
    **/
    data: XOR<ProjectsUpdateInput, ProjectsUncheckedUpdateInput>
    /**
     * Choose, which Projects to update.
     * 
    **/
    where: ProjectsWhereUniqueInput
  }


  /**
   * Projects updateMany
   */
  export type ProjectsUpdateManyArgs = {
    /**
     * The data used to update Projects.
     * 
    **/
    data: XOR<ProjectsUpdateManyMutationInput, ProjectsUncheckedUpdateManyInput>
    /**
     * Filter which Projects to update
     * 
    **/
    where?: ProjectsWhereInput
  }


  /**
   * Projects upsert
   */
  export type ProjectsUpsertArgs = {
    /**
     * Select specific fields to fetch from the Projects
     * 
    **/
    select?: ProjectsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: ProjectsInclude | null
    /**
     * The filter to search for the Projects to update in case it exists.
     * 
    **/
    where: ProjectsWhereUniqueInput
    /**
     * In case the Projects found by the `where` argument doesn't exist, create a new Projects with this data.
     * 
    **/
    create: XOR<ProjectsCreateInput, ProjectsUncheckedCreateInput>
    /**
     * In case the Projects was found with the provided `where` argument, update it with this data.
     * 
    **/
    update: XOR<ProjectsUpdateInput, ProjectsUncheckedUpdateInput>
  }


  /**
   * Projects delete
   */
  export type ProjectsDeleteArgs = {
    /**
     * Select specific fields to fetch from the Projects
     * 
    **/
    select?: ProjectsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: ProjectsInclude | null
    /**
     * Filter which Projects to delete.
     * 
    **/
    where: ProjectsWhereUniqueInput
  }


  /**
   * Projects deleteMany
   */
  export type ProjectsDeleteManyArgs = {
    /**
     * Filter which Projects to delete
     * 
    **/
    where?: ProjectsWhereInput
  }


  /**
   * Projects.gbif_occurrence_downloads
   */
  export type Projects$gbif_occurrence_downloadsArgs = {
    /**
     * Select specific fields to fetch from the Gbif_occurrence_downloads
     * 
    **/
    select?: Gbif_occurrence_downloadsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: Gbif_occurrence_downloadsInclude | null
    where?: Gbif_occurrence_downloadsWhereInput
    orderBy?: Enumerable<Gbif_occurrence_downloadsOrderByWithRelationInput>
    cursor?: Gbif_occurrence_downloadsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Enumerable<Gbif_occurrence_downloadsScalarFieldEnum>
  }


  /**
   * Projects.gbif_occurrences
   */
  export type Projects$gbif_occurrencesArgs = {
    /**
     * Select specific fields to fetch from the Gbif_occurrences
     * 
    **/
    select?: Gbif_occurrencesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: Gbif_occurrencesInclude | null
    where?: Gbif_occurrencesWhereInput
    orderBy?: Enumerable<Gbif_occurrencesOrderByWithRelationInput>
    cursor?: Gbif_occurrencesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Enumerable<Gbif_occurrencesScalarFieldEnum>
  }


  /**
   * Projects.gbif_taxa
   */
  export type Projects$gbif_taxaArgs = {
    /**
     * Select specific fields to fetch from the Gbif_taxa
     * 
    **/
    select?: Gbif_taxaSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: Gbif_taxaInclude | null
    where?: Gbif_taxaWhereInput
    orderBy?: Enumerable<Gbif_taxaOrderByWithRelationInput>
    cursor?: Gbif_taxaWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Enumerable<Gbif_taxaScalarFieldEnum>
  }


  /**
   * Projects.lists
   */
  export type Projects$listsArgs = {
    /**
     * Select specific fields to fetch from the Lists
     * 
    **/
    select?: ListsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: ListsInclude | null
    where?: ListsWhereInput
    orderBy?: Enumerable<ListsOrderByWithRelationInput>
    cursor?: ListsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Enumerable<ListsScalarFieldEnum>
  }


  /**
   * Projects.observation_sources
   */
  export type Projects$observation_sourcesArgs = {
    /**
     * Select specific fields to fetch from the Observation_sources
     * 
    **/
    select?: Observation_sourcesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: Observation_sourcesInclude | null
    where?: Observation_sourcesWhereInput
    orderBy?: Enumerable<Observation_sourcesOrderByWithRelationInput>
    cursor?: Observation_sourcesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Enumerable<Observation_sourcesScalarFieldEnum>
  }


  /**
   * Projects.persons
   */
  export type Projects$personsArgs = {
    /**
     * Select specific fields to fetch from the Persons
     * 
    **/
    select?: PersonsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: PersonsInclude | null
    where?: PersonsWhereInput
    orderBy?: Enumerable<PersonsOrderByWithRelationInput>
    cursor?: PersonsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Enumerable<PersonsScalarFieldEnum>
  }


  /**
   * Projects.place_levels
   */
  export type Projects$place_levelsArgs = {
    /**
     * Select specific fields to fetch from the Place_levels
     * 
    **/
    select?: Place_levelsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: Place_levelsInclude | null
    where?: Place_levelsWhereInput
    orderBy?: Enumerable<Place_levelsOrderByWithRelationInput>
    cursor?: Place_levelsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Enumerable<Place_levelsScalarFieldEnum>
  }


  /**
   * Projects.project_users
   */
  export type Projects$project_usersArgs = {
    /**
     * Select specific fields to fetch from the Project_users
     * 
    **/
    select?: Project_usersSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: Project_usersInclude | null
    where?: Project_usersWhereInput
    orderBy?: Enumerable<Project_usersOrderByWithRelationInput>
    cursor?: Project_usersWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Enumerable<Project_usersScalarFieldEnum>
  }


  /**
   * Projects.accounts
   */
  export type Projects$accountsArgs = {
    /**
     * Select specific fields to fetch from the Accounts
     * 
    **/
    select?: AccountsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: AccountsInclude | null
    where?: AccountsWhereInput
  }


  /**
   * Projects.subprojects
   */
  export type Projects$subprojectsArgs = {
    /**
     * Select specific fields to fetch from the Subprojects
     * 
    **/
    select?: SubprojectsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: SubprojectsInclude | null
    where?: SubprojectsWhereInput
    orderBy?: Enumerable<SubprojectsOrderByWithRelationInput>
    cursor?: SubprojectsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Enumerable<SubprojectsScalarFieldEnum>
  }


  /**
   * Projects.taxonomies
   */
  export type Projects$taxonomiesArgs = {
    /**
     * Select specific fields to fetch from the Taxonomies
     * 
    **/
    select?: TaxonomiesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: TaxonomiesInclude | null
    where?: TaxonomiesWhereInput
    orderBy?: Enumerable<TaxonomiesOrderByWithRelationInput>
    cursor?: TaxonomiesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Enumerable<TaxonomiesScalarFieldEnum>
  }


  /**
   * Projects.tile_layers
   */
  export type Projects$tile_layersArgs = {
    /**
     * Select specific fields to fetch from the Tile_layers
     * 
    **/
    select?: Tile_layersSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: Tile_layersInclude | null
    where?: Tile_layersWhereInput
    orderBy?: Enumerable<Tile_layersOrderByWithRelationInput>
    cursor?: Tile_layersWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Enumerable<Tile_layersScalarFieldEnum>
  }


  /**
   * Projects.units
   */
  export type Projects$unitsArgs = {
    /**
     * Select specific fields to fetch from the Units
     * 
    **/
    select?: UnitsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: UnitsInclude | null
    where?: UnitsWhereInput
    orderBy?: Enumerable<UnitsOrderByWithRelationInput>
    cursor?: UnitsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Enumerable<UnitsScalarFieldEnum>
  }


  /**
   * Projects without action
   */
  export type ProjectsArgs = {
    /**
     * Select specific fields to fetch from the Projects
     * 
    **/
    select?: ProjectsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: ProjectsInclude | null
  }



  /**
   * Model Subproject_taxa
   */


  export type AggregateSubproject_taxa = {
    _count: Subproject_taxaCountAggregateOutputType | null
    _min: Subproject_taxaMinAggregateOutputType | null
    _max: Subproject_taxaMaxAggregateOutputType | null
  }

  export type Subproject_taxaMinAggregateOutputType = {
    subproject_taxon_id: string | null
    account_id: string | null
    subproject_id: string | null
    taxon_id: string | null
    label: string | null
    deleted: boolean | null
  }

  export type Subproject_taxaMaxAggregateOutputType = {
    subproject_taxon_id: string | null
    account_id: string | null
    subproject_id: string | null
    taxon_id: string | null
    label: string | null
    deleted: boolean | null
  }

  export type Subproject_taxaCountAggregateOutputType = {
    subproject_taxon_id: number
    account_id: number
    subproject_id: number
    taxon_id: number
    label: number
    deleted: number
    _all: number
  }


  export type Subproject_taxaMinAggregateInputType = {
    subproject_taxon_id?: true
    account_id?: true
    subproject_id?: true
    taxon_id?: true
    label?: true
    deleted?: true
  }

  export type Subproject_taxaMaxAggregateInputType = {
    subproject_taxon_id?: true
    account_id?: true
    subproject_id?: true
    taxon_id?: true
    label?: true
    deleted?: true
  }

  export type Subproject_taxaCountAggregateInputType = {
    subproject_taxon_id?: true
    account_id?: true
    subproject_id?: true
    taxon_id?: true
    label?: true
    deleted?: true
    _all?: true
  }

  export type Subproject_taxaAggregateArgs = {
    /**
     * Filter which Subproject_taxa to aggregate.
     * 
    **/
    where?: Subproject_taxaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Subproject_taxas to fetch.
     * 
    **/
    orderBy?: Enumerable<Subproject_taxaOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     * 
    **/
    cursor?: Subproject_taxaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Subproject_taxas from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Subproject_taxas.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Subproject_taxas
    **/
    _count?: true | Subproject_taxaCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Subproject_taxaMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Subproject_taxaMaxAggregateInputType
  }

  export type GetSubproject_taxaAggregateType<T extends Subproject_taxaAggregateArgs> = {
        [P in keyof T & keyof AggregateSubproject_taxa]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSubproject_taxa[P]>
      : GetScalarType<T[P], AggregateSubproject_taxa[P]>
  }




  export type Subproject_taxaGroupByArgs = {
    where?: Subproject_taxaWhereInput
    orderBy?: Enumerable<Subproject_taxaOrderByWithAggregationInput>
    by: Array<Subproject_taxaScalarFieldEnum>
    having?: Subproject_taxaScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Subproject_taxaCountAggregateInputType | true
    _min?: Subproject_taxaMinAggregateInputType
    _max?: Subproject_taxaMaxAggregateInputType
  }


  export type Subproject_taxaGroupByOutputType = {
    subproject_taxon_id: string
    account_id: string | null
    subproject_id: string | null
    taxon_id: string | null
    label: string | null
    deleted: boolean | null
    _count: Subproject_taxaCountAggregateOutputType | null
    _min: Subproject_taxaMinAggregateOutputType | null
    _max: Subproject_taxaMaxAggregateOutputType | null
  }

  type GetSubproject_taxaGroupByPayload<T extends Subproject_taxaGroupByArgs> = PrismaPromise<
    Array<
      PickArray<Subproject_taxaGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Subproject_taxaGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Subproject_taxaGroupByOutputType[P]>
            : GetScalarType<T[P], Subproject_taxaGroupByOutputType[P]>
        }
      >
    >


  export type Subproject_taxaSelect = {
    subproject_taxon_id?: boolean
    account_id?: boolean
    subproject_id?: boolean
    taxon_id?: boolean
    label?: boolean
    deleted?: boolean
    accounts?: boolean | Subproject_taxa$accountsArgs
    subprojects?: boolean | Subproject_taxa$subprojectsArgs
    taxa?: boolean | Subproject_taxa$taxaArgs
  }


  export type Subproject_taxaInclude = {
    accounts?: boolean | Subproject_taxa$accountsArgs
    subprojects?: boolean | Subproject_taxa$subprojectsArgs
    taxa?: boolean | Subproject_taxa$taxaArgs
  } 

  export type Subproject_taxaGetPayload<S extends boolean | null | undefined | Subproject_taxaArgs> =
    S extends { select: any, include: any } ? 'Please either choose `select` or `include`' :
    S extends true ? Subproject_taxa :
    S extends undefined ? never :
    S extends { include: any } & (Subproject_taxaArgs | Subproject_taxaFindManyArgs)
    ? Subproject_taxa  & {
    [P in TruthyKeys<S['include']>]:
        P extends 'accounts' ? AccountsGetPayload<S['include'][P]> | null :
        P extends 'subprojects' ? SubprojectsGetPayload<S['include'][P]> | null :
        P extends 'taxa' ? TaxaGetPayload<S['include'][P]> | null :  never
  } 
    : S extends { select: any } & (Subproject_taxaArgs | Subproject_taxaFindManyArgs)
      ? {
    [P in TruthyKeys<S['select']>]:
        P extends 'accounts' ? AccountsGetPayload<S['select'][P]> | null :
        P extends 'subprojects' ? SubprojectsGetPayload<S['select'][P]> | null :
        P extends 'taxa' ? TaxaGetPayload<S['select'][P]> | null :  P extends keyof Subproject_taxa ? Subproject_taxa[P] : never
  } 
      : Subproject_taxa


  type Subproject_taxaCountArgs = Merge<
    Omit<Subproject_taxaFindManyArgs, 'select' | 'include'> & {
      select?: Subproject_taxaCountAggregateInputType | true
    }
  >

  export interface Subproject_taxaDelegate<GlobalRejectSettings extends Prisma.RejectOnNotFound | Prisma.RejectPerOperation | false | undefined> {
    /**
     * Find zero or one Subproject_taxa that matches the filter.
     * @param {Subproject_taxaFindUniqueArgs} args - Arguments to find a Subproject_taxa
     * @example
     * // Get one Subproject_taxa
     * const subproject_taxa = await prisma.subproject_taxa.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends Subproject_taxaFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, Subproject_taxaFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'Subproject_taxa'> extends True ? Prisma__Subproject_taxaClient<Subproject_taxaGetPayload<T>> : Prisma__Subproject_taxaClient<Subproject_taxaGetPayload<T> | null, null>

    /**
     * Find one Subproject_taxa that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {Subproject_taxaFindUniqueOrThrowArgs} args - Arguments to find a Subproject_taxa
     * @example
     * // Get one Subproject_taxa
     * const subproject_taxa = await prisma.subproject_taxa.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends Subproject_taxaFindUniqueOrThrowArgs>(
      args?: SelectSubset<T, Subproject_taxaFindUniqueOrThrowArgs>
    ): Prisma__Subproject_taxaClient<Subproject_taxaGetPayload<T>>

    /**
     * Find the first Subproject_taxa that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Subproject_taxaFindFirstArgs} args - Arguments to find a Subproject_taxa
     * @example
     * // Get one Subproject_taxa
     * const subproject_taxa = await prisma.subproject_taxa.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends Subproject_taxaFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, Subproject_taxaFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'Subproject_taxa'> extends True ? Prisma__Subproject_taxaClient<Subproject_taxaGetPayload<T>> : Prisma__Subproject_taxaClient<Subproject_taxaGetPayload<T> | null, null>

    /**
     * Find the first Subproject_taxa that matches the filter or
     * throw `NotFoundError` if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Subproject_taxaFindFirstOrThrowArgs} args - Arguments to find a Subproject_taxa
     * @example
     * // Get one Subproject_taxa
     * const subproject_taxa = await prisma.subproject_taxa.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends Subproject_taxaFindFirstOrThrowArgs>(
      args?: SelectSubset<T, Subproject_taxaFindFirstOrThrowArgs>
    ): Prisma__Subproject_taxaClient<Subproject_taxaGetPayload<T>>

    /**
     * Find zero or more Subproject_taxas that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Subproject_taxaFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Subproject_taxas
     * const subproject_taxas = await prisma.subproject_taxa.findMany()
     * 
     * // Get first 10 Subproject_taxas
     * const subproject_taxas = await prisma.subproject_taxa.findMany({ take: 10 })
     * 
     * // Only select the `subproject_taxon_id`
     * const subproject_taxaWithSubproject_taxon_idOnly = await prisma.subproject_taxa.findMany({ select: { subproject_taxon_id: true } })
     * 
    **/
    findMany<T extends Subproject_taxaFindManyArgs>(
      args?: SelectSubset<T, Subproject_taxaFindManyArgs>
    ): PrismaPromise<Array<Subproject_taxaGetPayload<T>>>

    /**
     * Create a Subproject_taxa.
     * @param {Subproject_taxaCreateArgs} args - Arguments to create a Subproject_taxa.
     * @example
     * // Create one Subproject_taxa
     * const Subproject_taxa = await prisma.subproject_taxa.create({
     *   data: {
     *     // ... data to create a Subproject_taxa
     *   }
     * })
     * 
    **/
    create<T extends Subproject_taxaCreateArgs>(
      args: SelectSubset<T, Subproject_taxaCreateArgs>
    ): Prisma__Subproject_taxaClient<Subproject_taxaGetPayload<T>>

    /**
     * Create many Subproject_taxas.
     *     @param {Subproject_taxaCreateManyArgs} args - Arguments to create many Subproject_taxas.
     *     @example
     *     // Create many Subproject_taxas
     *     const subproject_taxa = await prisma.subproject_taxa.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends Subproject_taxaCreateManyArgs>(
      args?: SelectSubset<T, Subproject_taxaCreateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Delete a Subproject_taxa.
     * @param {Subproject_taxaDeleteArgs} args - Arguments to delete one Subproject_taxa.
     * @example
     * // Delete one Subproject_taxa
     * const Subproject_taxa = await prisma.subproject_taxa.delete({
     *   where: {
     *     // ... filter to delete one Subproject_taxa
     *   }
     * })
     * 
    **/
    delete<T extends Subproject_taxaDeleteArgs>(
      args: SelectSubset<T, Subproject_taxaDeleteArgs>
    ): Prisma__Subproject_taxaClient<Subproject_taxaGetPayload<T>>

    /**
     * Update one Subproject_taxa.
     * @param {Subproject_taxaUpdateArgs} args - Arguments to update one Subproject_taxa.
     * @example
     * // Update one Subproject_taxa
     * const subproject_taxa = await prisma.subproject_taxa.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends Subproject_taxaUpdateArgs>(
      args: SelectSubset<T, Subproject_taxaUpdateArgs>
    ): Prisma__Subproject_taxaClient<Subproject_taxaGetPayload<T>>

    /**
     * Delete zero or more Subproject_taxas.
     * @param {Subproject_taxaDeleteManyArgs} args - Arguments to filter Subproject_taxas to delete.
     * @example
     * // Delete a few Subproject_taxas
     * const { count } = await prisma.subproject_taxa.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends Subproject_taxaDeleteManyArgs>(
      args?: SelectSubset<T, Subproject_taxaDeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more Subproject_taxas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Subproject_taxaUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Subproject_taxas
     * const subproject_taxa = await prisma.subproject_taxa.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends Subproject_taxaUpdateManyArgs>(
      args: SelectSubset<T, Subproject_taxaUpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one Subproject_taxa.
     * @param {Subproject_taxaUpsertArgs} args - Arguments to update or create a Subproject_taxa.
     * @example
     * // Update or create a Subproject_taxa
     * const subproject_taxa = await prisma.subproject_taxa.upsert({
     *   create: {
     *     // ... data to create a Subproject_taxa
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Subproject_taxa we want to update
     *   }
     * })
    **/
    upsert<T extends Subproject_taxaUpsertArgs>(
      args: SelectSubset<T, Subproject_taxaUpsertArgs>
    ): Prisma__Subproject_taxaClient<Subproject_taxaGetPayload<T>>

    /**
     * Count the number of Subproject_taxas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Subproject_taxaCountArgs} args - Arguments to filter Subproject_taxas to count.
     * @example
     * // Count the number of Subproject_taxas
     * const count = await prisma.subproject_taxa.count({
     *   where: {
     *     // ... the filter for the Subproject_taxas we want to count
     *   }
     * })
    **/
    count<T extends Subproject_taxaCountArgs>(
      args?: Subset<T, Subproject_taxaCountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Subproject_taxaCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Subproject_taxa.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Subproject_taxaAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Subproject_taxaAggregateArgs>(args: Subset<T, Subproject_taxaAggregateArgs>): PrismaPromise<GetSubproject_taxaAggregateType<T>>

    /**
     * Group by Subproject_taxa.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Subproject_taxaGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends Subproject_taxaGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: Subproject_taxaGroupByArgs['orderBy'] }
        : { orderBy?: Subproject_taxaGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, Subproject_taxaGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSubproject_taxaGroupByPayload<T> : PrismaPromise<InputErrors>

  }

  /**
   * The delegate class that acts as a "Promise-like" for Subproject_taxa.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__Subproject_taxaClient<T, Null = never> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';

    accounts<T extends Subproject_taxa$accountsArgs= {}>(args?: Subset<T, Subproject_taxa$accountsArgs>): Prisma__AccountsClient<AccountsGetPayload<T> | Null>;

    subprojects<T extends Subproject_taxa$subprojectsArgs= {}>(args?: Subset<T, Subproject_taxa$subprojectsArgs>): Prisma__SubprojectsClient<SubprojectsGetPayload<T> | Null>;

    taxa<T extends Subproject_taxa$taxaArgs= {}>(args?: Subset<T, Subproject_taxa$taxaArgs>): Prisma__TaxaClient<TaxaGetPayload<T> | Null>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }



  // Custom InputTypes

  /**
   * Subproject_taxa base type for findUnique actions
   */
  export type Subproject_taxaFindUniqueArgsBase = {
    /**
     * Select specific fields to fetch from the Subproject_taxa
     * 
    **/
    select?: Subproject_taxaSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: Subproject_taxaInclude | null
    /**
     * Filter, which Subproject_taxa to fetch.
     * 
    **/
    where: Subproject_taxaWhereUniqueInput
  }

  /**
   * Subproject_taxa findUnique
   */
  export interface Subproject_taxaFindUniqueArgs extends Subproject_taxaFindUniqueArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findUniqueOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * Subproject_taxa findUniqueOrThrow
   */
  export type Subproject_taxaFindUniqueOrThrowArgs = {
    /**
     * Select specific fields to fetch from the Subproject_taxa
     * 
    **/
    select?: Subproject_taxaSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: Subproject_taxaInclude | null
    /**
     * Filter, which Subproject_taxa to fetch.
     * 
    **/
    where: Subproject_taxaWhereUniqueInput
  }


  /**
   * Subproject_taxa base type for findFirst actions
   */
  export type Subproject_taxaFindFirstArgsBase = {
    /**
     * Select specific fields to fetch from the Subproject_taxa
     * 
    **/
    select?: Subproject_taxaSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: Subproject_taxaInclude | null
    /**
     * Filter, which Subproject_taxa to fetch.
     * 
    **/
    where?: Subproject_taxaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Subproject_taxas to fetch.
     * 
    **/
    orderBy?: Enumerable<Subproject_taxaOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Subproject_taxas.
     * 
    **/
    cursor?: Subproject_taxaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Subproject_taxas from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Subproject_taxas.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Subproject_taxas.
     * 
    **/
    distinct?: Enumerable<Subproject_taxaScalarFieldEnum>
  }

  /**
   * Subproject_taxa findFirst
   */
  export interface Subproject_taxaFindFirstArgs extends Subproject_taxaFindFirstArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findFirstOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * Subproject_taxa findFirstOrThrow
   */
  export type Subproject_taxaFindFirstOrThrowArgs = {
    /**
     * Select specific fields to fetch from the Subproject_taxa
     * 
    **/
    select?: Subproject_taxaSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: Subproject_taxaInclude | null
    /**
     * Filter, which Subproject_taxa to fetch.
     * 
    **/
    where?: Subproject_taxaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Subproject_taxas to fetch.
     * 
    **/
    orderBy?: Enumerable<Subproject_taxaOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Subproject_taxas.
     * 
    **/
    cursor?: Subproject_taxaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Subproject_taxas from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Subproject_taxas.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Subproject_taxas.
     * 
    **/
    distinct?: Enumerable<Subproject_taxaScalarFieldEnum>
  }


  /**
   * Subproject_taxa findMany
   */
  export type Subproject_taxaFindManyArgs = {
    /**
     * Select specific fields to fetch from the Subproject_taxa
     * 
    **/
    select?: Subproject_taxaSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: Subproject_taxaInclude | null
    /**
     * Filter, which Subproject_taxas to fetch.
     * 
    **/
    where?: Subproject_taxaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Subproject_taxas to fetch.
     * 
    **/
    orderBy?: Enumerable<Subproject_taxaOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Subproject_taxas.
     * 
    **/
    cursor?: Subproject_taxaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Subproject_taxas from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Subproject_taxas.
     * 
    **/
    skip?: number
    distinct?: Enumerable<Subproject_taxaScalarFieldEnum>
  }


  /**
   * Subproject_taxa create
   */
  export type Subproject_taxaCreateArgs = {
    /**
     * Select specific fields to fetch from the Subproject_taxa
     * 
    **/
    select?: Subproject_taxaSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: Subproject_taxaInclude | null
    /**
     * The data needed to create a Subproject_taxa.
     * 
    **/
    data: XOR<Subproject_taxaCreateInput, Subproject_taxaUncheckedCreateInput>
  }


  /**
   * Subproject_taxa createMany
   */
  export type Subproject_taxaCreateManyArgs = {
    /**
     * The data used to create many Subproject_taxas.
     * 
    **/
    data: Enumerable<Subproject_taxaCreateManyInput>
    skipDuplicates?: boolean
  }


  /**
   * Subproject_taxa update
   */
  export type Subproject_taxaUpdateArgs = {
    /**
     * Select specific fields to fetch from the Subproject_taxa
     * 
    **/
    select?: Subproject_taxaSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: Subproject_taxaInclude | null
    /**
     * The data needed to update a Subproject_taxa.
     * 
    **/
    data: XOR<Subproject_taxaUpdateInput, Subproject_taxaUncheckedUpdateInput>
    /**
     * Choose, which Subproject_taxa to update.
     * 
    **/
    where: Subproject_taxaWhereUniqueInput
  }


  /**
   * Subproject_taxa updateMany
   */
  export type Subproject_taxaUpdateManyArgs = {
    /**
     * The data used to update Subproject_taxas.
     * 
    **/
    data: XOR<Subproject_taxaUpdateManyMutationInput, Subproject_taxaUncheckedUpdateManyInput>
    /**
     * Filter which Subproject_taxas to update
     * 
    **/
    where?: Subproject_taxaWhereInput
  }


  /**
   * Subproject_taxa upsert
   */
  export type Subproject_taxaUpsertArgs = {
    /**
     * Select specific fields to fetch from the Subproject_taxa
     * 
    **/
    select?: Subproject_taxaSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: Subproject_taxaInclude | null
    /**
     * The filter to search for the Subproject_taxa to update in case it exists.
     * 
    **/
    where: Subproject_taxaWhereUniqueInput
    /**
     * In case the Subproject_taxa found by the `where` argument doesn't exist, create a new Subproject_taxa with this data.
     * 
    **/
    create: XOR<Subproject_taxaCreateInput, Subproject_taxaUncheckedCreateInput>
    /**
     * In case the Subproject_taxa was found with the provided `where` argument, update it with this data.
     * 
    **/
    update: XOR<Subproject_taxaUpdateInput, Subproject_taxaUncheckedUpdateInput>
  }


  /**
   * Subproject_taxa delete
   */
  export type Subproject_taxaDeleteArgs = {
    /**
     * Select specific fields to fetch from the Subproject_taxa
     * 
    **/
    select?: Subproject_taxaSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: Subproject_taxaInclude | null
    /**
     * Filter which Subproject_taxa to delete.
     * 
    **/
    where: Subproject_taxaWhereUniqueInput
  }


  /**
   * Subproject_taxa deleteMany
   */
  export type Subproject_taxaDeleteManyArgs = {
    /**
     * Filter which Subproject_taxas to delete
     * 
    **/
    where?: Subproject_taxaWhereInput
  }


  /**
   * Subproject_taxa.accounts
   */
  export type Subproject_taxa$accountsArgs = {
    /**
     * Select specific fields to fetch from the Accounts
     * 
    **/
    select?: AccountsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: AccountsInclude | null
    where?: AccountsWhereInput
  }


  /**
   * Subproject_taxa.subprojects
   */
  export type Subproject_taxa$subprojectsArgs = {
    /**
     * Select specific fields to fetch from the Subprojects
     * 
    **/
    select?: SubprojectsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: SubprojectsInclude | null
    where?: SubprojectsWhereInput
  }


  /**
   * Subproject_taxa.taxa
   */
  export type Subproject_taxa$taxaArgs = {
    /**
     * Select specific fields to fetch from the Taxa
     * 
    **/
    select?: TaxaSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: TaxaInclude | null
    where?: TaxaWhereInput
  }


  /**
   * Subproject_taxa without action
   */
  export type Subproject_taxaArgs = {
    /**
     * Select specific fields to fetch from the Subproject_taxa
     * 
    **/
    select?: Subproject_taxaSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: Subproject_taxaInclude | null
  }



  /**
   * Model Subproject_users
   */


  export type AggregateSubproject_users = {
    _count: Subproject_usersCountAggregateOutputType | null
    _min: Subproject_usersMinAggregateOutputType | null
    _max: Subproject_usersMaxAggregateOutputType | null
  }

  export type Subproject_usersMinAggregateOutputType = {
    subproject_user_id: string | null
    account_id: string | null
    subproject_id: string | null
    user_id: string | null
    role: string | null
    label: string | null
    deleted: boolean | null
  }

  export type Subproject_usersMaxAggregateOutputType = {
    subproject_user_id: string | null
    account_id: string | null
    subproject_id: string | null
    user_id: string | null
    role: string | null
    label: string | null
    deleted: boolean | null
  }

  export type Subproject_usersCountAggregateOutputType = {
    subproject_user_id: number
    account_id: number
    subproject_id: number
    user_id: number
    role: number
    label: number
    deleted: number
    _all: number
  }


  export type Subproject_usersMinAggregateInputType = {
    subproject_user_id?: true
    account_id?: true
    subproject_id?: true
    user_id?: true
    role?: true
    label?: true
    deleted?: true
  }

  export type Subproject_usersMaxAggregateInputType = {
    subproject_user_id?: true
    account_id?: true
    subproject_id?: true
    user_id?: true
    role?: true
    label?: true
    deleted?: true
  }

  export type Subproject_usersCountAggregateInputType = {
    subproject_user_id?: true
    account_id?: true
    subproject_id?: true
    user_id?: true
    role?: true
    label?: true
    deleted?: true
    _all?: true
  }

  export type Subproject_usersAggregateArgs = {
    /**
     * Filter which Subproject_users to aggregate.
     * 
    **/
    where?: Subproject_usersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Subproject_users to fetch.
     * 
    **/
    orderBy?: Enumerable<Subproject_usersOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     * 
    **/
    cursor?: Subproject_usersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Subproject_users from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Subproject_users.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Subproject_users
    **/
    _count?: true | Subproject_usersCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Subproject_usersMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Subproject_usersMaxAggregateInputType
  }

  export type GetSubproject_usersAggregateType<T extends Subproject_usersAggregateArgs> = {
        [P in keyof T & keyof AggregateSubproject_users]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSubproject_users[P]>
      : GetScalarType<T[P], AggregateSubproject_users[P]>
  }




  export type Subproject_usersGroupByArgs = {
    where?: Subproject_usersWhereInput
    orderBy?: Enumerable<Subproject_usersOrderByWithAggregationInput>
    by: Array<Subproject_usersScalarFieldEnum>
    having?: Subproject_usersScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Subproject_usersCountAggregateInputType | true
    _min?: Subproject_usersMinAggregateInputType
    _max?: Subproject_usersMaxAggregateInputType
  }


  export type Subproject_usersGroupByOutputType = {
    subproject_user_id: string
    account_id: string | null
    subproject_id: string | null
    user_id: string | null
    role: string | null
    label: string | null
    deleted: boolean | null
    _count: Subproject_usersCountAggregateOutputType | null
    _min: Subproject_usersMinAggregateOutputType | null
    _max: Subproject_usersMaxAggregateOutputType | null
  }

  type GetSubproject_usersGroupByPayload<T extends Subproject_usersGroupByArgs> = PrismaPromise<
    Array<
      PickArray<Subproject_usersGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Subproject_usersGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Subproject_usersGroupByOutputType[P]>
            : GetScalarType<T[P], Subproject_usersGroupByOutputType[P]>
        }
      >
    >


  export type Subproject_usersSelect = {
    subproject_user_id?: boolean
    account_id?: boolean
    subproject_id?: boolean
    user_id?: boolean
    role?: boolean
    label?: boolean
    deleted?: boolean
    accounts?: boolean | Subproject_users$accountsArgs
    subprojects?: boolean | Subproject_users$subprojectsArgs
    users?: boolean | Subproject_users$usersArgs
  }


  export type Subproject_usersInclude = {
    accounts?: boolean | Subproject_users$accountsArgs
    subprojects?: boolean | Subproject_users$subprojectsArgs
    users?: boolean | Subproject_users$usersArgs
  } 

  export type Subproject_usersGetPayload<S extends boolean | null | undefined | Subproject_usersArgs> =
    S extends { select: any, include: any } ? 'Please either choose `select` or `include`' :
    S extends true ? Subproject_users :
    S extends undefined ? never :
    S extends { include: any } & (Subproject_usersArgs | Subproject_usersFindManyArgs)
    ? Subproject_users  & {
    [P in TruthyKeys<S['include']>]:
        P extends 'accounts' ? AccountsGetPayload<S['include'][P]> | null :
        P extends 'subprojects' ? SubprojectsGetPayload<S['include'][P]> | null :
        P extends 'users' ? UsersGetPayload<S['include'][P]> | null :  never
  } 
    : S extends { select: any } & (Subproject_usersArgs | Subproject_usersFindManyArgs)
      ? {
    [P in TruthyKeys<S['select']>]:
        P extends 'accounts' ? AccountsGetPayload<S['select'][P]> | null :
        P extends 'subprojects' ? SubprojectsGetPayload<S['select'][P]> | null :
        P extends 'users' ? UsersGetPayload<S['select'][P]> | null :  P extends keyof Subproject_users ? Subproject_users[P] : never
  } 
      : Subproject_users


  type Subproject_usersCountArgs = Merge<
    Omit<Subproject_usersFindManyArgs, 'select' | 'include'> & {
      select?: Subproject_usersCountAggregateInputType | true
    }
  >

  export interface Subproject_usersDelegate<GlobalRejectSettings extends Prisma.RejectOnNotFound | Prisma.RejectPerOperation | false | undefined> {
    /**
     * Find zero or one Subproject_users that matches the filter.
     * @param {Subproject_usersFindUniqueArgs} args - Arguments to find a Subproject_users
     * @example
     * // Get one Subproject_users
     * const subproject_users = await prisma.subproject_users.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends Subproject_usersFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, Subproject_usersFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'Subproject_users'> extends True ? Prisma__Subproject_usersClient<Subproject_usersGetPayload<T>> : Prisma__Subproject_usersClient<Subproject_usersGetPayload<T> | null, null>

    /**
     * Find one Subproject_users that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {Subproject_usersFindUniqueOrThrowArgs} args - Arguments to find a Subproject_users
     * @example
     * // Get one Subproject_users
     * const subproject_users = await prisma.subproject_users.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends Subproject_usersFindUniqueOrThrowArgs>(
      args?: SelectSubset<T, Subproject_usersFindUniqueOrThrowArgs>
    ): Prisma__Subproject_usersClient<Subproject_usersGetPayload<T>>

    /**
     * Find the first Subproject_users that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Subproject_usersFindFirstArgs} args - Arguments to find a Subproject_users
     * @example
     * // Get one Subproject_users
     * const subproject_users = await prisma.subproject_users.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends Subproject_usersFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, Subproject_usersFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'Subproject_users'> extends True ? Prisma__Subproject_usersClient<Subproject_usersGetPayload<T>> : Prisma__Subproject_usersClient<Subproject_usersGetPayload<T> | null, null>

    /**
     * Find the first Subproject_users that matches the filter or
     * throw `NotFoundError` if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Subproject_usersFindFirstOrThrowArgs} args - Arguments to find a Subproject_users
     * @example
     * // Get one Subproject_users
     * const subproject_users = await prisma.subproject_users.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends Subproject_usersFindFirstOrThrowArgs>(
      args?: SelectSubset<T, Subproject_usersFindFirstOrThrowArgs>
    ): Prisma__Subproject_usersClient<Subproject_usersGetPayload<T>>

    /**
     * Find zero or more Subproject_users that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Subproject_usersFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Subproject_users
     * const subproject_users = await prisma.subproject_users.findMany()
     * 
     * // Get first 10 Subproject_users
     * const subproject_users = await prisma.subproject_users.findMany({ take: 10 })
     * 
     * // Only select the `subproject_user_id`
     * const subproject_usersWithSubproject_user_idOnly = await prisma.subproject_users.findMany({ select: { subproject_user_id: true } })
     * 
    **/
    findMany<T extends Subproject_usersFindManyArgs>(
      args?: SelectSubset<T, Subproject_usersFindManyArgs>
    ): PrismaPromise<Array<Subproject_usersGetPayload<T>>>

    /**
     * Create a Subproject_users.
     * @param {Subproject_usersCreateArgs} args - Arguments to create a Subproject_users.
     * @example
     * // Create one Subproject_users
     * const Subproject_users = await prisma.subproject_users.create({
     *   data: {
     *     // ... data to create a Subproject_users
     *   }
     * })
     * 
    **/
    create<T extends Subproject_usersCreateArgs>(
      args: SelectSubset<T, Subproject_usersCreateArgs>
    ): Prisma__Subproject_usersClient<Subproject_usersGetPayload<T>>

    /**
     * Create many Subproject_users.
     *     @param {Subproject_usersCreateManyArgs} args - Arguments to create many Subproject_users.
     *     @example
     *     // Create many Subproject_users
     *     const subproject_users = await prisma.subproject_users.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends Subproject_usersCreateManyArgs>(
      args?: SelectSubset<T, Subproject_usersCreateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Delete a Subproject_users.
     * @param {Subproject_usersDeleteArgs} args - Arguments to delete one Subproject_users.
     * @example
     * // Delete one Subproject_users
     * const Subproject_users = await prisma.subproject_users.delete({
     *   where: {
     *     // ... filter to delete one Subproject_users
     *   }
     * })
     * 
    **/
    delete<T extends Subproject_usersDeleteArgs>(
      args: SelectSubset<T, Subproject_usersDeleteArgs>
    ): Prisma__Subproject_usersClient<Subproject_usersGetPayload<T>>

    /**
     * Update one Subproject_users.
     * @param {Subproject_usersUpdateArgs} args - Arguments to update one Subproject_users.
     * @example
     * // Update one Subproject_users
     * const subproject_users = await prisma.subproject_users.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends Subproject_usersUpdateArgs>(
      args: SelectSubset<T, Subproject_usersUpdateArgs>
    ): Prisma__Subproject_usersClient<Subproject_usersGetPayload<T>>

    /**
     * Delete zero or more Subproject_users.
     * @param {Subproject_usersDeleteManyArgs} args - Arguments to filter Subproject_users to delete.
     * @example
     * // Delete a few Subproject_users
     * const { count } = await prisma.subproject_users.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends Subproject_usersDeleteManyArgs>(
      args?: SelectSubset<T, Subproject_usersDeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more Subproject_users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Subproject_usersUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Subproject_users
     * const subproject_users = await prisma.subproject_users.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends Subproject_usersUpdateManyArgs>(
      args: SelectSubset<T, Subproject_usersUpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one Subproject_users.
     * @param {Subproject_usersUpsertArgs} args - Arguments to update or create a Subproject_users.
     * @example
     * // Update or create a Subproject_users
     * const subproject_users = await prisma.subproject_users.upsert({
     *   create: {
     *     // ... data to create a Subproject_users
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Subproject_users we want to update
     *   }
     * })
    **/
    upsert<T extends Subproject_usersUpsertArgs>(
      args: SelectSubset<T, Subproject_usersUpsertArgs>
    ): Prisma__Subproject_usersClient<Subproject_usersGetPayload<T>>

    /**
     * Count the number of Subproject_users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Subproject_usersCountArgs} args - Arguments to filter Subproject_users to count.
     * @example
     * // Count the number of Subproject_users
     * const count = await prisma.subproject_users.count({
     *   where: {
     *     // ... the filter for the Subproject_users we want to count
     *   }
     * })
    **/
    count<T extends Subproject_usersCountArgs>(
      args?: Subset<T, Subproject_usersCountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Subproject_usersCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Subproject_users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Subproject_usersAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Subproject_usersAggregateArgs>(args: Subset<T, Subproject_usersAggregateArgs>): PrismaPromise<GetSubproject_usersAggregateType<T>>

    /**
     * Group by Subproject_users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Subproject_usersGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends Subproject_usersGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: Subproject_usersGroupByArgs['orderBy'] }
        : { orderBy?: Subproject_usersGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, Subproject_usersGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSubproject_usersGroupByPayload<T> : PrismaPromise<InputErrors>

  }

  /**
   * The delegate class that acts as a "Promise-like" for Subproject_users.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__Subproject_usersClient<T, Null = never> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';

    accounts<T extends Subproject_users$accountsArgs= {}>(args?: Subset<T, Subproject_users$accountsArgs>): Prisma__AccountsClient<AccountsGetPayload<T> | Null>;

    subprojects<T extends Subproject_users$subprojectsArgs= {}>(args?: Subset<T, Subproject_users$subprojectsArgs>): Prisma__SubprojectsClient<SubprojectsGetPayload<T> | Null>;

    users<T extends Subproject_users$usersArgs= {}>(args?: Subset<T, Subproject_users$usersArgs>): Prisma__UsersClient<UsersGetPayload<T> | Null>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }



  // Custom InputTypes

  /**
   * Subproject_users base type for findUnique actions
   */
  export type Subproject_usersFindUniqueArgsBase = {
    /**
     * Select specific fields to fetch from the Subproject_users
     * 
    **/
    select?: Subproject_usersSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: Subproject_usersInclude | null
    /**
     * Filter, which Subproject_users to fetch.
     * 
    **/
    where: Subproject_usersWhereUniqueInput
  }

  /**
   * Subproject_users findUnique
   */
  export interface Subproject_usersFindUniqueArgs extends Subproject_usersFindUniqueArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findUniqueOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * Subproject_users findUniqueOrThrow
   */
  export type Subproject_usersFindUniqueOrThrowArgs = {
    /**
     * Select specific fields to fetch from the Subproject_users
     * 
    **/
    select?: Subproject_usersSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: Subproject_usersInclude | null
    /**
     * Filter, which Subproject_users to fetch.
     * 
    **/
    where: Subproject_usersWhereUniqueInput
  }


  /**
   * Subproject_users base type for findFirst actions
   */
  export type Subproject_usersFindFirstArgsBase = {
    /**
     * Select specific fields to fetch from the Subproject_users
     * 
    **/
    select?: Subproject_usersSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: Subproject_usersInclude | null
    /**
     * Filter, which Subproject_users to fetch.
     * 
    **/
    where?: Subproject_usersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Subproject_users to fetch.
     * 
    **/
    orderBy?: Enumerable<Subproject_usersOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Subproject_users.
     * 
    **/
    cursor?: Subproject_usersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Subproject_users from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Subproject_users.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Subproject_users.
     * 
    **/
    distinct?: Enumerable<Subproject_usersScalarFieldEnum>
  }

  /**
   * Subproject_users findFirst
   */
  export interface Subproject_usersFindFirstArgs extends Subproject_usersFindFirstArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findFirstOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * Subproject_users findFirstOrThrow
   */
  export type Subproject_usersFindFirstOrThrowArgs = {
    /**
     * Select specific fields to fetch from the Subproject_users
     * 
    **/
    select?: Subproject_usersSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: Subproject_usersInclude | null
    /**
     * Filter, which Subproject_users to fetch.
     * 
    **/
    where?: Subproject_usersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Subproject_users to fetch.
     * 
    **/
    orderBy?: Enumerable<Subproject_usersOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Subproject_users.
     * 
    **/
    cursor?: Subproject_usersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Subproject_users from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Subproject_users.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Subproject_users.
     * 
    **/
    distinct?: Enumerable<Subproject_usersScalarFieldEnum>
  }


  /**
   * Subproject_users findMany
   */
  export type Subproject_usersFindManyArgs = {
    /**
     * Select specific fields to fetch from the Subproject_users
     * 
    **/
    select?: Subproject_usersSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: Subproject_usersInclude | null
    /**
     * Filter, which Subproject_users to fetch.
     * 
    **/
    where?: Subproject_usersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Subproject_users to fetch.
     * 
    **/
    orderBy?: Enumerable<Subproject_usersOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Subproject_users.
     * 
    **/
    cursor?: Subproject_usersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Subproject_users from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Subproject_users.
     * 
    **/
    skip?: number
    distinct?: Enumerable<Subproject_usersScalarFieldEnum>
  }


  /**
   * Subproject_users create
   */
  export type Subproject_usersCreateArgs = {
    /**
     * Select specific fields to fetch from the Subproject_users
     * 
    **/
    select?: Subproject_usersSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: Subproject_usersInclude | null
    /**
     * The data needed to create a Subproject_users.
     * 
    **/
    data: XOR<Subproject_usersCreateInput, Subproject_usersUncheckedCreateInput>
  }


  /**
   * Subproject_users createMany
   */
  export type Subproject_usersCreateManyArgs = {
    /**
     * The data used to create many Subproject_users.
     * 
    **/
    data: Enumerable<Subproject_usersCreateManyInput>
    skipDuplicates?: boolean
  }


  /**
   * Subproject_users update
   */
  export type Subproject_usersUpdateArgs = {
    /**
     * Select specific fields to fetch from the Subproject_users
     * 
    **/
    select?: Subproject_usersSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: Subproject_usersInclude | null
    /**
     * The data needed to update a Subproject_users.
     * 
    **/
    data: XOR<Subproject_usersUpdateInput, Subproject_usersUncheckedUpdateInput>
    /**
     * Choose, which Subproject_users to update.
     * 
    **/
    where: Subproject_usersWhereUniqueInput
  }


  /**
   * Subproject_users updateMany
   */
  export type Subproject_usersUpdateManyArgs = {
    /**
     * The data used to update Subproject_users.
     * 
    **/
    data: XOR<Subproject_usersUpdateManyMutationInput, Subproject_usersUncheckedUpdateManyInput>
    /**
     * Filter which Subproject_users to update
     * 
    **/
    where?: Subproject_usersWhereInput
  }


  /**
   * Subproject_users upsert
   */
  export type Subproject_usersUpsertArgs = {
    /**
     * Select specific fields to fetch from the Subproject_users
     * 
    **/
    select?: Subproject_usersSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: Subproject_usersInclude | null
    /**
     * The filter to search for the Subproject_users to update in case it exists.
     * 
    **/
    where: Subproject_usersWhereUniqueInput
    /**
     * In case the Subproject_users found by the `where` argument doesn't exist, create a new Subproject_users with this data.
     * 
    **/
    create: XOR<Subproject_usersCreateInput, Subproject_usersUncheckedCreateInput>
    /**
     * In case the Subproject_users was found with the provided `where` argument, update it with this data.
     * 
    **/
    update: XOR<Subproject_usersUpdateInput, Subproject_usersUncheckedUpdateInput>
  }


  /**
   * Subproject_users delete
   */
  export type Subproject_usersDeleteArgs = {
    /**
     * Select specific fields to fetch from the Subproject_users
     * 
    **/
    select?: Subproject_usersSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: Subproject_usersInclude | null
    /**
     * Filter which Subproject_users to delete.
     * 
    **/
    where: Subproject_usersWhereUniqueInput
  }


  /**
   * Subproject_users deleteMany
   */
  export type Subproject_usersDeleteManyArgs = {
    /**
     * Filter which Subproject_users to delete
     * 
    **/
    where?: Subproject_usersWhereInput
  }


  /**
   * Subproject_users.accounts
   */
  export type Subproject_users$accountsArgs = {
    /**
     * Select specific fields to fetch from the Accounts
     * 
    **/
    select?: AccountsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: AccountsInclude | null
    where?: AccountsWhereInput
  }


  /**
   * Subproject_users.subprojects
   */
  export type Subproject_users$subprojectsArgs = {
    /**
     * Select specific fields to fetch from the Subprojects
     * 
    **/
    select?: SubprojectsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: SubprojectsInclude | null
    where?: SubprojectsWhereInput
  }


  /**
   * Subproject_users.users
   */
  export type Subproject_users$usersArgs = {
    /**
     * Select specific fields to fetch from the Users
     * 
    **/
    select?: UsersSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: UsersInclude | null
    where?: UsersWhereInput
  }


  /**
   * Subproject_users without action
   */
  export type Subproject_usersArgs = {
    /**
     * Select specific fields to fetch from the Subproject_users
     * 
    **/
    select?: Subproject_usersSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: Subproject_usersInclude | null
  }



  /**
   * Model Subprojects
   */


  export type AggregateSubprojects = {
    _count: SubprojectsCountAggregateOutputType | null
    _avg: SubprojectsAvgAggregateOutputType | null
    _sum: SubprojectsSumAggregateOutputType | null
    _min: SubprojectsMinAggregateOutputType | null
    _max: SubprojectsMaxAggregateOutputType | null
  }

  export type SubprojectsAvgAggregateOutputType = {
    start_year: number | null
    end_year: number | null
  }

  export type SubprojectsSumAggregateOutputType = {
    start_year: number | null
    end_year: number | null
  }

  export type SubprojectsMinAggregateOutputType = {
    subproject_id: string | null
    account_id: string | null
    project_id: string | null
    name: string | null
    label_replace_by_generated_column: string | null
    start_year: number | null
    end_year: number | null
    deleted: boolean | null
  }

  export type SubprojectsMaxAggregateOutputType = {
    subproject_id: string | null
    account_id: string | null
    project_id: string | null
    name: string | null
    label_replace_by_generated_column: string | null
    start_year: number | null
    end_year: number | null
    deleted: boolean | null
  }

  export type SubprojectsCountAggregateOutputType = {
    subproject_id: number
    account_id: number
    project_id: number
    name: number
    label_replace_by_generated_column: number
    start_year: number
    end_year: number
    data: number
    deleted: number
    _all: number
  }


  export type SubprojectsAvgAggregateInputType = {
    start_year?: true
    end_year?: true
  }

  export type SubprojectsSumAggregateInputType = {
    start_year?: true
    end_year?: true
  }

  export type SubprojectsMinAggregateInputType = {
    subproject_id?: true
    account_id?: true
    project_id?: true
    name?: true
    label_replace_by_generated_column?: true
    start_year?: true
    end_year?: true
    deleted?: true
  }

  export type SubprojectsMaxAggregateInputType = {
    subproject_id?: true
    account_id?: true
    project_id?: true
    name?: true
    label_replace_by_generated_column?: true
    start_year?: true
    end_year?: true
    deleted?: true
  }

  export type SubprojectsCountAggregateInputType = {
    subproject_id?: true
    account_id?: true
    project_id?: true
    name?: true
    label_replace_by_generated_column?: true
    start_year?: true
    end_year?: true
    data?: true
    deleted?: true
    _all?: true
  }

  export type SubprojectsAggregateArgs = {
    /**
     * Filter which Subprojects to aggregate.
     * 
    **/
    where?: SubprojectsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Subprojects to fetch.
     * 
    **/
    orderBy?: Enumerable<SubprojectsOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     * 
    **/
    cursor?: SubprojectsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Subprojects from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Subprojects.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Subprojects
    **/
    _count?: true | SubprojectsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: SubprojectsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: SubprojectsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: SubprojectsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: SubprojectsMaxAggregateInputType
  }

  export type GetSubprojectsAggregateType<T extends SubprojectsAggregateArgs> = {
        [P in keyof T & keyof AggregateSubprojects]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSubprojects[P]>
      : GetScalarType<T[P], AggregateSubprojects[P]>
  }




  export type SubprojectsGroupByArgs = {
    where?: SubprojectsWhereInput
    orderBy?: Enumerable<SubprojectsOrderByWithAggregationInput>
    by: Array<SubprojectsScalarFieldEnum>
    having?: SubprojectsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: SubprojectsCountAggregateInputType | true
    _avg?: SubprojectsAvgAggregateInputType
    _sum?: SubprojectsSumAggregateInputType
    _min?: SubprojectsMinAggregateInputType
    _max?: SubprojectsMaxAggregateInputType
  }


  export type SubprojectsGroupByOutputType = {
    subproject_id: string
    account_id: string | null
    project_id: string | null
    name: string | null
    label_replace_by_generated_column: string | null
    start_year: number | null
    end_year: number | null
    data: JsonValue | null
    deleted: boolean | null
    _count: SubprojectsCountAggregateOutputType | null
    _avg: SubprojectsAvgAggregateOutputType | null
    _sum: SubprojectsSumAggregateOutputType | null
    _min: SubprojectsMinAggregateOutputType | null
    _max: SubprojectsMaxAggregateOutputType | null
  }

  type GetSubprojectsGroupByPayload<T extends SubprojectsGroupByArgs> = PrismaPromise<
    Array<
      PickArray<SubprojectsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof SubprojectsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], SubprojectsGroupByOutputType[P]>
            : GetScalarType<T[P], SubprojectsGroupByOutputType[P]>
        }
      >
    >


  export type SubprojectsSelect = {
    subproject_id?: boolean
    account_id?: boolean
    project_id?: boolean
    name?: boolean
    label_replace_by_generated_column?: boolean
    start_year?: boolean
    end_year?: boolean
    data?: boolean
    deleted?: boolean
    gbif_occurrence_downloads?: boolean | Subprojects$gbif_occurrence_downloadsArgs
    gbif_occurrences?: boolean | Subprojects$gbif_occurrencesArgs
    goals?: boolean | Subprojects$goalsArgs
    subproject_taxa?: boolean | Subprojects$subproject_taxaArgs
    subproject_users?: boolean | Subprojects$subproject_usersArgs
    accounts?: boolean | Subprojects$accountsArgs
    projects?: boolean | Subprojects$projectsArgs
    _count?: boolean | SubprojectsCountOutputTypeArgs
  }


  export type SubprojectsInclude = {
    gbif_occurrence_downloads?: boolean | Subprojects$gbif_occurrence_downloadsArgs
    gbif_occurrences?: boolean | Subprojects$gbif_occurrencesArgs
    goals?: boolean | Subprojects$goalsArgs
    subproject_taxa?: boolean | Subprojects$subproject_taxaArgs
    subproject_users?: boolean | Subprojects$subproject_usersArgs
    accounts?: boolean | Subprojects$accountsArgs
    projects?: boolean | Subprojects$projectsArgs
    _count?: boolean | SubprojectsCountOutputTypeArgs
  } 

  export type SubprojectsGetPayload<S extends boolean | null | undefined | SubprojectsArgs> =
    S extends { select: any, include: any } ? 'Please either choose `select` or `include`' :
    S extends true ? Subprojects :
    S extends undefined ? never :
    S extends { include: any } & (SubprojectsArgs | SubprojectsFindManyArgs)
    ? Subprojects  & {
    [P in TruthyKeys<S['include']>]:
        P extends 'gbif_occurrence_downloads' ? Array < Gbif_occurrence_downloadsGetPayload<S['include'][P]>>  :
        P extends 'gbif_occurrences' ? Array < Gbif_occurrencesGetPayload<S['include'][P]>>  :
        P extends 'goals' ? Array < GoalsGetPayload<S['include'][P]>>  :
        P extends 'subproject_taxa' ? Array < Subproject_taxaGetPayload<S['include'][P]>>  :
        P extends 'subproject_users' ? Array < Subproject_usersGetPayload<S['include'][P]>>  :
        P extends 'accounts' ? AccountsGetPayload<S['include'][P]> | null :
        P extends 'projects' ? ProjectsGetPayload<S['include'][P]> | null :
        P extends '_count' ? SubprojectsCountOutputTypeGetPayload<S['include'][P]> :  never
  } 
    : S extends { select: any } & (SubprojectsArgs | SubprojectsFindManyArgs)
      ? {
    [P in TruthyKeys<S['select']>]:
        P extends 'gbif_occurrence_downloads' ? Array < Gbif_occurrence_downloadsGetPayload<S['select'][P]>>  :
        P extends 'gbif_occurrences' ? Array < Gbif_occurrencesGetPayload<S['select'][P]>>  :
        P extends 'goals' ? Array < GoalsGetPayload<S['select'][P]>>  :
        P extends 'subproject_taxa' ? Array < Subproject_taxaGetPayload<S['select'][P]>>  :
        P extends 'subproject_users' ? Array < Subproject_usersGetPayload<S['select'][P]>>  :
        P extends 'accounts' ? AccountsGetPayload<S['select'][P]> | null :
        P extends 'projects' ? ProjectsGetPayload<S['select'][P]> | null :
        P extends '_count' ? SubprojectsCountOutputTypeGetPayload<S['select'][P]> :  P extends keyof Subprojects ? Subprojects[P] : never
  } 
      : Subprojects


  type SubprojectsCountArgs = Merge<
    Omit<SubprojectsFindManyArgs, 'select' | 'include'> & {
      select?: SubprojectsCountAggregateInputType | true
    }
  >

  export interface SubprojectsDelegate<GlobalRejectSettings extends Prisma.RejectOnNotFound | Prisma.RejectPerOperation | false | undefined> {
    /**
     * Find zero or one Subprojects that matches the filter.
     * @param {SubprojectsFindUniqueArgs} args - Arguments to find a Subprojects
     * @example
     * // Get one Subprojects
     * const subprojects = await prisma.subprojects.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends SubprojectsFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, SubprojectsFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'Subprojects'> extends True ? Prisma__SubprojectsClient<SubprojectsGetPayload<T>> : Prisma__SubprojectsClient<SubprojectsGetPayload<T> | null, null>

    /**
     * Find one Subprojects that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {SubprojectsFindUniqueOrThrowArgs} args - Arguments to find a Subprojects
     * @example
     * // Get one Subprojects
     * const subprojects = await prisma.subprojects.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends SubprojectsFindUniqueOrThrowArgs>(
      args?: SelectSubset<T, SubprojectsFindUniqueOrThrowArgs>
    ): Prisma__SubprojectsClient<SubprojectsGetPayload<T>>

    /**
     * Find the first Subprojects that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SubprojectsFindFirstArgs} args - Arguments to find a Subprojects
     * @example
     * // Get one Subprojects
     * const subprojects = await prisma.subprojects.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends SubprojectsFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, SubprojectsFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'Subprojects'> extends True ? Prisma__SubprojectsClient<SubprojectsGetPayload<T>> : Prisma__SubprojectsClient<SubprojectsGetPayload<T> | null, null>

    /**
     * Find the first Subprojects that matches the filter or
     * throw `NotFoundError` if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SubprojectsFindFirstOrThrowArgs} args - Arguments to find a Subprojects
     * @example
     * // Get one Subprojects
     * const subprojects = await prisma.subprojects.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends SubprojectsFindFirstOrThrowArgs>(
      args?: SelectSubset<T, SubprojectsFindFirstOrThrowArgs>
    ): Prisma__SubprojectsClient<SubprojectsGetPayload<T>>

    /**
     * Find zero or more Subprojects that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SubprojectsFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Subprojects
     * const subprojects = await prisma.subprojects.findMany()
     * 
     * // Get first 10 Subprojects
     * const subprojects = await prisma.subprojects.findMany({ take: 10 })
     * 
     * // Only select the `subproject_id`
     * const subprojectsWithSubproject_idOnly = await prisma.subprojects.findMany({ select: { subproject_id: true } })
     * 
    **/
    findMany<T extends SubprojectsFindManyArgs>(
      args?: SelectSubset<T, SubprojectsFindManyArgs>
    ): PrismaPromise<Array<SubprojectsGetPayload<T>>>

    /**
     * Create a Subprojects.
     * @param {SubprojectsCreateArgs} args - Arguments to create a Subprojects.
     * @example
     * // Create one Subprojects
     * const Subprojects = await prisma.subprojects.create({
     *   data: {
     *     // ... data to create a Subprojects
     *   }
     * })
     * 
    **/
    create<T extends SubprojectsCreateArgs>(
      args: SelectSubset<T, SubprojectsCreateArgs>
    ): Prisma__SubprojectsClient<SubprojectsGetPayload<T>>

    /**
     * Create many Subprojects.
     *     @param {SubprojectsCreateManyArgs} args - Arguments to create many Subprojects.
     *     @example
     *     // Create many Subprojects
     *     const subprojects = await prisma.subprojects.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends SubprojectsCreateManyArgs>(
      args?: SelectSubset<T, SubprojectsCreateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Delete a Subprojects.
     * @param {SubprojectsDeleteArgs} args - Arguments to delete one Subprojects.
     * @example
     * // Delete one Subprojects
     * const Subprojects = await prisma.subprojects.delete({
     *   where: {
     *     // ... filter to delete one Subprojects
     *   }
     * })
     * 
    **/
    delete<T extends SubprojectsDeleteArgs>(
      args: SelectSubset<T, SubprojectsDeleteArgs>
    ): Prisma__SubprojectsClient<SubprojectsGetPayload<T>>

    /**
     * Update one Subprojects.
     * @param {SubprojectsUpdateArgs} args - Arguments to update one Subprojects.
     * @example
     * // Update one Subprojects
     * const subprojects = await prisma.subprojects.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends SubprojectsUpdateArgs>(
      args: SelectSubset<T, SubprojectsUpdateArgs>
    ): Prisma__SubprojectsClient<SubprojectsGetPayload<T>>

    /**
     * Delete zero or more Subprojects.
     * @param {SubprojectsDeleteManyArgs} args - Arguments to filter Subprojects to delete.
     * @example
     * // Delete a few Subprojects
     * const { count } = await prisma.subprojects.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends SubprojectsDeleteManyArgs>(
      args?: SelectSubset<T, SubprojectsDeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more Subprojects.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SubprojectsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Subprojects
     * const subprojects = await prisma.subprojects.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends SubprojectsUpdateManyArgs>(
      args: SelectSubset<T, SubprojectsUpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one Subprojects.
     * @param {SubprojectsUpsertArgs} args - Arguments to update or create a Subprojects.
     * @example
     * // Update or create a Subprojects
     * const subprojects = await prisma.subprojects.upsert({
     *   create: {
     *     // ... data to create a Subprojects
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Subprojects we want to update
     *   }
     * })
    **/
    upsert<T extends SubprojectsUpsertArgs>(
      args: SelectSubset<T, SubprojectsUpsertArgs>
    ): Prisma__SubprojectsClient<SubprojectsGetPayload<T>>

    /**
     * Count the number of Subprojects.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SubprojectsCountArgs} args - Arguments to filter Subprojects to count.
     * @example
     * // Count the number of Subprojects
     * const count = await prisma.subprojects.count({
     *   where: {
     *     // ... the filter for the Subprojects we want to count
     *   }
     * })
    **/
    count<T extends SubprojectsCountArgs>(
      args?: Subset<T, SubprojectsCountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], SubprojectsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Subprojects.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SubprojectsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends SubprojectsAggregateArgs>(args: Subset<T, SubprojectsAggregateArgs>): PrismaPromise<GetSubprojectsAggregateType<T>>

    /**
     * Group by Subprojects.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SubprojectsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends SubprojectsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: SubprojectsGroupByArgs['orderBy'] }
        : { orderBy?: SubprojectsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, SubprojectsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSubprojectsGroupByPayload<T> : PrismaPromise<InputErrors>

  }

  /**
   * The delegate class that acts as a "Promise-like" for Subprojects.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__SubprojectsClient<T, Null = never> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';

    gbif_occurrence_downloads<T extends Subprojects$gbif_occurrence_downloadsArgs= {}>(args?: Subset<T, Subprojects$gbif_occurrence_downloadsArgs>): PrismaPromise<Array<Gbif_occurrence_downloadsGetPayload<T>>| Null>;

    gbif_occurrences<T extends Subprojects$gbif_occurrencesArgs= {}>(args?: Subset<T, Subprojects$gbif_occurrencesArgs>): PrismaPromise<Array<Gbif_occurrencesGetPayload<T>>| Null>;

    goals<T extends Subprojects$goalsArgs= {}>(args?: Subset<T, Subprojects$goalsArgs>): PrismaPromise<Array<GoalsGetPayload<T>>| Null>;

    subproject_taxa<T extends Subprojects$subproject_taxaArgs= {}>(args?: Subset<T, Subprojects$subproject_taxaArgs>): PrismaPromise<Array<Subproject_taxaGetPayload<T>>| Null>;

    subproject_users<T extends Subprojects$subproject_usersArgs= {}>(args?: Subset<T, Subprojects$subproject_usersArgs>): PrismaPromise<Array<Subproject_usersGetPayload<T>>| Null>;

    accounts<T extends Subprojects$accountsArgs= {}>(args?: Subset<T, Subprojects$accountsArgs>): Prisma__AccountsClient<AccountsGetPayload<T> | Null>;

    projects<T extends Subprojects$projectsArgs= {}>(args?: Subset<T, Subprojects$projectsArgs>): Prisma__ProjectsClient<ProjectsGetPayload<T> | Null>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }



  // Custom InputTypes

  /**
   * Subprojects base type for findUnique actions
   */
  export type SubprojectsFindUniqueArgsBase = {
    /**
     * Select specific fields to fetch from the Subprojects
     * 
    **/
    select?: SubprojectsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: SubprojectsInclude | null
    /**
     * Filter, which Subprojects to fetch.
     * 
    **/
    where: SubprojectsWhereUniqueInput
  }

  /**
   * Subprojects findUnique
   */
  export interface SubprojectsFindUniqueArgs extends SubprojectsFindUniqueArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findUniqueOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * Subprojects findUniqueOrThrow
   */
  export type SubprojectsFindUniqueOrThrowArgs = {
    /**
     * Select specific fields to fetch from the Subprojects
     * 
    **/
    select?: SubprojectsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: SubprojectsInclude | null
    /**
     * Filter, which Subprojects to fetch.
     * 
    **/
    where: SubprojectsWhereUniqueInput
  }


  /**
   * Subprojects base type for findFirst actions
   */
  export type SubprojectsFindFirstArgsBase = {
    /**
     * Select specific fields to fetch from the Subprojects
     * 
    **/
    select?: SubprojectsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: SubprojectsInclude | null
    /**
     * Filter, which Subprojects to fetch.
     * 
    **/
    where?: SubprojectsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Subprojects to fetch.
     * 
    **/
    orderBy?: Enumerable<SubprojectsOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Subprojects.
     * 
    **/
    cursor?: SubprojectsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Subprojects from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Subprojects.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Subprojects.
     * 
    **/
    distinct?: Enumerable<SubprojectsScalarFieldEnum>
  }

  /**
   * Subprojects findFirst
   */
  export interface SubprojectsFindFirstArgs extends SubprojectsFindFirstArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findFirstOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * Subprojects findFirstOrThrow
   */
  export type SubprojectsFindFirstOrThrowArgs = {
    /**
     * Select specific fields to fetch from the Subprojects
     * 
    **/
    select?: SubprojectsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: SubprojectsInclude | null
    /**
     * Filter, which Subprojects to fetch.
     * 
    **/
    where?: SubprojectsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Subprojects to fetch.
     * 
    **/
    orderBy?: Enumerable<SubprojectsOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Subprojects.
     * 
    **/
    cursor?: SubprojectsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Subprojects from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Subprojects.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Subprojects.
     * 
    **/
    distinct?: Enumerable<SubprojectsScalarFieldEnum>
  }


  /**
   * Subprojects findMany
   */
  export type SubprojectsFindManyArgs = {
    /**
     * Select specific fields to fetch from the Subprojects
     * 
    **/
    select?: SubprojectsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: SubprojectsInclude | null
    /**
     * Filter, which Subprojects to fetch.
     * 
    **/
    where?: SubprojectsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Subprojects to fetch.
     * 
    **/
    orderBy?: Enumerable<SubprojectsOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Subprojects.
     * 
    **/
    cursor?: SubprojectsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Subprojects from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Subprojects.
     * 
    **/
    skip?: number
    distinct?: Enumerable<SubprojectsScalarFieldEnum>
  }


  /**
   * Subprojects create
   */
  export type SubprojectsCreateArgs = {
    /**
     * Select specific fields to fetch from the Subprojects
     * 
    **/
    select?: SubprojectsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: SubprojectsInclude | null
    /**
     * The data needed to create a Subprojects.
     * 
    **/
    data: XOR<SubprojectsCreateInput, SubprojectsUncheckedCreateInput>
  }


  /**
   * Subprojects createMany
   */
  export type SubprojectsCreateManyArgs = {
    /**
     * The data used to create many Subprojects.
     * 
    **/
    data: Enumerable<SubprojectsCreateManyInput>
    skipDuplicates?: boolean
  }


  /**
   * Subprojects update
   */
  export type SubprojectsUpdateArgs = {
    /**
     * Select specific fields to fetch from the Subprojects
     * 
    **/
    select?: SubprojectsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: SubprojectsInclude | null
    /**
     * The data needed to update a Subprojects.
     * 
    **/
    data: XOR<SubprojectsUpdateInput, SubprojectsUncheckedUpdateInput>
    /**
     * Choose, which Subprojects to update.
     * 
    **/
    where: SubprojectsWhereUniqueInput
  }


  /**
   * Subprojects updateMany
   */
  export type SubprojectsUpdateManyArgs = {
    /**
     * The data used to update Subprojects.
     * 
    **/
    data: XOR<SubprojectsUpdateManyMutationInput, SubprojectsUncheckedUpdateManyInput>
    /**
     * Filter which Subprojects to update
     * 
    **/
    where?: SubprojectsWhereInput
  }


  /**
   * Subprojects upsert
   */
  export type SubprojectsUpsertArgs = {
    /**
     * Select specific fields to fetch from the Subprojects
     * 
    **/
    select?: SubprojectsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: SubprojectsInclude | null
    /**
     * The filter to search for the Subprojects to update in case it exists.
     * 
    **/
    where: SubprojectsWhereUniqueInput
    /**
     * In case the Subprojects found by the `where` argument doesn't exist, create a new Subprojects with this data.
     * 
    **/
    create: XOR<SubprojectsCreateInput, SubprojectsUncheckedCreateInput>
    /**
     * In case the Subprojects was found with the provided `where` argument, update it with this data.
     * 
    **/
    update: XOR<SubprojectsUpdateInput, SubprojectsUncheckedUpdateInput>
  }


  /**
   * Subprojects delete
   */
  export type SubprojectsDeleteArgs = {
    /**
     * Select specific fields to fetch from the Subprojects
     * 
    **/
    select?: SubprojectsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: SubprojectsInclude | null
    /**
     * Filter which Subprojects to delete.
     * 
    **/
    where: SubprojectsWhereUniqueInput
  }


  /**
   * Subprojects deleteMany
   */
  export type SubprojectsDeleteManyArgs = {
    /**
     * Filter which Subprojects to delete
     * 
    **/
    where?: SubprojectsWhereInput
  }


  /**
   * Subprojects.gbif_occurrence_downloads
   */
  export type Subprojects$gbif_occurrence_downloadsArgs = {
    /**
     * Select specific fields to fetch from the Gbif_occurrence_downloads
     * 
    **/
    select?: Gbif_occurrence_downloadsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: Gbif_occurrence_downloadsInclude | null
    where?: Gbif_occurrence_downloadsWhereInput
    orderBy?: Enumerable<Gbif_occurrence_downloadsOrderByWithRelationInput>
    cursor?: Gbif_occurrence_downloadsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Enumerable<Gbif_occurrence_downloadsScalarFieldEnum>
  }


  /**
   * Subprojects.gbif_occurrences
   */
  export type Subprojects$gbif_occurrencesArgs = {
    /**
     * Select specific fields to fetch from the Gbif_occurrences
     * 
    **/
    select?: Gbif_occurrencesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: Gbif_occurrencesInclude | null
    where?: Gbif_occurrencesWhereInput
    orderBy?: Enumerable<Gbif_occurrencesOrderByWithRelationInput>
    cursor?: Gbif_occurrencesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Enumerable<Gbif_occurrencesScalarFieldEnum>
  }


  /**
   * Subprojects.goals
   */
  export type Subprojects$goalsArgs = {
    /**
     * Select specific fields to fetch from the Goals
     * 
    **/
    select?: GoalsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: GoalsInclude | null
    where?: GoalsWhereInput
    orderBy?: Enumerable<GoalsOrderByWithRelationInput>
    cursor?: GoalsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Enumerable<GoalsScalarFieldEnum>
  }


  /**
   * Subprojects.subproject_taxa
   */
  export type Subprojects$subproject_taxaArgs = {
    /**
     * Select specific fields to fetch from the Subproject_taxa
     * 
    **/
    select?: Subproject_taxaSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: Subproject_taxaInclude | null
    where?: Subproject_taxaWhereInput
    orderBy?: Enumerable<Subproject_taxaOrderByWithRelationInput>
    cursor?: Subproject_taxaWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Enumerable<Subproject_taxaScalarFieldEnum>
  }


  /**
   * Subprojects.subproject_users
   */
  export type Subprojects$subproject_usersArgs = {
    /**
     * Select specific fields to fetch from the Subproject_users
     * 
    **/
    select?: Subproject_usersSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: Subproject_usersInclude | null
    where?: Subproject_usersWhereInput
    orderBy?: Enumerable<Subproject_usersOrderByWithRelationInput>
    cursor?: Subproject_usersWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Enumerable<Subproject_usersScalarFieldEnum>
  }


  /**
   * Subprojects.accounts
   */
  export type Subprojects$accountsArgs = {
    /**
     * Select specific fields to fetch from the Accounts
     * 
    **/
    select?: AccountsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: AccountsInclude | null
    where?: AccountsWhereInput
  }


  /**
   * Subprojects.projects
   */
  export type Subprojects$projectsArgs = {
    /**
     * Select specific fields to fetch from the Projects
     * 
    **/
    select?: ProjectsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: ProjectsInclude | null
    where?: ProjectsWhereInput
  }


  /**
   * Subprojects without action
   */
  export type SubprojectsArgs = {
    /**
     * Select specific fields to fetch from the Subprojects
     * 
    **/
    select?: SubprojectsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: SubprojectsInclude | null
  }



  /**
   * Model Taxa
   */


  export type AggregateTaxa = {
    _count: TaxaCountAggregateOutputType | null
    _min: TaxaMinAggregateOutputType | null
    _max: TaxaMaxAggregateOutputType | null
  }

  export type TaxaMinAggregateOutputType = {
    taxon_id: string | null
    account_id: string | null
    taxonomy_id: string | null
    name: string | null
    id_in_source: string | null
    url: string | null
    label: string | null
    deleted: boolean | null
  }

  export type TaxaMaxAggregateOutputType = {
    taxon_id: string | null
    account_id: string | null
    taxonomy_id: string | null
    name: string | null
    id_in_source: string | null
    url: string | null
    label: string | null
    deleted: boolean | null
  }

  export type TaxaCountAggregateOutputType = {
    taxon_id: number
    account_id: number
    taxonomy_id: number
    name: number
    id_in_source: number
    url: number
    label: number
    deleted: number
    _all: number
  }


  export type TaxaMinAggregateInputType = {
    taxon_id?: true
    account_id?: true
    taxonomy_id?: true
    name?: true
    id_in_source?: true
    url?: true
    label?: true
    deleted?: true
  }

  export type TaxaMaxAggregateInputType = {
    taxon_id?: true
    account_id?: true
    taxonomy_id?: true
    name?: true
    id_in_source?: true
    url?: true
    label?: true
    deleted?: true
  }

  export type TaxaCountAggregateInputType = {
    taxon_id?: true
    account_id?: true
    taxonomy_id?: true
    name?: true
    id_in_source?: true
    url?: true
    label?: true
    deleted?: true
    _all?: true
  }

  export type TaxaAggregateArgs = {
    /**
     * Filter which Taxa to aggregate.
     * 
    **/
    where?: TaxaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Taxas to fetch.
     * 
    **/
    orderBy?: Enumerable<TaxaOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     * 
    **/
    cursor?: TaxaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Taxas from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Taxas.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Taxas
    **/
    _count?: true | TaxaCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: TaxaMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: TaxaMaxAggregateInputType
  }

  export type GetTaxaAggregateType<T extends TaxaAggregateArgs> = {
        [P in keyof T & keyof AggregateTaxa]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTaxa[P]>
      : GetScalarType<T[P], AggregateTaxa[P]>
  }




  export type TaxaGroupByArgs = {
    where?: TaxaWhereInput
    orderBy?: Enumerable<TaxaOrderByWithAggregationInput>
    by: Array<TaxaScalarFieldEnum>
    having?: TaxaScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: TaxaCountAggregateInputType | true
    _min?: TaxaMinAggregateInputType
    _max?: TaxaMaxAggregateInputType
  }


  export type TaxaGroupByOutputType = {
    taxon_id: string
    account_id: string | null
    taxonomy_id: string | null
    name: string | null
    id_in_source: string | null
    url: string | null
    label: string | null
    deleted: boolean | null
    _count: TaxaCountAggregateOutputType | null
    _min: TaxaMinAggregateOutputType | null
    _max: TaxaMaxAggregateOutputType | null
  }

  type GetTaxaGroupByPayload<T extends TaxaGroupByArgs> = PrismaPromise<
    Array<
      PickArray<TaxaGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof TaxaGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], TaxaGroupByOutputType[P]>
            : GetScalarType<T[P], TaxaGroupByOutputType[P]>
        }
      >
    >


  export type TaxaSelect = {
    taxon_id?: boolean
    account_id?: boolean
    taxonomy_id?: boolean
    name?: boolean
    id_in_source?: boolean
    url?: boolean
    label?: boolean
    deleted?: boolean
    subproject_taxa?: boolean | Taxa$subproject_taxaArgs
    accounts?: boolean | Taxa$accountsArgs
    taxonomies?: boolean | Taxa$taxonomiesArgs
    _count?: boolean | TaxaCountOutputTypeArgs
  }


  export type TaxaInclude = {
    subproject_taxa?: boolean | Taxa$subproject_taxaArgs
    accounts?: boolean | Taxa$accountsArgs
    taxonomies?: boolean | Taxa$taxonomiesArgs
    _count?: boolean | TaxaCountOutputTypeArgs
  } 

  export type TaxaGetPayload<S extends boolean | null | undefined | TaxaArgs> =
    S extends { select: any, include: any } ? 'Please either choose `select` or `include`' :
    S extends true ? Taxa :
    S extends undefined ? never :
    S extends { include: any } & (TaxaArgs | TaxaFindManyArgs)
    ? Taxa  & {
    [P in TruthyKeys<S['include']>]:
        P extends 'subproject_taxa' ? Array < Subproject_taxaGetPayload<S['include'][P]>>  :
        P extends 'accounts' ? AccountsGetPayload<S['include'][P]> | null :
        P extends 'taxonomies' ? TaxonomiesGetPayload<S['include'][P]> | null :
        P extends '_count' ? TaxaCountOutputTypeGetPayload<S['include'][P]> :  never
  } 
    : S extends { select: any } & (TaxaArgs | TaxaFindManyArgs)
      ? {
    [P in TruthyKeys<S['select']>]:
        P extends 'subproject_taxa' ? Array < Subproject_taxaGetPayload<S['select'][P]>>  :
        P extends 'accounts' ? AccountsGetPayload<S['select'][P]> | null :
        P extends 'taxonomies' ? TaxonomiesGetPayload<S['select'][P]> | null :
        P extends '_count' ? TaxaCountOutputTypeGetPayload<S['select'][P]> :  P extends keyof Taxa ? Taxa[P] : never
  } 
      : Taxa


  type TaxaCountArgs = Merge<
    Omit<TaxaFindManyArgs, 'select' | 'include'> & {
      select?: TaxaCountAggregateInputType | true
    }
  >

  export interface TaxaDelegate<GlobalRejectSettings extends Prisma.RejectOnNotFound | Prisma.RejectPerOperation | false | undefined> {
    /**
     * Find zero or one Taxa that matches the filter.
     * @param {TaxaFindUniqueArgs} args - Arguments to find a Taxa
     * @example
     * // Get one Taxa
     * const taxa = await prisma.taxa.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends TaxaFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, TaxaFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'Taxa'> extends True ? Prisma__TaxaClient<TaxaGetPayload<T>> : Prisma__TaxaClient<TaxaGetPayload<T> | null, null>

    /**
     * Find one Taxa that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {TaxaFindUniqueOrThrowArgs} args - Arguments to find a Taxa
     * @example
     * // Get one Taxa
     * const taxa = await prisma.taxa.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends TaxaFindUniqueOrThrowArgs>(
      args?: SelectSubset<T, TaxaFindUniqueOrThrowArgs>
    ): Prisma__TaxaClient<TaxaGetPayload<T>>

    /**
     * Find the first Taxa that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TaxaFindFirstArgs} args - Arguments to find a Taxa
     * @example
     * // Get one Taxa
     * const taxa = await prisma.taxa.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends TaxaFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, TaxaFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'Taxa'> extends True ? Prisma__TaxaClient<TaxaGetPayload<T>> : Prisma__TaxaClient<TaxaGetPayload<T> | null, null>

    /**
     * Find the first Taxa that matches the filter or
     * throw `NotFoundError` if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TaxaFindFirstOrThrowArgs} args - Arguments to find a Taxa
     * @example
     * // Get one Taxa
     * const taxa = await prisma.taxa.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends TaxaFindFirstOrThrowArgs>(
      args?: SelectSubset<T, TaxaFindFirstOrThrowArgs>
    ): Prisma__TaxaClient<TaxaGetPayload<T>>

    /**
     * Find zero or more Taxas that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TaxaFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Taxas
     * const taxas = await prisma.taxa.findMany()
     * 
     * // Get first 10 Taxas
     * const taxas = await prisma.taxa.findMany({ take: 10 })
     * 
     * // Only select the `taxon_id`
     * const taxaWithTaxon_idOnly = await prisma.taxa.findMany({ select: { taxon_id: true } })
     * 
    **/
    findMany<T extends TaxaFindManyArgs>(
      args?: SelectSubset<T, TaxaFindManyArgs>
    ): PrismaPromise<Array<TaxaGetPayload<T>>>

    /**
     * Create a Taxa.
     * @param {TaxaCreateArgs} args - Arguments to create a Taxa.
     * @example
     * // Create one Taxa
     * const Taxa = await prisma.taxa.create({
     *   data: {
     *     // ... data to create a Taxa
     *   }
     * })
     * 
    **/
    create<T extends TaxaCreateArgs>(
      args: SelectSubset<T, TaxaCreateArgs>
    ): Prisma__TaxaClient<TaxaGetPayload<T>>

    /**
     * Create many Taxas.
     *     @param {TaxaCreateManyArgs} args - Arguments to create many Taxas.
     *     @example
     *     // Create many Taxas
     *     const taxa = await prisma.taxa.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends TaxaCreateManyArgs>(
      args?: SelectSubset<T, TaxaCreateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Delete a Taxa.
     * @param {TaxaDeleteArgs} args - Arguments to delete one Taxa.
     * @example
     * // Delete one Taxa
     * const Taxa = await prisma.taxa.delete({
     *   where: {
     *     // ... filter to delete one Taxa
     *   }
     * })
     * 
    **/
    delete<T extends TaxaDeleteArgs>(
      args: SelectSubset<T, TaxaDeleteArgs>
    ): Prisma__TaxaClient<TaxaGetPayload<T>>

    /**
     * Update one Taxa.
     * @param {TaxaUpdateArgs} args - Arguments to update one Taxa.
     * @example
     * // Update one Taxa
     * const taxa = await prisma.taxa.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends TaxaUpdateArgs>(
      args: SelectSubset<T, TaxaUpdateArgs>
    ): Prisma__TaxaClient<TaxaGetPayload<T>>

    /**
     * Delete zero or more Taxas.
     * @param {TaxaDeleteManyArgs} args - Arguments to filter Taxas to delete.
     * @example
     * // Delete a few Taxas
     * const { count } = await prisma.taxa.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends TaxaDeleteManyArgs>(
      args?: SelectSubset<T, TaxaDeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more Taxas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TaxaUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Taxas
     * const taxa = await prisma.taxa.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends TaxaUpdateManyArgs>(
      args: SelectSubset<T, TaxaUpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one Taxa.
     * @param {TaxaUpsertArgs} args - Arguments to update or create a Taxa.
     * @example
     * // Update or create a Taxa
     * const taxa = await prisma.taxa.upsert({
     *   create: {
     *     // ... data to create a Taxa
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Taxa we want to update
     *   }
     * })
    **/
    upsert<T extends TaxaUpsertArgs>(
      args: SelectSubset<T, TaxaUpsertArgs>
    ): Prisma__TaxaClient<TaxaGetPayload<T>>

    /**
     * Count the number of Taxas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TaxaCountArgs} args - Arguments to filter Taxas to count.
     * @example
     * // Count the number of Taxas
     * const count = await prisma.taxa.count({
     *   where: {
     *     // ... the filter for the Taxas we want to count
     *   }
     * })
    **/
    count<T extends TaxaCountArgs>(
      args?: Subset<T, TaxaCountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], TaxaCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Taxa.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TaxaAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends TaxaAggregateArgs>(args: Subset<T, TaxaAggregateArgs>): PrismaPromise<GetTaxaAggregateType<T>>

    /**
     * Group by Taxa.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TaxaGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends TaxaGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: TaxaGroupByArgs['orderBy'] }
        : { orderBy?: TaxaGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, TaxaGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTaxaGroupByPayload<T> : PrismaPromise<InputErrors>

  }

  /**
   * The delegate class that acts as a "Promise-like" for Taxa.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__TaxaClient<T, Null = never> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';

    subproject_taxa<T extends Taxa$subproject_taxaArgs= {}>(args?: Subset<T, Taxa$subproject_taxaArgs>): PrismaPromise<Array<Subproject_taxaGetPayload<T>>| Null>;

    accounts<T extends Taxa$accountsArgs= {}>(args?: Subset<T, Taxa$accountsArgs>): Prisma__AccountsClient<AccountsGetPayload<T> | Null>;

    taxonomies<T extends Taxa$taxonomiesArgs= {}>(args?: Subset<T, Taxa$taxonomiesArgs>): Prisma__TaxonomiesClient<TaxonomiesGetPayload<T> | Null>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }



  // Custom InputTypes

  /**
   * Taxa base type for findUnique actions
   */
  export type TaxaFindUniqueArgsBase = {
    /**
     * Select specific fields to fetch from the Taxa
     * 
    **/
    select?: TaxaSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: TaxaInclude | null
    /**
     * Filter, which Taxa to fetch.
     * 
    **/
    where: TaxaWhereUniqueInput
  }

  /**
   * Taxa findUnique
   */
  export interface TaxaFindUniqueArgs extends TaxaFindUniqueArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findUniqueOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * Taxa findUniqueOrThrow
   */
  export type TaxaFindUniqueOrThrowArgs = {
    /**
     * Select specific fields to fetch from the Taxa
     * 
    **/
    select?: TaxaSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: TaxaInclude | null
    /**
     * Filter, which Taxa to fetch.
     * 
    **/
    where: TaxaWhereUniqueInput
  }


  /**
   * Taxa base type for findFirst actions
   */
  export type TaxaFindFirstArgsBase = {
    /**
     * Select specific fields to fetch from the Taxa
     * 
    **/
    select?: TaxaSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: TaxaInclude | null
    /**
     * Filter, which Taxa to fetch.
     * 
    **/
    where?: TaxaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Taxas to fetch.
     * 
    **/
    orderBy?: Enumerable<TaxaOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Taxas.
     * 
    **/
    cursor?: TaxaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Taxas from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Taxas.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Taxas.
     * 
    **/
    distinct?: Enumerable<TaxaScalarFieldEnum>
  }

  /**
   * Taxa findFirst
   */
  export interface TaxaFindFirstArgs extends TaxaFindFirstArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findFirstOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * Taxa findFirstOrThrow
   */
  export type TaxaFindFirstOrThrowArgs = {
    /**
     * Select specific fields to fetch from the Taxa
     * 
    **/
    select?: TaxaSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: TaxaInclude | null
    /**
     * Filter, which Taxa to fetch.
     * 
    **/
    where?: TaxaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Taxas to fetch.
     * 
    **/
    orderBy?: Enumerable<TaxaOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Taxas.
     * 
    **/
    cursor?: TaxaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Taxas from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Taxas.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Taxas.
     * 
    **/
    distinct?: Enumerable<TaxaScalarFieldEnum>
  }


  /**
   * Taxa findMany
   */
  export type TaxaFindManyArgs = {
    /**
     * Select specific fields to fetch from the Taxa
     * 
    **/
    select?: TaxaSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: TaxaInclude | null
    /**
     * Filter, which Taxas to fetch.
     * 
    **/
    where?: TaxaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Taxas to fetch.
     * 
    **/
    orderBy?: Enumerable<TaxaOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Taxas.
     * 
    **/
    cursor?: TaxaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Taxas from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Taxas.
     * 
    **/
    skip?: number
    distinct?: Enumerable<TaxaScalarFieldEnum>
  }


  /**
   * Taxa create
   */
  export type TaxaCreateArgs = {
    /**
     * Select specific fields to fetch from the Taxa
     * 
    **/
    select?: TaxaSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: TaxaInclude | null
    /**
     * The data needed to create a Taxa.
     * 
    **/
    data: XOR<TaxaCreateInput, TaxaUncheckedCreateInput>
  }


  /**
   * Taxa createMany
   */
  export type TaxaCreateManyArgs = {
    /**
     * The data used to create many Taxas.
     * 
    **/
    data: Enumerable<TaxaCreateManyInput>
    skipDuplicates?: boolean
  }


  /**
   * Taxa update
   */
  export type TaxaUpdateArgs = {
    /**
     * Select specific fields to fetch from the Taxa
     * 
    **/
    select?: TaxaSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: TaxaInclude | null
    /**
     * The data needed to update a Taxa.
     * 
    **/
    data: XOR<TaxaUpdateInput, TaxaUncheckedUpdateInput>
    /**
     * Choose, which Taxa to update.
     * 
    **/
    where: TaxaWhereUniqueInput
  }


  /**
   * Taxa updateMany
   */
  export type TaxaUpdateManyArgs = {
    /**
     * The data used to update Taxas.
     * 
    **/
    data: XOR<TaxaUpdateManyMutationInput, TaxaUncheckedUpdateManyInput>
    /**
     * Filter which Taxas to update
     * 
    **/
    where?: TaxaWhereInput
  }


  /**
   * Taxa upsert
   */
  export type TaxaUpsertArgs = {
    /**
     * Select specific fields to fetch from the Taxa
     * 
    **/
    select?: TaxaSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: TaxaInclude | null
    /**
     * The filter to search for the Taxa to update in case it exists.
     * 
    **/
    where: TaxaWhereUniqueInput
    /**
     * In case the Taxa found by the `where` argument doesn't exist, create a new Taxa with this data.
     * 
    **/
    create: XOR<TaxaCreateInput, TaxaUncheckedCreateInput>
    /**
     * In case the Taxa was found with the provided `where` argument, update it with this data.
     * 
    **/
    update: XOR<TaxaUpdateInput, TaxaUncheckedUpdateInput>
  }


  /**
   * Taxa delete
   */
  export type TaxaDeleteArgs = {
    /**
     * Select specific fields to fetch from the Taxa
     * 
    **/
    select?: TaxaSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: TaxaInclude | null
    /**
     * Filter which Taxa to delete.
     * 
    **/
    where: TaxaWhereUniqueInput
  }


  /**
   * Taxa deleteMany
   */
  export type TaxaDeleteManyArgs = {
    /**
     * Filter which Taxas to delete
     * 
    **/
    where?: TaxaWhereInput
  }


  /**
   * Taxa.subproject_taxa
   */
  export type Taxa$subproject_taxaArgs = {
    /**
     * Select specific fields to fetch from the Subproject_taxa
     * 
    **/
    select?: Subproject_taxaSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: Subproject_taxaInclude | null
    where?: Subproject_taxaWhereInput
    orderBy?: Enumerable<Subproject_taxaOrderByWithRelationInput>
    cursor?: Subproject_taxaWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Enumerable<Subproject_taxaScalarFieldEnum>
  }


  /**
   * Taxa.accounts
   */
  export type Taxa$accountsArgs = {
    /**
     * Select specific fields to fetch from the Accounts
     * 
    **/
    select?: AccountsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: AccountsInclude | null
    where?: AccountsWhereInput
  }


  /**
   * Taxa.taxonomies
   */
  export type Taxa$taxonomiesArgs = {
    /**
     * Select specific fields to fetch from the Taxonomies
     * 
    **/
    select?: TaxonomiesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: TaxonomiesInclude | null
    where?: TaxonomiesWhereInput
  }


  /**
   * Taxa without action
   */
  export type TaxaArgs = {
    /**
     * Select specific fields to fetch from the Taxa
     * 
    **/
    select?: TaxaSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: TaxaInclude | null
  }



  /**
   * Model Taxonomies
   */


  export type AggregateTaxonomies = {
    _count: TaxonomiesCountAggregateOutputType | null
    _min: TaxonomiesMinAggregateOutputType | null
    _max: TaxonomiesMaxAggregateOutputType | null
  }

  export type TaxonomiesMinAggregateOutputType = {
    taxonomy_id: string | null
    account_id: string | null
    project_id: string | null
    type: taxonomy_type | null
    name: string | null
    url: string | null
    obsolete: boolean | null
    label_replace_by_generated_column: string | null
    deleted: boolean | null
  }

  export type TaxonomiesMaxAggregateOutputType = {
    taxonomy_id: string | null
    account_id: string | null
    project_id: string | null
    type: taxonomy_type | null
    name: string | null
    url: string | null
    obsolete: boolean | null
    label_replace_by_generated_column: string | null
    deleted: boolean | null
  }

  export type TaxonomiesCountAggregateOutputType = {
    taxonomy_id: number
    account_id: number
    project_id: number
    type: number
    name: number
    url: number
    obsolete: number
    data: number
    label_replace_by_generated_column: number
    deleted: number
    _all: number
  }


  export type TaxonomiesMinAggregateInputType = {
    taxonomy_id?: true
    account_id?: true
    project_id?: true
    type?: true
    name?: true
    url?: true
    obsolete?: true
    label_replace_by_generated_column?: true
    deleted?: true
  }

  export type TaxonomiesMaxAggregateInputType = {
    taxonomy_id?: true
    account_id?: true
    project_id?: true
    type?: true
    name?: true
    url?: true
    obsolete?: true
    label_replace_by_generated_column?: true
    deleted?: true
  }

  export type TaxonomiesCountAggregateInputType = {
    taxonomy_id?: true
    account_id?: true
    project_id?: true
    type?: true
    name?: true
    url?: true
    obsolete?: true
    data?: true
    label_replace_by_generated_column?: true
    deleted?: true
    _all?: true
  }

  export type TaxonomiesAggregateArgs = {
    /**
     * Filter which Taxonomies to aggregate.
     * 
    **/
    where?: TaxonomiesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Taxonomies to fetch.
     * 
    **/
    orderBy?: Enumerable<TaxonomiesOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     * 
    **/
    cursor?: TaxonomiesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Taxonomies from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Taxonomies.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Taxonomies
    **/
    _count?: true | TaxonomiesCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: TaxonomiesMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: TaxonomiesMaxAggregateInputType
  }

  export type GetTaxonomiesAggregateType<T extends TaxonomiesAggregateArgs> = {
        [P in keyof T & keyof AggregateTaxonomies]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTaxonomies[P]>
      : GetScalarType<T[P], AggregateTaxonomies[P]>
  }




  export type TaxonomiesGroupByArgs = {
    where?: TaxonomiesWhereInput
    orderBy?: Enumerable<TaxonomiesOrderByWithAggregationInput>
    by: Array<TaxonomiesScalarFieldEnum>
    having?: TaxonomiesScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: TaxonomiesCountAggregateInputType | true
    _min?: TaxonomiesMinAggregateInputType
    _max?: TaxonomiesMaxAggregateInputType
  }


  export type TaxonomiesGroupByOutputType = {
    taxonomy_id: string
    account_id: string | null
    project_id: string | null
    type: taxonomy_type | null
    name: string | null
    url: string | null
    obsolete: boolean | null
    data: JsonValue | null
    label_replace_by_generated_column: string | null
    deleted: boolean | null
    _count: TaxonomiesCountAggregateOutputType | null
    _min: TaxonomiesMinAggregateOutputType | null
    _max: TaxonomiesMaxAggregateOutputType | null
  }

  type GetTaxonomiesGroupByPayload<T extends TaxonomiesGroupByArgs> = PrismaPromise<
    Array<
      PickArray<TaxonomiesGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof TaxonomiesGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], TaxonomiesGroupByOutputType[P]>
            : GetScalarType<T[P], TaxonomiesGroupByOutputType[P]>
        }
      >
    >


  export type TaxonomiesSelect = {
    taxonomy_id?: boolean
    account_id?: boolean
    project_id?: boolean
    type?: boolean
    name?: boolean
    url?: boolean
    obsolete?: boolean
    data?: boolean
    label_replace_by_generated_column?: boolean
    deleted?: boolean
    taxa?: boolean | Taxonomies$taxaArgs
    accounts?: boolean | Taxonomies$accountsArgs
    projects?: boolean | Taxonomies$projectsArgs
    _count?: boolean | TaxonomiesCountOutputTypeArgs
  }


  export type TaxonomiesInclude = {
    taxa?: boolean | Taxonomies$taxaArgs
    accounts?: boolean | Taxonomies$accountsArgs
    projects?: boolean | Taxonomies$projectsArgs
    _count?: boolean | TaxonomiesCountOutputTypeArgs
  } 

  export type TaxonomiesGetPayload<S extends boolean | null | undefined | TaxonomiesArgs> =
    S extends { select: any, include: any } ? 'Please either choose `select` or `include`' :
    S extends true ? Taxonomies :
    S extends undefined ? never :
    S extends { include: any } & (TaxonomiesArgs | TaxonomiesFindManyArgs)
    ? Taxonomies  & {
    [P in TruthyKeys<S['include']>]:
        P extends 'taxa' ? Array < TaxaGetPayload<S['include'][P]>>  :
        P extends 'accounts' ? AccountsGetPayload<S['include'][P]> | null :
        P extends 'projects' ? ProjectsGetPayload<S['include'][P]> | null :
        P extends '_count' ? TaxonomiesCountOutputTypeGetPayload<S['include'][P]> :  never
  } 
    : S extends { select: any } & (TaxonomiesArgs | TaxonomiesFindManyArgs)
      ? {
    [P in TruthyKeys<S['select']>]:
        P extends 'taxa' ? Array < TaxaGetPayload<S['select'][P]>>  :
        P extends 'accounts' ? AccountsGetPayload<S['select'][P]> | null :
        P extends 'projects' ? ProjectsGetPayload<S['select'][P]> | null :
        P extends '_count' ? TaxonomiesCountOutputTypeGetPayload<S['select'][P]> :  P extends keyof Taxonomies ? Taxonomies[P] : never
  } 
      : Taxonomies


  type TaxonomiesCountArgs = Merge<
    Omit<TaxonomiesFindManyArgs, 'select' | 'include'> & {
      select?: TaxonomiesCountAggregateInputType | true
    }
  >

  export interface TaxonomiesDelegate<GlobalRejectSettings extends Prisma.RejectOnNotFound | Prisma.RejectPerOperation | false | undefined> {
    /**
     * Find zero or one Taxonomies that matches the filter.
     * @param {TaxonomiesFindUniqueArgs} args - Arguments to find a Taxonomies
     * @example
     * // Get one Taxonomies
     * const taxonomies = await prisma.taxonomies.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends TaxonomiesFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, TaxonomiesFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'Taxonomies'> extends True ? Prisma__TaxonomiesClient<TaxonomiesGetPayload<T>> : Prisma__TaxonomiesClient<TaxonomiesGetPayload<T> | null, null>

    /**
     * Find one Taxonomies that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {TaxonomiesFindUniqueOrThrowArgs} args - Arguments to find a Taxonomies
     * @example
     * // Get one Taxonomies
     * const taxonomies = await prisma.taxonomies.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends TaxonomiesFindUniqueOrThrowArgs>(
      args?: SelectSubset<T, TaxonomiesFindUniqueOrThrowArgs>
    ): Prisma__TaxonomiesClient<TaxonomiesGetPayload<T>>

    /**
     * Find the first Taxonomies that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TaxonomiesFindFirstArgs} args - Arguments to find a Taxonomies
     * @example
     * // Get one Taxonomies
     * const taxonomies = await prisma.taxonomies.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends TaxonomiesFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, TaxonomiesFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'Taxonomies'> extends True ? Prisma__TaxonomiesClient<TaxonomiesGetPayload<T>> : Prisma__TaxonomiesClient<TaxonomiesGetPayload<T> | null, null>

    /**
     * Find the first Taxonomies that matches the filter or
     * throw `NotFoundError` if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TaxonomiesFindFirstOrThrowArgs} args - Arguments to find a Taxonomies
     * @example
     * // Get one Taxonomies
     * const taxonomies = await prisma.taxonomies.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends TaxonomiesFindFirstOrThrowArgs>(
      args?: SelectSubset<T, TaxonomiesFindFirstOrThrowArgs>
    ): Prisma__TaxonomiesClient<TaxonomiesGetPayload<T>>

    /**
     * Find zero or more Taxonomies that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TaxonomiesFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Taxonomies
     * const taxonomies = await prisma.taxonomies.findMany()
     * 
     * // Get first 10 Taxonomies
     * const taxonomies = await prisma.taxonomies.findMany({ take: 10 })
     * 
     * // Only select the `taxonomy_id`
     * const taxonomiesWithTaxonomy_idOnly = await prisma.taxonomies.findMany({ select: { taxonomy_id: true } })
     * 
    **/
    findMany<T extends TaxonomiesFindManyArgs>(
      args?: SelectSubset<T, TaxonomiesFindManyArgs>
    ): PrismaPromise<Array<TaxonomiesGetPayload<T>>>

    /**
     * Create a Taxonomies.
     * @param {TaxonomiesCreateArgs} args - Arguments to create a Taxonomies.
     * @example
     * // Create one Taxonomies
     * const Taxonomies = await prisma.taxonomies.create({
     *   data: {
     *     // ... data to create a Taxonomies
     *   }
     * })
     * 
    **/
    create<T extends TaxonomiesCreateArgs>(
      args: SelectSubset<T, TaxonomiesCreateArgs>
    ): Prisma__TaxonomiesClient<TaxonomiesGetPayload<T>>

    /**
     * Create many Taxonomies.
     *     @param {TaxonomiesCreateManyArgs} args - Arguments to create many Taxonomies.
     *     @example
     *     // Create many Taxonomies
     *     const taxonomies = await prisma.taxonomies.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends TaxonomiesCreateManyArgs>(
      args?: SelectSubset<T, TaxonomiesCreateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Delete a Taxonomies.
     * @param {TaxonomiesDeleteArgs} args - Arguments to delete one Taxonomies.
     * @example
     * // Delete one Taxonomies
     * const Taxonomies = await prisma.taxonomies.delete({
     *   where: {
     *     // ... filter to delete one Taxonomies
     *   }
     * })
     * 
    **/
    delete<T extends TaxonomiesDeleteArgs>(
      args: SelectSubset<T, TaxonomiesDeleteArgs>
    ): Prisma__TaxonomiesClient<TaxonomiesGetPayload<T>>

    /**
     * Update one Taxonomies.
     * @param {TaxonomiesUpdateArgs} args - Arguments to update one Taxonomies.
     * @example
     * // Update one Taxonomies
     * const taxonomies = await prisma.taxonomies.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends TaxonomiesUpdateArgs>(
      args: SelectSubset<T, TaxonomiesUpdateArgs>
    ): Prisma__TaxonomiesClient<TaxonomiesGetPayload<T>>

    /**
     * Delete zero or more Taxonomies.
     * @param {TaxonomiesDeleteManyArgs} args - Arguments to filter Taxonomies to delete.
     * @example
     * // Delete a few Taxonomies
     * const { count } = await prisma.taxonomies.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends TaxonomiesDeleteManyArgs>(
      args?: SelectSubset<T, TaxonomiesDeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more Taxonomies.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TaxonomiesUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Taxonomies
     * const taxonomies = await prisma.taxonomies.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends TaxonomiesUpdateManyArgs>(
      args: SelectSubset<T, TaxonomiesUpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one Taxonomies.
     * @param {TaxonomiesUpsertArgs} args - Arguments to update or create a Taxonomies.
     * @example
     * // Update or create a Taxonomies
     * const taxonomies = await prisma.taxonomies.upsert({
     *   create: {
     *     // ... data to create a Taxonomies
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Taxonomies we want to update
     *   }
     * })
    **/
    upsert<T extends TaxonomiesUpsertArgs>(
      args: SelectSubset<T, TaxonomiesUpsertArgs>
    ): Prisma__TaxonomiesClient<TaxonomiesGetPayload<T>>

    /**
     * Count the number of Taxonomies.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TaxonomiesCountArgs} args - Arguments to filter Taxonomies to count.
     * @example
     * // Count the number of Taxonomies
     * const count = await prisma.taxonomies.count({
     *   where: {
     *     // ... the filter for the Taxonomies we want to count
     *   }
     * })
    **/
    count<T extends TaxonomiesCountArgs>(
      args?: Subset<T, TaxonomiesCountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], TaxonomiesCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Taxonomies.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TaxonomiesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends TaxonomiesAggregateArgs>(args: Subset<T, TaxonomiesAggregateArgs>): PrismaPromise<GetTaxonomiesAggregateType<T>>

    /**
     * Group by Taxonomies.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TaxonomiesGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends TaxonomiesGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: TaxonomiesGroupByArgs['orderBy'] }
        : { orderBy?: TaxonomiesGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, TaxonomiesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTaxonomiesGroupByPayload<T> : PrismaPromise<InputErrors>

  }

  /**
   * The delegate class that acts as a "Promise-like" for Taxonomies.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__TaxonomiesClient<T, Null = never> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';

    taxa<T extends Taxonomies$taxaArgs= {}>(args?: Subset<T, Taxonomies$taxaArgs>): PrismaPromise<Array<TaxaGetPayload<T>>| Null>;

    accounts<T extends Taxonomies$accountsArgs= {}>(args?: Subset<T, Taxonomies$accountsArgs>): Prisma__AccountsClient<AccountsGetPayload<T> | Null>;

    projects<T extends Taxonomies$projectsArgs= {}>(args?: Subset<T, Taxonomies$projectsArgs>): Prisma__ProjectsClient<ProjectsGetPayload<T> | Null>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }



  // Custom InputTypes

  /**
   * Taxonomies base type for findUnique actions
   */
  export type TaxonomiesFindUniqueArgsBase = {
    /**
     * Select specific fields to fetch from the Taxonomies
     * 
    **/
    select?: TaxonomiesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: TaxonomiesInclude | null
    /**
     * Filter, which Taxonomies to fetch.
     * 
    **/
    where: TaxonomiesWhereUniqueInput
  }

  /**
   * Taxonomies findUnique
   */
  export interface TaxonomiesFindUniqueArgs extends TaxonomiesFindUniqueArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findUniqueOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * Taxonomies findUniqueOrThrow
   */
  export type TaxonomiesFindUniqueOrThrowArgs = {
    /**
     * Select specific fields to fetch from the Taxonomies
     * 
    **/
    select?: TaxonomiesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: TaxonomiesInclude | null
    /**
     * Filter, which Taxonomies to fetch.
     * 
    **/
    where: TaxonomiesWhereUniqueInput
  }


  /**
   * Taxonomies base type for findFirst actions
   */
  export type TaxonomiesFindFirstArgsBase = {
    /**
     * Select specific fields to fetch from the Taxonomies
     * 
    **/
    select?: TaxonomiesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: TaxonomiesInclude | null
    /**
     * Filter, which Taxonomies to fetch.
     * 
    **/
    where?: TaxonomiesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Taxonomies to fetch.
     * 
    **/
    orderBy?: Enumerable<TaxonomiesOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Taxonomies.
     * 
    **/
    cursor?: TaxonomiesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Taxonomies from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Taxonomies.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Taxonomies.
     * 
    **/
    distinct?: Enumerable<TaxonomiesScalarFieldEnum>
  }

  /**
   * Taxonomies findFirst
   */
  export interface TaxonomiesFindFirstArgs extends TaxonomiesFindFirstArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findFirstOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * Taxonomies findFirstOrThrow
   */
  export type TaxonomiesFindFirstOrThrowArgs = {
    /**
     * Select specific fields to fetch from the Taxonomies
     * 
    **/
    select?: TaxonomiesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: TaxonomiesInclude | null
    /**
     * Filter, which Taxonomies to fetch.
     * 
    **/
    where?: TaxonomiesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Taxonomies to fetch.
     * 
    **/
    orderBy?: Enumerable<TaxonomiesOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Taxonomies.
     * 
    **/
    cursor?: TaxonomiesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Taxonomies from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Taxonomies.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Taxonomies.
     * 
    **/
    distinct?: Enumerable<TaxonomiesScalarFieldEnum>
  }


  /**
   * Taxonomies findMany
   */
  export type TaxonomiesFindManyArgs = {
    /**
     * Select specific fields to fetch from the Taxonomies
     * 
    **/
    select?: TaxonomiesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: TaxonomiesInclude | null
    /**
     * Filter, which Taxonomies to fetch.
     * 
    **/
    where?: TaxonomiesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Taxonomies to fetch.
     * 
    **/
    orderBy?: Enumerable<TaxonomiesOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Taxonomies.
     * 
    **/
    cursor?: TaxonomiesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Taxonomies from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Taxonomies.
     * 
    **/
    skip?: number
    distinct?: Enumerable<TaxonomiesScalarFieldEnum>
  }


  /**
   * Taxonomies create
   */
  export type TaxonomiesCreateArgs = {
    /**
     * Select specific fields to fetch from the Taxonomies
     * 
    **/
    select?: TaxonomiesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: TaxonomiesInclude | null
    /**
     * The data needed to create a Taxonomies.
     * 
    **/
    data: XOR<TaxonomiesCreateInput, TaxonomiesUncheckedCreateInput>
  }


  /**
   * Taxonomies createMany
   */
  export type TaxonomiesCreateManyArgs = {
    /**
     * The data used to create many Taxonomies.
     * 
    **/
    data: Enumerable<TaxonomiesCreateManyInput>
    skipDuplicates?: boolean
  }


  /**
   * Taxonomies update
   */
  export type TaxonomiesUpdateArgs = {
    /**
     * Select specific fields to fetch from the Taxonomies
     * 
    **/
    select?: TaxonomiesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: TaxonomiesInclude | null
    /**
     * The data needed to update a Taxonomies.
     * 
    **/
    data: XOR<TaxonomiesUpdateInput, TaxonomiesUncheckedUpdateInput>
    /**
     * Choose, which Taxonomies to update.
     * 
    **/
    where: TaxonomiesWhereUniqueInput
  }


  /**
   * Taxonomies updateMany
   */
  export type TaxonomiesUpdateManyArgs = {
    /**
     * The data used to update Taxonomies.
     * 
    **/
    data: XOR<TaxonomiesUpdateManyMutationInput, TaxonomiesUncheckedUpdateManyInput>
    /**
     * Filter which Taxonomies to update
     * 
    **/
    where?: TaxonomiesWhereInput
  }


  /**
   * Taxonomies upsert
   */
  export type TaxonomiesUpsertArgs = {
    /**
     * Select specific fields to fetch from the Taxonomies
     * 
    **/
    select?: TaxonomiesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: TaxonomiesInclude | null
    /**
     * The filter to search for the Taxonomies to update in case it exists.
     * 
    **/
    where: TaxonomiesWhereUniqueInput
    /**
     * In case the Taxonomies found by the `where` argument doesn't exist, create a new Taxonomies with this data.
     * 
    **/
    create: XOR<TaxonomiesCreateInput, TaxonomiesUncheckedCreateInput>
    /**
     * In case the Taxonomies was found with the provided `where` argument, update it with this data.
     * 
    **/
    update: XOR<TaxonomiesUpdateInput, TaxonomiesUncheckedUpdateInput>
  }


  /**
   * Taxonomies delete
   */
  export type TaxonomiesDeleteArgs = {
    /**
     * Select specific fields to fetch from the Taxonomies
     * 
    **/
    select?: TaxonomiesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: TaxonomiesInclude | null
    /**
     * Filter which Taxonomies to delete.
     * 
    **/
    where: TaxonomiesWhereUniqueInput
  }


  /**
   * Taxonomies deleteMany
   */
  export type TaxonomiesDeleteManyArgs = {
    /**
     * Filter which Taxonomies to delete
     * 
    **/
    where?: TaxonomiesWhereInput
  }


  /**
   * Taxonomies.taxa
   */
  export type Taxonomies$taxaArgs = {
    /**
     * Select specific fields to fetch from the Taxa
     * 
    **/
    select?: TaxaSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: TaxaInclude | null
    where?: TaxaWhereInput
    orderBy?: Enumerable<TaxaOrderByWithRelationInput>
    cursor?: TaxaWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Enumerable<TaxaScalarFieldEnum>
  }


  /**
   * Taxonomies.accounts
   */
  export type Taxonomies$accountsArgs = {
    /**
     * Select specific fields to fetch from the Accounts
     * 
    **/
    select?: AccountsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: AccountsInclude | null
    where?: AccountsWhereInput
  }


  /**
   * Taxonomies.projects
   */
  export type Taxonomies$projectsArgs = {
    /**
     * Select specific fields to fetch from the Projects
     * 
    **/
    select?: ProjectsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: ProjectsInclude | null
    where?: ProjectsWhereInput
  }


  /**
   * Taxonomies without action
   */
  export type TaxonomiesArgs = {
    /**
     * Select specific fields to fetch from the Taxonomies
     * 
    **/
    select?: TaxonomiesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: TaxonomiesInclude | null
  }



  /**
   * Model Tile_layers
   */


  export type AggregateTile_layers = {
    _count: Tile_layersCountAggregateOutputType | null
    _avg: Tile_layersAvgAggregateOutputType | null
    _sum: Tile_layersSumAggregateOutputType | null
    _min: Tile_layersMinAggregateOutputType | null
    _max: Tile_layersMaxAggregateOutputType | null
  }

  export type Tile_layersAvgAggregateOutputType = {
    sort: number | null
    max_zoom: number | null
    min_zoom: number | null
    opacity_percent: number | null
    local_data_size: number | null
  }

  export type Tile_layersSumAggregateOutputType = {
    sort: number | null
    max_zoom: number | null
    min_zoom: number | null
    opacity_percent: number | null
    local_data_size: number | null
  }

  export type Tile_layersMinAggregateOutputType = {
    tile_layer_id: string | null
    account_id: string | null
    project_id: string | null
    label: string | null
    sort: number | null
    active: boolean | null
    type: tile_layer_type_enum | null
    wmts_url_template: string | null
    wms_base_url: string | null
    wms_transparent: boolean | null
    wms_version: string | null
    max_zoom: number | null
    min_zoom: number | null
    opacity_percent: number | null
    grayscale: boolean | null
    local_data_size: number | null
    deleted: boolean | null
  }

  export type Tile_layersMaxAggregateOutputType = {
    tile_layer_id: string | null
    account_id: string | null
    project_id: string | null
    label: string | null
    sort: number | null
    active: boolean | null
    type: tile_layer_type_enum | null
    wmts_url_template: string | null
    wms_base_url: string | null
    wms_transparent: boolean | null
    wms_version: string | null
    max_zoom: number | null
    min_zoom: number | null
    opacity_percent: number | null
    grayscale: boolean | null
    local_data_size: number | null
    deleted: boolean | null
  }

  export type Tile_layersCountAggregateOutputType = {
    tile_layer_id: number
    account_id: number
    project_id: number
    label: number
    sort: number
    active: number
    type: number
    wmts_url_template: number
    wmts_subdomains: number
    wms_base_url: number
    wms_format: number
    wms_layer: number
    wms_parameters: number
    wms_styles: number
    wms_transparent: number
    wms_version: number
    wms_info_format: number
    wms_legend: number
    max_zoom: number
    min_zoom: number
    opacity_percent: number
    grayscale: number
    local_data_size: number
    local_data_bounds: number
    deleted: number
    _all: number
  }


  export type Tile_layersAvgAggregateInputType = {
    sort?: true
    max_zoom?: true
    min_zoom?: true
    opacity_percent?: true
    local_data_size?: true
  }

  export type Tile_layersSumAggregateInputType = {
    sort?: true
    max_zoom?: true
    min_zoom?: true
    opacity_percent?: true
    local_data_size?: true
  }

  export type Tile_layersMinAggregateInputType = {
    tile_layer_id?: true
    account_id?: true
    project_id?: true
    label?: true
    sort?: true
    active?: true
    type?: true
    wmts_url_template?: true
    wms_base_url?: true
    wms_transparent?: true
    wms_version?: true
    max_zoom?: true
    min_zoom?: true
    opacity_percent?: true
    grayscale?: true
    local_data_size?: true
    deleted?: true
  }

  export type Tile_layersMaxAggregateInputType = {
    tile_layer_id?: true
    account_id?: true
    project_id?: true
    label?: true
    sort?: true
    active?: true
    type?: true
    wmts_url_template?: true
    wms_base_url?: true
    wms_transparent?: true
    wms_version?: true
    max_zoom?: true
    min_zoom?: true
    opacity_percent?: true
    grayscale?: true
    local_data_size?: true
    deleted?: true
  }

  export type Tile_layersCountAggregateInputType = {
    tile_layer_id?: true
    account_id?: true
    project_id?: true
    label?: true
    sort?: true
    active?: true
    type?: true
    wmts_url_template?: true
    wmts_subdomains?: true
    wms_base_url?: true
    wms_format?: true
    wms_layer?: true
    wms_parameters?: true
    wms_styles?: true
    wms_transparent?: true
    wms_version?: true
    wms_info_format?: true
    wms_legend?: true
    max_zoom?: true
    min_zoom?: true
    opacity_percent?: true
    grayscale?: true
    local_data_size?: true
    local_data_bounds?: true
    deleted?: true
    _all?: true
  }

  export type Tile_layersAggregateArgs = {
    /**
     * Filter which Tile_layers to aggregate.
     * 
    **/
    where?: Tile_layersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Tile_layers to fetch.
     * 
    **/
    orderBy?: Enumerable<Tile_layersOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     * 
    **/
    cursor?: Tile_layersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Tile_layers from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Tile_layers.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Tile_layers
    **/
    _count?: true | Tile_layersCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Tile_layersAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Tile_layersSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Tile_layersMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Tile_layersMaxAggregateInputType
  }

  export type GetTile_layersAggregateType<T extends Tile_layersAggregateArgs> = {
        [P in keyof T & keyof AggregateTile_layers]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTile_layers[P]>
      : GetScalarType<T[P], AggregateTile_layers[P]>
  }




  export type Tile_layersGroupByArgs = {
    where?: Tile_layersWhereInput
    orderBy?: Enumerable<Tile_layersOrderByWithAggregationInput>
    by: Array<Tile_layersScalarFieldEnum>
    having?: Tile_layersScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Tile_layersCountAggregateInputType | true
    _avg?: Tile_layersAvgAggregateInputType
    _sum?: Tile_layersSumAggregateInputType
    _min?: Tile_layersMinAggregateInputType
    _max?: Tile_layersMaxAggregateInputType
  }


  export type Tile_layersGroupByOutputType = {
    tile_layer_id: string
    account_id: string | null
    project_id: string
    label: string | null
    sort: number | null
    active: boolean | null
    type: tile_layer_type_enum | null
    wmts_url_template: string | null
    wmts_subdomains: JsonValue | null
    wms_base_url: string | null
    wms_format: JsonValue | null
    wms_layer: JsonValue | null
    wms_parameters: JsonValue | null
    wms_styles: JsonValue | null
    wms_transparent: boolean | null
    wms_version: string | null
    wms_info_format: JsonValue | null
    wms_legend: JsonValue | null
    max_zoom: number | null
    min_zoom: number | null
    opacity_percent: number | null
    grayscale: boolean | null
    local_data_size: number | null
    local_data_bounds: JsonValue | null
    deleted: boolean | null
    _count: Tile_layersCountAggregateOutputType | null
    _avg: Tile_layersAvgAggregateOutputType | null
    _sum: Tile_layersSumAggregateOutputType | null
    _min: Tile_layersMinAggregateOutputType | null
    _max: Tile_layersMaxAggregateOutputType | null
  }

  type GetTile_layersGroupByPayload<T extends Tile_layersGroupByArgs> = PrismaPromise<
    Array<
      PickArray<Tile_layersGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Tile_layersGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Tile_layersGroupByOutputType[P]>
            : GetScalarType<T[P], Tile_layersGroupByOutputType[P]>
        }
      >
    >


  export type Tile_layersSelect = {
    tile_layer_id?: boolean
    account_id?: boolean
    project_id?: boolean
    label?: boolean
    sort?: boolean
    active?: boolean
    type?: boolean
    wmts_url_template?: boolean
    wmts_subdomains?: boolean
    wms_base_url?: boolean
    wms_format?: boolean
    wms_layer?: boolean
    wms_parameters?: boolean
    wms_styles?: boolean
    wms_transparent?: boolean
    wms_version?: boolean
    wms_info_format?: boolean
    wms_legend?: boolean
    max_zoom?: boolean
    min_zoom?: boolean
    opacity_percent?: boolean
    grayscale?: boolean
    local_data_size?: boolean
    local_data_bounds?: boolean
    deleted?: boolean
    accounts?: boolean | Tile_layers$accountsArgs
    projects?: boolean | ProjectsArgs
  }


  export type Tile_layersInclude = {
    accounts?: boolean | Tile_layers$accountsArgs
    projects?: boolean | ProjectsArgs
  } 

  export type Tile_layersGetPayload<S extends boolean | null | undefined | Tile_layersArgs> =
    S extends { select: any, include: any } ? 'Please either choose `select` or `include`' :
    S extends true ? Tile_layers :
    S extends undefined ? never :
    S extends { include: any } & (Tile_layersArgs | Tile_layersFindManyArgs)
    ? Tile_layers  & {
    [P in TruthyKeys<S['include']>]:
        P extends 'accounts' ? AccountsGetPayload<S['include'][P]> | null :
        P extends 'projects' ? ProjectsGetPayload<S['include'][P]> :  never
  } 
    : S extends { select: any } & (Tile_layersArgs | Tile_layersFindManyArgs)
      ? {
    [P in TruthyKeys<S['select']>]:
        P extends 'accounts' ? AccountsGetPayload<S['select'][P]> | null :
        P extends 'projects' ? ProjectsGetPayload<S['select'][P]> :  P extends keyof Tile_layers ? Tile_layers[P] : never
  } 
      : Tile_layers


  type Tile_layersCountArgs = Merge<
    Omit<Tile_layersFindManyArgs, 'select' | 'include'> & {
      select?: Tile_layersCountAggregateInputType | true
    }
  >

  export interface Tile_layersDelegate<GlobalRejectSettings extends Prisma.RejectOnNotFound | Prisma.RejectPerOperation | false | undefined> {
    /**
     * Find zero or one Tile_layers that matches the filter.
     * @param {Tile_layersFindUniqueArgs} args - Arguments to find a Tile_layers
     * @example
     * // Get one Tile_layers
     * const tile_layers = await prisma.tile_layers.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends Tile_layersFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, Tile_layersFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'Tile_layers'> extends True ? Prisma__Tile_layersClient<Tile_layersGetPayload<T>> : Prisma__Tile_layersClient<Tile_layersGetPayload<T> | null, null>

    /**
     * Find one Tile_layers that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {Tile_layersFindUniqueOrThrowArgs} args - Arguments to find a Tile_layers
     * @example
     * // Get one Tile_layers
     * const tile_layers = await prisma.tile_layers.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends Tile_layersFindUniqueOrThrowArgs>(
      args?: SelectSubset<T, Tile_layersFindUniqueOrThrowArgs>
    ): Prisma__Tile_layersClient<Tile_layersGetPayload<T>>

    /**
     * Find the first Tile_layers that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Tile_layersFindFirstArgs} args - Arguments to find a Tile_layers
     * @example
     * // Get one Tile_layers
     * const tile_layers = await prisma.tile_layers.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends Tile_layersFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, Tile_layersFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'Tile_layers'> extends True ? Prisma__Tile_layersClient<Tile_layersGetPayload<T>> : Prisma__Tile_layersClient<Tile_layersGetPayload<T> | null, null>

    /**
     * Find the first Tile_layers that matches the filter or
     * throw `NotFoundError` if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Tile_layersFindFirstOrThrowArgs} args - Arguments to find a Tile_layers
     * @example
     * // Get one Tile_layers
     * const tile_layers = await prisma.tile_layers.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends Tile_layersFindFirstOrThrowArgs>(
      args?: SelectSubset<T, Tile_layersFindFirstOrThrowArgs>
    ): Prisma__Tile_layersClient<Tile_layersGetPayload<T>>

    /**
     * Find zero or more Tile_layers that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Tile_layersFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Tile_layers
     * const tile_layers = await prisma.tile_layers.findMany()
     * 
     * // Get first 10 Tile_layers
     * const tile_layers = await prisma.tile_layers.findMany({ take: 10 })
     * 
     * // Only select the `tile_layer_id`
     * const tile_layersWithTile_layer_idOnly = await prisma.tile_layers.findMany({ select: { tile_layer_id: true } })
     * 
    **/
    findMany<T extends Tile_layersFindManyArgs>(
      args?: SelectSubset<T, Tile_layersFindManyArgs>
    ): PrismaPromise<Array<Tile_layersGetPayload<T>>>

    /**
     * Create a Tile_layers.
     * @param {Tile_layersCreateArgs} args - Arguments to create a Tile_layers.
     * @example
     * // Create one Tile_layers
     * const Tile_layers = await prisma.tile_layers.create({
     *   data: {
     *     // ... data to create a Tile_layers
     *   }
     * })
     * 
    **/
    create<T extends Tile_layersCreateArgs>(
      args: SelectSubset<T, Tile_layersCreateArgs>
    ): Prisma__Tile_layersClient<Tile_layersGetPayload<T>>

    /**
     * Create many Tile_layers.
     *     @param {Tile_layersCreateManyArgs} args - Arguments to create many Tile_layers.
     *     @example
     *     // Create many Tile_layers
     *     const tile_layers = await prisma.tile_layers.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends Tile_layersCreateManyArgs>(
      args?: SelectSubset<T, Tile_layersCreateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Delete a Tile_layers.
     * @param {Tile_layersDeleteArgs} args - Arguments to delete one Tile_layers.
     * @example
     * // Delete one Tile_layers
     * const Tile_layers = await prisma.tile_layers.delete({
     *   where: {
     *     // ... filter to delete one Tile_layers
     *   }
     * })
     * 
    **/
    delete<T extends Tile_layersDeleteArgs>(
      args: SelectSubset<T, Tile_layersDeleteArgs>
    ): Prisma__Tile_layersClient<Tile_layersGetPayload<T>>

    /**
     * Update one Tile_layers.
     * @param {Tile_layersUpdateArgs} args - Arguments to update one Tile_layers.
     * @example
     * // Update one Tile_layers
     * const tile_layers = await prisma.tile_layers.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends Tile_layersUpdateArgs>(
      args: SelectSubset<T, Tile_layersUpdateArgs>
    ): Prisma__Tile_layersClient<Tile_layersGetPayload<T>>

    /**
     * Delete zero or more Tile_layers.
     * @param {Tile_layersDeleteManyArgs} args - Arguments to filter Tile_layers to delete.
     * @example
     * // Delete a few Tile_layers
     * const { count } = await prisma.tile_layers.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends Tile_layersDeleteManyArgs>(
      args?: SelectSubset<T, Tile_layersDeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more Tile_layers.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Tile_layersUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Tile_layers
     * const tile_layers = await prisma.tile_layers.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends Tile_layersUpdateManyArgs>(
      args: SelectSubset<T, Tile_layersUpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one Tile_layers.
     * @param {Tile_layersUpsertArgs} args - Arguments to update or create a Tile_layers.
     * @example
     * // Update or create a Tile_layers
     * const tile_layers = await prisma.tile_layers.upsert({
     *   create: {
     *     // ... data to create a Tile_layers
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Tile_layers we want to update
     *   }
     * })
    **/
    upsert<T extends Tile_layersUpsertArgs>(
      args: SelectSubset<T, Tile_layersUpsertArgs>
    ): Prisma__Tile_layersClient<Tile_layersGetPayload<T>>

    /**
     * Count the number of Tile_layers.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Tile_layersCountArgs} args - Arguments to filter Tile_layers to count.
     * @example
     * // Count the number of Tile_layers
     * const count = await prisma.tile_layers.count({
     *   where: {
     *     // ... the filter for the Tile_layers we want to count
     *   }
     * })
    **/
    count<T extends Tile_layersCountArgs>(
      args?: Subset<T, Tile_layersCountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Tile_layersCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Tile_layers.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Tile_layersAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Tile_layersAggregateArgs>(args: Subset<T, Tile_layersAggregateArgs>): PrismaPromise<GetTile_layersAggregateType<T>>

    /**
     * Group by Tile_layers.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Tile_layersGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends Tile_layersGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: Tile_layersGroupByArgs['orderBy'] }
        : { orderBy?: Tile_layersGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, Tile_layersGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTile_layersGroupByPayload<T> : PrismaPromise<InputErrors>

  }

  /**
   * The delegate class that acts as a "Promise-like" for Tile_layers.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__Tile_layersClient<T, Null = never> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';

    accounts<T extends Tile_layers$accountsArgs= {}>(args?: Subset<T, Tile_layers$accountsArgs>): Prisma__AccountsClient<AccountsGetPayload<T> | Null>;

    projects<T extends ProjectsArgs= {}>(args?: Subset<T, ProjectsArgs>): Prisma__ProjectsClient<ProjectsGetPayload<T> | Null>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }



  // Custom InputTypes

  /**
   * Tile_layers base type for findUnique actions
   */
  export type Tile_layersFindUniqueArgsBase = {
    /**
     * Select specific fields to fetch from the Tile_layers
     * 
    **/
    select?: Tile_layersSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: Tile_layersInclude | null
    /**
     * Filter, which Tile_layers to fetch.
     * 
    **/
    where: Tile_layersWhereUniqueInput
  }

  /**
   * Tile_layers findUnique
   */
  export interface Tile_layersFindUniqueArgs extends Tile_layersFindUniqueArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findUniqueOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * Tile_layers findUniqueOrThrow
   */
  export type Tile_layersFindUniqueOrThrowArgs = {
    /**
     * Select specific fields to fetch from the Tile_layers
     * 
    **/
    select?: Tile_layersSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: Tile_layersInclude | null
    /**
     * Filter, which Tile_layers to fetch.
     * 
    **/
    where: Tile_layersWhereUniqueInput
  }


  /**
   * Tile_layers base type for findFirst actions
   */
  export type Tile_layersFindFirstArgsBase = {
    /**
     * Select specific fields to fetch from the Tile_layers
     * 
    **/
    select?: Tile_layersSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: Tile_layersInclude | null
    /**
     * Filter, which Tile_layers to fetch.
     * 
    **/
    where?: Tile_layersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Tile_layers to fetch.
     * 
    **/
    orderBy?: Enumerable<Tile_layersOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Tile_layers.
     * 
    **/
    cursor?: Tile_layersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Tile_layers from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Tile_layers.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Tile_layers.
     * 
    **/
    distinct?: Enumerable<Tile_layersScalarFieldEnum>
  }

  /**
   * Tile_layers findFirst
   */
  export interface Tile_layersFindFirstArgs extends Tile_layersFindFirstArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findFirstOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * Tile_layers findFirstOrThrow
   */
  export type Tile_layersFindFirstOrThrowArgs = {
    /**
     * Select specific fields to fetch from the Tile_layers
     * 
    **/
    select?: Tile_layersSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: Tile_layersInclude | null
    /**
     * Filter, which Tile_layers to fetch.
     * 
    **/
    where?: Tile_layersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Tile_layers to fetch.
     * 
    **/
    orderBy?: Enumerable<Tile_layersOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Tile_layers.
     * 
    **/
    cursor?: Tile_layersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Tile_layers from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Tile_layers.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Tile_layers.
     * 
    **/
    distinct?: Enumerable<Tile_layersScalarFieldEnum>
  }


  /**
   * Tile_layers findMany
   */
  export type Tile_layersFindManyArgs = {
    /**
     * Select specific fields to fetch from the Tile_layers
     * 
    **/
    select?: Tile_layersSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: Tile_layersInclude | null
    /**
     * Filter, which Tile_layers to fetch.
     * 
    **/
    where?: Tile_layersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Tile_layers to fetch.
     * 
    **/
    orderBy?: Enumerable<Tile_layersOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Tile_layers.
     * 
    **/
    cursor?: Tile_layersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Tile_layers from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Tile_layers.
     * 
    **/
    skip?: number
    distinct?: Enumerable<Tile_layersScalarFieldEnum>
  }


  /**
   * Tile_layers create
   */
  export type Tile_layersCreateArgs = {
    /**
     * Select specific fields to fetch from the Tile_layers
     * 
    **/
    select?: Tile_layersSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: Tile_layersInclude | null
    /**
     * The data needed to create a Tile_layers.
     * 
    **/
    data: XOR<Tile_layersCreateInput, Tile_layersUncheckedCreateInput>
  }


  /**
   * Tile_layers createMany
   */
  export type Tile_layersCreateManyArgs = {
    /**
     * The data used to create many Tile_layers.
     * 
    **/
    data: Enumerable<Tile_layersCreateManyInput>
    skipDuplicates?: boolean
  }


  /**
   * Tile_layers update
   */
  export type Tile_layersUpdateArgs = {
    /**
     * Select specific fields to fetch from the Tile_layers
     * 
    **/
    select?: Tile_layersSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: Tile_layersInclude | null
    /**
     * The data needed to update a Tile_layers.
     * 
    **/
    data: XOR<Tile_layersUpdateInput, Tile_layersUncheckedUpdateInput>
    /**
     * Choose, which Tile_layers to update.
     * 
    **/
    where: Tile_layersWhereUniqueInput
  }


  /**
   * Tile_layers updateMany
   */
  export type Tile_layersUpdateManyArgs = {
    /**
     * The data used to update Tile_layers.
     * 
    **/
    data: XOR<Tile_layersUpdateManyMutationInput, Tile_layersUncheckedUpdateManyInput>
    /**
     * Filter which Tile_layers to update
     * 
    **/
    where?: Tile_layersWhereInput
  }


  /**
   * Tile_layers upsert
   */
  export type Tile_layersUpsertArgs = {
    /**
     * Select specific fields to fetch from the Tile_layers
     * 
    **/
    select?: Tile_layersSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: Tile_layersInclude | null
    /**
     * The filter to search for the Tile_layers to update in case it exists.
     * 
    **/
    where: Tile_layersWhereUniqueInput
    /**
     * In case the Tile_layers found by the `where` argument doesn't exist, create a new Tile_layers with this data.
     * 
    **/
    create: XOR<Tile_layersCreateInput, Tile_layersUncheckedCreateInput>
    /**
     * In case the Tile_layers was found with the provided `where` argument, update it with this data.
     * 
    **/
    update: XOR<Tile_layersUpdateInput, Tile_layersUncheckedUpdateInput>
  }


  /**
   * Tile_layers delete
   */
  export type Tile_layersDeleteArgs = {
    /**
     * Select specific fields to fetch from the Tile_layers
     * 
    **/
    select?: Tile_layersSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: Tile_layersInclude | null
    /**
     * Filter which Tile_layers to delete.
     * 
    **/
    where: Tile_layersWhereUniqueInput
  }


  /**
   * Tile_layers deleteMany
   */
  export type Tile_layersDeleteManyArgs = {
    /**
     * Filter which Tile_layers to delete
     * 
    **/
    where?: Tile_layersWhereInput
  }


  /**
   * Tile_layers.accounts
   */
  export type Tile_layers$accountsArgs = {
    /**
     * Select specific fields to fetch from the Accounts
     * 
    **/
    select?: AccountsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: AccountsInclude | null
    where?: AccountsWhereInput
  }


  /**
   * Tile_layers without action
   */
  export type Tile_layersArgs = {
    /**
     * Select specific fields to fetch from the Tile_layers
     * 
    **/
    select?: Tile_layersSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: Tile_layersInclude | null
  }



  /**
   * Model Ui_options
   */


  export type AggregateUi_options = {
    _count: Ui_optionsCountAggregateOutputType | null
    _min: Ui_optionsMinAggregateOutputType | null
    _max: Ui_optionsMaxAggregateOutputType | null
  }

  export type Ui_optionsMinAggregateOutputType = {
    user_id: string | null
    account_id: string | null
    designing: boolean | null
    breadcrumbs_overflowing: boolean | null
    navs_overflowing: boolean | null
    show_map: boolean | null
    tile_layer_sorter: string | null
    vector_layer_sorter: string | null
    editing_place_geometry: string | null
    editing_check_geometry: string | null
    editing_action_geometry: string | null
    label: string | null
  }

  export type Ui_optionsMaxAggregateOutputType = {
    user_id: string | null
    account_id: string | null
    designing: boolean | null
    breadcrumbs_overflowing: boolean | null
    navs_overflowing: boolean | null
    show_map: boolean | null
    tile_layer_sorter: string | null
    vector_layer_sorter: string | null
    editing_place_geometry: string | null
    editing_check_geometry: string | null
    editing_action_geometry: string | null
    label: string | null
  }

  export type Ui_optionsCountAggregateOutputType = {
    user_id: number
    account_id: number
    designing: number
    breadcrumbs_overflowing: number
    navs_overflowing: number
    tabs: number
    show_map: number
    map_bounds: number
    local_map_show: number
    tile_layer_sorter: number
    vector_layer_sorter: number
    editing_place_geometry: number
    editing_check_geometry: number
    editing_action_geometry: number
    label: number
    _all: number
  }


  export type Ui_optionsMinAggregateInputType = {
    user_id?: true
    account_id?: true
    designing?: true
    breadcrumbs_overflowing?: true
    navs_overflowing?: true
    show_map?: true
    tile_layer_sorter?: true
    vector_layer_sorter?: true
    editing_place_geometry?: true
    editing_check_geometry?: true
    editing_action_geometry?: true
    label?: true
  }

  export type Ui_optionsMaxAggregateInputType = {
    user_id?: true
    account_id?: true
    designing?: true
    breadcrumbs_overflowing?: true
    navs_overflowing?: true
    show_map?: true
    tile_layer_sorter?: true
    vector_layer_sorter?: true
    editing_place_geometry?: true
    editing_check_geometry?: true
    editing_action_geometry?: true
    label?: true
  }

  export type Ui_optionsCountAggregateInputType = {
    user_id?: true
    account_id?: true
    designing?: true
    breadcrumbs_overflowing?: true
    navs_overflowing?: true
    tabs?: true
    show_map?: true
    map_bounds?: true
    local_map_show?: true
    tile_layer_sorter?: true
    vector_layer_sorter?: true
    editing_place_geometry?: true
    editing_check_geometry?: true
    editing_action_geometry?: true
    label?: true
    _all?: true
  }

  export type Ui_optionsAggregateArgs = {
    /**
     * Filter which Ui_options to aggregate.
     * 
    **/
    where?: Ui_optionsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Ui_options to fetch.
     * 
    **/
    orderBy?: Enumerable<Ui_optionsOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     * 
    **/
    cursor?: Ui_optionsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Ui_options from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Ui_options.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Ui_options
    **/
    _count?: true | Ui_optionsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Ui_optionsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Ui_optionsMaxAggregateInputType
  }

  export type GetUi_optionsAggregateType<T extends Ui_optionsAggregateArgs> = {
        [P in keyof T & keyof AggregateUi_options]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUi_options[P]>
      : GetScalarType<T[P], AggregateUi_options[P]>
  }




  export type Ui_optionsGroupByArgs = {
    where?: Ui_optionsWhereInput
    orderBy?: Enumerable<Ui_optionsOrderByWithAggregationInput>
    by: Array<Ui_optionsScalarFieldEnum>
    having?: Ui_optionsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Ui_optionsCountAggregateInputType | true
    _min?: Ui_optionsMinAggregateInputType
    _max?: Ui_optionsMaxAggregateInputType
  }


  export type Ui_optionsGroupByOutputType = {
    user_id: string
    account_id: string | null
    designing: boolean | null
    breadcrumbs_overflowing: boolean | null
    navs_overflowing: boolean | null
    tabs: JsonValue | null
    show_map: boolean | null
    map_bounds: JsonValue | null
    local_map_show: JsonValue | null
    tile_layer_sorter: string | null
    vector_layer_sorter: string | null
    editing_place_geometry: string | null
    editing_check_geometry: string | null
    editing_action_geometry: string | null
    label: string | null
    _count: Ui_optionsCountAggregateOutputType | null
    _min: Ui_optionsMinAggregateOutputType | null
    _max: Ui_optionsMaxAggregateOutputType | null
  }

  type GetUi_optionsGroupByPayload<T extends Ui_optionsGroupByArgs> = PrismaPromise<
    Array<
      PickArray<Ui_optionsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Ui_optionsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Ui_optionsGroupByOutputType[P]>
            : GetScalarType<T[P], Ui_optionsGroupByOutputType[P]>
        }
      >
    >


  export type Ui_optionsSelect = {
    user_id?: boolean
    account_id?: boolean
    designing?: boolean
    breadcrumbs_overflowing?: boolean
    navs_overflowing?: boolean
    tabs?: boolean
    show_map?: boolean
    map_bounds?: boolean
    local_map_show?: boolean
    tile_layer_sorter?: boolean
    vector_layer_sorter?: boolean
    editing_place_geometry?: boolean
    editing_check_geometry?: boolean
    editing_action_geometry?: boolean
    label?: boolean
    accounts?: boolean | Ui_options$accountsArgs
    users?: boolean | UsersArgs
  }


  export type Ui_optionsInclude = {
    accounts?: boolean | Ui_options$accountsArgs
    users?: boolean | UsersArgs
  } 

  export type Ui_optionsGetPayload<S extends boolean | null | undefined | Ui_optionsArgs> =
    S extends { select: any, include: any } ? 'Please either choose `select` or `include`' :
    S extends true ? Ui_options :
    S extends undefined ? never :
    S extends { include: any } & (Ui_optionsArgs | Ui_optionsFindManyArgs)
    ? Ui_options  & {
    [P in TruthyKeys<S['include']>]:
        P extends 'accounts' ? AccountsGetPayload<S['include'][P]> | null :
        P extends 'users' ? UsersGetPayload<S['include'][P]> :  never
  } 
    : S extends { select: any } & (Ui_optionsArgs | Ui_optionsFindManyArgs)
      ? {
    [P in TruthyKeys<S['select']>]:
        P extends 'accounts' ? AccountsGetPayload<S['select'][P]> | null :
        P extends 'users' ? UsersGetPayload<S['select'][P]> :  P extends keyof Ui_options ? Ui_options[P] : never
  } 
      : Ui_options


  type Ui_optionsCountArgs = Merge<
    Omit<Ui_optionsFindManyArgs, 'select' | 'include'> & {
      select?: Ui_optionsCountAggregateInputType | true
    }
  >

  export interface Ui_optionsDelegate<GlobalRejectSettings extends Prisma.RejectOnNotFound | Prisma.RejectPerOperation | false | undefined> {
    /**
     * Find zero or one Ui_options that matches the filter.
     * @param {Ui_optionsFindUniqueArgs} args - Arguments to find a Ui_options
     * @example
     * // Get one Ui_options
     * const ui_options = await prisma.ui_options.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends Ui_optionsFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, Ui_optionsFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'Ui_options'> extends True ? Prisma__Ui_optionsClient<Ui_optionsGetPayload<T>> : Prisma__Ui_optionsClient<Ui_optionsGetPayload<T> | null, null>

    /**
     * Find one Ui_options that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {Ui_optionsFindUniqueOrThrowArgs} args - Arguments to find a Ui_options
     * @example
     * // Get one Ui_options
     * const ui_options = await prisma.ui_options.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends Ui_optionsFindUniqueOrThrowArgs>(
      args?: SelectSubset<T, Ui_optionsFindUniqueOrThrowArgs>
    ): Prisma__Ui_optionsClient<Ui_optionsGetPayload<T>>

    /**
     * Find the first Ui_options that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Ui_optionsFindFirstArgs} args - Arguments to find a Ui_options
     * @example
     * // Get one Ui_options
     * const ui_options = await prisma.ui_options.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends Ui_optionsFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, Ui_optionsFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'Ui_options'> extends True ? Prisma__Ui_optionsClient<Ui_optionsGetPayload<T>> : Prisma__Ui_optionsClient<Ui_optionsGetPayload<T> | null, null>

    /**
     * Find the first Ui_options that matches the filter or
     * throw `NotFoundError` if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Ui_optionsFindFirstOrThrowArgs} args - Arguments to find a Ui_options
     * @example
     * // Get one Ui_options
     * const ui_options = await prisma.ui_options.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends Ui_optionsFindFirstOrThrowArgs>(
      args?: SelectSubset<T, Ui_optionsFindFirstOrThrowArgs>
    ): Prisma__Ui_optionsClient<Ui_optionsGetPayload<T>>

    /**
     * Find zero or more Ui_options that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Ui_optionsFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Ui_options
     * const ui_options = await prisma.ui_options.findMany()
     * 
     * // Get first 10 Ui_options
     * const ui_options = await prisma.ui_options.findMany({ take: 10 })
     * 
     * // Only select the `user_id`
     * const ui_optionsWithUser_idOnly = await prisma.ui_options.findMany({ select: { user_id: true } })
     * 
    **/
    findMany<T extends Ui_optionsFindManyArgs>(
      args?: SelectSubset<T, Ui_optionsFindManyArgs>
    ): PrismaPromise<Array<Ui_optionsGetPayload<T>>>

    /**
     * Create a Ui_options.
     * @param {Ui_optionsCreateArgs} args - Arguments to create a Ui_options.
     * @example
     * // Create one Ui_options
     * const Ui_options = await prisma.ui_options.create({
     *   data: {
     *     // ... data to create a Ui_options
     *   }
     * })
     * 
    **/
    create<T extends Ui_optionsCreateArgs>(
      args: SelectSubset<T, Ui_optionsCreateArgs>
    ): Prisma__Ui_optionsClient<Ui_optionsGetPayload<T>>

    /**
     * Create many Ui_options.
     *     @param {Ui_optionsCreateManyArgs} args - Arguments to create many Ui_options.
     *     @example
     *     // Create many Ui_options
     *     const ui_options = await prisma.ui_options.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends Ui_optionsCreateManyArgs>(
      args?: SelectSubset<T, Ui_optionsCreateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Delete a Ui_options.
     * @param {Ui_optionsDeleteArgs} args - Arguments to delete one Ui_options.
     * @example
     * // Delete one Ui_options
     * const Ui_options = await prisma.ui_options.delete({
     *   where: {
     *     // ... filter to delete one Ui_options
     *   }
     * })
     * 
    **/
    delete<T extends Ui_optionsDeleteArgs>(
      args: SelectSubset<T, Ui_optionsDeleteArgs>
    ): Prisma__Ui_optionsClient<Ui_optionsGetPayload<T>>

    /**
     * Update one Ui_options.
     * @param {Ui_optionsUpdateArgs} args - Arguments to update one Ui_options.
     * @example
     * // Update one Ui_options
     * const ui_options = await prisma.ui_options.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends Ui_optionsUpdateArgs>(
      args: SelectSubset<T, Ui_optionsUpdateArgs>
    ): Prisma__Ui_optionsClient<Ui_optionsGetPayload<T>>

    /**
     * Delete zero or more Ui_options.
     * @param {Ui_optionsDeleteManyArgs} args - Arguments to filter Ui_options to delete.
     * @example
     * // Delete a few Ui_options
     * const { count } = await prisma.ui_options.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends Ui_optionsDeleteManyArgs>(
      args?: SelectSubset<T, Ui_optionsDeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more Ui_options.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Ui_optionsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Ui_options
     * const ui_options = await prisma.ui_options.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends Ui_optionsUpdateManyArgs>(
      args: SelectSubset<T, Ui_optionsUpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one Ui_options.
     * @param {Ui_optionsUpsertArgs} args - Arguments to update or create a Ui_options.
     * @example
     * // Update or create a Ui_options
     * const ui_options = await prisma.ui_options.upsert({
     *   create: {
     *     // ... data to create a Ui_options
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Ui_options we want to update
     *   }
     * })
    **/
    upsert<T extends Ui_optionsUpsertArgs>(
      args: SelectSubset<T, Ui_optionsUpsertArgs>
    ): Prisma__Ui_optionsClient<Ui_optionsGetPayload<T>>

    /**
     * Count the number of Ui_options.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Ui_optionsCountArgs} args - Arguments to filter Ui_options to count.
     * @example
     * // Count the number of Ui_options
     * const count = await prisma.ui_options.count({
     *   where: {
     *     // ... the filter for the Ui_options we want to count
     *   }
     * })
    **/
    count<T extends Ui_optionsCountArgs>(
      args?: Subset<T, Ui_optionsCountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Ui_optionsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Ui_options.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Ui_optionsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Ui_optionsAggregateArgs>(args: Subset<T, Ui_optionsAggregateArgs>): PrismaPromise<GetUi_optionsAggregateType<T>>

    /**
     * Group by Ui_options.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Ui_optionsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends Ui_optionsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: Ui_optionsGroupByArgs['orderBy'] }
        : { orderBy?: Ui_optionsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, Ui_optionsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUi_optionsGroupByPayload<T> : PrismaPromise<InputErrors>

  }

  /**
   * The delegate class that acts as a "Promise-like" for Ui_options.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__Ui_optionsClient<T, Null = never> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';

    accounts<T extends Ui_options$accountsArgs= {}>(args?: Subset<T, Ui_options$accountsArgs>): Prisma__AccountsClient<AccountsGetPayload<T> | Null>;

    users<T extends UsersArgs= {}>(args?: Subset<T, UsersArgs>): Prisma__UsersClient<UsersGetPayload<T> | Null>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }



  // Custom InputTypes

  /**
   * Ui_options base type for findUnique actions
   */
  export type Ui_optionsFindUniqueArgsBase = {
    /**
     * Select specific fields to fetch from the Ui_options
     * 
    **/
    select?: Ui_optionsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: Ui_optionsInclude | null
    /**
     * Filter, which Ui_options to fetch.
     * 
    **/
    where: Ui_optionsWhereUniqueInput
  }

  /**
   * Ui_options findUnique
   */
  export interface Ui_optionsFindUniqueArgs extends Ui_optionsFindUniqueArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findUniqueOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * Ui_options findUniqueOrThrow
   */
  export type Ui_optionsFindUniqueOrThrowArgs = {
    /**
     * Select specific fields to fetch from the Ui_options
     * 
    **/
    select?: Ui_optionsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: Ui_optionsInclude | null
    /**
     * Filter, which Ui_options to fetch.
     * 
    **/
    where: Ui_optionsWhereUniqueInput
  }


  /**
   * Ui_options base type for findFirst actions
   */
  export type Ui_optionsFindFirstArgsBase = {
    /**
     * Select specific fields to fetch from the Ui_options
     * 
    **/
    select?: Ui_optionsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: Ui_optionsInclude | null
    /**
     * Filter, which Ui_options to fetch.
     * 
    **/
    where?: Ui_optionsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Ui_options to fetch.
     * 
    **/
    orderBy?: Enumerable<Ui_optionsOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Ui_options.
     * 
    **/
    cursor?: Ui_optionsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Ui_options from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Ui_options.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Ui_options.
     * 
    **/
    distinct?: Enumerable<Ui_optionsScalarFieldEnum>
  }

  /**
   * Ui_options findFirst
   */
  export interface Ui_optionsFindFirstArgs extends Ui_optionsFindFirstArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findFirstOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * Ui_options findFirstOrThrow
   */
  export type Ui_optionsFindFirstOrThrowArgs = {
    /**
     * Select specific fields to fetch from the Ui_options
     * 
    **/
    select?: Ui_optionsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: Ui_optionsInclude | null
    /**
     * Filter, which Ui_options to fetch.
     * 
    **/
    where?: Ui_optionsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Ui_options to fetch.
     * 
    **/
    orderBy?: Enumerable<Ui_optionsOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Ui_options.
     * 
    **/
    cursor?: Ui_optionsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Ui_options from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Ui_options.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Ui_options.
     * 
    **/
    distinct?: Enumerable<Ui_optionsScalarFieldEnum>
  }


  /**
   * Ui_options findMany
   */
  export type Ui_optionsFindManyArgs = {
    /**
     * Select specific fields to fetch from the Ui_options
     * 
    **/
    select?: Ui_optionsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: Ui_optionsInclude | null
    /**
     * Filter, which Ui_options to fetch.
     * 
    **/
    where?: Ui_optionsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Ui_options to fetch.
     * 
    **/
    orderBy?: Enumerable<Ui_optionsOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Ui_options.
     * 
    **/
    cursor?: Ui_optionsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Ui_options from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Ui_options.
     * 
    **/
    skip?: number
    distinct?: Enumerable<Ui_optionsScalarFieldEnum>
  }


  /**
   * Ui_options create
   */
  export type Ui_optionsCreateArgs = {
    /**
     * Select specific fields to fetch from the Ui_options
     * 
    **/
    select?: Ui_optionsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: Ui_optionsInclude | null
    /**
     * The data needed to create a Ui_options.
     * 
    **/
    data: XOR<Ui_optionsCreateInput, Ui_optionsUncheckedCreateInput>
  }


  /**
   * Ui_options createMany
   */
  export type Ui_optionsCreateManyArgs = {
    /**
     * The data used to create many Ui_options.
     * 
    **/
    data: Enumerable<Ui_optionsCreateManyInput>
    skipDuplicates?: boolean
  }


  /**
   * Ui_options update
   */
  export type Ui_optionsUpdateArgs = {
    /**
     * Select specific fields to fetch from the Ui_options
     * 
    **/
    select?: Ui_optionsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: Ui_optionsInclude | null
    /**
     * The data needed to update a Ui_options.
     * 
    **/
    data: XOR<Ui_optionsUpdateInput, Ui_optionsUncheckedUpdateInput>
    /**
     * Choose, which Ui_options to update.
     * 
    **/
    where: Ui_optionsWhereUniqueInput
  }


  /**
   * Ui_options updateMany
   */
  export type Ui_optionsUpdateManyArgs = {
    /**
     * The data used to update Ui_options.
     * 
    **/
    data: XOR<Ui_optionsUpdateManyMutationInput, Ui_optionsUncheckedUpdateManyInput>
    /**
     * Filter which Ui_options to update
     * 
    **/
    where?: Ui_optionsWhereInput
  }


  /**
   * Ui_options upsert
   */
  export type Ui_optionsUpsertArgs = {
    /**
     * Select specific fields to fetch from the Ui_options
     * 
    **/
    select?: Ui_optionsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: Ui_optionsInclude | null
    /**
     * The filter to search for the Ui_options to update in case it exists.
     * 
    **/
    where: Ui_optionsWhereUniqueInput
    /**
     * In case the Ui_options found by the `where` argument doesn't exist, create a new Ui_options with this data.
     * 
    **/
    create: XOR<Ui_optionsCreateInput, Ui_optionsUncheckedCreateInput>
    /**
     * In case the Ui_options was found with the provided `where` argument, update it with this data.
     * 
    **/
    update: XOR<Ui_optionsUpdateInput, Ui_optionsUncheckedUpdateInput>
  }


  /**
   * Ui_options delete
   */
  export type Ui_optionsDeleteArgs = {
    /**
     * Select specific fields to fetch from the Ui_options
     * 
    **/
    select?: Ui_optionsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: Ui_optionsInclude | null
    /**
     * Filter which Ui_options to delete.
     * 
    **/
    where: Ui_optionsWhereUniqueInput
  }


  /**
   * Ui_options deleteMany
   */
  export type Ui_optionsDeleteManyArgs = {
    /**
     * Filter which Ui_options to delete
     * 
    **/
    where?: Ui_optionsWhereInput
  }


  /**
   * Ui_options.accounts
   */
  export type Ui_options$accountsArgs = {
    /**
     * Select specific fields to fetch from the Accounts
     * 
    **/
    select?: AccountsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: AccountsInclude | null
    where?: AccountsWhereInput
  }


  /**
   * Ui_options without action
   */
  export type Ui_optionsArgs = {
    /**
     * Select specific fields to fetch from the Ui_options
     * 
    **/
    select?: Ui_optionsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: Ui_optionsInclude | null
  }



  /**
   * Model Units
   */


  export type AggregateUnits = {
    _count: UnitsCountAggregateOutputType | null
    _avg: UnitsAvgAggregateOutputType | null
    _sum: UnitsSumAggregateOutputType | null
    _min: UnitsMinAggregateOutputType | null
    _max: UnitsMaxAggregateOutputType | null
  }

  export type UnitsAvgAggregateOutputType = {
    sort: number | null
  }

  export type UnitsSumAggregateOutputType = {
    sort: number | null
  }

  export type UnitsMinAggregateOutputType = {
    unit_id: string | null
    account_id: string | null
    project_id: string | null
    use_for_action_values: boolean | null
    use_for_action_report_values: boolean | null
    use_for_check_values: boolean | null
    use_for_place_report_values: boolean | null
    use_for_goal_report_values: boolean | null
    use_for_subproject_taxa: boolean | null
    use_for_check_taxa: boolean | null
    name: string | null
    summable: boolean | null
    sort: number | null
    type: unit_type | null
    list_id: string | null
    label_replace_by_generated_column: string | null
    deleted: boolean | null
  }

  export type UnitsMaxAggregateOutputType = {
    unit_id: string | null
    account_id: string | null
    project_id: string | null
    use_for_action_values: boolean | null
    use_for_action_report_values: boolean | null
    use_for_check_values: boolean | null
    use_for_place_report_values: boolean | null
    use_for_goal_report_values: boolean | null
    use_for_subproject_taxa: boolean | null
    use_for_check_taxa: boolean | null
    name: string | null
    summable: boolean | null
    sort: number | null
    type: unit_type | null
    list_id: string | null
    label_replace_by_generated_column: string | null
    deleted: boolean | null
  }

  export type UnitsCountAggregateOutputType = {
    unit_id: number
    account_id: number
    project_id: number
    use_for_action_values: number
    use_for_action_report_values: number
    use_for_check_values: number
    use_for_place_report_values: number
    use_for_goal_report_values: number
    use_for_subproject_taxa: number
    use_for_check_taxa: number
    name: number
    summable: number
    sort: number
    type: number
    list_id: number
    label_replace_by_generated_column: number
    deleted: number
    _all: number
  }


  export type UnitsAvgAggregateInputType = {
    sort?: true
  }

  export type UnitsSumAggregateInputType = {
    sort?: true
  }

  export type UnitsMinAggregateInputType = {
    unit_id?: true
    account_id?: true
    project_id?: true
    use_for_action_values?: true
    use_for_action_report_values?: true
    use_for_check_values?: true
    use_for_place_report_values?: true
    use_for_goal_report_values?: true
    use_for_subproject_taxa?: true
    use_for_check_taxa?: true
    name?: true
    summable?: true
    sort?: true
    type?: true
    list_id?: true
    label_replace_by_generated_column?: true
    deleted?: true
  }

  export type UnitsMaxAggregateInputType = {
    unit_id?: true
    account_id?: true
    project_id?: true
    use_for_action_values?: true
    use_for_action_report_values?: true
    use_for_check_values?: true
    use_for_place_report_values?: true
    use_for_goal_report_values?: true
    use_for_subproject_taxa?: true
    use_for_check_taxa?: true
    name?: true
    summable?: true
    sort?: true
    type?: true
    list_id?: true
    label_replace_by_generated_column?: true
    deleted?: true
  }

  export type UnitsCountAggregateInputType = {
    unit_id?: true
    account_id?: true
    project_id?: true
    use_for_action_values?: true
    use_for_action_report_values?: true
    use_for_check_values?: true
    use_for_place_report_values?: true
    use_for_goal_report_values?: true
    use_for_subproject_taxa?: true
    use_for_check_taxa?: true
    name?: true
    summable?: true
    sort?: true
    type?: true
    list_id?: true
    label_replace_by_generated_column?: true
    deleted?: true
    _all?: true
  }

  export type UnitsAggregateArgs = {
    /**
     * Filter which Units to aggregate.
     * 
    **/
    where?: UnitsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Units to fetch.
     * 
    **/
    orderBy?: Enumerable<UnitsOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     * 
    **/
    cursor?: UnitsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Units from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Units.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Units
    **/
    _count?: true | UnitsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: UnitsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: UnitsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: UnitsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: UnitsMaxAggregateInputType
  }

  export type GetUnitsAggregateType<T extends UnitsAggregateArgs> = {
        [P in keyof T & keyof AggregateUnits]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUnits[P]>
      : GetScalarType<T[P], AggregateUnits[P]>
  }




  export type UnitsGroupByArgs = {
    where?: UnitsWhereInput
    orderBy?: Enumerable<UnitsOrderByWithAggregationInput>
    by: Array<UnitsScalarFieldEnum>
    having?: UnitsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: UnitsCountAggregateInputType | true
    _avg?: UnitsAvgAggregateInputType
    _sum?: UnitsSumAggregateInputType
    _min?: UnitsMinAggregateInputType
    _max?: UnitsMaxAggregateInputType
  }


  export type UnitsGroupByOutputType = {
    unit_id: string
    account_id: string | null
    project_id: string | null
    use_for_action_values: boolean | null
    use_for_action_report_values: boolean | null
    use_for_check_values: boolean | null
    use_for_place_report_values: boolean | null
    use_for_goal_report_values: boolean | null
    use_for_subproject_taxa: boolean | null
    use_for_check_taxa: boolean | null
    name: string | null
    summable: boolean | null
    sort: number | null
    type: unit_type | null
    list_id: string | null
    label_replace_by_generated_column: string | null
    deleted: boolean | null
    _count: UnitsCountAggregateOutputType | null
    _avg: UnitsAvgAggregateOutputType | null
    _sum: UnitsSumAggregateOutputType | null
    _min: UnitsMinAggregateOutputType | null
    _max: UnitsMaxAggregateOutputType | null
  }

  type GetUnitsGroupByPayload<T extends UnitsGroupByArgs> = PrismaPromise<
    Array<
      PickArray<UnitsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof UnitsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], UnitsGroupByOutputType[P]>
            : GetScalarType<T[P], UnitsGroupByOutputType[P]>
        }
      >
    >


  export type UnitsSelect = {
    unit_id?: boolean
    account_id?: boolean
    project_id?: boolean
    use_for_action_values?: boolean
    use_for_action_report_values?: boolean
    use_for_check_values?: boolean
    use_for_place_report_values?: boolean
    use_for_goal_report_values?: boolean
    use_for_subproject_taxa?: boolean
    use_for_check_taxa?: boolean
    name?: boolean
    summable?: boolean
    sort?: boolean
    type?: boolean
    list_id?: boolean
    label_replace_by_generated_column?: boolean
    deleted?: boolean
    goal_report_values?: boolean | Units$goal_report_valuesArgs
    accounts?: boolean | Units$accountsArgs
    lists?: boolean | Units$listsArgs
    projects?: boolean | Units$projectsArgs
    _count?: boolean | UnitsCountOutputTypeArgs
  }


  export type UnitsInclude = {
    goal_report_values?: boolean | Units$goal_report_valuesArgs
    accounts?: boolean | Units$accountsArgs
    lists?: boolean | Units$listsArgs
    projects?: boolean | Units$projectsArgs
    _count?: boolean | UnitsCountOutputTypeArgs
  } 

  export type UnitsGetPayload<S extends boolean | null | undefined | UnitsArgs> =
    S extends { select: any, include: any } ? 'Please either choose `select` or `include`' :
    S extends true ? Units :
    S extends undefined ? never :
    S extends { include: any } & (UnitsArgs | UnitsFindManyArgs)
    ? Units  & {
    [P in TruthyKeys<S['include']>]:
        P extends 'goal_report_values' ? Array < Goal_report_valuesGetPayload<S['include'][P]>>  :
        P extends 'accounts' ? AccountsGetPayload<S['include'][P]> | null :
        P extends 'lists' ? ListsGetPayload<S['include'][P]> | null :
        P extends 'projects' ? ProjectsGetPayload<S['include'][P]> | null :
        P extends '_count' ? UnitsCountOutputTypeGetPayload<S['include'][P]> :  never
  } 
    : S extends { select: any } & (UnitsArgs | UnitsFindManyArgs)
      ? {
    [P in TruthyKeys<S['select']>]:
        P extends 'goal_report_values' ? Array < Goal_report_valuesGetPayload<S['select'][P]>>  :
        P extends 'accounts' ? AccountsGetPayload<S['select'][P]> | null :
        P extends 'lists' ? ListsGetPayload<S['select'][P]> | null :
        P extends 'projects' ? ProjectsGetPayload<S['select'][P]> | null :
        P extends '_count' ? UnitsCountOutputTypeGetPayload<S['select'][P]> :  P extends keyof Units ? Units[P] : never
  } 
      : Units


  type UnitsCountArgs = Merge<
    Omit<UnitsFindManyArgs, 'select' | 'include'> & {
      select?: UnitsCountAggregateInputType | true
    }
  >

  export interface UnitsDelegate<GlobalRejectSettings extends Prisma.RejectOnNotFound | Prisma.RejectPerOperation | false | undefined> {
    /**
     * Find zero or one Units that matches the filter.
     * @param {UnitsFindUniqueArgs} args - Arguments to find a Units
     * @example
     * // Get one Units
     * const units = await prisma.units.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends UnitsFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, UnitsFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'Units'> extends True ? Prisma__UnitsClient<UnitsGetPayload<T>> : Prisma__UnitsClient<UnitsGetPayload<T> | null, null>

    /**
     * Find one Units that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {UnitsFindUniqueOrThrowArgs} args - Arguments to find a Units
     * @example
     * // Get one Units
     * const units = await prisma.units.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends UnitsFindUniqueOrThrowArgs>(
      args?: SelectSubset<T, UnitsFindUniqueOrThrowArgs>
    ): Prisma__UnitsClient<UnitsGetPayload<T>>

    /**
     * Find the first Units that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UnitsFindFirstArgs} args - Arguments to find a Units
     * @example
     * // Get one Units
     * const units = await prisma.units.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends UnitsFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, UnitsFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'Units'> extends True ? Prisma__UnitsClient<UnitsGetPayload<T>> : Prisma__UnitsClient<UnitsGetPayload<T> | null, null>

    /**
     * Find the first Units that matches the filter or
     * throw `NotFoundError` if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UnitsFindFirstOrThrowArgs} args - Arguments to find a Units
     * @example
     * // Get one Units
     * const units = await prisma.units.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends UnitsFindFirstOrThrowArgs>(
      args?: SelectSubset<T, UnitsFindFirstOrThrowArgs>
    ): Prisma__UnitsClient<UnitsGetPayload<T>>

    /**
     * Find zero or more Units that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UnitsFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Units
     * const units = await prisma.units.findMany()
     * 
     * // Get first 10 Units
     * const units = await prisma.units.findMany({ take: 10 })
     * 
     * // Only select the `unit_id`
     * const unitsWithUnit_idOnly = await prisma.units.findMany({ select: { unit_id: true } })
     * 
    **/
    findMany<T extends UnitsFindManyArgs>(
      args?: SelectSubset<T, UnitsFindManyArgs>
    ): PrismaPromise<Array<UnitsGetPayload<T>>>

    /**
     * Create a Units.
     * @param {UnitsCreateArgs} args - Arguments to create a Units.
     * @example
     * // Create one Units
     * const Units = await prisma.units.create({
     *   data: {
     *     // ... data to create a Units
     *   }
     * })
     * 
    **/
    create<T extends UnitsCreateArgs>(
      args: SelectSubset<T, UnitsCreateArgs>
    ): Prisma__UnitsClient<UnitsGetPayload<T>>

    /**
     * Create many Units.
     *     @param {UnitsCreateManyArgs} args - Arguments to create many Units.
     *     @example
     *     // Create many Units
     *     const units = await prisma.units.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends UnitsCreateManyArgs>(
      args?: SelectSubset<T, UnitsCreateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Delete a Units.
     * @param {UnitsDeleteArgs} args - Arguments to delete one Units.
     * @example
     * // Delete one Units
     * const Units = await prisma.units.delete({
     *   where: {
     *     // ... filter to delete one Units
     *   }
     * })
     * 
    **/
    delete<T extends UnitsDeleteArgs>(
      args: SelectSubset<T, UnitsDeleteArgs>
    ): Prisma__UnitsClient<UnitsGetPayload<T>>

    /**
     * Update one Units.
     * @param {UnitsUpdateArgs} args - Arguments to update one Units.
     * @example
     * // Update one Units
     * const units = await prisma.units.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends UnitsUpdateArgs>(
      args: SelectSubset<T, UnitsUpdateArgs>
    ): Prisma__UnitsClient<UnitsGetPayload<T>>

    /**
     * Delete zero or more Units.
     * @param {UnitsDeleteManyArgs} args - Arguments to filter Units to delete.
     * @example
     * // Delete a few Units
     * const { count } = await prisma.units.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends UnitsDeleteManyArgs>(
      args?: SelectSubset<T, UnitsDeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more Units.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UnitsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Units
     * const units = await prisma.units.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends UnitsUpdateManyArgs>(
      args: SelectSubset<T, UnitsUpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one Units.
     * @param {UnitsUpsertArgs} args - Arguments to update or create a Units.
     * @example
     * // Update or create a Units
     * const units = await prisma.units.upsert({
     *   create: {
     *     // ... data to create a Units
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Units we want to update
     *   }
     * })
    **/
    upsert<T extends UnitsUpsertArgs>(
      args: SelectSubset<T, UnitsUpsertArgs>
    ): Prisma__UnitsClient<UnitsGetPayload<T>>

    /**
     * Count the number of Units.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UnitsCountArgs} args - Arguments to filter Units to count.
     * @example
     * // Count the number of Units
     * const count = await prisma.units.count({
     *   where: {
     *     // ... the filter for the Units we want to count
     *   }
     * })
    **/
    count<T extends UnitsCountArgs>(
      args?: Subset<T, UnitsCountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], UnitsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Units.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UnitsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends UnitsAggregateArgs>(args: Subset<T, UnitsAggregateArgs>): PrismaPromise<GetUnitsAggregateType<T>>

    /**
     * Group by Units.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UnitsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends UnitsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: UnitsGroupByArgs['orderBy'] }
        : { orderBy?: UnitsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, UnitsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUnitsGroupByPayload<T> : PrismaPromise<InputErrors>

  }

  /**
   * The delegate class that acts as a "Promise-like" for Units.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__UnitsClient<T, Null = never> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';

    goal_report_values<T extends Units$goal_report_valuesArgs= {}>(args?: Subset<T, Units$goal_report_valuesArgs>): PrismaPromise<Array<Goal_report_valuesGetPayload<T>>| Null>;

    accounts<T extends Units$accountsArgs= {}>(args?: Subset<T, Units$accountsArgs>): Prisma__AccountsClient<AccountsGetPayload<T> | Null>;

    lists<T extends Units$listsArgs= {}>(args?: Subset<T, Units$listsArgs>): Prisma__ListsClient<ListsGetPayload<T> | Null>;

    projects<T extends Units$projectsArgs= {}>(args?: Subset<T, Units$projectsArgs>): Prisma__ProjectsClient<ProjectsGetPayload<T> | Null>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }



  // Custom InputTypes

  /**
   * Units base type for findUnique actions
   */
  export type UnitsFindUniqueArgsBase = {
    /**
     * Select specific fields to fetch from the Units
     * 
    **/
    select?: UnitsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: UnitsInclude | null
    /**
     * Filter, which Units to fetch.
     * 
    **/
    where: UnitsWhereUniqueInput
  }

  /**
   * Units findUnique
   */
  export interface UnitsFindUniqueArgs extends UnitsFindUniqueArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findUniqueOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * Units findUniqueOrThrow
   */
  export type UnitsFindUniqueOrThrowArgs = {
    /**
     * Select specific fields to fetch from the Units
     * 
    **/
    select?: UnitsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: UnitsInclude | null
    /**
     * Filter, which Units to fetch.
     * 
    **/
    where: UnitsWhereUniqueInput
  }


  /**
   * Units base type for findFirst actions
   */
  export type UnitsFindFirstArgsBase = {
    /**
     * Select specific fields to fetch from the Units
     * 
    **/
    select?: UnitsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: UnitsInclude | null
    /**
     * Filter, which Units to fetch.
     * 
    **/
    where?: UnitsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Units to fetch.
     * 
    **/
    orderBy?: Enumerable<UnitsOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Units.
     * 
    **/
    cursor?: UnitsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Units from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Units.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Units.
     * 
    **/
    distinct?: Enumerable<UnitsScalarFieldEnum>
  }

  /**
   * Units findFirst
   */
  export interface UnitsFindFirstArgs extends UnitsFindFirstArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findFirstOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * Units findFirstOrThrow
   */
  export type UnitsFindFirstOrThrowArgs = {
    /**
     * Select specific fields to fetch from the Units
     * 
    **/
    select?: UnitsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: UnitsInclude | null
    /**
     * Filter, which Units to fetch.
     * 
    **/
    where?: UnitsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Units to fetch.
     * 
    **/
    orderBy?: Enumerable<UnitsOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Units.
     * 
    **/
    cursor?: UnitsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Units from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Units.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Units.
     * 
    **/
    distinct?: Enumerable<UnitsScalarFieldEnum>
  }


  /**
   * Units findMany
   */
  export type UnitsFindManyArgs = {
    /**
     * Select specific fields to fetch from the Units
     * 
    **/
    select?: UnitsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: UnitsInclude | null
    /**
     * Filter, which Units to fetch.
     * 
    **/
    where?: UnitsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Units to fetch.
     * 
    **/
    orderBy?: Enumerable<UnitsOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Units.
     * 
    **/
    cursor?: UnitsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Units from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Units.
     * 
    **/
    skip?: number
    distinct?: Enumerable<UnitsScalarFieldEnum>
  }


  /**
   * Units create
   */
  export type UnitsCreateArgs = {
    /**
     * Select specific fields to fetch from the Units
     * 
    **/
    select?: UnitsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: UnitsInclude | null
    /**
     * The data needed to create a Units.
     * 
    **/
    data: XOR<UnitsCreateInput, UnitsUncheckedCreateInput>
  }


  /**
   * Units createMany
   */
  export type UnitsCreateManyArgs = {
    /**
     * The data used to create many Units.
     * 
    **/
    data: Enumerable<UnitsCreateManyInput>
    skipDuplicates?: boolean
  }


  /**
   * Units update
   */
  export type UnitsUpdateArgs = {
    /**
     * Select specific fields to fetch from the Units
     * 
    **/
    select?: UnitsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: UnitsInclude | null
    /**
     * The data needed to update a Units.
     * 
    **/
    data: XOR<UnitsUpdateInput, UnitsUncheckedUpdateInput>
    /**
     * Choose, which Units to update.
     * 
    **/
    where: UnitsWhereUniqueInput
  }


  /**
   * Units updateMany
   */
  export type UnitsUpdateManyArgs = {
    /**
     * The data used to update Units.
     * 
    **/
    data: XOR<UnitsUpdateManyMutationInput, UnitsUncheckedUpdateManyInput>
    /**
     * Filter which Units to update
     * 
    **/
    where?: UnitsWhereInput
  }


  /**
   * Units upsert
   */
  export type UnitsUpsertArgs = {
    /**
     * Select specific fields to fetch from the Units
     * 
    **/
    select?: UnitsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: UnitsInclude | null
    /**
     * The filter to search for the Units to update in case it exists.
     * 
    **/
    where: UnitsWhereUniqueInput
    /**
     * In case the Units found by the `where` argument doesn't exist, create a new Units with this data.
     * 
    **/
    create: XOR<UnitsCreateInput, UnitsUncheckedCreateInput>
    /**
     * In case the Units was found with the provided `where` argument, update it with this data.
     * 
    **/
    update: XOR<UnitsUpdateInput, UnitsUncheckedUpdateInput>
  }


  /**
   * Units delete
   */
  export type UnitsDeleteArgs = {
    /**
     * Select specific fields to fetch from the Units
     * 
    **/
    select?: UnitsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: UnitsInclude | null
    /**
     * Filter which Units to delete.
     * 
    **/
    where: UnitsWhereUniqueInput
  }


  /**
   * Units deleteMany
   */
  export type UnitsDeleteManyArgs = {
    /**
     * Filter which Units to delete
     * 
    **/
    where?: UnitsWhereInput
  }


  /**
   * Units.goal_report_values
   */
  export type Units$goal_report_valuesArgs = {
    /**
     * Select specific fields to fetch from the Goal_report_values
     * 
    **/
    select?: Goal_report_valuesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: Goal_report_valuesInclude | null
    where?: Goal_report_valuesWhereInput
    orderBy?: Enumerable<Goal_report_valuesOrderByWithRelationInput>
    cursor?: Goal_report_valuesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Enumerable<Goal_report_valuesScalarFieldEnum>
  }


  /**
   * Units.accounts
   */
  export type Units$accountsArgs = {
    /**
     * Select specific fields to fetch from the Accounts
     * 
    **/
    select?: AccountsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: AccountsInclude | null
    where?: AccountsWhereInput
  }


  /**
   * Units.lists
   */
  export type Units$listsArgs = {
    /**
     * Select specific fields to fetch from the Lists
     * 
    **/
    select?: ListsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: ListsInclude | null
    where?: ListsWhereInput
  }


  /**
   * Units.projects
   */
  export type Units$projectsArgs = {
    /**
     * Select specific fields to fetch from the Projects
     * 
    **/
    select?: ProjectsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: ProjectsInclude | null
    where?: ProjectsWhereInput
  }


  /**
   * Units without action
   */
  export type UnitsArgs = {
    /**
     * Select specific fields to fetch from the Units
     * 
    **/
    select?: UnitsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: UnitsInclude | null
  }



  /**
   * Model User_messages
   */


  export type AggregateUser_messages = {
    _count: User_messagesCountAggregateOutputType | null
    _min: User_messagesMinAggregateOutputType | null
    _max: User_messagesMaxAggregateOutputType | null
  }

  export type User_messagesMinAggregateOutputType = {
    user_message_id: string | null
    account_id: string | null
    user_id: string | null
    message_id: string | null
    label_replace_by_generated_column: string | null
    read: boolean | null
  }

  export type User_messagesMaxAggregateOutputType = {
    user_message_id: string | null
    account_id: string | null
    user_id: string | null
    message_id: string | null
    label_replace_by_generated_column: string | null
    read: boolean | null
  }

  export type User_messagesCountAggregateOutputType = {
    user_message_id: number
    account_id: number
    user_id: number
    message_id: number
    label_replace_by_generated_column: number
    read: number
    _all: number
  }


  export type User_messagesMinAggregateInputType = {
    user_message_id?: true
    account_id?: true
    user_id?: true
    message_id?: true
    label_replace_by_generated_column?: true
    read?: true
  }

  export type User_messagesMaxAggregateInputType = {
    user_message_id?: true
    account_id?: true
    user_id?: true
    message_id?: true
    label_replace_by_generated_column?: true
    read?: true
  }

  export type User_messagesCountAggregateInputType = {
    user_message_id?: true
    account_id?: true
    user_id?: true
    message_id?: true
    label_replace_by_generated_column?: true
    read?: true
    _all?: true
  }

  export type User_messagesAggregateArgs = {
    /**
     * Filter which User_messages to aggregate.
     * 
    **/
    where?: User_messagesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of User_messages to fetch.
     * 
    **/
    orderBy?: Enumerable<User_messagesOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     * 
    **/
    cursor?: User_messagesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` User_messages from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` User_messages.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned User_messages
    **/
    _count?: true | User_messagesCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: User_messagesMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: User_messagesMaxAggregateInputType
  }

  export type GetUser_messagesAggregateType<T extends User_messagesAggregateArgs> = {
        [P in keyof T & keyof AggregateUser_messages]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUser_messages[P]>
      : GetScalarType<T[P], AggregateUser_messages[P]>
  }




  export type User_messagesGroupByArgs = {
    where?: User_messagesWhereInput
    orderBy?: Enumerable<User_messagesOrderByWithAggregationInput>
    by: Array<User_messagesScalarFieldEnum>
    having?: User_messagesScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: User_messagesCountAggregateInputType | true
    _min?: User_messagesMinAggregateInputType
    _max?: User_messagesMaxAggregateInputType
  }


  export type User_messagesGroupByOutputType = {
    user_message_id: string
    account_id: string | null
    user_id: string | null
    message_id: string | null
    label_replace_by_generated_column: string | null
    read: boolean | null
    _count: User_messagesCountAggregateOutputType | null
    _min: User_messagesMinAggregateOutputType | null
    _max: User_messagesMaxAggregateOutputType | null
  }

  type GetUser_messagesGroupByPayload<T extends User_messagesGroupByArgs> = PrismaPromise<
    Array<
      PickArray<User_messagesGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof User_messagesGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], User_messagesGroupByOutputType[P]>
            : GetScalarType<T[P], User_messagesGroupByOutputType[P]>
        }
      >
    >


  export type User_messagesSelect = {
    user_message_id?: boolean
    account_id?: boolean
    user_id?: boolean
    message_id?: boolean
    label_replace_by_generated_column?: boolean
    read?: boolean
    accounts?: boolean | User_messages$accountsArgs
    messages?: boolean | User_messages$messagesArgs
    users?: boolean | User_messages$usersArgs
  }


  export type User_messagesInclude = {
    accounts?: boolean | User_messages$accountsArgs
    messages?: boolean | User_messages$messagesArgs
    users?: boolean | User_messages$usersArgs
  } 

  export type User_messagesGetPayload<S extends boolean | null | undefined | User_messagesArgs> =
    S extends { select: any, include: any } ? 'Please either choose `select` or `include`' :
    S extends true ? User_messages :
    S extends undefined ? never :
    S extends { include: any } & (User_messagesArgs | User_messagesFindManyArgs)
    ? User_messages  & {
    [P in TruthyKeys<S['include']>]:
        P extends 'accounts' ? AccountsGetPayload<S['include'][P]> | null :
        P extends 'messages' ? MessagesGetPayload<S['include'][P]> | null :
        P extends 'users' ? UsersGetPayload<S['include'][P]> | null :  never
  } 
    : S extends { select: any } & (User_messagesArgs | User_messagesFindManyArgs)
      ? {
    [P in TruthyKeys<S['select']>]:
        P extends 'accounts' ? AccountsGetPayload<S['select'][P]> | null :
        P extends 'messages' ? MessagesGetPayload<S['select'][P]> | null :
        P extends 'users' ? UsersGetPayload<S['select'][P]> | null :  P extends keyof User_messages ? User_messages[P] : never
  } 
      : User_messages


  type User_messagesCountArgs = Merge<
    Omit<User_messagesFindManyArgs, 'select' | 'include'> & {
      select?: User_messagesCountAggregateInputType | true
    }
  >

  export interface User_messagesDelegate<GlobalRejectSettings extends Prisma.RejectOnNotFound | Prisma.RejectPerOperation | false | undefined> {
    /**
     * Find zero or one User_messages that matches the filter.
     * @param {User_messagesFindUniqueArgs} args - Arguments to find a User_messages
     * @example
     * // Get one User_messages
     * const user_messages = await prisma.user_messages.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends User_messagesFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, User_messagesFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'User_messages'> extends True ? Prisma__User_messagesClient<User_messagesGetPayload<T>> : Prisma__User_messagesClient<User_messagesGetPayload<T> | null, null>

    /**
     * Find one User_messages that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {User_messagesFindUniqueOrThrowArgs} args - Arguments to find a User_messages
     * @example
     * // Get one User_messages
     * const user_messages = await prisma.user_messages.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends User_messagesFindUniqueOrThrowArgs>(
      args?: SelectSubset<T, User_messagesFindUniqueOrThrowArgs>
    ): Prisma__User_messagesClient<User_messagesGetPayload<T>>

    /**
     * Find the first User_messages that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {User_messagesFindFirstArgs} args - Arguments to find a User_messages
     * @example
     * // Get one User_messages
     * const user_messages = await prisma.user_messages.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends User_messagesFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, User_messagesFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'User_messages'> extends True ? Prisma__User_messagesClient<User_messagesGetPayload<T>> : Prisma__User_messagesClient<User_messagesGetPayload<T> | null, null>

    /**
     * Find the first User_messages that matches the filter or
     * throw `NotFoundError` if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {User_messagesFindFirstOrThrowArgs} args - Arguments to find a User_messages
     * @example
     * // Get one User_messages
     * const user_messages = await prisma.user_messages.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends User_messagesFindFirstOrThrowArgs>(
      args?: SelectSubset<T, User_messagesFindFirstOrThrowArgs>
    ): Prisma__User_messagesClient<User_messagesGetPayload<T>>

    /**
     * Find zero or more User_messages that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {User_messagesFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all User_messages
     * const user_messages = await prisma.user_messages.findMany()
     * 
     * // Get first 10 User_messages
     * const user_messages = await prisma.user_messages.findMany({ take: 10 })
     * 
     * // Only select the `user_message_id`
     * const user_messagesWithUser_message_idOnly = await prisma.user_messages.findMany({ select: { user_message_id: true } })
     * 
    **/
    findMany<T extends User_messagesFindManyArgs>(
      args?: SelectSubset<T, User_messagesFindManyArgs>
    ): PrismaPromise<Array<User_messagesGetPayload<T>>>

    /**
     * Create a User_messages.
     * @param {User_messagesCreateArgs} args - Arguments to create a User_messages.
     * @example
     * // Create one User_messages
     * const User_messages = await prisma.user_messages.create({
     *   data: {
     *     // ... data to create a User_messages
     *   }
     * })
     * 
    **/
    create<T extends User_messagesCreateArgs>(
      args: SelectSubset<T, User_messagesCreateArgs>
    ): Prisma__User_messagesClient<User_messagesGetPayload<T>>

    /**
     * Create many User_messages.
     *     @param {User_messagesCreateManyArgs} args - Arguments to create many User_messages.
     *     @example
     *     // Create many User_messages
     *     const user_messages = await prisma.user_messages.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends User_messagesCreateManyArgs>(
      args?: SelectSubset<T, User_messagesCreateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Delete a User_messages.
     * @param {User_messagesDeleteArgs} args - Arguments to delete one User_messages.
     * @example
     * // Delete one User_messages
     * const User_messages = await prisma.user_messages.delete({
     *   where: {
     *     // ... filter to delete one User_messages
     *   }
     * })
     * 
    **/
    delete<T extends User_messagesDeleteArgs>(
      args: SelectSubset<T, User_messagesDeleteArgs>
    ): Prisma__User_messagesClient<User_messagesGetPayload<T>>

    /**
     * Update one User_messages.
     * @param {User_messagesUpdateArgs} args - Arguments to update one User_messages.
     * @example
     * // Update one User_messages
     * const user_messages = await prisma.user_messages.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends User_messagesUpdateArgs>(
      args: SelectSubset<T, User_messagesUpdateArgs>
    ): Prisma__User_messagesClient<User_messagesGetPayload<T>>

    /**
     * Delete zero or more User_messages.
     * @param {User_messagesDeleteManyArgs} args - Arguments to filter User_messages to delete.
     * @example
     * // Delete a few User_messages
     * const { count } = await prisma.user_messages.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends User_messagesDeleteManyArgs>(
      args?: SelectSubset<T, User_messagesDeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more User_messages.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {User_messagesUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many User_messages
     * const user_messages = await prisma.user_messages.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends User_messagesUpdateManyArgs>(
      args: SelectSubset<T, User_messagesUpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one User_messages.
     * @param {User_messagesUpsertArgs} args - Arguments to update or create a User_messages.
     * @example
     * // Update or create a User_messages
     * const user_messages = await prisma.user_messages.upsert({
     *   create: {
     *     // ... data to create a User_messages
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the User_messages we want to update
     *   }
     * })
    **/
    upsert<T extends User_messagesUpsertArgs>(
      args: SelectSubset<T, User_messagesUpsertArgs>
    ): Prisma__User_messagesClient<User_messagesGetPayload<T>>

    /**
     * Count the number of User_messages.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {User_messagesCountArgs} args - Arguments to filter User_messages to count.
     * @example
     * // Count the number of User_messages
     * const count = await prisma.user_messages.count({
     *   where: {
     *     // ... the filter for the User_messages we want to count
     *   }
     * })
    **/
    count<T extends User_messagesCountArgs>(
      args?: Subset<T, User_messagesCountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], User_messagesCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a User_messages.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {User_messagesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends User_messagesAggregateArgs>(args: Subset<T, User_messagesAggregateArgs>): PrismaPromise<GetUser_messagesAggregateType<T>>

    /**
     * Group by User_messages.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {User_messagesGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends User_messagesGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: User_messagesGroupByArgs['orderBy'] }
        : { orderBy?: User_messagesGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, User_messagesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUser_messagesGroupByPayload<T> : PrismaPromise<InputErrors>

  }

  /**
   * The delegate class that acts as a "Promise-like" for User_messages.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__User_messagesClient<T, Null = never> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';

    accounts<T extends User_messages$accountsArgs= {}>(args?: Subset<T, User_messages$accountsArgs>): Prisma__AccountsClient<AccountsGetPayload<T> | Null>;

    messages<T extends User_messages$messagesArgs= {}>(args?: Subset<T, User_messages$messagesArgs>): Prisma__MessagesClient<MessagesGetPayload<T> | Null>;

    users<T extends User_messages$usersArgs= {}>(args?: Subset<T, User_messages$usersArgs>): Prisma__UsersClient<UsersGetPayload<T> | Null>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }



  // Custom InputTypes

  /**
   * User_messages base type for findUnique actions
   */
  export type User_messagesFindUniqueArgsBase = {
    /**
     * Select specific fields to fetch from the User_messages
     * 
    **/
    select?: User_messagesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: User_messagesInclude | null
    /**
     * Filter, which User_messages to fetch.
     * 
    **/
    where: User_messagesWhereUniqueInput
  }

  /**
   * User_messages findUnique
   */
  export interface User_messagesFindUniqueArgs extends User_messagesFindUniqueArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findUniqueOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * User_messages findUniqueOrThrow
   */
  export type User_messagesFindUniqueOrThrowArgs = {
    /**
     * Select specific fields to fetch from the User_messages
     * 
    **/
    select?: User_messagesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: User_messagesInclude | null
    /**
     * Filter, which User_messages to fetch.
     * 
    **/
    where: User_messagesWhereUniqueInput
  }


  /**
   * User_messages base type for findFirst actions
   */
  export type User_messagesFindFirstArgsBase = {
    /**
     * Select specific fields to fetch from the User_messages
     * 
    **/
    select?: User_messagesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: User_messagesInclude | null
    /**
     * Filter, which User_messages to fetch.
     * 
    **/
    where?: User_messagesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of User_messages to fetch.
     * 
    **/
    orderBy?: Enumerable<User_messagesOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for User_messages.
     * 
    **/
    cursor?: User_messagesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` User_messages from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` User_messages.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of User_messages.
     * 
    **/
    distinct?: Enumerable<User_messagesScalarFieldEnum>
  }

  /**
   * User_messages findFirst
   */
  export interface User_messagesFindFirstArgs extends User_messagesFindFirstArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findFirstOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * User_messages findFirstOrThrow
   */
  export type User_messagesFindFirstOrThrowArgs = {
    /**
     * Select specific fields to fetch from the User_messages
     * 
    **/
    select?: User_messagesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: User_messagesInclude | null
    /**
     * Filter, which User_messages to fetch.
     * 
    **/
    where?: User_messagesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of User_messages to fetch.
     * 
    **/
    orderBy?: Enumerable<User_messagesOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for User_messages.
     * 
    **/
    cursor?: User_messagesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` User_messages from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` User_messages.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of User_messages.
     * 
    **/
    distinct?: Enumerable<User_messagesScalarFieldEnum>
  }


  /**
   * User_messages findMany
   */
  export type User_messagesFindManyArgs = {
    /**
     * Select specific fields to fetch from the User_messages
     * 
    **/
    select?: User_messagesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: User_messagesInclude | null
    /**
     * Filter, which User_messages to fetch.
     * 
    **/
    where?: User_messagesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of User_messages to fetch.
     * 
    **/
    orderBy?: Enumerable<User_messagesOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing User_messages.
     * 
    **/
    cursor?: User_messagesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` User_messages from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` User_messages.
     * 
    **/
    skip?: number
    distinct?: Enumerable<User_messagesScalarFieldEnum>
  }


  /**
   * User_messages create
   */
  export type User_messagesCreateArgs = {
    /**
     * Select specific fields to fetch from the User_messages
     * 
    **/
    select?: User_messagesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: User_messagesInclude | null
    /**
     * The data needed to create a User_messages.
     * 
    **/
    data: XOR<User_messagesCreateInput, User_messagesUncheckedCreateInput>
  }


  /**
   * User_messages createMany
   */
  export type User_messagesCreateManyArgs = {
    /**
     * The data used to create many User_messages.
     * 
    **/
    data: Enumerable<User_messagesCreateManyInput>
    skipDuplicates?: boolean
  }


  /**
   * User_messages update
   */
  export type User_messagesUpdateArgs = {
    /**
     * Select specific fields to fetch from the User_messages
     * 
    **/
    select?: User_messagesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: User_messagesInclude | null
    /**
     * The data needed to update a User_messages.
     * 
    **/
    data: XOR<User_messagesUpdateInput, User_messagesUncheckedUpdateInput>
    /**
     * Choose, which User_messages to update.
     * 
    **/
    where: User_messagesWhereUniqueInput
  }


  /**
   * User_messages updateMany
   */
  export type User_messagesUpdateManyArgs = {
    /**
     * The data used to update User_messages.
     * 
    **/
    data: XOR<User_messagesUpdateManyMutationInput, User_messagesUncheckedUpdateManyInput>
    /**
     * Filter which User_messages to update
     * 
    **/
    where?: User_messagesWhereInput
  }


  /**
   * User_messages upsert
   */
  export type User_messagesUpsertArgs = {
    /**
     * Select specific fields to fetch from the User_messages
     * 
    **/
    select?: User_messagesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: User_messagesInclude | null
    /**
     * The filter to search for the User_messages to update in case it exists.
     * 
    **/
    where: User_messagesWhereUniqueInput
    /**
     * In case the User_messages found by the `where` argument doesn't exist, create a new User_messages with this data.
     * 
    **/
    create: XOR<User_messagesCreateInput, User_messagesUncheckedCreateInput>
    /**
     * In case the User_messages was found with the provided `where` argument, update it with this data.
     * 
    **/
    update: XOR<User_messagesUpdateInput, User_messagesUncheckedUpdateInput>
  }


  /**
   * User_messages delete
   */
  export type User_messagesDeleteArgs = {
    /**
     * Select specific fields to fetch from the User_messages
     * 
    **/
    select?: User_messagesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: User_messagesInclude | null
    /**
     * Filter which User_messages to delete.
     * 
    **/
    where: User_messagesWhereUniqueInput
  }


  /**
   * User_messages deleteMany
   */
  export type User_messagesDeleteManyArgs = {
    /**
     * Filter which User_messages to delete
     * 
    **/
    where?: User_messagesWhereInput
  }


  /**
   * User_messages.accounts
   */
  export type User_messages$accountsArgs = {
    /**
     * Select specific fields to fetch from the Accounts
     * 
    **/
    select?: AccountsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: AccountsInclude | null
    where?: AccountsWhereInput
  }


  /**
   * User_messages.messages
   */
  export type User_messages$messagesArgs = {
    /**
     * Select specific fields to fetch from the Messages
     * 
    **/
    select?: MessagesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: MessagesInclude | null
    where?: MessagesWhereInput
  }


  /**
   * User_messages.users
   */
  export type User_messages$usersArgs = {
    /**
     * Select specific fields to fetch from the Users
     * 
    **/
    select?: UsersSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: UsersInclude | null
    where?: UsersWhereInput
  }


  /**
   * User_messages without action
   */
  export type User_messagesArgs = {
    /**
     * Select specific fields to fetch from the User_messages
     * 
    **/
    select?: User_messagesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: User_messagesInclude | null
  }



  /**
   * Model Users
   */


  export type AggregateUsers = {
    _count: UsersCountAggregateOutputType | null
    _min: UsersMinAggregateOutputType | null
    _max: UsersMaxAggregateOutputType | null
  }

  export type UsersMinAggregateOutputType = {
    user_id: string | null
    email: string | null
    auth_id: string | null
    label_replace_by_generated_column: string | null
    deleted: boolean | null
  }

  export type UsersMaxAggregateOutputType = {
    user_id: string | null
    email: string | null
    auth_id: string | null
    label_replace_by_generated_column: string | null
    deleted: boolean | null
  }

  export type UsersCountAggregateOutputType = {
    user_id: number
    email: number
    auth_id: number
    label_replace_by_generated_column: number
    deleted: number
    _all: number
  }


  export type UsersMinAggregateInputType = {
    user_id?: true
    email?: true
    auth_id?: true
    label_replace_by_generated_column?: true
    deleted?: true
  }

  export type UsersMaxAggregateInputType = {
    user_id?: true
    email?: true
    auth_id?: true
    label_replace_by_generated_column?: true
    deleted?: true
  }

  export type UsersCountAggregateInputType = {
    user_id?: true
    email?: true
    auth_id?: true
    label_replace_by_generated_column?: true
    deleted?: true
    _all?: true
  }

  export type UsersAggregateArgs = {
    /**
     * Filter which Users to aggregate.
     * 
    **/
    where?: UsersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     * 
    **/
    orderBy?: Enumerable<UsersOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     * 
    **/
    cursor?: UsersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Users
    **/
    _count?: true | UsersCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: UsersMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: UsersMaxAggregateInputType
  }

  export type GetUsersAggregateType<T extends UsersAggregateArgs> = {
        [P in keyof T & keyof AggregateUsers]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUsers[P]>
      : GetScalarType<T[P], AggregateUsers[P]>
  }




  export type UsersGroupByArgs = {
    where?: UsersWhereInput
    orderBy?: Enumerable<UsersOrderByWithAggregationInput>
    by: Array<UsersScalarFieldEnum>
    having?: UsersScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: UsersCountAggregateInputType | true
    _min?: UsersMinAggregateInputType
    _max?: UsersMaxAggregateInputType
  }


  export type UsersGroupByOutputType = {
    user_id: string
    email: string | null
    auth_id: string | null
    label_replace_by_generated_column: string | null
    deleted: boolean | null
    _count: UsersCountAggregateOutputType | null
    _min: UsersMinAggregateOutputType | null
    _max: UsersMaxAggregateOutputType | null
  }

  type GetUsersGroupByPayload<T extends UsersGroupByArgs> = PrismaPromise<
    Array<
      PickArray<UsersGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof UsersGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], UsersGroupByOutputType[P]>
            : GetScalarType<T[P], UsersGroupByOutputType[P]>
        }
      >
    >


  export type UsersSelect = {
    user_id?: boolean
    email?: boolean
    auth_id?: boolean
    label_replace_by_generated_column?: boolean
    deleted?: boolean
    accounts?: boolean | Users$accountsArgs
    project_users?: boolean | Users$project_usersArgs
    subproject_users?: boolean | Users$subproject_usersArgs
    ui_options?: boolean | Users$ui_optionsArgs
    user_messages?: boolean | Users$user_messagesArgs
    _count?: boolean | UsersCountOutputTypeArgs
  }


  export type UsersInclude = {
    accounts?: boolean | Users$accountsArgs
    project_users?: boolean | Users$project_usersArgs
    subproject_users?: boolean | Users$subproject_usersArgs
    ui_options?: boolean | Users$ui_optionsArgs
    user_messages?: boolean | Users$user_messagesArgs
    _count?: boolean | UsersCountOutputTypeArgs
  } 

  export type UsersGetPayload<S extends boolean | null | undefined | UsersArgs> =
    S extends { select: any, include: any } ? 'Please either choose `select` or `include`' :
    S extends true ? Users :
    S extends undefined ? never :
    S extends { include: any } & (UsersArgs | UsersFindManyArgs)
    ? Users  & {
    [P in TruthyKeys<S['include']>]:
        P extends 'accounts' ? Array < AccountsGetPayload<S['include'][P]>>  :
        P extends 'project_users' ? Array < Project_usersGetPayload<S['include'][P]>>  :
        P extends 'subproject_users' ? Array < Subproject_usersGetPayload<S['include'][P]>>  :
        P extends 'ui_options' ? Ui_optionsGetPayload<S['include'][P]> | null :
        P extends 'user_messages' ? Array < User_messagesGetPayload<S['include'][P]>>  :
        P extends '_count' ? UsersCountOutputTypeGetPayload<S['include'][P]> :  never
  } 
    : S extends { select: any } & (UsersArgs | UsersFindManyArgs)
      ? {
    [P in TruthyKeys<S['select']>]:
        P extends 'accounts' ? Array < AccountsGetPayload<S['select'][P]>>  :
        P extends 'project_users' ? Array < Project_usersGetPayload<S['select'][P]>>  :
        P extends 'subproject_users' ? Array < Subproject_usersGetPayload<S['select'][P]>>  :
        P extends 'ui_options' ? Ui_optionsGetPayload<S['select'][P]> | null :
        P extends 'user_messages' ? Array < User_messagesGetPayload<S['select'][P]>>  :
        P extends '_count' ? UsersCountOutputTypeGetPayload<S['select'][P]> :  P extends keyof Users ? Users[P] : never
  } 
      : Users


  type UsersCountArgs = Merge<
    Omit<UsersFindManyArgs, 'select' | 'include'> & {
      select?: UsersCountAggregateInputType | true
    }
  >

  export interface UsersDelegate<GlobalRejectSettings extends Prisma.RejectOnNotFound | Prisma.RejectPerOperation | false | undefined> {
    /**
     * Find zero or one Users that matches the filter.
     * @param {UsersFindUniqueArgs} args - Arguments to find a Users
     * @example
     * // Get one Users
     * const users = await prisma.users.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends UsersFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, UsersFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'Users'> extends True ? Prisma__UsersClient<UsersGetPayload<T>> : Prisma__UsersClient<UsersGetPayload<T> | null, null>

    /**
     * Find one Users that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {UsersFindUniqueOrThrowArgs} args - Arguments to find a Users
     * @example
     * // Get one Users
     * const users = await prisma.users.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends UsersFindUniqueOrThrowArgs>(
      args?: SelectSubset<T, UsersFindUniqueOrThrowArgs>
    ): Prisma__UsersClient<UsersGetPayload<T>>

    /**
     * Find the first Users that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsersFindFirstArgs} args - Arguments to find a Users
     * @example
     * // Get one Users
     * const users = await prisma.users.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends UsersFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, UsersFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'Users'> extends True ? Prisma__UsersClient<UsersGetPayload<T>> : Prisma__UsersClient<UsersGetPayload<T> | null, null>

    /**
     * Find the first Users that matches the filter or
     * throw `NotFoundError` if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsersFindFirstOrThrowArgs} args - Arguments to find a Users
     * @example
     * // Get one Users
     * const users = await prisma.users.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends UsersFindFirstOrThrowArgs>(
      args?: SelectSubset<T, UsersFindFirstOrThrowArgs>
    ): Prisma__UsersClient<UsersGetPayload<T>>

    /**
     * Find zero or more Users that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsersFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Users
     * const users = await prisma.users.findMany()
     * 
     * // Get first 10 Users
     * const users = await prisma.users.findMany({ take: 10 })
     * 
     * // Only select the `user_id`
     * const usersWithUser_idOnly = await prisma.users.findMany({ select: { user_id: true } })
     * 
    **/
    findMany<T extends UsersFindManyArgs>(
      args?: SelectSubset<T, UsersFindManyArgs>
    ): PrismaPromise<Array<UsersGetPayload<T>>>

    /**
     * Create a Users.
     * @param {UsersCreateArgs} args - Arguments to create a Users.
     * @example
     * // Create one Users
     * const Users = await prisma.users.create({
     *   data: {
     *     // ... data to create a Users
     *   }
     * })
     * 
    **/
    create<T extends UsersCreateArgs>(
      args: SelectSubset<T, UsersCreateArgs>
    ): Prisma__UsersClient<UsersGetPayload<T>>

    /**
     * Create many Users.
     *     @param {UsersCreateManyArgs} args - Arguments to create many Users.
     *     @example
     *     // Create many Users
     *     const users = await prisma.users.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends UsersCreateManyArgs>(
      args?: SelectSubset<T, UsersCreateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Delete a Users.
     * @param {UsersDeleteArgs} args - Arguments to delete one Users.
     * @example
     * // Delete one Users
     * const Users = await prisma.users.delete({
     *   where: {
     *     // ... filter to delete one Users
     *   }
     * })
     * 
    **/
    delete<T extends UsersDeleteArgs>(
      args: SelectSubset<T, UsersDeleteArgs>
    ): Prisma__UsersClient<UsersGetPayload<T>>

    /**
     * Update one Users.
     * @param {UsersUpdateArgs} args - Arguments to update one Users.
     * @example
     * // Update one Users
     * const users = await prisma.users.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends UsersUpdateArgs>(
      args: SelectSubset<T, UsersUpdateArgs>
    ): Prisma__UsersClient<UsersGetPayload<T>>

    /**
     * Delete zero or more Users.
     * @param {UsersDeleteManyArgs} args - Arguments to filter Users to delete.
     * @example
     * // Delete a few Users
     * const { count } = await prisma.users.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends UsersDeleteManyArgs>(
      args?: SelectSubset<T, UsersDeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsersUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Users
     * const users = await prisma.users.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends UsersUpdateManyArgs>(
      args: SelectSubset<T, UsersUpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one Users.
     * @param {UsersUpsertArgs} args - Arguments to update or create a Users.
     * @example
     * // Update or create a Users
     * const users = await prisma.users.upsert({
     *   create: {
     *     // ... data to create a Users
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Users we want to update
     *   }
     * })
    **/
    upsert<T extends UsersUpsertArgs>(
      args: SelectSubset<T, UsersUpsertArgs>
    ): Prisma__UsersClient<UsersGetPayload<T>>

    /**
     * Count the number of Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsersCountArgs} args - Arguments to filter Users to count.
     * @example
     * // Count the number of Users
     * const count = await prisma.users.count({
     *   where: {
     *     // ... the filter for the Users we want to count
     *   }
     * })
    **/
    count<T extends UsersCountArgs>(
      args?: Subset<T, UsersCountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], UsersCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsersAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends UsersAggregateArgs>(args: Subset<T, UsersAggregateArgs>): PrismaPromise<GetUsersAggregateType<T>>

    /**
     * Group by Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsersGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends UsersGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: UsersGroupByArgs['orderBy'] }
        : { orderBy?: UsersGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, UsersGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUsersGroupByPayload<T> : PrismaPromise<InputErrors>

  }

  /**
   * The delegate class that acts as a "Promise-like" for Users.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__UsersClient<T, Null = never> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';

    accounts<T extends Users$accountsArgs= {}>(args?: Subset<T, Users$accountsArgs>): PrismaPromise<Array<AccountsGetPayload<T>>| Null>;

    project_users<T extends Users$project_usersArgs= {}>(args?: Subset<T, Users$project_usersArgs>): PrismaPromise<Array<Project_usersGetPayload<T>>| Null>;

    subproject_users<T extends Users$subproject_usersArgs= {}>(args?: Subset<T, Users$subproject_usersArgs>): PrismaPromise<Array<Subproject_usersGetPayload<T>>| Null>;

    ui_options<T extends Users$ui_optionsArgs= {}>(args?: Subset<T, Users$ui_optionsArgs>): Prisma__Ui_optionsClient<Ui_optionsGetPayload<T> | Null>;

    user_messages<T extends Users$user_messagesArgs= {}>(args?: Subset<T, Users$user_messagesArgs>): PrismaPromise<Array<User_messagesGetPayload<T>>| Null>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }



  // Custom InputTypes

  /**
   * Users base type for findUnique actions
   */
  export type UsersFindUniqueArgsBase = {
    /**
     * Select specific fields to fetch from the Users
     * 
    **/
    select?: UsersSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: UsersInclude | null
    /**
     * Filter, which Users to fetch.
     * 
    **/
    where: UsersWhereUniqueInput
  }

  /**
   * Users findUnique
   */
  export interface UsersFindUniqueArgs extends UsersFindUniqueArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findUniqueOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * Users findUniqueOrThrow
   */
  export type UsersFindUniqueOrThrowArgs = {
    /**
     * Select specific fields to fetch from the Users
     * 
    **/
    select?: UsersSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: UsersInclude | null
    /**
     * Filter, which Users to fetch.
     * 
    **/
    where: UsersWhereUniqueInput
  }


  /**
   * Users base type for findFirst actions
   */
  export type UsersFindFirstArgsBase = {
    /**
     * Select specific fields to fetch from the Users
     * 
    **/
    select?: UsersSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: UsersInclude | null
    /**
     * Filter, which Users to fetch.
     * 
    **/
    where?: UsersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     * 
    **/
    orderBy?: Enumerable<UsersOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Users.
     * 
    **/
    cursor?: UsersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Users.
     * 
    **/
    distinct?: Enumerable<UsersScalarFieldEnum>
  }

  /**
   * Users findFirst
   */
  export interface UsersFindFirstArgs extends UsersFindFirstArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findFirstOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * Users findFirstOrThrow
   */
  export type UsersFindFirstOrThrowArgs = {
    /**
     * Select specific fields to fetch from the Users
     * 
    **/
    select?: UsersSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: UsersInclude | null
    /**
     * Filter, which Users to fetch.
     * 
    **/
    where?: UsersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     * 
    **/
    orderBy?: Enumerable<UsersOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Users.
     * 
    **/
    cursor?: UsersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Users.
     * 
    **/
    distinct?: Enumerable<UsersScalarFieldEnum>
  }


  /**
   * Users findMany
   */
  export type UsersFindManyArgs = {
    /**
     * Select specific fields to fetch from the Users
     * 
    **/
    select?: UsersSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: UsersInclude | null
    /**
     * Filter, which Users to fetch.
     * 
    **/
    where?: UsersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     * 
    **/
    orderBy?: Enumerable<UsersOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Users.
     * 
    **/
    cursor?: UsersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     * 
    **/
    skip?: number
    distinct?: Enumerable<UsersScalarFieldEnum>
  }


  /**
   * Users create
   */
  export type UsersCreateArgs = {
    /**
     * Select specific fields to fetch from the Users
     * 
    **/
    select?: UsersSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: UsersInclude | null
    /**
     * The data needed to create a Users.
     * 
    **/
    data: XOR<UsersCreateInput, UsersUncheckedCreateInput>
  }


  /**
   * Users createMany
   */
  export type UsersCreateManyArgs = {
    /**
     * The data used to create many Users.
     * 
    **/
    data: Enumerable<UsersCreateManyInput>
    skipDuplicates?: boolean
  }


  /**
   * Users update
   */
  export type UsersUpdateArgs = {
    /**
     * Select specific fields to fetch from the Users
     * 
    **/
    select?: UsersSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: UsersInclude | null
    /**
     * The data needed to update a Users.
     * 
    **/
    data: XOR<UsersUpdateInput, UsersUncheckedUpdateInput>
    /**
     * Choose, which Users to update.
     * 
    **/
    where: UsersWhereUniqueInput
  }


  /**
   * Users updateMany
   */
  export type UsersUpdateManyArgs = {
    /**
     * The data used to update Users.
     * 
    **/
    data: XOR<UsersUpdateManyMutationInput, UsersUncheckedUpdateManyInput>
    /**
     * Filter which Users to update
     * 
    **/
    where?: UsersWhereInput
  }


  /**
   * Users upsert
   */
  export type UsersUpsertArgs = {
    /**
     * Select specific fields to fetch from the Users
     * 
    **/
    select?: UsersSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: UsersInclude | null
    /**
     * The filter to search for the Users to update in case it exists.
     * 
    **/
    where: UsersWhereUniqueInput
    /**
     * In case the Users found by the `where` argument doesn't exist, create a new Users with this data.
     * 
    **/
    create: XOR<UsersCreateInput, UsersUncheckedCreateInput>
    /**
     * In case the Users was found with the provided `where` argument, update it with this data.
     * 
    **/
    update: XOR<UsersUpdateInput, UsersUncheckedUpdateInput>
  }


  /**
   * Users delete
   */
  export type UsersDeleteArgs = {
    /**
     * Select specific fields to fetch from the Users
     * 
    **/
    select?: UsersSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: UsersInclude | null
    /**
     * Filter which Users to delete.
     * 
    **/
    where: UsersWhereUniqueInput
  }


  /**
   * Users deleteMany
   */
  export type UsersDeleteManyArgs = {
    /**
     * Filter which Users to delete
     * 
    **/
    where?: UsersWhereInput
  }


  /**
   * Users.accounts
   */
  export type Users$accountsArgs = {
    /**
     * Select specific fields to fetch from the Accounts
     * 
    **/
    select?: AccountsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: AccountsInclude | null
    where?: AccountsWhereInput
    orderBy?: Enumerable<AccountsOrderByWithRelationInput>
    cursor?: AccountsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Enumerable<AccountsScalarFieldEnum>
  }


  /**
   * Users.project_users
   */
  export type Users$project_usersArgs = {
    /**
     * Select specific fields to fetch from the Project_users
     * 
    **/
    select?: Project_usersSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: Project_usersInclude | null
    where?: Project_usersWhereInput
    orderBy?: Enumerable<Project_usersOrderByWithRelationInput>
    cursor?: Project_usersWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Enumerable<Project_usersScalarFieldEnum>
  }


  /**
   * Users.subproject_users
   */
  export type Users$subproject_usersArgs = {
    /**
     * Select specific fields to fetch from the Subproject_users
     * 
    **/
    select?: Subproject_usersSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: Subproject_usersInclude | null
    where?: Subproject_usersWhereInput
    orderBy?: Enumerable<Subproject_usersOrderByWithRelationInput>
    cursor?: Subproject_usersWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Enumerable<Subproject_usersScalarFieldEnum>
  }


  /**
   * Users.ui_options
   */
  export type Users$ui_optionsArgs = {
    /**
     * Select specific fields to fetch from the Ui_options
     * 
    **/
    select?: Ui_optionsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: Ui_optionsInclude | null
    where?: Ui_optionsWhereInput
  }


  /**
   * Users.user_messages
   */
  export type Users$user_messagesArgs = {
    /**
     * Select specific fields to fetch from the User_messages
     * 
    **/
    select?: User_messagesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: User_messagesInclude | null
    where?: User_messagesWhereInput
    orderBy?: Enumerable<User_messagesOrderByWithRelationInput>
    cursor?: User_messagesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Enumerable<User_messagesScalarFieldEnum>
  }


  /**
   * Users without action
   */
  export type UsersArgs = {
    /**
     * Select specific fields to fetch from the Users
     * 
    **/
    select?: UsersSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: UsersInclude | null
  }



  /**
   * Model Widget_types
   */


  export type AggregateWidget_types = {
    _count: Widget_typesCountAggregateOutputType | null
    _avg: Widget_typesAvgAggregateOutputType | null
    _sum: Widget_typesSumAggregateOutputType | null
    _min: Widget_typesMinAggregateOutputType | null
    _max: Widget_typesMaxAggregateOutputType | null
  }

  export type Widget_typesAvgAggregateOutputType = {
    sort: number | null
  }

  export type Widget_typesSumAggregateOutputType = {
    sort: number | null
  }

  export type Widget_typesMinAggregateOutputType = {
    widget_type_id: string | null
    name: string | null
    needs_list: boolean | null
    sort: number | null
    comment: string | null
    label_replace_by_generated_column: string | null
    deleted: boolean | null
  }

  export type Widget_typesMaxAggregateOutputType = {
    widget_type_id: string | null
    name: string | null
    needs_list: boolean | null
    sort: number | null
    comment: string | null
    label_replace_by_generated_column: string | null
    deleted: boolean | null
  }

  export type Widget_typesCountAggregateOutputType = {
    widget_type_id: number
    name: number
    needs_list: number
    sort: number
    comment: number
    label_replace_by_generated_column: number
    deleted: number
    _all: number
  }


  export type Widget_typesAvgAggregateInputType = {
    sort?: true
  }

  export type Widget_typesSumAggregateInputType = {
    sort?: true
  }

  export type Widget_typesMinAggregateInputType = {
    widget_type_id?: true
    name?: true
    needs_list?: true
    sort?: true
    comment?: true
    label_replace_by_generated_column?: true
    deleted?: true
  }

  export type Widget_typesMaxAggregateInputType = {
    widget_type_id?: true
    name?: true
    needs_list?: true
    sort?: true
    comment?: true
    label_replace_by_generated_column?: true
    deleted?: true
  }

  export type Widget_typesCountAggregateInputType = {
    widget_type_id?: true
    name?: true
    needs_list?: true
    sort?: true
    comment?: true
    label_replace_by_generated_column?: true
    deleted?: true
    _all?: true
  }

  export type Widget_typesAggregateArgs = {
    /**
     * Filter which Widget_types to aggregate.
     * 
    **/
    where?: Widget_typesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Widget_types to fetch.
     * 
    **/
    orderBy?: Enumerable<Widget_typesOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     * 
    **/
    cursor?: Widget_typesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Widget_types from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Widget_types.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Widget_types
    **/
    _count?: true | Widget_typesCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Widget_typesAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Widget_typesSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Widget_typesMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Widget_typesMaxAggregateInputType
  }

  export type GetWidget_typesAggregateType<T extends Widget_typesAggregateArgs> = {
        [P in keyof T & keyof AggregateWidget_types]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateWidget_types[P]>
      : GetScalarType<T[P], AggregateWidget_types[P]>
  }




  export type Widget_typesGroupByArgs = {
    where?: Widget_typesWhereInput
    orderBy?: Enumerable<Widget_typesOrderByWithAggregationInput>
    by: Array<Widget_typesScalarFieldEnum>
    having?: Widget_typesScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Widget_typesCountAggregateInputType | true
    _avg?: Widget_typesAvgAggregateInputType
    _sum?: Widget_typesSumAggregateInputType
    _min?: Widget_typesMinAggregateInputType
    _max?: Widget_typesMaxAggregateInputType
  }


  export type Widget_typesGroupByOutputType = {
    widget_type_id: string
    name: string | null
    needs_list: boolean | null
    sort: number | null
    comment: string | null
    label_replace_by_generated_column: string | null
    deleted: boolean | null
    _count: Widget_typesCountAggregateOutputType | null
    _avg: Widget_typesAvgAggregateOutputType | null
    _sum: Widget_typesSumAggregateOutputType | null
    _min: Widget_typesMinAggregateOutputType | null
    _max: Widget_typesMaxAggregateOutputType | null
  }

  type GetWidget_typesGroupByPayload<T extends Widget_typesGroupByArgs> = PrismaPromise<
    Array<
      PickArray<Widget_typesGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Widget_typesGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Widget_typesGroupByOutputType[P]>
            : GetScalarType<T[P], Widget_typesGroupByOutputType[P]>
        }
      >
    >


  export type Widget_typesSelect = {
    widget_type_id?: boolean
    name?: boolean
    needs_list?: boolean
    sort?: boolean
    comment?: boolean
    label_replace_by_generated_column?: boolean
    deleted?: boolean
    widgets_for_fields?: boolean | Widget_types$widgets_for_fieldsArgs
    _count?: boolean | Widget_typesCountOutputTypeArgs
  }


  export type Widget_typesInclude = {
    widgets_for_fields?: boolean | Widget_types$widgets_for_fieldsArgs
    _count?: boolean | Widget_typesCountOutputTypeArgs
  } 

  export type Widget_typesGetPayload<S extends boolean | null | undefined | Widget_typesArgs> =
    S extends { select: any, include: any } ? 'Please either choose `select` or `include`' :
    S extends true ? Widget_types :
    S extends undefined ? never :
    S extends { include: any } & (Widget_typesArgs | Widget_typesFindManyArgs)
    ? Widget_types  & {
    [P in TruthyKeys<S['include']>]:
        P extends 'widgets_for_fields' ? Array < Widgets_for_fieldsGetPayload<S['include'][P]>>  :
        P extends '_count' ? Widget_typesCountOutputTypeGetPayload<S['include'][P]> :  never
  } 
    : S extends { select: any } & (Widget_typesArgs | Widget_typesFindManyArgs)
      ? {
    [P in TruthyKeys<S['select']>]:
        P extends 'widgets_for_fields' ? Array < Widgets_for_fieldsGetPayload<S['select'][P]>>  :
        P extends '_count' ? Widget_typesCountOutputTypeGetPayload<S['select'][P]> :  P extends keyof Widget_types ? Widget_types[P] : never
  } 
      : Widget_types


  type Widget_typesCountArgs = Merge<
    Omit<Widget_typesFindManyArgs, 'select' | 'include'> & {
      select?: Widget_typesCountAggregateInputType | true
    }
  >

  export interface Widget_typesDelegate<GlobalRejectSettings extends Prisma.RejectOnNotFound | Prisma.RejectPerOperation | false | undefined> {
    /**
     * Find zero or one Widget_types that matches the filter.
     * @param {Widget_typesFindUniqueArgs} args - Arguments to find a Widget_types
     * @example
     * // Get one Widget_types
     * const widget_types = await prisma.widget_types.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends Widget_typesFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, Widget_typesFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'Widget_types'> extends True ? Prisma__Widget_typesClient<Widget_typesGetPayload<T>> : Prisma__Widget_typesClient<Widget_typesGetPayload<T> | null, null>

    /**
     * Find one Widget_types that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {Widget_typesFindUniqueOrThrowArgs} args - Arguments to find a Widget_types
     * @example
     * // Get one Widget_types
     * const widget_types = await prisma.widget_types.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends Widget_typesFindUniqueOrThrowArgs>(
      args?: SelectSubset<T, Widget_typesFindUniqueOrThrowArgs>
    ): Prisma__Widget_typesClient<Widget_typesGetPayload<T>>

    /**
     * Find the first Widget_types that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Widget_typesFindFirstArgs} args - Arguments to find a Widget_types
     * @example
     * // Get one Widget_types
     * const widget_types = await prisma.widget_types.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends Widget_typesFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, Widget_typesFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'Widget_types'> extends True ? Prisma__Widget_typesClient<Widget_typesGetPayload<T>> : Prisma__Widget_typesClient<Widget_typesGetPayload<T> | null, null>

    /**
     * Find the first Widget_types that matches the filter or
     * throw `NotFoundError` if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Widget_typesFindFirstOrThrowArgs} args - Arguments to find a Widget_types
     * @example
     * // Get one Widget_types
     * const widget_types = await prisma.widget_types.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends Widget_typesFindFirstOrThrowArgs>(
      args?: SelectSubset<T, Widget_typesFindFirstOrThrowArgs>
    ): Prisma__Widget_typesClient<Widget_typesGetPayload<T>>

    /**
     * Find zero or more Widget_types that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Widget_typesFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Widget_types
     * const widget_types = await prisma.widget_types.findMany()
     * 
     * // Get first 10 Widget_types
     * const widget_types = await prisma.widget_types.findMany({ take: 10 })
     * 
     * // Only select the `widget_type_id`
     * const widget_typesWithWidget_type_idOnly = await prisma.widget_types.findMany({ select: { widget_type_id: true } })
     * 
    **/
    findMany<T extends Widget_typesFindManyArgs>(
      args?: SelectSubset<T, Widget_typesFindManyArgs>
    ): PrismaPromise<Array<Widget_typesGetPayload<T>>>

    /**
     * Create a Widget_types.
     * @param {Widget_typesCreateArgs} args - Arguments to create a Widget_types.
     * @example
     * // Create one Widget_types
     * const Widget_types = await prisma.widget_types.create({
     *   data: {
     *     // ... data to create a Widget_types
     *   }
     * })
     * 
    **/
    create<T extends Widget_typesCreateArgs>(
      args: SelectSubset<T, Widget_typesCreateArgs>
    ): Prisma__Widget_typesClient<Widget_typesGetPayload<T>>

    /**
     * Create many Widget_types.
     *     @param {Widget_typesCreateManyArgs} args - Arguments to create many Widget_types.
     *     @example
     *     // Create many Widget_types
     *     const widget_types = await prisma.widget_types.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends Widget_typesCreateManyArgs>(
      args?: SelectSubset<T, Widget_typesCreateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Delete a Widget_types.
     * @param {Widget_typesDeleteArgs} args - Arguments to delete one Widget_types.
     * @example
     * // Delete one Widget_types
     * const Widget_types = await prisma.widget_types.delete({
     *   where: {
     *     // ... filter to delete one Widget_types
     *   }
     * })
     * 
    **/
    delete<T extends Widget_typesDeleteArgs>(
      args: SelectSubset<T, Widget_typesDeleteArgs>
    ): Prisma__Widget_typesClient<Widget_typesGetPayload<T>>

    /**
     * Update one Widget_types.
     * @param {Widget_typesUpdateArgs} args - Arguments to update one Widget_types.
     * @example
     * // Update one Widget_types
     * const widget_types = await prisma.widget_types.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends Widget_typesUpdateArgs>(
      args: SelectSubset<T, Widget_typesUpdateArgs>
    ): Prisma__Widget_typesClient<Widget_typesGetPayload<T>>

    /**
     * Delete zero or more Widget_types.
     * @param {Widget_typesDeleteManyArgs} args - Arguments to filter Widget_types to delete.
     * @example
     * // Delete a few Widget_types
     * const { count } = await prisma.widget_types.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends Widget_typesDeleteManyArgs>(
      args?: SelectSubset<T, Widget_typesDeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more Widget_types.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Widget_typesUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Widget_types
     * const widget_types = await prisma.widget_types.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends Widget_typesUpdateManyArgs>(
      args: SelectSubset<T, Widget_typesUpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one Widget_types.
     * @param {Widget_typesUpsertArgs} args - Arguments to update or create a Widget_types.
     * @example
     * // Update or create a Widget_types
     * const widget_types = await prisma.widget_types.upsert({
     *   create: {
     *     // ... data to create a Widget_types
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Widget_types we want to update
     *   }
     * })
    **/
    upsert<T extends Widget_typesUpsertArgs>(
      args: SelectSubset<T, Widget_typesUpsertArgs>
    ): Prisma__Widget_typesClient<Widget_typesGetPayload<T>>

    /**
     * Count the number of Widget_types.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Widget_typesCountArgs} args - Arguments to filter Widget_types to count.
     * @example
     * // Count the number of Widget_types
     * const count = await prisma.widget_types.count({
     *   where: {
     *     // ... the filter for the Widget_types we want to count
     *   }
     * })
    **/
    count<T extends Widget_typesCountArgs>(
      args?: Subset<T, Widget_typesCountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Widget_typesCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Widget_types.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Widget_typesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Widget_typesAggregateArgs>(args: Subset<T, Widget_typesAggregateArgs>): PrismaPromise<GetWidget_typesAggregateType<T>>

    /**
     * Group by Widget_types.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Widget_typesGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends Widget_typesGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: Widget_typesGroupByArgs['orderBy'] }
        : { orderBy?: Widget_typesGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, Widget_typesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetWidget_typesGroupByPayload<T> : PrismaPromise<InputErrors>

  }

  /**
   * The delegate class that acts as a "Promise-like" for Widget_types.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__Widget_typesClient<T, Null = never> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';

    widgets_for_fields<T extends Widget_types$widgets_for_fieldsArgs= {}>(args?: Subset<T, Widget_types$widgets_for_fieldsArgs>): PrismaPromise<Array<Widgets_for_fieldsGetPayload<T>>| Null>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }



  // Custom InputTypes

  /**
   * Widget_types base type for findUnique actions
   */
  export type Widget_typesFindUniqueArgsBase = {
    /**
     * Select specific fields to fetch from the Widget_types
     * 
    **/
    select?: Widget_typesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: Widget_typesInclude | null
    /**
     * Filter, which Widget_types to fetch.
     * 
    **/
    where: Widget_typesWhereUniqueInput
  }

  /**
   * Widget_types findUnique
   */
  export interface Widget_typesFindUniqueArgs extends Widget_typesFindUniqueArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findUniqueOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * Widget_types findUniqueOrThrow
   */
  export type Widget_typesFindUniqueOrThrowArgs = {
    /**
     * Select specific fields to fetch from the Widget_types
     * 
    **/
    select?: Widget_typesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: Widget_typesInclude | null
    /**
     * Filter, which Widget_types to fetch.
     * 
    **/
    where: Widget_typesWhereUniqueInput
  }


  /**
   * Widget_types base type for findFirst actions
   */
  export type Widget_typesFindFirstArgsBase = {
    /**
     * Select specific fields to fetch from the Widget_types
     * 
    **/
    select?: Widget_typesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: Widget_typesInclude | null
    /**
     * Filter, which Widget_types to fetch.
     * 
    **/
    where?: Widget_typesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Widget_types to fetch.
     * 
    **/
    orderBy?: Enumerable<Widget_typesOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Widget_types.
     * 
    **/
    cursor?: Widget_typesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Widget_types from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Widget_types.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Widget_types.
     * 
    **/
    distinct?: Enumerable<Widget_typesScalarFieldEnum>
  }

  /**
   * Widget_types findFirst
   */
  export interface Widget_typesFindFirstArgs extends Widget_typesFindFirstArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findFirstOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * Widget_types findFirstOrThrow
   */
  export type Widget_typesFindFirstOrThrowArgs = {
    /**
     * Select specific fields to fetch from the Widget_types
     * 
    **/
    select?: Widget_typesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: Widget_typesInclude | null
    /**
     * Filter, which Widget_types to fetch.
     * 
    **/
    where?: Widget_typesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Widget_types to fetch.
     * 
    **/
    orderBy?: Enumerable<Widget_typesOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Widget_types.
     * 
    **/
    cursor?: Widget_typesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Widget_types from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Widget_types.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Widget_types.
     * 
    **/
    distinct?: Enumerable<Widget_typesScalarFieldEnum>
  }


  /**
   * Widget_types findMany
   */
  export type Widget_typesFindManyArgs = {
    /**
     * Select specific fields to fetch from the Widget_types
     * 
    **/
    select?: Widget_typesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: Widget_typesInclude | null
    /**
     * Filter, which Widget_types to fetch.
     * 
    **/
    where?: Widget_typesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Widget_types to fetch.
     * 
    **/
    orderBy?: Enumerable<Widget_typesOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Widget_types.
     * 
    **/
    cursor?: Widget_typesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Widget_types from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Widget_types.
     * 
    **/
    skip?: number
    distinct?: Enumerable<Widget_typesScalarFieldEnum>
  }


  /**
   * Widget_types create
   */
  export type Widget_typesCreateArgs = {
    /**
     * Select specific fields to fetch from the Widget_types
     * 
    **/
    select?: Widget_typesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: Widget_typesInclude | null
    /**
     * The data needed to create a Widget_types.
     * 
    **/
    data: XOR<Widget_typesCreateInput, Widget_typesUncheckedCreateInput>
  }


  /**
   * Widget_types createMany
   */
  export type Widget_typesCreateManyArgs = {
    /**
     * The data used to create many Widget_types.
     * 
    **/
    data: Enumerable<Widget_typesCreateManyInput>
    skipDuplicates?: boolean
  }


  /**
   * Widget_types update
   */
  export type Widget_typesUpdateArgs = {
    /**
     * Select specific fields to fetch from the Widget_types
     * 
    **/
    select?: Widget_typesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: Widget_typesInclude | null
    /**
     * The data needed to update a Widget_types.
     * 
    **/
    data: XOR<Widget_typesUpdateInput, Widget_typesUncheckedUpdateInput>
    /**
     * Choose, which Widget_types to update.
     * 
    **/
    where: Widget_typesWhereUniqueInput
  }


  /**
   * Widget_types updateMany
   */
  export type Widget_typesUpdateManyArgs = {
    /**
     * The data used to update Widget_types.
     * 
    **/
    data: XOR<Widget_typesUpdateManyMutationInput, Widget_typesUncheckedUpdateManyInput>
    /**
     * Filter which Widget_types to update
     * 
    **/
    where?: Widget_typesWhereInput
  }


  /**
   * Widget_types upsert
   */
  export type Widget_typesUpsertArgs = {
    /**
     * Select specific fields to fetch from the Widget_types
     * 
    **/
    select?: Widget_typesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: Widget_typesInclude | null
    /**
     * The filter to search for the Widget_types to update in case it exists.
     * 
    **/
    where: Widget_typesWhereUniqueInput
    /**
     * In case the Widget_types found by the `where` argument doesn't exist, create a new Widget_types with this data.
     * 
    **/
    create: XOR<Widget_typesCreateInput, Widget_typesUncheckedCreateInput>
    /**
     * In case the Widget_types was found with the provided `where` argument, update it with this data.
     * 
    **/
    update: XOR<Widget_typesUpdateInput, Widget_typesUncheckedUpdateInput>
  }


  /**
   * Widget_types delete
   */
  export type Widget_typesDeleteArgs = {
    /**
     * Select specific fields to fetch from the Widget_types
     * 
    **/
    select?: Widget_typesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: Widget_typesInclude | null
    /**
     * Filter which Widget_types to delete.
     * 
    **/
    where: Widget_typesWhereUniqueInput
  }


  /**
   * Widget_types deleteMany
   */
  export type Widget_typesDeleteManyArgs = {
    /**
     * Filter which Widget_types to delete
     * 
    **/
    where?: Widget_typesWhereInput
  }


  /**
   * Widget_types.widgets_for_fields
   */
  export type Widget_types$widgets_for_fieldsArgs = {
    /**
     * Select specific fields to fetch from the Widgets_for_fields
     * 
    **/
    select?: Widgets_for_fieldsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: Widgets_for_fieldsInclude | null
    where?: Widgets_for_fieldsWhereInput
    orderBy?: Enumerable<Widgets_for_fieldsOrderByWithRelationInput>
    cursor?: Widgets_for_fieldsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Enumerable<Widgets_for_fieldsScalarFieldEnum>
  }


  /**
   * Widget_types without action
   */
  export type Widget_typesArgs = {
    /**
     * Select specific fields to fetch from the Widget_types
     * 
    **/
    select?: Widget_typesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: Widget_typesInclude | null
  }



  /**
   * Model Widgets_for_fields
   */


  export type AggregateWidgets_for_fields = {
    _count: Widgets_for_fieldsCountAggregateOutputType | null
    _min: Widgets_for_fieldsMinAggregateOutputType | null
    _max: Widgets_for_fieldsMaxAggregateOutputType | null
  }

  export type Widgets_for_fieldsMinAggregateOutputType = {
    widget_for_field_id: string | null
    field_type_id: string | null
    widget_type_id: string | null
    label: string | null
    deleted: boolean | null
  }

  export type Widgets_for_fieldsMaxAggregateOutputType = {
    widget_for_field_id: string | null
    field_type_id: string | null
    widget_type_id: string | null
    label: string | null
    deleted: boolean | null
  }

  export type Widgets_for_fieldsCountAggregateOutputType = {
    widget_for_field_id: number
    field_type_id: number
    widget_type_id: number
    label: number
    deleted: number
    _all: number
  }


  export type Widgets_for_fieldsMinAggregateInputType = {
    widget_for_field_id?: true
    field_type_id?: true
    widget_type_id?: true
    label?: true
    deleted?: true
  }

  export type Widgets_for_fieldsMaxAggregateInputType = {
    widget_for_field_id?: true
    field_type_id?: true
    widget_type_id?: true
    label?: true
    deleted?: true
  }

  export type Widgets_for_fieldsCountAggregateInputType = {
    widget_for_field_id?: true
    field_type_id?: true
    widget_type_id?: true
    label?: true
    deleted?: true
    _all?: true
  }

  export type Widgets_for_fieldsAggregateArgs = {
    /**
     * Filter which Widgets_for_fields to aggregate.
     * 
    **/
    where?: Widgets_for_fieldsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Widgets_for_fields to fetch.
     * 
    **/
    orderBy?: Enumerable<Widgets_for_fieldsOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     * 
    **/
    cursor?: Widgets_for_fieldsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Widgets_for_fields from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Widgets_for_fields.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Widgets_for_fields
    **/
    _count?: true | Widgets_for_fieldsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Widgets_for_fieldsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Widgets_for_fieldsMaxAggregateInputType
  }

  export type GetWidgets_for_fieldsAggregateType<T extends Widgets_for_fieldsAggregateArgs> = {
        [P in keyof T & keyof AggregateWidgets_for_fields]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateWidgets_for_fields[P]>
      : GetScalarType<T[P], AggregateWidgets_for_fields[P]>
  }




  export type Widgets_for_fieldsGroupByArgs = {
    where?: Widgets_for_fieldsWhereInput
    orderBy?: Enumerable<Widgets_for_fieldsOrderByWithAggregationInput>
    by: Array<Widgets_for_fieldsScalarFieldEnum>
    having?: Widgets_for_fieldsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Widgets_for_fieldsCountAggregateInputType | true
    _min?: Widgets_for_fieldsMinAggregateInputType
    _max?: Widgets_for_fieldsMaxAggregateInputType
  }


  export type Widgets_for_fieldsGroupByOutputType = {
    widget_for_field_id: string
    field_type_id: string | null
    widget_type_id: string | null
    label: string | null
    deleted: boolean | null
    _count: Widgets_for_fieldsCountAggregateOutputType | null
    _min: Widgets_for_fieldsMinAggregateOutputType | null
    _max: Widgets_for_fieldsMaxAggregateOutputType | null
  }

  type GetWidgets_for_fieldsGroupByPayload<T extends Widgets_for_fieldsGroupByArgs> = PrismaPromise<
    Array<
      PickArray<Widgets_for_fieldsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Widgets_for_fieldsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Widgets_for_fieldsGroupByOutputType[P]>
            : GetScalarType<T[P], Widgets_for_fieldsGroupByOutputType[P]>
        }
      >
    >


  export type Widgets_for_fieldsSelect = {
    widget_for_field_id?: boolean
    field_type_id?: boolean
    widget_type_id?: boolean
    label?: boolean
    deleted?: boolean
    field_types?: boolean | Widgets_for_fields$field_typesArgs
    widget_types?: boolean | Widgets_for_fields$widget_typesArgs
  }


  export type Widgets_for_fieldsInclude = {
    field_types?: boolean | Widgets_for_fields$field_typesArgs
    widget_types?: boolean | Widgets_for_fields$widget_typesArgs
  } 

  export type Widgets_for_fieldsGetPayload<S extends boolean | null | undefined | Widgets_for_fieldsArgs> =
    S extends { select: any, include: any } ? 'Please either choose `select` or `include`' :
    S extends true ? Widgets_for_fields :
    S extends undefined ? never :
    S extends { include: any } & (Widgets_for_fieldsArgs | Widgets_for_fieldsFindManyArgs)
    ? Widgets_for_fields  & {
    [P in TruthyKeys<S['include']>]:
        P extends 'field_types' ? Field_typesGetPayload<S['include'][P]> | null :
        P extends 'widget_types' ? Widget_typesGetPayload<S['include'][P]> | null :  never
  } 
    : S extends { select: any } & (Widgets_for_fieldsArgs | Widgets_for_fieldsFindManyArgs)
      ? {
    [P in TruthyKeys<S['select']>]:
        P extends 'field_types' ? Field_typesGetPayload<S['select'][P]> | null :
        P extends 'widget_types' ? Widget_typesGetPayload<S['select'][P]> | null :  P extends keyof Widgets_for_fields ? Widgets_for_fields[P] : never
  } 
      : Widgets_for_fields


  type Widgets_for_fieldsCountArgs = Merge<
    Omit<Widgets_for_fieldsFindManyArgs, 'select' | 'include'> & {
      select?: Widgets_for_fieldsCountAggregateInputType | true
    }
  >

  export interface Widgets_for_fieldsDelegate<GlobalRejectSettings extends Prisma.RejectOnNotFound | Prisma.RejectPerOperation | false | undefined> {
    /**
     * Find zero or one Widgets_for_fields that matches the filter.
     * @param {Widgets_for_fieldsFindUniqueArgs} args - Arguments to find a Widgets_for_fields
     * @example
     * // Get one Widgets_for_fields
     * const widgets_for_fields = await prisma.widgets_for_fields.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends Widgets_for_fieldsFindUniqueArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args: SelectSubset<T, Widgets_for_fieldsFindUniqueArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findUnique', 'Widgets_for_fields'> extends True ? Prisma__Widgets_for_fieldsClient<Widgets_for_fieldsGetPayload<T>> : Prisma__Widgets_for_fieldsClient<Widgets_for_fieldsGetPayload<T> | null, null>

    /**
     * Find one Widgets_for_fields that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {Widgets_for_fieldsFindUniqueOrThrowArgs} args - Arguments to find a Widgets_for_fields
     * @example
     * // Get one Widgets_for_fields
     * const widgets_for_fields = await prisma.widgets_for_fields.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends Widgets_for_fieldsFindUniqueOrThrowArgs>(
      args?: SelectSubset<T, Widgets_for_fieldsFindUniqueOrThrowArgs>
    ): Prisma__Widgets_for_fieldsClient<Widgets_for_fieldsGetPayload<T>>

    /**
     * Find the first Widgets_for_fields that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Widgets_for_fieldsFindFirstArgs} args - Arguments to find a Widgets_for_fields
     * @example
     * // Get one Widgets_for_fields
     * const widgets_for_fields = await prisma.widgets_for_fields.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends Widgets_for_fieldsFindFirstArgs,  LocalRejectSettings = T["rejectOnNotFound"] extends RejectOnNotFound ? T['rejectOnNotFound'] : undefined>(
      args?: SelectSubset<T, Widgets_for_fieldsFindFirstArgs>
    ): HasReject<GlobalRejectSettings, LocalRejectSettings, 'findFirst', 'Widgets_for_fields'> extends True ? Prisma__Widgets_for_fieldsClient<Widgets_for_fieldsGetPayload<T>> : Prisma__Widgets_for_fieldsClient<Widgets_for_fieldsGetPayload<T> | null, null>

    /**
     * Find the first Widgets_for_fields that matches the filter or
     * throw `NotFoundError` if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Widgets_for_fieldsFindFirstOrThrowArgs} args - Arguments to find a Widgets_for_fields
     * @example
     * // Get one Widgets_for_fields
     * const widgets_for_fields = await prisma.widgets_for_fields.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends Widgets_for_fieldsFindFirstOrThrowArgs>(
      args?: SelectSubset<T, Widgets_for_fieldsFindFirstOrThrowArgs>
    ): Prisma__Widgets_for_fieldsClient<Widgets_for_fieldsGetPayload<T>>

    /**
     * Find zero or more Widgets_for_fields that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Widgets_for_fieldsFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Widgets_for_fields
     * const widgets_for_fields = await prisma.widgets_for_fields.findMany()
     * 
     * // Get first 10 Widgets_for_fields
     * const widgets_for_fields = await prisma.widgets_for_fields.findMany({ take: 10 })
     * 
     * // Only select the `widget_for_field_id`
     * const widgets_for_fieldsWithWidget_for_field_idOnly = await prisma.widgets_for_fields.findMany({ select: { widget_for_field_id: true } })
     * 
    **/
    findMany<T extends Widgets_for_fieldsFindManyArgs>(
      args?: SelectSubset<T, Widgets_for_fieldsFindManyArgs>
    ): PrismaPromise<Array<Widgets_for_fieldsGetPayload<T>>>

    /**
     * Create a Widgets_for_fields.
     * @param {Widgets_for_fieldsCreateArgs} args - Arguments to create a Widgets_for_fields.
     * @example
     * // Create one Widgets_for_fields
     * const Widgets_for_fields = await prisma.widgets_for_fields.create({
     *   data: {
     *     // ... data to create a Widgets_for_fields
     *   }
     * })
     * 
    **/
    create<T extends Widgets_for_fieldsCreateArgs>(
      args: SelectSubset<T, Widgets_for_fieldsCreateArgs>
    ): Prisma__Widgets_for_fieldsClient<Widgets_for_fieldsGetPayload<T>>

    /**
     * Create many Widgets_for_fields.
     *     @param {Widgets_for_fieldsCreateManyArgs} args - Arguments to create many Widgets_for_fields.
     *     @example
     *     // Create many Widgets_for_fields
     *     const widgets_for_fields = await prisma.widgets_for_fields.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends Widgets_for_fieldsCreateManyArgs>(
      args?: SelectSubset<T, Widgets_for_fieldsCreateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Delete a Widgets_for_fields.
     * @param {Widgets_for_fieldsDeleteArgs} args - Arguments to delete one Widgets_for_fields.
     * @example
     * // Delete one Widgets_for_fields
     * const Widgets_for_fields = await prisma.widgets_for_fields.delete({
     *   where: {
     *     // ... filter to delete one Widgets_for_fields
     *   }
     * })
     * 
    **/
    delete<T extends Widgets_for_fieldsDeleteArgs>(
      args: SelectSubset<T, Widgets_for_fieldsDeleteArgs>
    ): Prisma__Widgets_for_fieldsClient<Widgets_for_fieldsGetPayload<T>>

    /**
     * Update one Widgets_for_fields.
     * @param {Widgets_for_fieldsUpdateArgs} args - Arguments to update one Widgets_for_fields.
     * @example
     * // Update one Widgets_for_fields
     * const widgets_for_fields = await prisma.widgets_for_fields.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends Widgets_for_fieldsUpdateArgs>(
      args: SelectSubset<T, Widgets_for_fieldsUpdateArgs>
    ): Prisma__Widgets_for_fieldsClient<Widgets_for_fieldsGetPayload<T>>

    /**
     * Delete zero or more Widgets_for_fields.
     * @param {Widgets_for_fieldsDeleteManyArgs} args - Arguments to filter Widgets_for_fields to delete.
     * @example
     * // Delete a few Widgets_for_fields
     * const { count } = await prisma.widgets_for_fields.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends Widgets_for_fieldsDeleteManyArgs>(
      args?: SelectSubset<T, Widgets_for_fieldsDeleteManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Update zero or more Widgets_for_fields.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Widgets_for_fieldsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Widgets_for_fields
     * const widgets_for_fields = await prisma.widgets_for_fields.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends Widgets_for_fieldsUpdateManyArgs>(
      args: SelectSubset<T, Widgets_for_fieldsUpdateManyArgs>
    ): PrismaPromise<BatchPayload>

    /**
     * Create or update one Widgets_for_fields.
     * @param {Widgets_for_fieldsUpsertArgs} args - Arguments to update or create a Widgets_for_fields.
     * @example
     * // Update or create a Widgets_for_fields
     * const widgets_for_fields = await prisma.widgets_for_fields.upsert({
     *   create: {
     *     // ... data to create a Widgets_for_fields
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Widgets_for_fields we want to update
     *   }
     * })
    **/
    upsert<T extends Widgets_for_fieldsUpsertArgs>(
      args: SelectSubset<T, Widgets_for_fieldsUpsertArgs>
    ): Prisma__Widgets_for_fieldsClient<Widgets_for_fieldsGetPayload<T>>

    /**
     * Count the number of Widgets_for_fields.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Widgets_for_fieldsCountArgs} args - Arguments to filter Widgets_for_fields to count.
     * @example
     * // Count the number of Widgets_for_fields
     * const count = await prisma.widgets_for_fields.count({
     *   where: {
     *     // ... the filter for the Widgets_for_fields we want to count
     *   }
     * })
    **/
    count<T extends Widgets_for_fieldsCountArgs>(
      args?: Subset<T, Widgets_for_fieldsCountArgs>,
    ): PrismaPromise<
      T extends _Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Widgets_for_fieldsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Widgets_for_fields.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Widgets_for_fieldsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Widgets_for_fieldsAggregateArgs>(args: Subset<T, Widgets_for_fieldsAggregateArgs>): PrismaPromise<GetWidgets_for_fieldsAggregateType<T>>

    /**
     * Group by Widgets_for_fields.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Widgets_for_fieldsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends Widgets_for_fieldsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: Widgets_for_fieldsGroupByArgs['orderBy'] }
        : { orderBy?: Widgets_for_fieldsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends TupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, Widgets_for_fieldsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetWidgets_for_fieldsGroupByPayload<T> : PrismaPromise<InputErrors>

  }

  /**
   * The delegate class that acts as a "Promise-like" for Widgets_for_fields.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export class Prisma__Widgets_for_fieldsClient<T, Null = never> implements PrismaPromise<T> {
    [prisma]: true;
    private readonly _dmmf;
    private readonly _fetcher;
    private readonly _queryType;
    private readonly _rootField;
    private readonly _clientMethod;
    private readonly _args;
    private readonly _dataPath;
    private readonly _errorFormat;
    private readonly _measurePerformance?;
    private _isList;
    private _callsite;
    private _requestPromise?;
    constructor(_dmmf: runtime.DMMFClass, _fetcher: PrismaClientFetcher, _queryType: 'query' | 'mutation', _rootField: string, _clientMethod: string, _args: any, _dataPath: string[], _errorFormat: ErrorFormat, _measurePerformance?: boolean | undefined, _isList?: boolean);
    readonly [Symbol.toStringTag]: 'PrismaClientPromise';

    field_types<T extends Widgets_for_fields$field_typesArgs= {}>(args?: Subset<T, Widgets_for_fields$field_typesArgs>): Prisma__Field_typesClient<Field_typesGetPayload<T> | Null>;

    widget_types<T extends Widgets_for_fields$widget_typesArgs= {}>(args?: Subset<T, Widgets_for_fields$widget_typesArgs>): Prisma__Widget_typesClient<Widget_typesGetPayload<T> | Null>;

    private get _document();
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): Promise<T>;
  }



  // Custom InputTypes

  /**
   * Widgets_for_fields base type for findUnique actions
   */
  export type Widgets_for_fieldsFindUniqueArgsBase = {
    /**
     * Select specific fields to fetch from the Widgets_for_fields
     * 
    **/
    select?: Widgets_for_fieldsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: Widgets_for_fieldsInclude | null
    /**
     * Filter, which Widgets_for_fields to fetch.
     * 
    **/
    where: Widgets_for_fieldsWhereUniqueInput
  }

  /**
   * Widgets_for_fields findUnique
   */
  export interface Widgets_for_fieldsFindUniqueArgs extends Widgets_for_fieldsFindUniqueArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findUniqueOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * Widgets_for_fields findUniqueOrThrow
   */
  export type Widgets_for_fieldsFindUniqueOrThrowArgs = {
    /**
     * Select specific fields to fetch from the Widgets_for_fields
     * 
    **/
    select?: Widgets_for_fieldsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: Widgets_for_fieldsInclude | null
    /**
     * Filter, which Widgets_for_fields to fetch.
     * 
    **/
    where: Widgets_for_fieldsWhereUniqueInput
  }


  /**
   * Widgets_for_fields base type for findFirst actions
   */
  export type Widgets_for_fieldsFindFirstArgsBase = {
    /**
     * Select specific fields to fetch from the Widgets_for_fields
     * 
    **/
    select?: Widgets_for_fieldsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: Widgets_for_fieldsInclude | null
    /**
     * Filter, which Widgets_for_fields to fetch.
     * 
    **/
    where?: Widgets_for_fieldsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Widgets_for_fields to fetch.
     * 
    **/
    orderBy?: Enumerable<Widgets_for_fieldsOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Widgets_for_fields.
     * 
    **/
    cursor?: Widgets_for_fieldsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Widgets_for_fields from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Widgets_for_fields.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Widgets_for_fields.
     * 
    **/
    distinct?: Enumerable<Widgets_for_fieldsScalarFieldEnum>
  }

  /**
   * Widgets_for_fields findFirst
   */
  export interface Widgets_for_fieldsFindFirstArgs extends Widgets_for_fieldsFindFirstArgsBase {
   /**
    * Throw an Error if query returns no results
    * @deprecated since 4.0.0: use `findFirstOrThrow` method instead
    */
    rejectOnNotFound?: RejectOnNotFound
  }
      

  /**
   * Widgets_for_fields findFirstOrThrow
   */
  export type Widgets_for_fieldsFindFirstOrThrowArgs = {
    /**
     * Select specific fields to fetch from the Widgets_for_fields
     * 
    **/
    select?: Widgets_for_fieldsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: Widgets_for_fieldsInclude | null
    /**
     * Filter, which Widgets_for_fields to fetch.
     * 
    **/
    where?: Widgets_for_fieldsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Widgets_for_fields to fetch.
     * 
    **/
    orderBy?: Enumerable<Widgets_for_fieldsOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Widgets_for_fields.
     * 
    **/
    cursor?: Widgets_for_fieldsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Widgets_for_fields from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Widgets_for_fields.
     * 
    **/
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Widgets_for_fields.
     * 
    **/
    distinct?: Enumerable<Widgets_for_fieldsScalarFieldEnum>
  }


  /**
   * Widgets_for_fields findMany
   */
  export type Widgets_for_fieldsFindManyArgs = {
    /**
     * Select specific fields to fetch from the Widgets_for_fields
     * 
    **/
    select?: Widgets_for_fieldsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: Widgets_for_fieldsInclude | null
    /**
     * Filter, which Widgets_for_fields to fetch.
     * 
    **/
    where?: Widgets_for_fieldsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Widgets_for_fields to fetch.
     * 
    **/
    orderBy?: Enumerable<Widgets_for_fieldsOrderByWithRelationInput>
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Widgets_for_fields.
     * 
    **/
    cursor?: Widgets_for_fieldsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Widgets_for_fields from the position of the cursor.
     * 
    **/
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Widgets_for_fields.
     * 
    **/
    skip?: number
    distinct?: Enumerable<Widgets_for_fieldsScalarFieldEnum>
  }


  /**
   * Widgets_for_fields create
   */
  export type Widgets_for_fieldsCreateArgs = {
    /**
     * Select specific fields to fetch from the Widgets_for_fields
     * 
    **/
    select?: Widgets_for_fieldsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: Widgets_for_fieldsInclude | null
    /**
     * The data needed to create a Widgets_for_fields.
     * 
    **/
    data: XOR<Widgets_for_fieldsCreateInput, Widgets_for_fieldsUncheckedCreateInput>
  }


  /**
   * Widgets_for_fields createMany
   */
  export type Widgets_for_fieldsCreateManyArgs = {
    /**
     * The data used to create many Widgets_for_fields.
     * 
    **/
    data: Enumerable<Widgets_for_fieldsCreateManyInput>
    skipDuplicates?: boolean
  }


  /**
   * Widgets_for_fields update
   */
  export type Widgets_for_fieldsUpdateArgs = {
    /**
     * Select specific fields to fetch from the Widgets_for_fields
     * 
    **/
    select?: Widgets_for_fieldsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: Widgets_for_fieldsInclude | null
    /**
     * The data needed to update a Widgets_for_fields.
     * 
    **/
    data: XOR<Widgets_for_fieldsUpdateInput, Widgets_for_fieldsUncheckedUpdateInput>
    /**
     * Choose, which Widgets_for_fields to update.
     * 
    **/
    where: Widgets_for_fieldsWhereUniqueInput
  }


  /**
   * Widgets_for_fields updateMany
   */
  export type Widgets_for_fieldsUpdateManyArgs = {
    /**
     * The data used to update Widgets_for_fields.
     * 
    **/
    data: XOR<Widgets_for_fieldsUpdateManyMutationInput, Widgets_for_fieldsUncheckedUpdateManyInput>
    /**
     * Filter which Widgets_for_fields to update
     * 
    **/
    where?: Widgets_for_fieldsWhereInput
  }


  /**
   * Widgets_for_fields upsert
   */
  export type Widgets_for_fieldsUpsertArgs = {
    /**
     * Select specific fields to fetch from the Widgets_for_fields
     * 
    **/
    select?: Widgets_for_fieldsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: Widgets_for_fieldsInclude | null
    /**
     * The filter to search for the Widgets_for_fields to update in case it exists.
     * 
    **/
    where: Widgets_for_fieldsWhereUniqueInput
    /**
     * In case the Widgets_for_fields found by the `where` argument doesn't exist, create a new Widgets_for_fields with this data.
     * 
    **/
    create: XOR<Widgets_for_fieldsCreateInput, Widgets_for_fieldsUncheckedCreateInput>
    /**
     * In case the Widgets_for_fields was found with the provided `where` argument, update it with this data.
     * 
    **/
    update: XOR<Widgets_for_fieldsUpdateInput, Widgets_for_fieldsUncheckedUpdateInput>
  }


  /**
   * Widgets_for_fields delete
   */
  export type Widgets_for_fieldsDeleteArgs = {
    /**
     * Select specific fields to fetch from the Widgets_for_fields
     * 
    **/
    select?: Widgets_for_fieldsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: Widgets_for_fieldsInclude | null
    /**
     * Filter which Widgets_for_fields to delete.
     * 
    **/
    where: Widgets_for_fieldsWhereUniqueInput
  }


  /**
   * Widgets_for_fields deleteMany
   */
  export type Widgets_for_fieldsDeleteManyArgs = {
    /**
     * Filter which Widgets_for_fields to delete
     * 
    **/
    where?: Widgets_for_fieldsWhereInput
  }


  /**
   * Widgets_for_fields.field_types
   */
  export type Widgets_for_fields$field_typesArgs = {
    /**
     * Select specific fields to fetch from the Field_types
     * 
    **/
    select?: Field_typesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: Field_typesInclude | null
    where?: Field_typesWhereInput
  }


  /**
   * Widgets_for_fields.widget_types
   */
  export type Widgets_for_fields$widget_typesArgs = {
    /**
     * Select specific fields to fetch from the Widget_types
     * 
    **/
    select?: Widget_typesSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: Widget_typesInclude | null
    where?: Widget_typesWhereInput
  }


  /**
   * Widgets_for_fields without action
   */
  export type Widgets_for_fieldsArgs = {
    /**
     * Select specific fields to fetch from the Widgets_for_fields
     * 
    **/
    select?: Widgets_for_fieldsSelect | null
    /**
     * Choose, which related nodes to fetch as well.
     * 
    **/
    include?: Widgets_for_fieldsInclude | null
  }



  /**
   * Enums
   */

  // Based on
  // https://github.com/microsoft/TypeScript/issues/3192#issuecomment-261720275

  export const TransactionIsolationLevel: {
    ReadUncommitted: 'ReadUncommitted',
    ReadCommitted: 'ReadCommitted',
    RepeatableRead: 'RepeatableRead',
    Serializable: 'Serializable'
  };

  export type TransactionIsolationLevel = (typeof TransactionIsolationLevel)[keyof typeof TransactionIsolationLevel]


  export const AccountsScalarFieldEnum: {
    account_id: 'account_id',
    user_id: 'user_id',
    type: 'type',
    period_start: 'period_start',
    period_end: 'period_end',
    projects_label_by: 'projects_label_by',
    label: 'label'
  };

  export type AccountsScalarFieldEnum = (typeof AccountsScalarFieldEnum)[keyof typeof AccountsScalarFieldEnum]


  export const Field_typesScalarFieldEnum: {
    field_type_id: 'field_type_id',
    name: 'name',
    sort: 'sort',
    comment: 'comment',
    label_replace_by_generated_column: 'label_replace_by_generated_column',
    deleted: 'deleted'
  };

  export type Field_typesScalarFieldEnum = (typeof Field_typesScalarFieldEnum)[keyof typeof Field_typesScalarFieldEnum]


  export const Gbif_occurrence_downloadsScalarFieldEnum: {
    gbif_occurrence_download_id: 'gbif_occurrence_download_id',
    account_id: 'account_id',
    project_id: 'project_id',
    subproject_id: 'subproject_id',
    gbif_table: 'gbif_table',
    filters: 'filters',
    created_time: 'created_time',
    download_key: 'download_key',
    error: 'error',
    inserted_time: 'inserted_time',
    inserted_count: 'inserted_count',
    attribution: 'attribution',
    deleted: 'deleted'
  };

  export type Gbif_occurrence_downloadsScalarFieldEnum = (typeof Gbif_occurrence_downloadsScalarFieldEnum)[keyof typeof Gbif_occurrence_downloadsScalarFieldEnum]


  export const Gbif_occurrencesScalarFieldEnum: {
    gbif_occurrence_id: 'gbif_occurrence_id',
    account_id: 'account_id',
    project_id: 'project_id',
    subproject_id: 'subproject_id',
    gbif_data: 'gbif_data',
    label: 'label'
  };

  export type Gbif_occurrencesScalarFieldEnum = (typeof Gbif_occurrencesScalarFieldEnum)[keyof typeof Gbif_occurrencesScalarFieldEnum]


  export const Gbif_taxaScalarFieldEnum: {
    gbif_taxon_id: 'gbif_taxon_id',
    account_id: 'account_id',
    project_id: 'project_id',
    gbif_data: 'gbif_data',
    label: 'label'
  };

  export type Gbif_taxaScalarFieldEnum = (typeof Gbif_taxaScalarFieldEnum)[keyof typeof Gbif_taxaScalarFieldEnum]


  export const Goal_report_valuesScalarFieldEnum: {
    goal_report_value_id: 'goal_report_value_id',
    account_id: 'account_id',
    goal_report_id: 'goal_report_id',
    unit_id: 'unit_id',
    value_integer: 'value_integer',
    value_numeric: 'value_numeric',
    value_text: 'value_text',
    label: 'label',
    deleted: 'deleted'
  };

  export type Goal_report_valuesScalarFieldEnum = (typeof Goal_report_valuesScalarFieldEnum)[keyof typeof Goal_report_valuesScalarFieldEnum]


  export const Goal_reportsScalarFieldEnum: {
    goal_report_id: 'goal_report_id',
    account_id: 'account_id',
    goal_id: 'goal_id',
    data: 'data',
    label: 'label',
    deleted: 'deleted'
  };

  export type Goal_reportsScalarFieldEnum = (typeof Goal_reportsScalarFieldEnum)[keyof typeof Goal_reportsScalarFieldEnum]


  export const GoalsScalarFieldEnum: {
    goal_id: 'goal_id',
    account_id: 'account_id',
    subproject_id: 'subproject_id',
    year: 'year',
    name: 'name',
    data: 'data',
    label_replace_by_generated_column: 'label_replace_by_generated_column',
    deleted: 'deleted'
  };

  export type GoalsScalarFieldEnum = (typeof GoalsScalarFieldEnum)[keyof typeof GoalsScalarFieldEnum]


  export const List_valuesScalarFieldEnum: {
    list_value_id: 'list_value_id',
    account_id: 'account_id',
    list_id: 'list_id',
    value: 'value',
    obsolete: 'obsolete',
    label_replace_by_generated_column: 'label_replace_by_generated_column',
    deleted: 'deleted'
  };

  export type List_valuesScalarFieldEnum = (typeof List_valuesScalarFieldEnum)[keyof typeof List_valuesScalarFieldEnum]


  export const ListsScalarFieldEnum: {
    list_id: 'list_id',
    account_id: 'account_id',
    project_id: 'project_id',
    name: 'name',
    data: 'data',
    obsolete: 'obsolete',
    label_replace_by_generated_column: 'label_replace_by_generated_column',
    deleted: 'deleted'
  };

  export type ListsScalarFieldEnum = (typeof ListsScalarFieldEnum)[keyof typeof ListsScalarFieldEnum]


  export const MessagesScalarFieldEnum: {
    message_id: 'message_id',
    label_replace_by_generated_column: 'label_replace_by_generated_column',
    date: 'date',
    message: 'message'
  };

  export type MessagesScalarFieldEnum = (typeof MessagesScalarFieldEnum)[keyof typeof MessagesScalarFieldEnum]


  export const Observation_sourcesScalarFieldEnum: {
    observation_source_id: 'observation_source_id',
    account_id: 'account_id',
    project_id: 'project_id',
    name: 'name',
    url: 'url',
    data: 'data',
    label_replace_by_generated_column: 'label_replace_by_generated_column',
    deleted: 'deleted'
  };

  export type Observation_sourcesScalarFieldEnum = (typeof Observation_sourcesScalarFieldEnum)[keyof typeof Observation_sourcesScalarFieldEnum]


  export const PersonsScalarFieldEnum: {
    person_id: 'person_id',
    project_id: 'project_id',
    account_id: 'account_id',
    email: 'email',
    data: 'data',
    label_replace_by_generated_column: 'label_replace_by_generated_column',
    deleted: 'deleted'
  };

  export type PersonsScalarFieldEnum = (typeof PersonsScalarFieldEnum)[keyof typeof PersonsScalarFieldEnum]


  export const Place_levelsScalarFieldEnum: {
    place_level_id: 'place_level_id',
    account_id: 'account_id',
    project_id: 'project_id',
    level: 'level',
    name_singular: 'name_singular',
    name_plural: 'name_plural',
    name_short: 'name_short',
    reports: 'reports',
    report_values: 'report_values',
    actions: 'actions',
    action_values: 'action_values',
    action_reports: 'action_reports',
    checks: 'checks',
    check_values: 'check_values',
    check_taxa: 'check_taxa',
    observations: 'observations',
    label_replace_by_generated_column: 'label_replace_by_generated_column',
    deleted: 'deleted'
  };

  export type Place_levelsScalarFieldEnum = (typeof Place_levelsScalarFieldEnum)[keyof typeof Place_levelsScalarFieldEnum]


  export const Project_usersScalarFieldEnum: {
    project_user_id: 'project_user_id',
    account_id: 'account_id',
    project_id: 'project_id',
    user_id: 'user_id',
    role: 'role',
    label: 'label',
    deleted: 'deleted'
  };

  export type Project_usersScalarFieldEnum = (typeof Project_usersScalarFieldEnum)[keyof typeof Project_usersScalarFieldEnum]


  export const ProjectsScalarFieldEnum: {
    project_id: 'project_id',
    account_id: 'account_id',
    name: 'name',
    label: 'label',
    type: 'type',
    subproject_name_singular: 'subproject_name_singular',
    subproject_name_plural: 'subproject_name_plural',
    subproject_order_by: 'subproject_order_by',
    places_label_by: 'places_label_by',
    places_order_by: 'places_order_by',
    persons_label_by: 'persons_label_by',
    persons_order_by: 'persons_order_by',
    goal_reports_label_by: 'goal_reports_label_by',
    goal_reports_order_by: 'goal_reports_order_by',
    values_on_multiple_levels: 'values_on_multiple_levels',
    multiple_action_values_on_same_level: 'multiple_action_values_on_same_level',
    multiple_check_values_on_same_level: 'multiple_check_values_on_same_level',
    data: 'data',
    files_offline: 'files_offline',
    files_active_projects: 'files_active_projects',
    files_active_subprojects: 'files_active_subprojects',
    files_active_places: 'files_active_places',
    files_active_actions: 'files_active_actions',
    files_active_checks: 'files_active_checks',
    deleted: 'deleted'
  };

  export type ProjectsScalarFieldEnum = (typeof ProjectsScalarFieldEnum)[keyof typeof ProjectsScalarFieldEnum]


  export const Subproject_taxaScalarFieldEnum: {
    subproject_taxon_id: 'subproject_taxon_id',
    account_id: 'account_id',
    subproject_id: 'subproject_id',
    taxon_id: 'taxon_id',
    label: 'label',
    deleted: 'deleted'
  };

  export type Subproject_taxaScalarFieldEnum = (typeof Subproject_taxaScalarFieldEnum)[keyof typeof Subproject_taxaScalarFieldEnum]


  export const Subproject_usersScalarFieldEnum: {
    subproject_user_id: 'subproject_user_id',
    account_id: 'account_id',
    subproject_id: 'subproject_id',
    user_id: 'user_id',
    role: 'role',
    label: 'label',
    deleted: 'deleted'
  };

  export type Subproject_usersScalarFieldEnum = (typeof Subproject_usersScalarFieldEnum)[keyof typeof Subproject_usersScalarFieldEnum]


  export const SubprojectsScalarFieldEnum: {
    subproject_id: 'subproject_id',
    account_id: 'account_id',
    project_id: 'project_id',
    name: 'name',
    label_replace_by_generated_column: 'label_replace_by_generated_column',
    start_year: 'start_year',
    end_year: 'end_year',
    data: 'data',
    deleted: 'deleted'
  };

  export type SubprojectsScalarFieldEnum = (typeof SubprojectsScalarFieldEnum)[keyof typeof SubprojectsScalarFieldEnum]


  export const TaxaScalarFieldEnum: {
    taxon_id: 'taxon_id',
    account_id: 'account_id',
    taxonomy_id: 'taxonomy_id',
    name: 'name',
    id_in_source: 'id_in_source',
    url: 'url',
    label: 'label',
    deleted: 'deleted'
  };

  export type TaxaScalarFieldEnum = (typeof TaxaScalarFieldEnum)[keyof typeof TaxaScalarFieldEnum]


  export const TaxonomiesScalarFieldEnum: {
    taxonomy_id: 'taxonomy_id',
    account_id: 'account_id',
    project_id: 'project_id',
    type: 'type',
    name: 'name',
    url: 'url',
    obsolete: 'obsolete',
    data: 'data',
    label_replace_by_generated_column: 'label_replace_by_generated_column',
    deleted: 'deleted'
  };

  export type TaxonomiesScalarFieldEnum = (typeof TaxonomiesScalarFieldEnum)[keyof typeof TaxonomiesScalarFieldEnum]


  export const Tile_layersScalarFieldEnum: {
    tile_layer_id: 'tile_layer_id',
    account_id: 'account_id',
    project_id: 'project_id',
    label: 'label',
    sort: 'sort',
    active: 'active',
    type: 'type',
    wmts_url_template: 'wmts_url_template',
    wmts_subdomains: 'wmts_subdomains',
    wms_base_url: 'wms_base_url',
    wms_format: 'wms_format',
    wms_layer: 'wms_layer',
    wms_parameters: 'wms_parameters',
    wms_styles: 'wms_styles',
    wms_transparent: 'wms_transparent',
    wms_version: 'wms_version',
    wms_info_format: 'wms_info_format',
    wms_legend: 'wms_legend',
    max_zoom: 'max_zoom',
    min_zoom: 'min_zoom',
    opacity_percent: 'opacity_percent',
    grayscale: 'grayscale',
    local_data_size: 'local_data_size',
    local_data_bounds: 'local_data_bounds',
    deleted: 'deleted'
  };

  export type Tile_layersScalarFieldEnum = (typeof Tile_layersScalarFieldEnum)[keyof typeof Tile_layersScalarFieldEnum]


  export const Ui_optionsScalarFieldEnum: {
    user_id: 'user_id',
    account_id: 'account_id',
    designing: 'designing',
    breadcrumbs_overflowing: 'breadcrumbs_overflowing',
    navs_overflowing: 'navs_overflowing',
    tabs: 'tabs',
    show_map: 'show_map',
    map_bounds: 'map_bounds',
    local_map_show: 'local_map_show',
    tile_layer_sorter: 'tile_layer_sorter',
    vector_layer_sorter: 'vector_layer_sorter',
    editing_place_geometry: 'editing_place_geometry',
    editing_check_geometry: 'editing_check_geometry',
    editing_action_geometry: 'editing_action_geometry',
    label: 'label'
  };

  export type Ui_optionsScalarFieldEnum = (typeof Ui_optionsScalarFieldEnum)[keyof typeof Ui_optionsScalarFieldEnum]


  export const UnitsScalarFieldEnum: {
    unit_id: 'unit_id',
    account_id: 'account_id',
    project_id: 'project_id',
    use_for_action_values: 'use_for_action_values',
    use_for_action_report_values: 'use_for_action_report_values',
    use_for_check_values: 'use_for_check_values',
    use_for_place_report_values: 'use_for_place_report_values',
    use_for_goal_report_values: 'use_for_goal_report_values',
    use_for_subproject_taxa: 'use_for_subproject_taxa',
    use_for_check_taxa: 'use_for_check_taxa',
    name: 'name',
    summable: 'summable',
    sort: 'sort',
    type: 'type',
    list_id: 'list_id',
    label_replace_by_generated_column: 'label_replace_by_generated_column',
    deleted: 'deleted'
  };

  export type UnitsScalarFieldEnum = (typeof UnitsScalarFieldEnum)[keyof typeof UnitsScalarFieldEnum]


  export const User_messagesScalarFieldEnum: {
    user_message_id: 'user_message_id',
    account_id: 'account_id',
    user_id: 'user_id',
    message_id: 'message_id',
    label_replace_by_generated_column: 'label_replace_by_generated_column',
    read: 'read'
  };

  export type User_messagesScalarFieldEnum = (typeof User_messagesScalarFieldEnum)[keyof typeof User_messagesScalarFieldEnum]


  export const UsersScalarFieldEnum: {
    user_id: 'user_id',
    email: 'email',
    auth_id: 'auth_id',
    label_replace_by_generated_column: 'label_replace_by_generated_column',
    deleted: 'deleted'
  };

  export type UsersScalarFieldEnum = (typeof UsersScalarFieldEnum)[keyof typeof UsersScalarFieldEnum]


  export const Widget_typesScalarFieldEnum: {
    widget_type_id: 'widget_type_id',
    name: 'name',
    needs_list: 'needs_list',
    sort: 'sort',
    comment: 'comment',
    label_replace_by_generated_column: 'label_replace_by_generated_column',
    deleted: 'deleted'
  };

  export type Widget_typesScalarFieldEnum = (typeof Widget_typesScalarFieldEnum)[keyof typeof Widget_typesScalarFieldEnum]


  export const Widgets_for_fieldsScalarFieldEnum: {
    widget_for_field_id: 'widget_for_field_id',
    field_type_id: 'field_type_id',
    widget_type_id: 'widget_type_id',
    label: 'label',
    deleted: 'deleted'
  };

  export type Widgets_for_fieldsScalarFieldEnum = (typeof Widgets_for_fieldsScalarFieldEnum)[keyof typeof Widgets_for_fieldsScalarFieldEnum]


  export const SortOrder: {
    asc: 'asc',
    desc: 'desc'
  };

  export type SortOrder = (typeof SortOrder)[keyof typeof SortOrder]


  export const NullableJsonNullValueInput: {
    DbNull: typeof DbNull,
    JsonNull: typeof JsonNull
  };

  export type NullableJsonNullValueInput = (typeof NullableJsonNullValueInput)[keyof typeof NullableJsonNullValueInput]


  export const QueryMode: {
    default: 'default',
    insensitive: 'insensitive'
  };

  export type QueryMode = (typeof QueryMode)[keyof typeof QueryMode]


  export const NullsOrder: {
    first: 'first',
    last: 'last'
  };

  export type NullsOrder = (typeof NullsOrder)[keyof typeof NullsOrder]


  export const JsonNullValueFilter: {
    DbNull: typeof DbNull,
    JsonNull: typeof JsonNull,
    AnyNull: typeof AnyNull
  };

  export type JsonNullValueFilter = (typeof JsonNullValueFilter)[keyof typeof JsonNullValueFilter]


  /**
   * Field references 
   */


  /**
   * Reference to a field of type 'String'
   */
  export type StringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String'>
    


  /**
   * Reference to a field of type 'String[]'
   */
  export type ListStringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String[]'>
    


  /**
   * Reference to a field of type 'DateTime'
   */
  export type DateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime'>
    


  /**
   * Reference to a field of type 'DateTime[]'
   */
  export type ListDateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime[]'>
    


  /**
   * Reference to a field of type 'Int'
   */
  export type IntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int'>
    


  /**
   * Reference to a field of type 'Int[]'
   */
  export type ListIntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int[]'>
    


  /**
   * Reference to a field of type 'Boolean'
   */
  export type BooleanFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Boolean'>
    


  /**
   * Reference to a field of type 'gbif_table'
   */
  export type Enumgbif_tableFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'gbif_table'>
    


  /**
   * Reference to a field of type 'gbif_table[]'
   */
  export type ListEnumgbif_tableFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'gbif_table[]'>
    


  /**
   * Reference to a field of type 'Json'
   */
  export type JsonFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Json'>
    


  /**
   * Reference to a field of type 'Float'
   */
  export type FloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float'>
    


  /**
   * Reference to a field of type 'Float[]'
   */
  export type ListFloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float[]'>
    


  /**
   * Reference to a field of type 'project_type'
   */
  export type Enumproject_typeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'project_type'>
    


  /**
   * Reference to a field of type 'project_type[]'
   */
  export type ListEnumproject_typeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'project_type[]'>
    


  /**
   * Reference to a field of type 'taxonomy_type'
   */
  export type Enumtaxonomy_typeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'taxonomy_type'>
    


  /**
   * Reference to a field of type 'taxonomy_type[]'
   */
  export type ListEnumtaxonomy_typeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'taxonomy_type[]'>
    


  /**
   * Reference to a field of type 'tile_layer_type_enum'
   */
  export type Enumtile_layer_type_enumFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'tile_layer_type_enum'>
    


  /**
   * Reference to a field of type 'tile_layer_type_enum[]'
   */
  export type ListEnumtile_layer_type_enumFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'tile_layer_type_enum[]'>
    


  /**
   * Reference to a field of type 'unit_type'
   */
  export type Enumunit_typeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'unit_type'>
    


  /**
   * Reference to a field of type 'unit_type[]'
   */
  export type ListEnumunit_typeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'unit_type[]'>
    
  /**
   * Deep Input Types
   */


  export type AccountsWhereInput = {
    AND?: Enumerable<AccountsWhereInput>
    OR?: Enumerable<AccountsWhereInput>
    NOT?: Enumerable<AccountsWhereInput>
    account_id?: UuidFilter<"Accounts"> | string
    user_id?: UuidNullableFilter<"Accounts"> | string | null
    type?: StringNullableFilter<"Accounts"> | string | null
    period_start?: DateTimeNullableFilter<"Accounts"> | Date | string | null
    period_end?: DateTimeNullableFilter<"Accounts"> | Date | string | null
    projects_label_by?: StringNullableFilter<"Accounts"> | string | null
    label?: StringNullableFilter<"Accounts"> | string | null
    users?: XOR<UsersNullableRelationFilter, UsersWhereInput> | null
    gbif_occurrence_downloads?: Gbif_occurrence_downloadsListRelationFilter
    gbif_occurrences?: Gbif_occurrencesListRelationFilter
    gbif_taxa?: Gbif_taxaListRelationFilter
    goal_report_values?: Goal_report_valuesListRelationFilter
    goal_reports?: Goal_reportsListRelationFilter
    goals?: GoalsListRelationFilter
    list_values?: List_valuesListRelationFilter
    lists?: ListsListRelationFilter
    observation_sources?: Observation_sourcesListRelationFilter
    persons?: PersonsListRelationFilter
    place_levels?: Place_levelsListRelationFilter
    project_users?: Project_usersListRelationFilter
    projects?: ProjectsListRelationFilter
    subproject_taxa?: Subproject_taxaListRelationFilter
    subproject_users?: Subproject_usersListRelationFilter
    subprojects?: SubprojectsListRelationFilter
    taxa?: TaxaListRelationFilter
    taxonomies?: TaxonomiesListRelationFilter
    tile_layers?: Tile_layersListRelationFilter
    ui_options?: Ui_optionsListRelationFilter
    units?: UnitsListRelationFilter
    user_messages?: User_messagesListRelationFilter
  }

  export type AccountsOrderByWithRelationInput = {
    account_id?: SortOrder
    user_id?: SortOrderInput | SortOrder
    type?: SortOrderInput | SortOrder
    period_start?: SortOrderInput | SortOrder
    period_end?: SortOrderInput | SortOrder
    projects_label_by?: SortOrderInput | SortOrder
    label?: SortOrderInput | SortOrder
    users?: UsersOrderByWithRelationInput
    gbif_occurrence_downloads?: Gbif_occurrence_downloadsOrderByRelationAggregateInput
    gbif_occurrences?: Gbif_occurrencesOrderByRelationAggregateInput
    gbif_taxa?: Gbif_taxaOrderByRelationAggregateInput
    goal_report_values?: Goal_report_valuesOrderByRelationAggregateInput
    goal_reports?: Goal_reportsOrderByRelationAggregateInput
    goals?: GoalsOrderByRelationAggregateInput
    list_values?: List_valuesOrderByRelationAggregateInput
    lists?: ListsOrderByRelationAggregateInput
    observation_sources?: Observation_sourcesOrderByRelationAggregateInput
    persons?: PersonsOrderByRelationAggregateInput
    place_levels?: Place_levelsOrderByRelationAggregateInput
    project_users?: Project_usersOrderByRelationAggregateInput
    projects?: ProjectsOrderByRelationAggregateInput
    subproject_taxa?: Subproject_taxaOrderByRelationAggregateInput
    subproject_users?: Subproject_usersOrderByRelationAggregateInput
    subprojects?: SubprojectsOrderByRelationAggregateInput
    taxa?: TaxaOrderByRelationAggregateInput
    taxonomies?: TaxonomiesOrderByRelationAggregateInput
    tile_layers?: Tile_layersOrderByRelationAggregateInput
    ui_options?: Ui_optionsOrderByRelationAggregateInput
    units?: UnitsOrderByRelationAggregateInput
    user_messages?: User_messagesOrderByRelationAggregateInput
  }

  export type AccountsWhereUniqueInput = Prisma.AtLeast<{
    account_id?: string
    AND?: Enumerable<AccountsWhereInput>
    OR?: Enumerable<AccountsWhereInput>
    NOT?: Enumerable<AccountsWhereInput>
    user_id?: UuidNullableFilter<"Accounts"> | string | null
    type?: StringNullableFilter<"Accounts"> | string | null
    period_start?: DateTimeNullableFilter<"Accounts"> | Date | string | null
    period_end?: DateTimeNullableFilter<"Accounts"> | Date | string | null
    projects_label_by?: StringNullableFilter<"Accounts"> | string | null
    label?: StringNullableFilter<"Accounts"> | string | null
    users?: XOR<UsersNullableRelationFilter, UsersWhereInput> | null
    gbif_occurrence_downloads?: Gbif_occurrence_downloadsListRelationFilter
    gbif_occurrences?: Gbif_occurrencesListRelationFilter
    gbif_taxa?: Gbif_taxaListRelationFilter
    goal_report_values?: Goal_report_valuesListRelationFilter
    goal_reports?: Goal_reportsListRelationFilter
    goals?: GoalsListRelationFilter
    list_values?: List_valuesListRelationFilter
    lists?: ListsListRelationFilter
    observation_sources?: Observation_sourcesListRelationFilter
    persons?: PersonsListRelationFilter
    place_levels?: Place_levelsListRelationFilter
    project_users?: Project_usersListRelationFilter
    projects?: ProjectsListRelationFilter
    subproject_taxa?: Subproject_taxaListRelationFilter
    subproject_users?: Subproject_usersListRelationFilter
    subprojects?: SubprojectsListRelationFilter
    taxa?: TaxaListRelationFilter
    taxonomies?: TaxonomiesListRelationFilter
    tile_layers?: Tile_layersListRelationFilter
    ui_options?: Ui_optionsListRelationFilter
    units?: UnitsListRelationFilter
    user_messages?: User_messagesListRelationFilter
  }, "account_id">

  export type AccountsOrderByWithAggregationInput = {
    account_id?: SortOrder
    user_id?: SortOrderInput | SortOrder
    type?: SortOrderInput | SortOrder
    period_start?: SortOrderInput | SortOrder
    period_end?: SortOrderInput | SortOrder
    projects_label_by?: SortOrderInput | SortOrder
    label?: SortOrderInput | SortOrder
    _count?: AccountsCountOrderByAggregateInput
    _max?: AccountsMaxOrderByAggregateInput
    _min?: AccountsMinOrderByAggregateInput
  }

  export type AccountsScalarWhereWithAggregatesInput = {
    AND?: Enumerable<AccountsScalarWhereWithAggregatesInput>
    OR?: Enumerable<AccountsScalarWhereWithAggregatesInput>
    NOT?: Enumerable<AccountsScalarWhereWithAggregatesInput>
    account_id?: UuidWithAggregatesFilter<"Accounts"> | string
    user_id?: UuidNullableWithAggregatesFilter<"Accounts"> | string | null
    type?: StringNullableWithAggregatesFilter<"Accounts"> | string | null
    period_start?: DateTimeNullableWithAggregatesFilter<"Accounts"> | Date | string | null
    period_end?: DateTimeNullableWithAggregatesFilter<"Accounts"> | Date | string | null
    projects_label_by?: StringNullableWithAggregatesFilter<"Accounts"> | string | null
    label?: StringNullableWithAggregatesFilter<"Accounts"> | string | null
  }

  export type Field_typesWhereInput = {
    AND?: Enumerable<Field_typesWhereInput>
    OR?: Enumerable<Field_typesWhereInput>
    NOT?: Enumerable<Field_typesWhereInput>
    field_type_id?: UuidFilter<"Field_types"> | string
    name?: StringNullableFilter<"Field_types"> | string | null
    sort?: IntNullableFilter<"Field_types"> | number | null
    comment?: StringNullableFilter<"Field_types"> | string | null
    label_replace_by_generated_column?: StringNullableFilter<"Field_types"> | string | null
    deleted?: BoolNullableFilter<"Field_types"> | boolean | null
    widgets_for_fields?: Widgets_for_fieldsListRelationFilter
  }

  export type Field_typesOrderByWithRelationInput = {
    field_type_id?: SortOrder
    name?: SortOrderInput | SortOrder
    sort?: SortOrderInput | SortOrder
    comment?: SortOrderInput | SortOrder
    label_replace_by_generated_column?: SortOrderInput | SortOrder
    deleted?: SortOrderInput | SortOrder
    widgets_for_fields?: Widgets_for_fieldsOrderByRelationAggregateInput
  }

  export type Field_typesWhereUniqueInput = Prisma.AtLeast<{
    field_type_id?: string
    AND?: Enumerable<Field_typesWhereInput>
    OR?: Enumerable<Field_typesWhereInput>
    NOT?: Enumerable<Field_typesWhereInput>
    name?: StringNullableFilter<"Field_types"> | string | null
    sort?: IntNullableFilter<"Field_types"> | number | null
    comment?: StringNullableFilter<"Field_types"> | string | null
    label_replace_by_generated_column?: StringNullableFilter<"Field_types"> | string | null
    deleted?: BoolNullableFilter<"Field_types"> | boolean | null
    widgets_for_fields?: Widgets_for_fieldsListRelationFilter
  }, "field_type_id">

  export type Field_typesOrderByWithAggregationInput = {
    field_type_id?: SortOrder
    name?: SortOrderInput | SortOrder
    sort?: SortOrderInput | SortOrder
    comment?: SortOrderInput | SortOrder
    label_replace_by_generated_column?: SortOrderInput | SortOrder
    deleted?: SortOrderInput | SortOrder
    _count?: Field_typesCountOrderByAggregateInput
    _avg?: Field_typesAvgOrderByAggregateInput
    _max?: Field_typesMaxOrderByAggregateInput
    _min?: Field_typesMinOrderByAggregateInput
    _sum?: Field_typesSumOrderByAggregateInput
  }

  export type Field_typesScalarWhereWithAggregatesInput = {
    AND?: Enumerable<Field_typesScalarWhereWithAggregatesInput>
    OR?: Enumerable<Field_typesScalarWhereWithAggregatesInput>
    NOT?: Enumerable<Field_typesScalarWhereWithAggregatesInput>
    field_type_id?: UuidWithAggregatesFilter<"Field_types"> | string
    name?: StringNullableWithAggregatesFilter<"Field_types"> | string | null
    sort?: IntNullableWithAggregatesFilter<"Field_types"> | number | null
    comment?: StringNullableWithAggregatesFilter<"Field_types"> | string | null
    label_replace_by_generated_column?: StringNullableWithAggregatesFilter<"Field_types"> | string | null
    deleted?: BoolNullableWithAggregatesFilter<"Field_types"> | boolean | null
  }

  export type Gbif_occurrence_downloadsWhereInput = {
    AND?: Enumerable<Gbif_occurrence_downloadsWhereInput>
    OR?: Enumerable<Gbif_occurrence_downloadsWhereInput>
    NOT?: Enumerable<Gbif_occurrence_downloadsWhereInput>
    gbif_occurrence_download_id?: UuidFilter<"Gbif_occurrence_downloads"> | string
    account_id?: UuidNullableFilter<"Gbif_occurrence_downloads"> | string | null
    project_id?: UuidNullableFilter<"Gbif_occurrence_downloads"> | string | null
    subproject_id?: UuidNullableFilter<"Gbif_occurrence_downloads"> | string | null
    gbif_table?: Enumgbif_tableNullableFilter<"Gbif_occurrence_downloads"> | gbif_table | null
    filters?: JsonNullableFilter<"Gbif_occurrence_downloads">
    created_time?: DateTimeNullableFilter<"Gbif_occurrence_downloads"> | Date | string | null
    download_key?: StringNullableFilter<"Gbif_occurrence_downloads"> | string | null
    error?: StringNullableFilter<"Gbif_occurrence_downloads"> | string | null
    inserted_time?: DateTimeNullableFilter<"Gbif_occurrence_downloads"> | Date | string | null
    inserted_count?: IntNullableFilter<"Gbif_occurrence_downloads"> | number | null
    attribution?: StringNullableFilter<"Gbif_occurrence_downloads"> | string | null
    deleted?: BoolNullableFilter<"Gbif_occurrence_downloads"> | boolean | null
    accounts?: XOR<AccountsNullableRelationFilter, AccountsWhereInput> | null
    projects?: XOR<ProjectsNullableRelationFilter, ProjectsWhereInput> | null
    subprojects?: XOR<SubprojectsNullableRelationFilter, SubprojectsWhereInput> | null
  }

  export type Gbif_occurrence_downloadsOrderByWithRelationInput = {
    gbif_occurrence_download_id?: SortOrder
    account_id?: SortOrderInput | SortOrder
    project_id?: SortOrderInput | SortOrder
    subproject_id?: SortOrderInput | SortOrder
    gbif_table?: SortOrderInput | SortOrder
    filters?: SortOrderInput | SortOrder
    created_time?: SortOrderInput | SortOrder
    download_key?: SortOrderInput | SortOrder
    error?: SortOrderInput | SortOrder
    inserted_time?: SortOrderInput | SortOrder
    inserted_count?: SortOrderInput | SortOrder
    attribution?: SortOrderInput | SortOrder
    deleted?: SortOrderInput | SortOrder
    accounts?: AccountsOrderByWithRelationInput
    projects?: ProjectsOrderByWithRelationInput
    subprojects?: SubprojectsOrderByWithRelationInput
  }

  export type Gbif_occurrence_downloadsWhereUniqueInput = Prisma.AtLeast<{
    gbif_occurrence_download_id?: string
    AND?: Enumerable<Gbif_occurrence_downloadsWhereInput>
    OR?: Enumerable<Gbif_occurrence_downloadsWhereInput>
    NOT?: Enumerable<Gbif_occurrence_downloadsWhereInput>
    account_id?: UuidNullableFilter<"Gbif_occurrence_downloads"> | string | null
    project_id?: UuidNullableFilter<"Gbif_occurrence_downloads"> | string | null
    subproject_id?: UuidNullableFilter<"Gbif_occurrence_downloads"> | string | null
    gbif_table?: Enumgbif_tableNullableFilter<"Gbif_occurrence_downloads"> | gbif_table | null
    filters?: JsonNullableFilter<"Gbif_occurrence_downloads">
    created_time?: DateTimeNullableFilter<"Gbif_occurrence_downloads"> | Date | string | null
    download_key?: StringNullableFilter<"Gbif_occurrence_downloads"> | string | null
    error?: StringNullableFilter<"Gbif_occurrence_downloads"> | string | null
    inserted_time?: DateTimeNullableFilter<"Gbif_occurrence_downloads"> | Date | string | null
    inserted_count?: IntNullableFilter<"Gbif_occurrence_downloads"> | number | null
    attribution?: StringNullableFilter<"Gbif_occurrence_downloads"> | string | null
    deleted?: BoolNullableFilter<"Gbif_occurrence_downloads"> | boolean | null
    accounts?: XOR<AccountsNullableRelationFilter, AccountsWhereInput> | null
    projects?: XOR<ProjectsNullableRelationFilter, ProjectsWhereInput> | null
    subprojects?: XOR<SubprojectsNullableRelationFilter, SubprojectsWhereInput> | null
  }, "gbif_occurrence_download_id">

  export type Gbif_occurrence_downloadsOrderByWithAggregationInput = {
    gbif_occurrence_download_id?: SortOrder
    account_id?: SortOrderInput | SortOrder
    project_id?: SortOrderInput | SortOrder
    subproject_id?: SortOrderInput | SortOrder
    gbif_table?: SortOrderInput | SortOrder
    filters?: SortOrderInput | SortOrder
    created_time?: SortOrderInput | SortOrder
    download_key?: SortOrderInput | SortOrder
    error?: SortOrderInput | SortOrder
    inserted_time?: SortOrderInput | SortOrder
    inserted_count?: SortOrderInput | SortOrder
    attribution?: SortOrderInput | SortOrder
    deleted?: SortOrderInput | SortOrder
    _count?: Gbif_occurrence_downloadsCountOrderByAggregateInput
    _avg?: Gbif_occurrence_downloadsAvgOrderByAggregateInput
    _max?: Gbif_occurrence_downloadsMaxOrderByAggregateInput
    _min?: Gbif_occurrence_downloadsMinOrderByAggregateInput
    _sum?: Gbif_occurrence_downloadsSumOrderByAggregateInput
  }

  export type Gbif_occurrence_downloadsScalarWhereWithAggregatesInput = {
    AND?: Enumerable<Gbif_occurrence_downloadsScalarWhereWithAggregatesInput>
    OR?: Enumerable<Gbif_occurrence_downloadsScalarWhereWithAggregatesInput>
    NOT?: Enumerable<Gbif_occurrence_downloadsScalarWhereWithAggregatesInput>
    gbif_occurrence_download_id?: UuidWithAggregatesFilter<"Gbif_occurrence_downloads"> | string
    account_id?: UuidNullableWithAggregatesFilter<"Gbif_occurrence_downloads"> | string | null
    project_id?: UuidNullableWithAggregatesFilter<"Gbif_occurrence_downloads"> | string | null
    subproject_id?: UuidNullableWithAggregatesFilter<"Gbif_occurrence_downloads"> | string | null
    gbif_table?: Enumgbif_tableNullableWithAggregatesFilter<"Gbif_occurrence_downloads"> | gbif_table | null
    filters?: JsonNullableWithAggregatesFilter<"Gbif_occurrence_downloads">
    created_time?: DateTimeNullableWithAggregatesFilter<"Gbif_occurrence_downloads"> | Date | string | null
    download_key?: StringNullableWithAggregatesFilter<"Gbif_occurrence_downloads"> | string | null
    error?: StringNullableWithAggregatesFilter<"Gbif_occurrence_downloads"> | string | null
    inserted_time?: DateTimeNullableWithAggregatesFilter<"Gbif_occurrence_downloads"> | Date | string | null
    inserted_count?: IntNullableWithAggregatesFilter<"Gbif_occurrence_downloads"> | number | null
    attribution?: StringNullableWithAggregatesFilter<"Gbif_occurrence_downloads"> | string | null
    deleted?: BoolNullableWithAggregatesFilter<"Gbif_occurrence_downloads"> | boolean | null
  }

  export type Gbif_occurrencesWhereInput = {
    AND?: Enumerable<Gbif_occurrencesWhereInput>
    OR?: Enumerable<Gbif_occurrencesWhereInput>
    NOT?: Enumerable<Gbif_occurrencesWhereInput>
    gbif_occurrence_id?: UuidFilter<"Gbif_occurrences"> | string
    account_id?: UuidNullableFilter<"Gbif_occurrences"> | string | null
    project_id?: UuidNullableFilter<"Gbif_occurrences"> | string | null
    subproject_id?: UuidNullableFilter<"Gbif_occurrences"> | string | null
    gbif_data?: JsonNullableFilter<"Gbif_occurrences">
    label?: StringNullableFilter<"Gbif_occurrences"> | string | null
    accounts?: XOR<AccountsNullableRelationFilter, AccountsWhereInput> | null
    projects?: XOR<ProjectsNullableRelationFilter, ProjectsWhereInput> | null
    subprojects?: XOR<SubprojectsNullableRelationFilter, SubprojectsWhereInput> | null
  }

  export type Gbif_occurrencesOrderByWithRelationInput = {
    gbif_occurrence_id?: SortOrder
    account_id?: SortOrderInput | SortOrder
    project_id?: SortOrderInput | SortOrder
    subproject_id?: SortOrderInput | SortOrder
    gbif_data?: SortOrderInput | SortOrder
    label?: SortOrderInput | SortOrder
    accounts?: AccountsOrderByWithRelationInput
    projects?: ProjectsOrderByWithRelationInput
    subprojects?: SubprojectsOrderByWithRelationInput
  }

  export type Gbif_occurrencesWhereUniqueInput = Prisma.AtLeast<{
    gbif_occurrence_id?: string
    AND?: Enumerable<Gbif_occurrencesWhereInput>
    OR?: Enumerable<Gbif_occurrencesWhereInput>
    NOT?: Enumerable<Gbif_occurrencesWhereInput>
    account_id?: UuidNullableFilter<"Gbif_occurrences"> | string | null
    project_id?: UuidNullableFilter<"Gbif_occurrences"> | string | null
    subproject_id?: UuidNullableFilter<"Gbif_occurrences"> | string | null
    gbif_data?: JsonNullableFilter<"Gbif_occurrences">
    label?: StringNullableFilter<"Gbif_occurrences"> | string | null
    accounts?: XOR<AccountsNullableRelationFilter, AccountsWhereInput> | null
    projects?: XOR<ProjectsNullableRelationFilter, ProjectsWhereInput> | null
    subprojects?: XOR<SubprojectsNullableRelationFilter, SubprojectsWhereInput> | null
  }, "gbif_occurrence_id">

  export type Gbif_occurrencesOrderByWithAggregationInput = {
    gbif_occurrence_id?: SortOrder
    account_id?: SortOrderInput | SortOrder
    project_id?: SortOrderInput | SortOrder
    subproject_id?: SortOrderInput | SortOrder
    gbif_data?: SortOrderInput | SortOrder
    label?: SortOrderInput | SortOrder
    _count?: Gbif_occurrencesCountOrderByAggregateInput
    _max?: Gbif_occurrencesMaxOrderByAggregateInput
    _min?: Gbif_occurrencesMinOrderByAggregateInput
  }

  export type Gbif_occurrencesScalarWhereWithAggregatesInput = {
    AND?: Enumerable<Gbif_occurrencesScalarWhereWithAggregatesInput>
    OR?: Enumerable<Gbif_occurrencesScalarWhereWithAggregatesInput>
    NOT?: Enumerable<Gbif_occurrencesScalarWhereWithAggregatesInput>
    gbif_occurrence_id?: UuidWithAggregatesFilter<"Gbif_occurrences"> | string
    account_id?: UuidNullableWithAggregatesFilter<"Gbif_occurrences"> | string | null
    project_id?: UuidNullableWithAggregatesFilter<"Gbif_occurrences"> | string | null
    subproject_id?: UuidNullableWithAggregatesFilter<"Gbif_occurrences"> | string | null
    gbif_data?: JsonNullableWithAggregatesFilter<"Gbif_occurrences">
    label?: StringNullableWithAggregatesFilter<"Gbif_occurrences"> | string | null
  }

  export type Gbif_taxaWhereInput = {
    AND?: Enumerable<Gbif_taxaWhereInput>
    OR?: Enumerable<Gbif_taxaWhereInput>
    NOT?: Enumerable<Gbif_taxaWhereInput>
    gbif_taxon_id?: UuidFilter<"Gbif_taxa"> | string
    account_id?: UuidNullableFilter<"Gbif_taxa"> | string | null
    project_id?: UuidNullableFilter<"Gbif_taxa"> | string | null
    gbif_data?: JsonNullableFilter<"Gbif_taxa">
    label?: StringNullableFilter<"Gbif_taxa"> | string | null
    accounts?: XOR<AccountsNullableRelationFilter, AccountsWhereInput> | null
    projects?: XOR<ProjectsNullableRelationFilter, ProjectsWhereInput> | null
  }

  export type Gbif_taxaOrderByWithRelationInput = {
    gbif_taxon_id?: SortOrder
    account_id?: SortOrderInput | SortOrder
    project_id?: SortOrderInput | SortOrder
    gbif_data?: SortOrderInput | SortOrder
    label?: SortOrderInput | SortOrder
    accounts?: AccountsOrderByWithRelationInput
    projects?: ProjectsOrderByWithRelationInput
  }

  export type Gbif_taxaWhereUniqueInput = Prisma.AtLeast<{
    gbif_taxon_id?: string
    AND?: Enumerable<Gbif_taxaWhereInput>
    OR?: Enumerable<Gbif_taxaWhereInput>
    NOT?: Enumerable<Gbif_taxaWhereInput>
    account_id?: UuidNullableFilter<"Gbif_taxa"> | string | null
    project_id?: UuidNullableFilter<"Gbif_taxa"> | string | null
    gbif_data?: JsonNullableFilter<"Gbif_taxa">
    label?: StringNullableFilter<"Gbif_taxa"> | string | null
    accounts?: XOR<AccountsNullableRelationFilter, AccountsWhereInput> | null
    projects?: XOR<ProjectsNullableRelationFilter, ProjectsWhereInput> | null
  }, "gbif_taxon_id">

  export type Gbif_taxaOrderByWithAggregationInput = {
    gbif_taxon_id?: SortOrder
    account_id?: SortOrderInput | SortOrder
    project_id?: SortOrderInput | SortOrder
    gbif_data?: SortOrderInput | SortOrder
    label?: SortOrderInput | SortOrder
    _count?: Gbif_taxaCountOrderByAggregateInput
    _max?: Gbif_taxaMaxOrderByAggregateInput
    _min?: Gbif_taxaMinOrderByAggregateInput
  }

  export type Gbif_taxaScalarWhereWithAggregatesInput = {
    AND?: Enumerable<Gbif_taxaScalarWhereWithAggregatesInput>
    OR?: Enumerable<Gbif_taxaScalarWhereWithAggregatesInput>
    NOT?: Enumerable<Gbif_taxaScalarWhereWithAggregatesInput>
    gbif_taxon_id?: UuidWithAggregatesFilter<"Gbif_taxa"> | string
    account_id?: UuidNullableWithAggregatesFilter<"Gbif_taxa"> | string | null
    project_id?: UuidNullableWithAggregatesFilter<"Gbif_taxa"> | string | null
    gbif_data?: JsonNullableWithAggregatesFilter<"Gbif_taxa">
    label?: StringNullableWithAggregatesFilter<"Gbif_taxa"> | string | null
  }

  export type Goal_report_valuesWhereInput = {
    AND?: Enumerable<Goal_report_valuesWhereInput>
    OR?: Enumerable<Goal_report_valuesWhereInput>
    NOT?: Enumerable<Goal_report_valuesWhereInput>
    goal_report_value_id?: UuidFilter<"Goal_report_values"> | string
    account_id?: UuidNullableFilter<"Goal_report_values"> | string | null
    goal_report_id?: UuidNullableFilter<"Goal_report_values"> | string | null
    unit_id?: UuidNullableFilter<"Goal_report_values"> | string | null
    value_integer?: IntNullableFilter<"Goal_report_values"> | number | null
    value_numeric?: FloatNullableFilter<"Goal_report_values"> | number | null
    value_text?: StringNullableFilter<"Goal_report_values"> | string | null
    label?: StringNullableFilter<"Goal_report_values"> | string | null
    deleted?: BoolNullableFilter<"Goal_report_values"> | boolean | null
    accounts?: XOR<AccountsNullableRelationFilter, AccountsWhereInput> | null
    goal_reports?: XOR<Goal_reportsNullableRelationFilter, Goal_reportsWhereInput> | null
    units?: XOR<UnitsNullableRelationFilter, UnitsWhereInput> | null
  }

  export type Goal_report_valuesOrderByWithRelationInput = {
    goal_report_value_id?: SortOrder
    account_id?: SortOrderInput | SortOrder
    goal_report_id?: SortOrderInput | SortOrder
    unit_id?: SortOrderInput | SortOrder
    value_integer?: SortOrderInput | SortOrder
    value_numeric?: SortOrderInput | SortOrder
    value_text?: SortOrderInput | SortOrder
    label?: SortOrderInput | SortOrder
    deleted?: SortOrderInput | SortOrder
    accounts?: AccountsOrderByWithRelationInput
    goal_reports?: Goal_reportsOrderByWithRelationInput
    units?: UnitsOrderByWithRelationInput
  }

  export type Goal_report_valuesWhereUniqueInput = Prisma.AtLeast<{
    goal_report_value_id?: string
    AND?: Enumerable<Goal_report_valuesWhereInput>
    OR?: Enumerable<Goal_report_valuesWhereInput>
    NOT?: Enumerable<Goal_report_valuesWhereInput>
    account_id?: UuidNullableFilter<"Goal_report_values"> | string | null
    goal_report_id?: UuidNullableFilter<"Goal_report_values"> | string | null
    unit_id?: UuidNullableFilter<"Goal_report_values"> | string | null
    value_integer?: IntNullableFilter<"Goal_report_values"> | number | null
    value_numeric?: FloatNullableFilter<"Goal_report_values"> | number | null
    value_text?: StringNullableFilter<"Goal_report_values"> | string | null
    label?: StringNullableFilter<"Goal_report_values"> | string | null
    deleted?: BoolNullableFilter<"Goal_report_values"> | boolean | null
    accounts?: XOR<AccountsNullableRelationFilter, AccountsWhereInput> | null
    goal_reports?: XOR<Goal_reportsNullableRelationFilter, Goal_reportsWhereInput> | null
    units?: XOR<UnitsNullableRelationFilter, UnitsWhereInput> | null
  }, "goal_report_value_id">

  export type Goal_report_valuesOrderByWithAggregationInput = {
    goal_report_value_id?: SortOrder
    account_id?: SortOrderInput | SortOrder
    goal_report_id?: SortOrderInput | SortOrder
    unit_id?: SortOrderInput | SortOrder
    value_integer?: SortOrderInput | SortOrder
    value_numeric?: SortOrderInput | SortOrder
    value_text?: SortOrderInput | SortOrder
    label?: SortOrderInput | SortOrder
    deleted?: SortOrderInput | SortOrder
    _count?: Goal_report_valuesCountOrderByAggregateInput
    _avg?: Goal_report_valuesAvgOrderByAggregateInput
    _max?: Goal_report_valuesMaxOrderByAggregateInput
    _min?: Goal_report_valuesMinOrderByAggregateInput
    _sum?: Goal_report_valuesSumOrderByAggregateInput
  }

  export type Goal_report_valuesScalarWhereWithAggregatesInput = {
    AND?: Enumerable<Goal_report_valuesScalarWhereWithAggregatesInput>
    OR?: Enumerable<Goal_report_valuesScalarWhereWithAggregatesInput>
    NOT?: Enumerable<Goal_report_valuesScalarWhereWithAggregatesInput>
    goal_report_value_id?: UuidWithAggregatesFilter<"Goal_report_values"> | string
    account_id?: UuidNullableWithAggregatesFilter<"Goal_report_values"> | string | null
    goal_report_id?: UuidNullableWithAggregatesFilter<"Goal_report_values"> | string | null
    unit_id?: UuidNullableWithAggregatesFilter<"Goal_report_values"> | string | null
    value_integer?: IntNullableWithAggregatesFilter<"Goal_report_values"> | number | null
    value_numeric?: FloatNullableWithAggregatesFilter<"Goal_report_values"> | number | null
    value_text?: StringNullableWithAggregatesFilter<"Goal_report_values"> | string | null
    label?: StringNullableWithAggregatesFilter<"Goal_report_values"> | string | null
    deleted?: BoolNullableWithAggregatesFilter<"Goal_report_values"> | boolean | null
  }

  export type Goal_reportsWhereInput = {
    AND?: Enumerable<Goal_reportsWhereInput>
    OR?: Enumerable<Goal_reportsWhereInput>
    NOT?: Enumerable<Goal_reportsWhereInput>
    goal_report_id?: UuidFilter<"Goal_reports"> | string
    account_id?: UuidNullableFilter<"Goal_reports"> | string | null
    goal_id?: UuidNullableFilter<"Goal_reports"> | string | null
    data?: JsonNullableFilter<"Goal_reports">
    label?: StringNullableFilter<"Goal_reports"> | string | null
    deleted?: BoolNullableFilter<"Goal_reports"> | boolean | null
    goal_report_values?: Goal_report_valuesListRelationFilter
    accounts?: XOR<AccountsNullableRelationFilter, AccountsWhereInput> | null
    goals?: XOR<GoalsNullableRelationFilter, GoalsWhereInput> | null
  }

  export type Goal_reportsOrderByWithRelationInput = {
    goal_report_id?: SortOrder
    account_id?: SortOrderInput | SortOrder
    goal_id?: SortOrderInput | SortOrder
    data?: SortOrderInput | SortOrder
    label?: SortOrderInput | SortOrder
    deleted?: SortOrderInput | SortOrder
    goal_report_values?: Goal_report_valuesOrderByRelationAggregateInput
    accounts?: AccountsOrderByWithRelationInput
    goals?: GoalsOrderByWithRelationInput
  }

  export type Goal_reportsWhereUniqueInput = Prisma.AtLeast<{
    goal_report_id?: string
    AND?: Enumerable<Goal_reportsWhereInput>
    OR?: Enumerable<Goal_reportsWhereInput>
    NOT?: Enumerable<Goal_reportsWhereInput>
    account_id?: UuidNullableFilter<"Goal_reports"> | string | null
    goal_id?: UuidNullableFilter<"Goal_reports"> | string | null
    data?: JsonNullableFilter<"Goal_reports">
    label?: StringNullableFilter<"Goal_reports"> | string | null
    deleted?: BoolNullableFilter<"Goal_reports"> | boolean | null
    goal_report_values?: Goal_report_valuesListRelationFilter
    accounts?: XOR<AccountsNullableRelationFilter, AccountsWhereInput> | null
    goals?: XOR<GoalsNullableRelationFilter, GoalsWhereInput> | null
  }, "goal_report_id">

  export type Goal_reportsOrderByWithAggregationInput = {
    goal_report_id?: SortOrder
    account_id?: SortOrderInput | SortOrder
    goal_id?: SortOrderInput | SortOrder
    data?: SortOrderInput | SortOrder
    label?: SortOrderInput | SortOrder
    deleted?: SortOrderInput | SortOrder
    _count?: Goal_reportsCountOrderByAggregateInput
    _max?: Goal_reportsMaxOrderByAggregateInput
    _min?: Goal_reportsMinOrderByAggregateInput
  }

  export type Goal_reportsScalarWhereWithAggregatesInput = {
    AND?: Enumerable<Goal_reportsScalarWhereWithAggregatesInput>
    OR?: Enumerable<Goal_reportsScalarWhereWithAggregatesInput>
    NOT?: Enumerable<Goal_reportsScalarWhereWithAggregatesInput>
    goal_report_id?: UuidWithAggregatesFilter<"Goal_reports"> | string
    account_id?: UuidNullableWithAggregatesFilter<"Goal_reports"> | string | null
    goal_id?: UuidNullableWithAggregatesFilter<"Goal_reports"> | string | null
    data?: JsonNullableWithAggregatesFilter<"Goal_reports">
    label?: StringNullableWithAggregatesFilter<"Goal_reports"> | string | null
    deleted?: BoolNullableWithAggregatesFilter<"Goal_reports"> | boolean | null
  }

  export type GoalsWhereInput = {
    AND?: Enumerable<GoalsWhereInput>
    OR?: Enumerable<GoalsWhereInput>
    NOT?: Enumerable<GoalsWhereInput>
    goal_id?: UuidFilter<"Goals"> | string
    account_id?: UuidNullableFilter<"Goals"> | string | null
    subproject_id?: UuidNullableFilter<"Goals"> | string | null
    year?: IntNullableFilter<"Goals"> | number | null
    name?: StringNullableFilter<"Goals"> | string | null
    data?: JsonNullableFilter<"Goals">
    label_replace_by_generated_column?: StringNullableFilter<"Goals"> | string | null
    deleted?: BoolNullableFilter<"Goals"> | boolean | null
    goal_reports?: Goal_reportsListRelationFilter
    accounts?: XOR<AccountsNullableRelationFilter, AccountsWhereInput> | null
    subprojects?: XOR<SubprojectsNullableRelationFilter, SubprojectsWhereInput> | null
  }

  export type GoalsOrderByWithRelationInput = {
    goal_id?: SortOrder
    account_id?: SortOrderInput | SortOrder
    subproject_id?: SortOrderInput | SortOrder
    year?: SortOrderInput | SortOrder
    name?: SortOrderInput | SortOrder
    data?: SortOrderInput | SortOrder
    label_replace_by_generated_column?: SortOrderInput | SortOrder
    deleted?: SortOrderInput | SortOrder
    goal_reports?: Goal_reportsOrderByRelationAggregateInput
    accounts?: AccountsOrderByWithRelationInput
    subprojects?: SubprojectsOrderByWithRelationInput
  }

  export type GoalsWhereUniqueInput = Prisma.AtLeast<{
    goal_id?: string
    AND?: Enumerable<GoalsWhereInput>
    OR?: Enumerable<GoalsWhereInput>
    NOT?: Enumerable<GoalsWhereInput>
    account_id?: UuidNullableFilter<"Goals"> | string | null
    subproject_id?: UuidNullableFilter<"Goals"> | string | null
    year?: IntNullableFilter<"Goals"> | number | null
    name?: StringNullableFilter<"Goals"> | string | null
    data?: JsonNullableFilter<"Goals">
    label_replace_by_generated_column?: StringNullableFilter<"Goals"> | string | null
    deleted?: BoolNullableFilter<"Goals"> | boolean | null
    goal_reports?: Goal_reportsListRelationFilter
    accounts?: XOR<AccountsNullableRelationFilter, AccountsWhereInput> | null
    subprojects?: XOR<SubprojectsNullableRelationFilter, SubprojectsWhereInput> | null
  }, "goal_id">

  export type GoalsOrderByWithAggregationInput = {
    goal_id?: SortOrder
    account_id?: SortOrderInput | SortOrder
    subproject_id?: SortOrderInput | SortOrder
    year?: SortOrderInput | SortOrder
    name?: SortOrderInput | SortOrder
    data?: SortOrderInput | SortOrder
    label_replace_by_generated_column?: SortOrderInput | SortOrder
    deleted?: SortOrderInput | SortOrder
    _count?: GoalsCountOrderByAggregateInput
    _avg?: GoalsAvgOrderByAggregateInput
    _max?: GoalsMaxOrderByAggregateInput
    _min?: GoalsMinOrderByAggregateInput
    _sum?: GoalsSumOrderByAggregateInput
  }

  export type GoalsScalarWhereWithAggregatesInput = {
    AND?: Enumerable<GoalsScalarWhereWithAggregatesInput>
    OR?: Enumerable<GoalsScalarWhereWithAggregatesInput>
    NOT?: Enumerable<GoalsScalarWhereWithAggregatesInput>
    goal_id?: UuidWithAggregatesFilter<"Goals"> | string
    account_id?: UuidNullableWithAggregatesFilter<"Goals"> | string | null
    subproject_id?: UuidNullableWithAggregatesFilter<"Goals"> | string | null
    year?: IntNullableWithAggregatesFilter<"Goals"> | number | null
    name?: StringNullableWithAggregatesFilter<"Goals"> | string | null
    data?: JsonNullableWithAggregatesFilter<"Goals">
    label_replace_by_generated_column?: StringNullableWithAggregatesFilter<"Goals"> | string | null
    deleted?: BoolNullableWithAggregatesFilter<"Goals"> | boolean | null
  }

  export type List_valuesWhereInput = {
    AND?: Enumerable<List_valuesWhereInput>
    OR?: Enumerable<List_valuesWhereInput>
    NOT?: Enumerable<List_valuesWhereInput>
    list_value_id?: UuidFilter<"List_values"> | string
    account_id?: UuidNullableFilter<"List_values"> | string | null
    list_id?: UuidNullableFilter<"List_values"> | string | null
    value?: StringNullableFilter<"List_values"> | string | null
    obsolete?: BoolNullableFilter<"List_values"> | boolean | null
    label_replace_by_generated_column?: StringNullableFilter<"List_values"> | string | null
    deleted?: BoolNullableFilter<"List_values"> | boolean | null
    accounts?: XOR<AccountsNullableRelationFilter, AccountsWhereInput> | null
    lists?: XOR<ListsNullableRelationFilter, ListsWhereInput> | null
  }

  export type List_valuesOrderByWithRelationInput = {
    list_value_id?: SortOrder
    account_id?: SortOrderInput | SortOrder
    list_id?: SortOrderInput | SortOrder
    value?: SortOrderInput | SortOrder
    obsolete?: SortOrderInput | SortOrder
    label_replace_by_generated_column?: SortOrderInput | SortOrder
    deleted?: SortOrderInput | SortOrder
    accounts?: AccountsOrderByWithRelationInput
    lists?: ListsOrderByWithRelationInput
  }

  export type List_valuesWhereUniqueInput = Prisma.AtLeast<{
    list_value_id?: string
    AND?: Enumerable<List_valuesWhereInput>
    OR?: Enumerable<List_valuesWhereInput>
    NOT?: Enumerable<List_valuesWhereInput>
    account_id?: UuidNullableFilter<"List_values"> | string | null
    list_id?: UuidNullableFilter<"List_values"> | string | null
    value?: StringNullableFilter<"List_values"> | string | null
    obsolete?: BoolNullableFilter<"List_values"> | boolean | null
    label_replace_by_generated_column?: StringNullableFilter<"List_values"> | string | null
    deleted?: BoolNullableFilter<"List_values"> | boolean | null
    accounts?: XOR<AccountsNullableRelationFilter, AccountsWhereInput> | null
    lists?: XOR<ListsNullableRelationFilter, ListsWhereInput> | null
  }, "list_value_id">

  export type List_valuesOrderByWithAggregationInput = {
    list_value_id?: SortOrder
    account_id?: SortOrderInput | SortOrder
    list_id?: SortOrderInput | SortOrder
    value?: SortOrderInput | SortOrder
    obsolete?: SortOrderInput | SortOrder
    label_replace_by_generated_column?: SortOrderInput | SortOrder
    deleted?: SortOrderInput | SortOrder
    _count?: List_valuesCountOrderByAggregateInput
    _max?: List_valuesMaxOrderByAggregateInput
    _min?: List_valuesMinOrderByAggregateInput
  }

  export type List_valuesScalarWhereWithAggregatesInput = {
    AND?: Enumerable<List_valuesScalarWhereWithAggregatesInput>
    OR?: Enumerable<List_valuesScalarWhereWithAggregatesInput>
    NOT?: Enumerable<List_valuesScalarWhereWithAggregatesInput>
    list_value_id?: UuidWithAggregatesFilter<"List_values"> | string
    account_id?: UuidNullableWithAggregatesFilter<"List_values"> | string | null
    list_id?: UuidNullableWithAggregatesFilter<"List_values"> | string | null
    value?: StringNullableWithAggregatesFilter<"List_values"> | string | null
    obsolete?: BoolNullableWithAggregatesFilter<"List_values"> | boolean | null
    label_replace_by_generated_column?: StringNullableWithAggregatesFilter<"List_values"> | string | null
    deleted?: BoolNullableWithAggregatesFilter<"List_values"> | boolean | null
  }

  export type ListsWhereInput = {
    AND?: Enumerable<ListsWhereInput>
    OR?: Enumerable<ListsWhereInput>
    NOT?: Enumerable<ListsWhereInput>
    list_id?: UuidFilter<"Lists"> | string
    account_id?: UuidNullableFilter<"Lists"> | string | null
    project_id?: UuidNullableFilter<"Lists"> | string | null
    name?: StringNullableFilter<"Lists"> | string | null
    data?: JsonNullableFilter<"Lists">
    obsolete?: BoolNullableFilter<"Lists"> | boolean | null
    label_replace_by_generated_column?: StringNullableFilter<"Lists"> | string | null
    deleted?: BoolNullableFilter<"Lists"> | boolean | null
    list_values?: List_valuesListRelationFilter
    accounts?: XOR<AccountsNullableRelationFilter, AccountsWhereInput> | null
    projects?: XOR<ProjectsNullableRelationFilter, ProjectsWhereInput> | null
    units?: UnitsListRelationFilter
  }

  export type ListsOrderByWithRelationInput = {
    list_id?: SortOrder
    account_id?: SortOrderInput | SortOrder
    project_id?: SortOrderInput | SortOrder
    name?: SortOrderInput | SortOrder
    data?: SortOrderInput | SortOrder
    obsolete?: SortOrderInput | SortOrder
    label_replace_by_generated_column?: SortOrderInput | SortOrder
    deleted?: SortOrderInput | SortOrder
    list_values?: List_valuesOrderByRelationAggregateInput
    accounts?: AccountsOrderByWithRelationInput
    projects?: ProjectsOrderByWithRelationInput
    units?: UnitsOrderByRelationAggregateInput
  }

  export type ListsWhereUniqueInput = Prisma.AtLeast<{
    list_id?: string
    AND?: Enumerable<ListsWhereInput>
    OR?: Enumerable<ListsWhereInput>
    NOT?: Enumerable<ListsWhereInput>
    account_id?: UuidNullableFilter<"Lists"> | string | null
    project_id?: UuidNullableFilter<"Lists"> | string | null
    name?: StringNullableFilter<"Lists"> | string | null
    data?: JsonNullableFilter<"Lists">
    obsolete?: BoolNullableFilter<"Lists"> | boolean | null
    label_replace_by_generated_column?: StringNullableFilter<"Lists"> | string | null
    deleted?: BoolNullableFilter<"Lists"> | boolean | null
    list_values?: List_valuesListRelationFilter
    accounts?: XOR<AccountsNullableRelationFilter, AccountsWhereInput> | null
    projects?: XOR<ProjectsNullableRelationFilter, ProjectsWhereInput> | null
    units?: UnitsListRelationFilter
  }, "list_id">

  export type ListsOrderByWithAggregationInput = {
    list_id?: SortOrder
    account_id?: SortOrderInput | SortOrder
    project_id?: SortOrderInput | SortOrder
    name?: SortOrderInput | SortOrder
    data?: SortOrderInput | SortOrder
    obsolete?: SortOrderInput | SortOrder
    label_replace_by_generated_column?: SortOrderInput | SortOrder
    deleted?: SortOrderInput | SortOrder
    _count?: ListsCountOrderByAggregateInput
    _max?: ListsMaxOrderByAggregateInput
    _min?: ListsMinOrderByAggregateInput
  }

  export type ListsScalarWhereWithAggregatesInput = {
    AND?: Enumerable<ListsScalarWhereWithAggregatesInput>
    OR?: Enumerable<ListsScalarWhereWithAggregatesInput>
    NOT?: Enumerable<ListsScalarWhereWithAggregatesInput>
    list_id?: UuidWithAggregatesFilter<"Lists"> | string
    account_id?: UuidNullableWithAggregatesFilter<"Lists"> | string | null
    project_id?: UuidNullableWithAggregatesFilter<"Lists"> | string | null
    name?: StringNullableWithAggregatesFilter<"Lists"> | string | null
    data?: JsonNullableWithAggregatesFilter<"Lists">
    obsolete?: BoolNullableWithAggregatesFilter<"Lists"> | boolean | null
    label_replace_by_generated_column?: StringNullableWithAggregatesFilter<"Lists"> | string | null
    deleted?: BoolNullableWithAggregatesFilter<"Lists"> | boolean | null
  }

  export type MessagesWhereInput = {
    AND?: Enumerable<MessagesWhereInput>
    OR?: Enumerable<MessagesWhereInput>
    NOT?: Enumerable<MessagesWhereInput>
    message_id?: UuidFilter<"Messages"> | string
    label_replace_by_generated_column?: StringNullableFilter<"Messages"> | string | null
    date?: DateTimeNullableFilter<"Messages"> | Date | string | null
    message?: StringNullableFilter<"Messages"> | string | null
    user_messages?: User_messagesListRelationFilter
  }

  export type MessagesOrderByWithRelationInput = {
    message_id?: SortOrder
    label_replace_by_generated_column?: SortOrderInput | SortOrder
    date?: SortOrderInput | SortOrder
    message?: SortOrderInput | SortOrder
    user_messages?: User_messagesOrderByRelationAggregateInput
  }

  export type MessagesWhereUniqueInput = Prisma.AtLeast<{
    message_id?: string
    AND?: Enumerable<MessagesWhereInput>
    OR?: Enumerable<MessagesWhereInput>
    NOT?: Enumerable<MessagesWhereInput>
    label_replace_by_generated_column?: StringNullableFilter<"Messages"> | string | null
    date?: DateTimeNullableFilter<"Messages"> | Date | string | null
    message?: StringNullableFilter<"Messages"> | string | null
    user_messages?: User_messagesListRelationFilter
  }, "message_id">

  export type MessagesOrderByWithAggregationInput = {
    message_id?: SortOrder
    label_replace_by_generated_column?: SortOrderInput | SortOrder
    date?: SortOrderInput | SortOrder
    message?: SortOrderInput | SortOrder
    _count?: MessagesCountOrderByAggregateInput
    _max?: MessagesMaxOrderByAggregateInput
    _min?: MessagesMinOrderByAggregateInput
  }

  export type MessagesScalarWhereWithAggregatesInput = {
    AND?: Enumerable<MessagesScalarWhereWithAggregatesInput>
    OR?: Enumerable<MessagesScalarWhereWithAggregatesInput>
    NOT?: Enumerable<MessagesScalarWhereWithAggregatesInput>
    message_id?: UuidWithAggregatesFilter<"Messages"> | string
    label_replace_by_generated_column?: StringNullableWithAggregatesFilter<"Messages"> | string | null
    date?: DateTimeNullableWithAggregatesFilter<"Messages"> | Date | string | null
    message?: StringNullableWithAggregatesFilter<"Messages"> | string | null
  }

  export type Observation_sourcesWhereInput = {
    AND?: Enumerable<Observation_sourcesWhereInput>
    OR?: Enumerable<Observation_sourcesWhereInput>
    NOT?: Enumerable<Observation_sourcesWhereInput>
    observation_source_id?: UuidFilter<"Observation_sources"> | string
    account_id?: UuidNullableFilter<"Observation_sources"> | string | null
    project_id?: UuidNullableFilter<"Observation_sources"> | string | null
    name?: StringNullableFilter<"Observation_sources"> | string | null
    url?: StringNullableFilter<"Observation_sources"> | string | null
    data?: JsonNullableFilter<"Observation_sources">
    label_replace_by_generated_column?: StringNullableFilter<"Observation_sources"> | string | null
    deleted?: BoolNullableFilter<"Observation_sources"> | boolean | null
    accounts?: XOR<AccountsNullableRelationFilter, AccountsWhereInput> | null
    projects?: XOR<ProjectsNullableRelationFilter, ProjectsWhereInput> | null
  }

  export type Observation_sourcesOrderByWithRelationInput = {
    observation_source_id?: SortOrder
    account_id?: SortOrderInput | SortOrder
    project_id?: SortOrderInput | SortOrder
    name?: SortOrderInput | SortOrder
    url?: SortOrderInput | SortOrder
    data?: SortOrderInput | SortOrder
    label_replace_by_generated_column?: SortOrderInput | SortOrder
    deleted?: SortOrderInput | SortOrder
    accounts?: AccountsOrderByWithRelationInput
    projects?: ProjectsOrderByWithRelationInput
  }

  export type Observation_sourcesWhereUniqueInput = Prisma.AtLeast<{
    observation_source_id?: string
    AND?: Enumerable<Observation_sourcesWhereInput>
    OR?: Enumerable<Observation_sourcesWhereInput>
    NOT?: Enumerable<Observation_sourcesWhereInput>
    account_id?: UuidNullableFilter<"Observation_sources"> | string | null
    project_id?: UuidNullableFilter<"Observation_sources"> | string | null
    name?: StringNullableFilter<"Observation_sources"> | string | null
    url?: StringNullableFilter<"Observation_sources"> | string | null
    data?: JsonNullableFilter<"Observation_sources">
    label_replace_by_generated_column?: StringNullableFilter<"Observation_sources"> | string | null
    deleted?: BoolNullableFilter<"Observation_sources"> | boolean | null
    accounts?: XOR<AccountsNullableRelationFilter, AccountsWhereInput> | null
    projects?: XOR<ProjectsNullableRelationFilter, ProjectsWhereInput> | null
  }, "observation_source_id">

  export type Observation_sourcesOrderByWithAggregationInput = {
    observation_source_id?: SortOrder
    account_id?: SortOrderInput | SortOrder
    project_id?: SortOrderInput | SortOrder
    name?: SortOrderInput | SortOrder
    url?: SortOrderInput | SortOrder
    data?: SortOrderInput | SortOrder
    label_replace_by_generated_column?: SortOrderInput | SortOrder
    deleted?: SortOrderInput | SortOrder
    _count?: Observation_sourcesCountOrderByAggregateInput
    _max?: Observation_sourcesMaxOrderByAggregateInput
    _min?: Observation_sourcesMinOrderByAggregateInput
  }

  export type Observation_sourcesScalarWhereWithAggregatesInput = {
    AND?: Enumerable<Observation_sourcesScalarWhereWithAggregatesInput>
    OR?: Enumerable<Observation_sourcesScalarWhereWithAggregatesInput>
    NOT?: Enumerable<Observation_sourcesScalarWhereWithAggregatesInput>
    observation_source_id?: UuidWithAggregatesFilter<"Observation_sources"> | string
    account_id?: UuidNullableWithAggregatesFilter<"Observation_sources"> | string | null
    project_id?: UuidNullableWithAggregatesFilter<"Observation_sources"> | string | null
    name?: StringNullableWithAggregatesFilter<"Observation_sources"> | string | null
    url?: StringNullableWithAggregatesFilter<"Observation_sources"> | string | null
    data?: JsonNullableWithAggregatesFilter<"Observation_sources">
    label_replace_by_generated_column?: StringNullableWithAggregatesFilter<"Observation_sources"> | string | null
    deleted?: BoolNullableWithAggregatesFilter<"Observation_sources"> | boolean | null
  }

  export type PersonsWhereInput = {
    AND?: Enumerable<PersonsWhereInput>
    OR?: Enumerable<PersonsWhereInput>
    NOT?: Enumerable<PersonsWhereInput>
    person_id?: UuidFilter<"Persons"> | string
    project_id?: UuidNullableFilter<"Persons"> | string | null
    account_id?: UuidNullableFilter<"Persons"> | string | null
    email?: StringNullableFilter<"Persons"> | string | null
    data?: JsonNullableFilter<"Persons">
    label_replace_by_generated_column?: StringNullableFilter<"Persons"> | string | null
    deleted?: BoolNullableFilter<"Persons"> | boolean | null
    accounts?: XOR<AccountsNullableRelationFilter, AccountsWhereInput> | null
    projects?: XOR<ProjectsNullableRelationFilter, ProjectsWhereInput> | null
  }

  export type PersonsOrderByWithRelationInput = {
    person_id?: SortOrder
    project_id?: SortOrderInput | SortOrder
    account_id?: SortOrderInput | SortOrder
    email?: SortOrderInput | SortOrder
    data?: SortOrderInput | SortOrder
    label_replace_by_generated_column?: SortOrderInput | SortOrder
    deleted?: SortOrderInput | SortOrder
    accounts?: AccountsOrderByWithRelationInput
    projects?: ProjectsOrderByWithRelationInput
  }

  export type PersonsWhereUniqueInput = Prisma.AtLeast<{
    person_id?: string
    AND?: Enumerable<PersonsWhereInput>
    OR?: Enumerable<PersonsWhereInput>
    NOT?: Enumerable<PersonsWhereInput>
    project_id?: UuidNullableFilter<"Persons"> | string | null
    account_id?: UuidNullableFilter<"Persons"> | string | null
    email?: StringNullableFilter<"Persons"> | string | null
    data?: JsonNullableFilter<"Persons">
    label_replace_by_generated_column?: StringNullableFilter<"Persons"> | string | null
    deleted?: BoolNullableFilter<"Persons"> | boolean | null
    accounts?: XOR<AccountsNullableRelationFilter, AccountsWhereInput> | null
    projects?: XOR<ProjectsNullableRelationFilter, ProjectsWhereInput> | null
  }, "person_id">

  export type PersonsOrderByWithAggregationInput = {
    person_id?: SortOrder
    project_id?: SortOrderInput | SortOrder
    account_id?: SortOrderInput | SortOrder
    email?: SortOrderInput | SortOrder
    data?: SortOrderInput | SortOrder
    label_replace_by_generated_column?: SortOrderInput | SortOrder
    deleted?: SortOrderInput | SortOrder
    _count?: PersonsCountOrderByAggregateInput
    _max?: PersonsMaxOrderByAggregateInput
    _min?: PersonsMinOrderByAggregateInput
  }

  export type PersonsScalarWhereWithAggregatesInput = {
    AND?: Enumerable<PersonsScalarWhereWithAggregatesInput>
    OR?: Enumerable<PersonsScalarWhereWithAggregatesInput>
    NOT?: Enumerable<PersonsScalarWhereWithAggregatesInput>
    person_id?: UuidWithAggregatesFilter<"Persons"> | string
    project_id?: UuidNullableWithAggregatesFilter<"Persons"> | string | null
    account_id?: UuidNullableWithAggregatesFilter<"Persons"> | string | null
    email?: StringNullableWithAggregatesFilter<"Persons"> | string | null
    data?: JsonNullableWithAggregatesFilter<"Persons">
    label_replace_by_generated_column?: StringNullableWithAggregatesFilter<"Persons"> | string | null
    deleted?: BoolNullableWithAggregatesFilter<"Persons"> | boolean | null
  }

  export type Place_levelsWhereInput = {
    AND?: Enumerable<Place_levelsWhereInput>
    OR?: Enumerable<Place_levelsWhereInput>
    NOT?: Enumerable<Place_levelsWhereInput>
    place_level_id?: UuidFilter<"Place_levels"> | string
    account_id?: UuidNullableFilter<"Place_levels"> | string | null
    project_id?: UuidNullableFilter<"Place_levels"> | string | null
    level?: IntNullableFilter<"Place_levels"> | number | null
    name_singular?: StringNullableFilter<"Place_levels"> | string | null
    name_plural?: StringNullableFilter<"Place_levels"> | string | null
    name_short?: StringNullableFilter<"Place_levels"> | string | null
    reports?: BoolNullableFilter<"Place_levels"> | boolean | null
    report_values?: BoolNullableFilter<"Place_levels"> | boolean | null
    actions?: BoolNullableFilter<"Place_levels"> | boolean | null
    action_values?: BoolNullableFilter<"Place_levels"> | boolean | null
    action_reports?: BoolNullableFilter<"Place_levels"> | boolean | null
    checks?: BoolNullableFilter<"Place_levels"> | boolean | null
    check_values?: BoolNullableFilter<"Place_levels"> | boolean | null
    check_taxa?: BoolNullableFilter<"Place_levels"> | boolean | null
    observations?: BoolNullableFilter<"Place_levels"> | boolean | null
    label_replace_by_generated_column?: StringNullableFilter<"Place_levels"> | string | null
    deleted?: BoolNullableFilter<"Place_levels"> | boolean | null
    accounts?: XOR<AccountsNullableRelationFilter, AccountsWhereInput> | null
    projects?: XOR<ProjectsNullableRelationFilter, ProjectsWhereInput> | null
  }

  export type Place_levelsOrderByWithRelationInput = {
    place_level_id?: SortOrder
    account_id?: SortOrderInput | SortOrder
    project_id?: SortOrderInput | SortOrder
    level?: SortOrderInput | SortOrder
    name_singular?: SortOrderInput | SortOrder
    name_plural?: SortOrderInput | SortOrder
    name_short?: SortOrderInput | SortOrder
    reports?: SortOrderInput | SortOrder
    report_values?: SortOrderInput | SortOrder
    actions?: SortOrderInput | SortOrder
    action_values?: SortOrderInput | SortOrder
    action_reports?: SortOrderInput | SortOrder
    checks?: SortOrderInput | SortOrder
    check_values?: SortOrderInput | SortOrder
    check_taxa?: SortOrderInput | SortOrder
    observations?: SortOrderInput | SortOrder
    label_replace_by_generated_column?: SortOrderInput | SortOrder
    deleted?: SortOrderInput | SortOrder
    accounts?: AccountsOrderByWithRelationInput
    projects?: ProjectsOrderByWithRelationInput
  }

  export type Place_levelsWhereUniqueInput = Prisma.AtLeast<{
    place_level_id?: string
    AND?: Enumerable<Place_levelsWhereInput>
    OR?: Enumerable<Place_levelsWhereInput>
    NOT?: Enumerable<Place_levelsWhereInput>
    account_id?: UuidNullableFilter<"Place_levels"> | string | null
    project_id?: UuidNullableFilter<"Place_levels"> | string | null
    level?: IntNullableFilter<"Place_levels"> | number | null
    name_singular?: StringNullableFilter<"Place_levels"> | string | null
    name_plural?: StringNullableFilter<"Place_levels"> | string | null
    name_short?: StringNullableFilter<"Place_levels"> | string | null
    reports?: BoolNullableFilter<"Place_levels"> | boolean | null
    report_values?: BoolNullableFilter<"Place_levels"> | boolean | null
    actions?: BoolNullableFilter<"Place_levels"> | boolean | null
    action_values?: BoolNullableFilter<"Place_levels"> | boolean | null
    action_reports?: BoolNullableFilter<"Place_levels"> | boolean | null
    checks?: BoolNullableFilter<"Place_levels"> | boolean | null
    check_values?: BoolNullableFilter<"Place_levels"> | boolean | null
    check_taxa?: BoolNullableFilter<"Place_levels"> | boolean | null
    observations?: BoolNullableFilter<"Place_levels"> | boolean | null
    label_replace_by_generated_column?: StringNullableFilter<"Place_levels"> | string | null
    deleted?: BoolNullableFilter<"Place_levels"> | boolean | null
    accounts?: XOR<AccountsNullableRelationFilter, AccountsWhereInput> | null
    projects?: XOR<ProjectsNullableRelationFilter, ProjectsWhereInput> | null
  }, "place_level_id">

  export type Place_levelsOrderByWithAggregationInput = {
    place_level_id?: SortOrder
    account_id?: SortOrderInput | SortOrder
    project_id?: SortOrderInput | SortOrder
    level?: SortOrderInput | SortOrder
    name_singular?: SortOrderInput | SortOrder
    name_plural?: SortOrderInput | SortOrder
    name_short?: SortOrderInput | SortOrder
    reports?: SortOrderInput | SortOrder
    report_values?: SortOrderInput | SortOrder
    actions?: SortOrderInput | SortOrder
    action_values?: SortOrderInput | SortOrder
    action_reports?: SortOrderInput | SortOrder
    checks?: SortOrderInput | SortOrder
    check_values?: SortOrderInput | SortOrder
    check_taxa?: SortOrderInput | SortOrder
    observations?: SortOrderInput | SortOrder
    label_replace_by_generated_column?: SortOrderInput | SortOrder
    deleted?: SortOrderInput | SortOrder
    _count?: Place_levelsCountOrderByAggregateInput
    _avg?: Place_levelsAvgOrderByAggregateInput
    _max?: Place_levelsMaxOrderByAggregateInput
    _min?: Place_levelsMinOrderByAggregateInput
    _sum?: Place_levelsSumOrderByAggregateInput
  }

  export type Place_levelsScalarWhereWithAggregatesInput = {
    AND?: Enumerable<Place_levelsScalarWhereWithAggregatesInput>
    OR?: Enumerable<Place_levelsScalarWhereWithAggregatesInput>
    NOT?: Enumerable<Place_levelsScalarWhereWithAggregatesInput>
    place_level_id?: UuidWithAggregatesFilter<"Place_levels"> | string
    account_id?: UuidNullableWithAggregatesFilter<"Place_levels"> | string | null
    project_id?: UuidNullableWithAggregatesFilter<"Place_levels"> | string | null
    level?: IntNullableWithAggregatesFilter<"Place_levels"> | number | null
    name_singular?: StringNullableWithAggregatesFilter<"Place_levels"> | string | null
    name_plural?: StringNullableWithAggregatesFilter<"Place_levels"> | string | null
    name_short?: StringNullableWithAggregatesFilter<"Place_levels"> | string | null
    reports?: BoolNullableWithAggregatesFilter<"Place_levels"> | boolean | null
    report_values?: BoolNullableWithAggregatesFilter<"Place_levels"> | boolean | null
    actions?: BoolNullableWithAggregatesFilter<"Place_levels"> | boolean | null
    action_values?: BoolNullableWithAggregatesFilter<"Place_levels"> | boolean | null
    action_reports?: BoolNullableWithAggregatesFilter<"Place_levels"> | boolean | null
    checks?: BoolNullableWithAggregatesFilter<"Place_levels"> | boolean | null
    check_values?: BoolNullableWithAggregatesFilter<"Place_levels"> | boolean | null
    check_taxa?: BoolNullableWithAggregatesFilter<"Place_levels"> | boolean | null
    observations?: BoolNullableWithAggregatesFilter<"Place_levels"> | boolean | null
    label_replace_by_generated_column?: StringNullableWithAggregatesFilter<"Place_levels"> | string | null
    deleted?: BoolNullableWithAggregatesFilter<"Place_levels"> | boolean | null
  }

  export type Project_usersWhereInput = {
    AND?: Enumerable<Project_usersWhereInput>
    OR?: Enumerable<Project_usersWhereInput>
    NOT?: Enumerable<Project_usersWhereInput>
    project_user_id?: UuidFilter<"Project_users"> | string
    account_id?: UuidNullableFilter<"Project_users"> | string | null
    project_id?: UuidNullableFilter<"Project_users"> | string | null
    user_id?: UuidNullableFilter<"Project_users"> | string | null
    role?: StringNullableFilter<"Project_users"> | string | null
    label?: StringNullableFilter<"Project_users"> | string | null
    deleted?: BoolNullableFilter<"Project_users"> | boolean | null
    accounts?: XOR<AccountsNullableRelationFilter, AccountsWhereInput> | null
    projects?: XOR<ProjectsNullableRelationFilter, ProjectsWhereInput> | null
    users?: XOR<UsersNullableRelationFilter, UsersWhereInput> | null
  }

  export type Project_usersOrderByWithRelationInput = {
    project_user_id?: SortOrder
    account_id?: SortOrderInput | SortOrder
    project_id?: SortOrderInput | SortOrder
    user_id?: SortOrderInput | SortOrder
    role?: SortOrderInput | SortOrder
    label?: SortOrderInput | SortOrder
    deleted?: SortOrderInput | SortOrder
    accounts?: AccountsOrderByWithRelationInput
    projects?: ProjectsOrderByWithRelationInput
    users?: UsersOrderByWithRelationInput
  }

  export type Project_usersWhereUniqueInput = Prisma.AtLeast<{
    project_user_id?: string
    AND?: Enumerable<Project_usersWhereInput>
    OR?: Enumerable<Project_usersWhereInput>
    NOT?: Enumerable<Project_usersWhereInput>
    account_id?: UuidNullableFilter<"Project_users"> | string | null
    project_id?: UuidNullableFilter<"Project_users"> | string | null
    user_id?: UuidNullableFilter<"Project_users"> | string | null
    role?: StringNullableFilter<"Project_users"> | string | null
    label?: StringNullableFilter<"Project_users"> | string | null
    deleted?: BoolNullableFilter<"Project_users"> | boolean | null
    accounts?: XOR<AccountsNullableRelationFilter, AccountsWhereInput> | null
    projects?: XOR<ProjectsNullableRelationFilter, ProjectsWhereInput> | null
    users?: XOR<UsersNullableRelationFilter, UsersWhereInput> | null
  }, "project_user_id">

  export type Project_usersOrderByWithAggregationInput = {
    project_user_id?: SortOrder
    account_id?: SortOrderInput | SortOrder
    project_id?: SortOrderInput | SortOrder
    user_id?: SortOrderInput | SortOrder
    role?: SortOrderInput | SortOrder
    label?: SortOrderInput | SortOrder
    deleted?: SortOrderInput | SortOrder
    _count?: Project_usersCountOrderByAggregateInput
    _max?: Project_usersMaxOrderByAggregateInput
    _min?: Project_usersMinOrderByAggregateInput
  }

  export type Project_usersScalarWhereWithAggregatesInput = {
    AND?: Enumerable<Project_usersScalarWhereWithAggregatesInput>
    OR?: Enumerable<Project_usersScalarWhereWithAggregatesInput>
    NOT?: Enumerable<Project_usersScalarWhereWithAggregatesInput>
    project_user_id?: UuidWithAggregatesFilter<"Project_users"> | string
    account_id?: UuidNullableWithAggregatesFilter<"Project_users"> | string | null
    project_id?: UuidNullableWithAggregatesFilter<"Project_users"> | string | null
    user_id?: UuidNullableWithAggregatesFilter<"Project_users"> | string | null
    role?: StringNullableWithAggregatesFilter<"Project_users"> | string | null
    label?: StringNullableWithAggregatesFilter<"Project_users"> | string | null
    deleted?: BoolNullableWithAggregatesFilter<"Project_users"> | boolean | null
  }

  export type ProjectsWhereInput = {
    AND?: Enumerable<ProjectsWhereInput>
    OR?: Enumerable<ProjectsWhereInput>
    NOT?: Enumerable<ProjectsWhereInput>
    project_id?: UuidFilter<"Projects"> | string
    account_id?: UuidNullableFilter<"Projects"> | string | null
    name?: StringNullableFilter<"Projects"> | string | null
    label?: StringNullableFilter<"Projects"> | string | null
    type?: Enumproject_typeNullableFilter<"Projects"> | project_type | null
    subproject_name_singular?: StringNullableFilter<"Projects"> | string | null
    subproject_name_plural?: StringNullableFilter<"Projects"> | string | null
    subproject_order_by?: StringNullableFilter<"Projects"> | string | null
    places_label_by?: StringNullableFilter<"Projects"> | string | null
    places_order_by?: JsonNullableFilter<"Projects">
    persons_label_by?: StringNullableFilter<"Projects"> | string | null
    persons_order_by?: StringNullableFilter<"Projects"> | string | null
    goal_reports_label_by?: StringNullableFilter<"Projects"> | string | null
    goal_reports_order_by?: StringNullableFilter<"Projects"> | string | null
    values_on_multiple_levels?: StringNullableFilter<"Projects"> | string | null
    multiple_action_values_on_same_level?: StringNullableFilter<"Projects"> | string | null
    multiple_check_values_on_same_level?: StringNullableFilter<"Projects"> | string | null
    data?: JsonNullableFilter<"Projects">
    files_offline?: BoolNullableFilter<"Projects"> | boolean | null
    files_active_projects?: BoolNullableFilter<"Projects"> | boolean | null
    files_active_subprojects?: BoolNullableFilter<"Projects"> | boolean | null
    files_active_places?: BoolNullableFilter<"Projects"> | boolean | null
    files_active_actions?: BoolNullableFilter<"Projects"> | boolean | null
    files_active_checks?: BoolNullableFilter<"Projects"> | boolean | null
    deleted?: BoolNullableFilter<"Projects"> | boolean | null
    gbif_occurrence_downloads?: Gbif_occurrence_downloadsListRelationFilter
    gbif_occurrences?: Gbif_occurrencesListRelationFilter
    gbif_taxa?: Gbif_taxaListRelationFilter
    lists?: ListsListRelationFilter
    observation_sources?: Observation_sourcesListRelationFilter
    persons?: PersonsListRelationFilter
    place_levels?: Place_levelsListRelationFilter
    project_users?: Project_usersListRelationFilter
    accounts?: XOR<AccountsNullableRelationFilter, AccountsWhereInput> | null
    subprojects?: SubprojectsListRelationFilter
    taxonomies?: TaxonomiesListRelationFilter
    tile_layers?: Tile_layersListRelationFilter
    units?: UnitsListRelationFilter
  }

  export type ProjectsOrderByWithRelationInput = {
    project_id?: SortOrder
    account_id?: SortOrderInput | SortOrder
    name?: SortOrderInput | SortOrder
    label?: SortOrderInput | SortOrder
    type?: SortOrderInput | SortOrder
    subproject_name_singular?: SortOrderInput | SortOrder
    subproject_name_plural?: SortOrderInput | SortOrder
    subproject_order_by?: SortOrderInput | SortOrder
    places_label_by?: SortOrderInput | SortOrder
    places_order_by?: SortOrderInput | SortOrder
    persons_label_by?: SortOrderInput | SortOrder
    persons_order_by?: SortOrderInput | SortOrder
    goal_reports_label_by?: SortOrderInput | SortOrder
    goal_reports_order_by?: SortOrderInput | SortOrder
    values_on_multiple_levels?: SortOrderInput | SortOrder
    multiple_action_values_on_same_level?: SortOrderInput | SortOrder
    multiple_check_values_on_same_level?: SortOrderInput | SortOrder
    data?: SortOrderInput | SortOrder
    files_offline?: SortOrderInput | SortOrder
    files_active_projects?: SortOrderInput | SortOrder
    files_active_subprojects?: SortOrderInput | SortOrder
    files_active_places?: SortOrderInput | SortOrder
    files_active_actions?: SortOrderInput | SortOrder
    files_active_checks?: SortOrderInput | SortOrder
    deleted?: SortOrderInput | SortOrder
    gbif_occurrence_downloads?: Gbif_occurrence_downloadsOrderByRelationAggregateInput
    gbif_occurrences?: Gbif_occurrencesOrderByRelationAggregateInput
    gbif_taxa?: Gbif_taxaOrderByRelationAggregateInput
    lists?: ListsOrderByRelationAggregateInput
    observation_sources?: Observation_sourcesOrderByRelationAggregateInput
    persons?: PersonsOrderByRelationAggregateInput
    place_levels?: Place_levelsOrderByRelationAggregateInput
    project_users?: Project_usersOrderByRelationAggregateInput
    accounts?: AccountsOrderByWithRelationInput
    subprojects?: SubprojectsOrderByRelationAggregateInput
    taxonomies?: TaxonomiesOrderByRelationAggregateInput
    tile_layers?: Tile_layersOrderByRelationAggregateInput
    units?: UnitsOrderByRelationAggregateInput
  }

  export type ProjectsWhereUniqueInput = Prisma.AtLeast<{
    project_id?: string
    AND?: Enumerable<ProjectsWhereInput>
    OR?: Enumerable<ProjectsWhereInput>
    NOT?: Enumerable<ProjectsWhereInput>
    account_id?: UuidNullableFilter<"Projects"> | string | null
    name?: StringNullableFilter<"Projects"> | string | null
    label?: StringNullableFilter<"Projects"> | string | null
    type?: Enumproject_typeNullableFilter<"Projects"> | project_type | null
    subproject_name_singular?: StringNullableFilter<"Projects"> | string | null
    subproject_name_plural?: StringNullableFilter<"Projects"> | string | null
    subproject_order_by?: StringNullableFilter<"Projects"> | string | null
    places_label_by?: StringNullableFilter<"Projects"> | string | null
    places_order_by?: JsonNullableFilter<"Projects">
    persons_label_by?: StringNullableFilter<"Projects"> | string | null
    persons_order_by?: StringNullableFilter<"Projects"> | string | null
    goal_reports_label_by?: StringNullableFilter<"Projects"> | string | null
    goal_reports_order_by?: StringNullableFilter<"Projects"> | string | null
    values_on_multiple_levels?: StringNullableFilter<"Projects"> | string | null
    multiple_action_values_on_same_level?: StringNullableFilter<"Projects"> | string | null
    multiple_check_values_on_same_level?: StringNullableFilter<"Projects"> | string | null
    data?: JsonNullableFilter<"Projects">
    files_offline?: BoolNullableFilter<"Projects"> | boolean | null
    files_active_projects?: BoolNullableFilter<"Projects"> | boolean | null
    files_active_subprojects?: BoolNullableFilter<"Projects"> | boolean | null
    files_active_places?: BoolNullableFilter<"Projects"> | boolean | null
    files_active_actions?: BoolNullableFilter<"Projects"> | boolean | null
    files_active_checks?: BoolNullableFilter<"Projects"> | boolean | null
    deleted?: BoolNullableFilter<"Projects"> | boolean | null
    gbif_occurrence_downloads?: Gbif_occurrence_downloadsListRelationFilter
    gbif_occurrences?: Gbif_occurrencesListRelationFilter
    gbif_taxa?: Gbif_taxaListRelationFilter
    lists?: ListsListRelationFilter
    observation_sources?: Observation_sourcesListRelationFilter
    persons?: PersonsListRelationFilter
    place_levels?: Place_levelsListRelationFilter
    project_users?: Project_usersListRelationFilter
    accounts?: XOR<AccountsNullableRelationFilter, AccountsWhereInput> | null
    subprojects?: SubprojectsListRelationFilter
    taxonomies?: TaxonomiesListRelationFilter
    tile_layers?: Tile_layersListRelationFilter
    units?: UnitsListRelationFilter
  }, "project_id">

  export type ProjectsOrderByWithAggregationInput = {
    project_id?: SortOrder
    account_id?: SortOrderInput | SortOrder
    name?: SortOrderInput | SortOrder
    label?: SortOrderInput | SortOrder
    type?: SortOrderInput | SortOrder
    subproject_name_singular?: SortOrderInput | SortOrder
    subproject_name_plural?: SortOrderInput | SortOrder
    subproject_order_by?: SortOrderInput | SortOrder
    places_label_by?: SortOrderInput | SortOrder
    places_order_by?: SortOrderInput | SortOrder
    persons_label_by?: SortOrderInput | SortOrder
    persons_order_by?: SortOrderInput | SortOrder
    goal_reports_label_by?: SortOrderInput | SortOrder
    goal_reports_order_by?: SortOrderInput | SortOrder
    values_on_multiple_levels?: SortOrderInput | SortOrder
    multiple_action_values_on_same_level?: SortOrderInput | SortOrder
    multiple_check_values_on_same_level?: SortOrderInput | SortOrder
    data?: SortOrderInput | SortOrder
    files_offline?: SortOrderInput | SortOrder
    files_active_projects?: SortOrderInput | SortOrder
    files_active_subprojects?: SortOrderInput | SortOrder
    files_active_places?: SortOrderInput | SortOrder
    files_active_actions?: SortOrderInput | SortOrder
    files_active_checks?: SortOrderInput | SortOrder
    deleted?: SortOrderInput | SortOrder
    _count?: ProjectsCountOrderByAggregateInput
    _max?: ProjectsMaxOrderByAggregateInput
    _min?: ProjectsMinOrderByAggregateInput
  }

  export type ProjectsScalarWhereWithAggregatesInput = {
    AND?: Enumerable<ProjectsScalarWhereWithAggregatesInput>
    OR?: Enumerable<ProjectsScalarWhereWithAggregatesInput>
    NOT?: Enumerable<ProjectsScalarWhereWithAggregatesInput>
    project_id?: UuidWithAggregatesFilter<"Projects"> | string
    account_id?: UuidNullableWithAggregatesFilter<"Projects"> | string | null
    name?: StringNullableWithAggregatesFilter<"Projects"> | string | null
    label?: StringNullableWithAggregatesFilter<"Projects"> | string | null
    type?: Enumproject_typeNullableWithAggregatesFilter<"Projects"> | project_type | null
    subproject_name_singular?: StringNullableWithAggregatesFilter<"Projects"> | string | null
    subproject_name_plural?: StringNullableWithAggregatesFilter<"Projects"> | string | null
    subproject_order_by?: StringNullableWithAggregatesFilter<"Projects"> | string | null
    places_label_by?: StringNullableWithAggregatesFilter<"Projects"> | string | null
    places_order_by?: JsonNullableWithAggregatesFilter<"Projects">
    persons_label_by?: StringNullableWithAggregatesFilter<"Projects"> | string | null
    persons_order_by?: StringNullableWithAggregatesFilter<"Projects"> | string | null
    goal_reports_label_by?: StringNullableWithAggregatesFilter<"Projects"> | string | null
    goal_reports_order_by?: StringNullableWithAggregatesFilter<"Projects"> | string | null
    values_on_multiple_levels?: StringNullableWithAggregatesFilter<"Projects"> | string | null
    multiple_action_values_on_same_level?: StringNullableWithAggregatesFilter<"Projects"> | string | null
    multiple_check_values_on_same_level?: StringNullableWithAggregatesFilter<"Projects"> | string | null
    data?: JsonNullableWithAggregatesFilter<"Projects">
    files_offline?: BoolNullableWithAggregatesFilter<"Projects"> | boolean | null
    files_active_projects?: BoolNullableWithAggregatesFilter<"Projects"> | boolean | null
    files_active_subprojects?: BoolNullableWithAggregatesFilter<"Projects"> | boolean | null
    files_active_places?: BoolNullableWithAggregatesFilter<"Projects"> | boolean | null
    files_active_actions?: BoolNullableWithAggregatesFilter<"Projects"> | boolean | null
    files_active_checks?: BoolNullableWithAggregatesFilter<"Projects"> | boolean | null
    deleted?: BoolNullableWithAggregatesFilter<"Projects"> | boolean | null
  }

  export type Subproject_taxaWhereInput = {
    AND?: Enumerable<Subproject_taxaWhereInput>
    OR?: Enumerable<Subproject_taxaWhereInput>
    NOT?: Enumerable<Subproject_taxaWhereInput>
    subproject_taxon_id?: UuidFilter<"Subproject_taxa"> | string
    account_id?: UuidNullableFilter<"Subproject_taxa"> | string | null
    subproject_id?: UuidNullableFilter<"Subproject_taxa"> | string | null
    taxon_id?: UuidNullableFilter<"Subproject_taxa"> | string | null
    label?: StringNullableFilter<"Subproject_taxa"> | string | null
    deleted?: BoolNullableFilter<"Subproject_taxa"> | boolean | null
    accounts?: XOR<AccountsNullableRelationFilter, AccountsWhereInput> | null
    subprojects?: XOR<SubprojectsNullableRelationFilter, SubprojectsWhereInput> | null
    taxa?: XOR<TaxaNullableRelationFilter, TaxaWhereInput> | null
  }

  export type Subproject_taxaOrderByWithRelationInput = {
    subproject_taxon_id?: SortOrder
    account_id?: SortOrderInput | SortOrder
    subproject_id?: SortOrderInput | SortOrder
    taxon_id?: SortOrderInput | SortOrder
    label?: SortOrderInput | SortOrder
    deleted?: SortOrderInput | SortOrder
    accounts?: AccountsOrderByWithRelationInput
    subprojects?: SubprojectsOrderByWithRelationInput
    taxa?: TaxaOrderByWithRelationInput
  }

  export type Subproject_taxaWhereUniqueInput = Prisma.AtLeast<{
    subproject_taxon_id?: string
    AND?: Enumerable<Subproject_taxaWhereInput>
    OR?: Enumerable<Subproject_taxaWhereInput>
    NOT?: Enumerable<Subproject_taxaWhereInput>
    account_id?: UuidNullableFilter<"Subproject_taxa"> | string | null
    subproject_id?: UuidNullableFilter<"Subproject_taxa"> | string | null
    taxon_id?: UuidNullableFilter<"Subproject_taxa"> | string | null
    label?: StringNullableFilter<"Subproject_taxa"> | string | null
    deleted?: BoolNullableFilter<"Subproject_taxa"> | boolean | null
    accounts?: XOR<AccountsNullableRelationFilter, AccountsWhereInput> | null
    subprojects?: XOR<SubprojectsNullableRelationFilter, SubprojectsWhereInput> | null
    taxa?: XOR<TaxaNullableRelationFilter, TaxaWhereInput> | null
  }, "subproject_taxon_id">

  export type Subproject_taxaOrderByWithAggregationInput = {
    subproject_taxon_id?: SortOrder
    account_id?: SortOrderInput | SortOrder
    subproject_id?: SortOrderInput | SortOrder
    taxon_id?: SortOrderInput | SortOrder
    label?: SortOrderInput | SortOrder
    deleted?: SortOrderInput | SortOrder
    _count?: Subproject_taxaCountOrderByAggregateInput
    _max?: Subproject_taxaMaxOrderByAggregateInput
    _min?: Subproject_taxaMinOrderByAggregateInput
  }

  export type Subproject_taxaScalarWhereWithAggregatesInput = {
    AND?: Enumerable<Subproject_taxaScalarWhereWithAggregatesInput>
    OR?: Enumerable<Subproject_taxaScalarWhereWithAggregatesInput>
    NOT?: Enumerable<Subproject_taxaScalarWhereWithAggregatesInput>
    subproject_taxon_id?: UuidWithAggregatesFilter<"Subproject_taxa"> | string
    account_id?: UuidNullableWithAggregatesFilter<"Subproject_taxa"> | string | null
    subproject_id?: UuidNullableWithAggregatesFilter<"Subproject_taxa"> | string | null
    taxon_id?: UuidNullableWithAggregatesFilter<"Subproject_taxa"> | string | null
    label?: StringNullableWithAggregatesFilter<"Subproject_taxa"> | string | null
    deleted?: BoolNullableWithAggregatesFilter<"Subproject_taxa"> | boolean | null
  }

  export type Subproject_usersWhereInput = {
    AND?: Enumerable<Subproject_usersWhereInput>
    OR?: Enumerable<Subproject_usersWhereInput>
    NOT?: Enumerable<Subproject_usersWhereInput>
    subproject_user_id?: UuidFilter<"Subproject_users"> | string
    account_id?: UuidNullableFilter<"Subproject_users"> | string | null
    subproject_id?: UuidNullableFilter<"Subproject_users"> | string | null
    user_id?: UuidNullableFilter<"Subproject_users"> | string | null
    role?: StringNullableFilter<"Subproject_users"> | string | null
    label?: StringNullableFilter<"Subproject_users"> | string | null
    deleted?: BoolNullableFilter<"Subproject_users"> | boolean | null
    accounts?: XOR<AccountsNullableRelationFilter, AccountsWhereInput> | null
    subprojects?: XOR<SubprojectsNullableRelationFilter, SubprojectsWhereInput> | null
    users?: XOR<UsersNullableRelationFilter, UsersWhereInput> | null
  }

  export type Subproject_usersOrderByWithRelationInput = {
    subproject_user_id?: SortOrder
    account_id?: SortOrderInput | SortOrder
    subproject_id?: SortOrderInput | SortOrder
    user_id?: SortOrderInput | SortOrder
    role?: SortOrderInput | SortOrder
    label?: SortOrderInput | SortOrder
    deleted?: SortOrderInput | SortOrder
    accounts?: AccountsOrderByWithRelationInput
    subprojects?: SubprojectsOrderByWithRelationInput
    users?: UsersOrderByWithRelationInput
  }

  export type Subproject_usersWhereUniqueInput = Prisma.AtLeast<{
    subproject_user_id?: string
    AND?: Enumerable<Subproject_usersWhereInput>
    OR?: Enumerable<Subproject_usersWhereInput>
    NOT?: Enumerable<Subproject_usersWhereInput>
    account_id?: UuidNullableFilter<"Subproject_users"> | string | null
    subproject_id?: UuidNullableFilter<"Subproject_users"> | string | null
    user_id?: UuidNullableFilter<"Subproject_users"> | string | null
    role?: StringNullableFilter<"Subproject_users"> | string | null
    label?: StringNullableFilter<"Subproject_users"> | string | null
    deleted?: BoolNullableFilter<"Subproject_users"> | boolean | null
    accounts?: XOR<AccountsNullableRelationFilter, AccountsWhereInput> | null
    subprojects?: XOR<SubprojectsNullableRelationFilter, SubprojectsWhereInput> | null
    users?: XOR<UsersNullableRelationFilter, UsersWhereInput> | null
  }, "subproject_user_id">

  export type Subproject_usersOrderByWithAggregationInput = {
    subproject_user_id?: SortOrder
    account_id?: SortOrderInput | SortOrder
    subproject_id?: SortOrderInput | SortOrder
    user_id?: SortOrderInput | SortOrder
    role?: SortOrderInput | SortOrder
    label?: SortOrderInput | SortOrder
    deleted?: SortOrderInput | SortOrder
    _count?: Subproject_usersCountOrderByAggregateInput
    _max?: Subproject_usersMaxOrderByAggregateInput
    _min?: Subproject_usersMinOrderByAggregateInput
  }

  export type Subproject_usersScalarWhereWithAggregatesInput = {
    AND?: Enumerable<Subproject_usersScalarWhereWithAggregatesInput>
    OR?: Enumerable<Subproject_usersScalarWhereWithAggregatesInput>
    NOT?: Enumerable<Subproject_usersScalarWhereWithAggregatesInput>
    subproject_user_id?: UuidWithAggregatesFilter<"Subproject_users"> | string
    account_id?: UuidNullableWithAggregatesFilter<"Subproject_users"> | string | null
    subproject_id?: UuidNullableWithAggregatesFilter<"Subproject_users"> | string | null
    user_id?: UuidNullableWithAggregatesFilter<"Subproject_users"> | string | null
    role?: StringNullableWithAggregatesFilter<"Subproject_users"> | string | null
    label?: StringNullableWithAggregatesFilter<"Subproject_users"> | string | null
    deleted?: BoolNullableWithAggregatesFilter<"Subproject_users"> | boolean | null
  }

  export type SubprojectsWhereInput = {
    AND?: Enumerable<SubprojectsWhereInput>
    OR?: Enumerable<SubprojectsWhereInput>
    NOT?: Enumerable<SubprojectsWhereInput>
    subproject_id?: UuidFilter<"Subprojects"> | string
    account_id?: UuidNullableFilter<"Subprojects"> | string | null
    project_id?: UuidNullableFilter<"Subprojects"> | string | null
    name?: StringNullableFilter<"Subprojects"> | string | null
    label_replace_by_generated_column?: StringNullableFilter<"Subprojects"> | string | null
    start_year?: IntNullableFilter<"Subprojects"> | number | null
    end_year?: IntNullableFilter<"Subprojects"> | number | null
    data?: JsonNullableFilter<"Subprojects">
    deleted?: BoolNullableFilter<"Subprojects"> | boolean | null
    gbif_occurrence_downloads?: Gbif_occurrence_downloadsListRelationFilter
    gbif_occurrences?: Gbif_occurrencesListRelationFilter
    goals?: GoalsListRelationFilter
    subproject_taxa?: Subproject_taxaListRelationFilter
    subproject_users?: Subproject_usersListRelationFilter
    accounts?: XOR<AccountsNullableRelationFilter, AccountsWhereInput> | null
    projects?: XOR<ProjectsNullableRelationFilter, ProjectsWhereInput> | null
  }

  export type SubprojectsOrderByWithRelationInput = {
    subproject_id?: SortOrder
    account_id?: SortOrderInput | SortOrder
    project_id?: SortOrderInput | SortOrder
    name?: SortOrderInput | SortOrder
    label_replace_by_generated_column?: SortOrderInput | SortOrder
    start_year?: SortOrderInput | SortOrder
    end_year?: SortOrderInput | SortOrder
    data?: SortOrderInput | SortOrder
    deleted?: SortOrderInput | SortOrder
    gbif_occurrence_downloads?: Gbif_occurrence_downloadsOrderByRelationAggregateInput
    gbif_occurrences?: Gbif_occurrencesOrderByRelationAggregateInput
    goals?: GoalsOrderByRelationAggregateInput
    subproject_taxa?: Subproject_taxaOrderByRelationAggregateInput
    subproject_users?: Subproject_usersOrderByRelationAggregateInput
    accounts?: AccountsOrderByWithRelationInput
    projects?: ProjectsOrderByWithRelationInput
  }

  export type SubprojectsWhereUniqueInput = Prisma.AtLeast<{
    subproject_id?: string
    AND?: Enumerable<SubprojectsWhereInput>
    OR?: Enumerable<SubprojectsWhereInput>
    NOT?: Enumerable<SubprojectsWhereInput>
    account_id?: UuidNullableFilter<"Subprojects"> | string | null
    project_id?: UuidNullableFilter<"Subprojects"> | string | null
    name?: StringNullableFilter<"Subprojects"> | string | null
    label_replace_by_generated_column?: StringNullableFilter<"Subprojects"> | string | null
    start_year?: IntNullableFilter<"Subprojects"> | number | null
    end_year?: IntNullableFilter<"Subprojects"> | number | null
    data?: JsonNullableFilter<"Subprojects">
    deleted?: BoolNullableFilter<"Subprojects"> | boolean | null
    gbif_occurrence_downloads?: Gbif_occurrence_downloadsListRelationFilter
    gbif_occurrences?: Gbif_occurrencesListRelationFilter
    goals?: GoalsListRelationFilter
    subproject_taxa?: Subproject_taxaListRelationFilter
    subproject_users?: Subproject_usersListRelationFilter
    accounts?: XOR<AccountsNullableRelationFilter, AccountsWhereInput> | null
    projects?: XOR<ProjectsNullableRelationFilter, ProjectsWhereInput> | null
  }, "subproject_id">

  export type SubprojectsOrderByWithAggregationInput = {
    subproject_id?: SortOrder
    account_id?: SortOrderInput | SortOrder
    project_id?: SortOrderInput | SortOrder
    name?: SortOrderInput | SortOrder
    label_replace_by_generated_column?: SortOrderInput | SortOrder
    start_year?: SortOrderInput | SortOrder
    end_year?: SortOrderInput | SortOrder
    data?: SortOrderInput | SortOrder
    deleted?: SortOrderInput | SortOrder
    _count?: SubprojectsCountOrderByAggregateInput
    _avg?: SubprojectsAvgOrderByAggregateInput
    _max?: SubprojectsMaxOrderByAggregateInput
    _min?: SubprojectsMinOrderByAggregateInput
    _sum?: SubprojectsSumOrderByAggregateInput
  }

  export type SubprojectsScalarWhereWithAggregatesInput = {
    AND?: Enumerable<SubprojectsScalarWhereWithAggregatesInput>
    OR?: Enumerable<SubprojectsScalarWhereWithAggregatesInput>
    NOT?: Enumerable<SubprojectsScalarWhereWithAggregatesInput>
    subproject_id?: UuidWithAggregatesFilter<"Subprojects"> | string
    account_id?: UuidNullableWithAggregatesFilter<"Subprojects"> | string | null
    project_id?: UuidNullableWithAggregatesFilter<"Subprojects"> | string | null
    name?: StringNullableWithAggregatesFilter<"Subprojects"> | string | null
    label_replace_by_generated_column?: StringNullableWithAggregatesFilter<"Subprojects"> | string | null
    start_year?: IntNullableWithAggregatesFilter<"Subprojects"> | number | null
    end_year?: IntNullableWithAggregatesFilter<"Subprojects"> | number | null
    data?: JsonNullableWithAggregatesFilter<"Subprojects">
    deleted?: BoolNullableWithAggregatesFilter<"Subprojects"> | boolean | null
  }

  export type TaxaWhereInput = {
    AND?: Enumerable<TaxaWhereInput>
    OR?: Enumerable<TaxaWhereInput>
    NOT?: Enumerable<TaxaWhereInput>
    taxon_id?: UuidFilter<"Taxa"> | string
    account_id?: UuidNullableFilter<"Taxa"> | string | null
    taxonomy_id?: UuidNullableFilter<"Taxa"> | string | null
    name?: StringNullableFilter<"Taxa"> | string | null
    id_in_source?: StringNullableFilter<"Taxa"> | string | null
    url?: StringNullableFilter<"Taxa"> | string | null
    label?: StringNullableFilter<"Taxa"> | string | null
    deleted?: BoolNullableFilter<"Taxa"> | boolean | null
    subproject_taxa?: Subproject_taxaListRelationFilter
    accounts?: XOR<AccountsNullableRelationFilter, AccountsWhereInput> | null
    taxonomies?: XOR<TaxonomiesNullableRelationFilter, TaxonomiesWhereInput> | null
  }

  export type TaxaOrderByWithRelationInput = {
    taxon_id?: SortOrder
    account_id?: SortOrderInput | SortOrder
    taxonomy_id?: SortOrderInput | SortOrder
    name?: SortOrderInput | SortOrder
    id_in_source?: SortOrderInput | SortOrder
    url?: SortOrderInput | SortOrder
    label?: SortOrderInput | SortOrder
    deleted?: SortOrderInput | SortOrder
    subproject_taxa?: Subproject_taxaOrderByRelationAggregateInput
    accounts?: AccountsOrderByWithRelationInput
    taxonomies?: TaxonomiesOrderByWithRelationInput
  }

  export type TaxaWhereUniqueInput = Prisma.AtLeast<{
    taxon_id?: string
    AND?: Enumerable<TaxaWhereInput>
    OR?: Enumerable<TaxaWhereInput>
    NOT?: Enumerable<TaxaWhereInput>
    account_id?: UuidNullableFilter<"Taxa"> | string | null
    taxonomy_id?: UuidNullableFilter<"Taxa"> | string | null
    name?: StringNullableFilter<"Taxa"> | string | null
    id_in_source?: StringNullableFilter<"Taxa"> | string | null
    url?: StringNullableFilter<"Taxa"> | string | null
    label?: StringNullableFilter<"Taxa"> | string | null
    deleted?: BoolNullableFilter<"Taxa"> | boolean | null
    subproject_taxa?: Subproject_taxaListRelationFilter
    accounts?: XOR<AccountsNullableRelationFilter, AccountsWhereInput> | null
    taxonomies?: XOR<TaxonomiesNullableRelationFilter, TaxonomiesWhereInput> | null
  }, "taxon_id">

  export type TaxaOrderByWithAggregationInput = {
    taxon_id?: SortOrder
    account_id?: SortOrderInput | SortOrder
    taxonomy_id?: SortOrderInput | SortOrder
    name?: SortOrderInput | SortOrder
    id_in_source?: SortOrderInput | SortOrder
    url?: SortOrderInput | SortOrder
    label?: SortOrderInput | SortOrder
    deleted?: SortOrderInput | SortOrder
    _count?: TaxaCountOrderByAggregateInput
    _max?: TaxaMaxOrderByAggregateInput
    _min?: TaxaMinOrderByAggregateInput
  }

  export type TaxaScalarWhereWithAggregatesInput = {
    AND?: Enumerable<TaxaScalarWhereWithAggregatesInput>
    OR?: Enumerable<TaxaScalarWhereWithAggregatesInput>
    NOT?: Enumerable<TaxaScalarWhereWithAggregatesInput>
    taxon_id?: UuidWithAggregatesFilter<"Taxa"> | string
    account_id?: UuidNullableWithAggregatesFilter<"Taxa"> | string | null
    taxonomy_id?: UuidNullableWithAggregatesFilter<"Taxa"> | string | null
    name?: StringNullableWithAggregatesFilter<"Taxa"> | string | null
    id_in_source?: StringNullableWithAggregatesFilter<"Taxa"> | string | null
    url?: StringNullableWithAggregatesFilter<"Taxa"> | string | null
    label?: StringNullableWithAggregatesFilter<"Taxa"> | string | null
    deleted?: BoolNullableWithAggregatesFilter<"Taxa"> | boolean | null
  }

  export type TaxonomiesWhereInput = {
    AND?: Enumerable<TaxonomiesWhereInput>
    OR?: Enumerable<TaxonomiesWhereInput>
    NOT?: Enumerable<TaxonomiesWhereInput>
    taxonomy_id?: UuidFilter<"Taxonomies"> | string
    account_id?: UuidNullableFilter<"Taxonomies"> | string | null
    project_id?: UuidNullableFilter<"Taxonomies"> | string | null
    type?: Enumtaxonomy_typeNullableFilter<"Taxonomies"> | taxonomy_type | null
    name?: StringNullableFilter<"Taxonomies"> | string | null
    url?: StringNullableFilter<"Taxonomies"> | string | null
    obsolete?: BoolNullableFilter<"Taxonomies"> | boolean | null
    data?: JsonNullableFilter<"Taxonomies">
    label_replace_by_generated_column?: StringNullableFilter<"Taxonomies"> | string | null
    deleted?: BoolNullableFilter<"Taxonomies"> | boolean | null
    taxa?: TaxaListRelationFilter
    accounts?: XOR<AccountsNullableRelationFilter, AccountsWhereInput> | null
    projects?: XOR<ProjectsNullableRelationFilter, ProjectsWhereInput> | null
  }

  export type TaxonomiesOrderByWithRelationInput = {
    taxonomy_id?: SortOrder
    account_id?: SortOrderInput | SortOrder
    project_id?: SortOrderInput | SortOrder
    type?: SortOrderInput | SortOrder
    name?: SortOrderInput | SortOrder
    url?: SortOrderInput | SortOrder
    obsolete?: SortOrderInput | SortOrder
    data?: SortOrderInput | SortOrder
    label_replace_by_generated_column?: SortOrderInput | SortOrder
    deleted?: SortOrderInput | SortOrder
    taxa?: TaxaOrderByRelationAggregateInput
    accounts?: AccountsOrderByWithRelationInput
    projects?: ProjectsOrderByWithRelationInput
  }

  export type TaxonomiesWhereUniqueInput = Prisma.AtLeast<{
    taxonomy_id?: string
    AND?: Enumerable<TaxonomiesWhereInput>
    OR?: Enumerable<TaxonomiesWhereInput>
    NOT?: Enumerable<TaxonomiesWhereInput>
    account_id?: UuidNullableFilter<"Taxonomies"> | string | null
    project_id?: UuidNullableFilter<"Taxonomies"> | string | null
    type?: Enumtaxonomy_typeNullableFilter<"Taxonomies"> | taxonomy_type | null
    name?: StringNullableFilter<"Taxonomies"> | string | null
    url?: StringNullableFilter<"Taxonomies"> | string | null
    obsolete?: BoolNullableFilter<"Taxonomies"> | boolean | null
    data?: JsonNullableFilter<"Taxonomies">
    label_replace_by_generated_column?: StringNullableFilter<"Taxonomies"> | string | null
    deleted?: BoolNullableFilter<"Taxonomies"> | boolean | null
    taxa?: TaxaListRelationFilter
    accounts?: XOR<AccountsNullableRelationFilter, AccountsWhereInput> | null
    projects?: XOR<ProjectsNullableRelationFilter, ProjectsWhereInput> | null
  }, "taxonomy_id">

  export type TaxonomiesOrderByWithAggregationInput = {
    taxonomy_id?: SortOrder
    account_id?: SortOrderInput | SortOrder
    project_id?: SortOrderInput | SortOrder
    type?: SortOrderInput | SortOrder
    name?: SortOrderInput | SortOrder
    url?: SortOrderInput | SortOrder
    obsolete?: SortOrderInput | SortOrder
    data?: SortOrderInput | SortOrder
    label_replace_by_generated_column?: SortOrderInput | SortOrder
    deleted?: SortOrderInput | SortOrder
    _count?: TaxonomiesCountOrderByAggregateInput
    _max?: TaxonomiesMaxOrderByAggregateInput
    _min?: TaxonomiesMinOrderByAggregateInput
  }

  export type TaxonomiesScalarWhereWithAggregatesInput = {
    AND?: Enumerable<TaxonomiesScalarWhereWithAggregatesInput>
    OR?: Enumerable<TaxonomiesScalarWhereWithAggregatesInput>
    NOT?: Enumerable<TaxonomiesScalarWhereWithAggregatesInput>
    taxonomy_id?: UuidWithAggregatesFilter<"Taxonomies"> | string
    account_id?: UuidNullableWithAggregatesFilter<"Taxonomies"> | string | null
    project_id?: UuidNullableWithAggregatesFilter<"Taxonomies"> | string | null
    type?: Enumtaxonomy_typeNullableWithAggregatesFilter<"Taxonomies"> | taxonomy_type | null
    name?: StringNullableWithAggregatesFilter<"Taxonomies"> | string | null
    url?: StringNullableWithAggregatesFilter<"Taxonomies"> | string | null
    obsolete?: BoolNullableWithAggregatesFilter<"Taxonomies"> | boolean | null
    data?: JsonNullableWithAggregatesFilter<"Taxonomies">
    label_replace_by_generated_column?: StringNullableWithAggregatesFilter<"Taxonomies"> | string | null
    deleted?: BoolNullableWithAggregatesFilter<"Taxonomies"> | boolean | null
  }

  export type Tile_layersWhereInput = {
    AND?: Enumerable<Tile_layersWhereInput>
    OR?: Enumerable<Tile_layersWhereInput>
    NOT?: Enumerable<Tile_layersWhereInput>
    tile_layer_id?: UuidFilter<"Tile_layers"> | string
    account_id?: UuidNullableFilter<"Tile_layers"> | string | null
    project_id?: UuidFilter<"Tile_layers"> | string
    label?: StringNullableFilter<"Tile_layers"> | string | null
    sort?: IntNullableFilter<"Tile_layers"> | number | null
    active?: BoolNullableFilter<"Tile_layers"> | boolean | null
    type?: Enumtile_layer_type_enumNullableFilter<"Tile_layers"> | tile_layer_type_enum | null
    wmts_url_template?: StringNullableFilter<"Tile_layers"> | string | null
    wmts_subdomains?: JsonNullableFilter<"Tile_layers">
    wms_base_url?: StringNullableFilter<"Tile_layers"> | string | null
    wms_format?: JsonNullableFilter<"Tile_layers">
    wms_layer?: JsonNullableFilter<"Tile_layers">
    wms_parameters?: JsonNullableFilter<"Tile_layers">
    wms_styles?: JsonNullableFilter<"Tile_layers">
    wms_transparent?: BoolNullableFilter<"Tile_layers"> | boolean | null
    wms_version?: StringNullableFilter<"Tile_layers"> | string | null
    wms_info_format?: JsonNullableFilter<"Tile_layers">
    wms_legend?: JsonNullableFilter<"Tile_layers">
    max_zoom?: IntNullableFilter<"Tile_layers"> | number | null
    min_zoom?: IntNullableFilter<"Tile_layers"> | number | null
    opacity_percent?: IntNullableFilter<"Tile_layers"> | number | null
    grayscale?: BoolNullableFilter<"Tile_layers"> | boolean | null
    local_data_size?: IntNullableFilter<"Tile_layers"> | number | null
    local_data_bounds?: JsonNullableFilter<"Tile_layers">
    deleted?: BoolNullableFilter<"Tile_layers"> | boolean | null
    accounts?: XOR<AccountsNullableRelationFilter, AccountsWhereInput> | null
    projects?: XOR<ProjectsRelationFilter, ProjectsWhereInput>
  }

  export type Tile_layersOrderByWithRelationInput = {
    tile_layer_id?: SortOrder
    account_id?: SortOrderInput | SortOrder
    project_id?: SortOrder
    label?: SortOrderInput | SortOrder
    sort?: SortOrderInput | SortOrder
    active?: SortOrderInput | SortOrder
    type?: SortOrderInput | SortOrder
    wmts_url_template?: SortOrderInput | SortOrder
    wmts_subdomains?: SortOrderInput | SortOrder
    wms_base_url?: SortOrderInput | SortOrder
    wms_format?: SortOrderInput | SortOrder
    wms_layer?: SortOrderInput | SortOrder
    wms_parameters?: SortOrderInput | SortOrder
    wms_styles?: SortOrderInput | SortOrder
    wms_transparent?: SortOrderInput | SortOrder
    wms_version?: SortOrderInput | SortOrder
    wms_info_format?: SortOrderInput | SortOrder
    wms_legend?: SortOrderInput | SortOrder
    max_zoom?: SortOrderInput | SortOrder
    min_zoom?: SortOrderInput | SortOrder
    opacity_percent?: SortOrderInput | SortOrder
    grayscale?: SortOrderInput | SortOrder
    local_data_size?: SortOrderInput | SortOrder
    local_data_bounds?: SortOrderInput | SortOrder
    deleted?: SortOrderInput | SortOrder
    accounts?: AccountsOrderByWithRelationInput
    projects?: ProjectsOrderByWithRelationInput
  }

  export type Tile_layersWhereUniqueInput = Prisma.AtLeast<{
    tile_layer_id?: string
    AND?: Enumerable<Tile_layersWhereInput>
    OR?: Enumerable<Tile_layersWhereInput>
    NOT?: Enumerable<Tile_layersWhereInput>
    account_id?: UuidNullableFilter<"Tile_layers"> | string | null
    project_id?: UuidFilter<"Tile_layers"> | string
    label?: StringNullableFilter<"Tile_layers"> | string | null
    sort?: IntNullableFilter<"Tile_layers"> | number | null
    active?: BoolNullableFilter<"Tile_layers"> | boolean | null
    type?: Enumtile_layer_type_enumNullableFilter<"Tile_layers"> | tile_layer_type_enum | null
    wmts_url_template?: StringNullableFilter<"Tile_layers"> | string | null
    wmts_subdomains?: JsonNullableFilter<"Tile_layers">
    wms_base_url?: StringNullableFilter<"Tile_layers"> | string | null
    wms_format?: JsonNullableFilter<"Tile_layers">
    wms_layer?: JsonNullableFilter<"Tile_layers">
    wms_parameters?: JsonNullableFilter<"Tile_layers">
    wms_styles?: JsonNullableFilter<"Tile_layers">
    wms_transparent?: BoolNullableFilter<"Tile_layers"> | boolean | null
    wms_version?: StringNullableFilter<"Tile_layers"> | string | null
    wms_info_format?: JsonNullableFilter<"Tile_layers">
    wms_legend?: JsonNullableFilter<"Tile_layers">
    max_zoom?: IntNullableFilter<"Tile_layers"> | number | null
    min_zoom?: IntNullableFilter<"Tile_layers"> | number | null
    opacity_percent?: IntNullableFilter<"Tile_layers"> | number | null
    grayscale?: BoolNullableFilter<"Tile_layers"> | boolean | null
    local_data_size?: IntNullableFilter<"Tile_layers"> | number | null
    local_data_bounds?: JsonNullableFilter<"Tile_layers">
    deleted?: BoolNullableFilter<"Tile_layers"> | boolean | null
    accounts?: XOR<AccountsNullableRelationFilter, AccountsWhereInput> | null
    projects?: XOR<ProjectsRelationFilter, ProjectsWhereInput>
  }, "tile_layer_id">

  export type Tile_layersOrderByWithAggregationInput = {
    tile_layer_id?: SortOrder
    account_id?: SortOrderInput | SortOrder
    project_id?: SortOrder
    label?: SortOrderInput | SortOrder
    sort?: SortOrderInput | SortOrder
    active?: SortOrderInput | SortOrder
    type?: SortOrderInput | SortOrder
    wmts_url_template?: SortOrderInput | SortOrder
    wmts_subdomains?: SortOrderInput | SortOrder
    wms_base_url?: SortOrderInput | SortOrder
    wms_format?: SortOrderInput | SortOrder
    wms_layer?: SortOrderInput | SortOrder
    wms_parameters?: SortOrderInput | SortOrder
    wms_styles?: SortOrderInput | SortOrder
    wms_transparent?: SortOrderInput | SortOrder
    wms_version?: SortOrderInput | SortOrder
    wms_info_format?: SortOrderInput | SortOrder
    wms_legend?: SortOrderInput | SortOrder
    max_zoom?: SortOrderInput | SortOrder
    min_zoom?: SortOrderInput | SortOrder
    opacity_percent?: SortOrderInput | SortOrder
    grayscale?: SortOrderInput | SortOrder
    local_data_size?: SortOrderInput | SortOrder
    local_data_bounds?: SortOrderInput | SortOrder
    deleted?: SortOrderInput | SortOrder
    _count?: Tile_layersCountOrderByAggregateInput
    _avg?: Tile_layersAvgOrderByAggregateInput
    _max?: Tile_layersMaxOrderByAggregateInput
    _min?: Tile_layersMinOrderByAggregateInput
    _sum?: Tile_layersSumOrderByAggregateInput
  }

  export type Tile_layersScalarWhereWithAggregatesInput = {
    AND?: Enumerable<Tile_layersScalarWhereWithAggregatesInput>
    OR?: Enumerable<Tile_layersScalarWhereWithAggregatesInput>
    NOT?: Enumerable<Tile_layersScalarWhereWithAggregatesInput>
    tile_layer_id?: UuidWithAggregatesFilter<"Tile_layers"> | string
    account_id?: UuidNullableWithAggregatesFilter<"Tile_layers"> | string | null
    project_id?: UuidWithAggregatesFilter<"Tile_layers"> | string
    label?: StringNullableWithAggregatesFilter<"Tile_layers"> | string | null
    sort?: IntNullableWithAggregatesFilter<"Tile_layers"> | number | null
    active?: BoolNullableWithAggregatesFilter<"Tile_layers"> | boolean | null
    type?: Enumtile_layer_type_enumNullableWithAggregatesFilter<"Tile_layers"> | tile_layer_type_enum | null
    wmts_url_template?: StringNullableWithAggregatesFilter<"Tile_layers"> | string | null
    wmts_subdomains?: JsonNullableWithAggregatesFilter<"Tile_layers">
    wms_base_url?: StringNullableWithAggregatesFilter<"Tile_layers"> | string | null
    wms_format?: JsonNullableWithAggregatesFilter<"Tile_layers">
    wms_layer?: JsonNullableWithAggregatesFilter<"Tile_layers">
    wms_parameters?: JsonNullableWithAggregatesFilter<"Tile_layers">
    wms_styles?: JsonNullableWithAggregatesFilter<"Tile_layers">
    wms_transparent?: BoolNullableWithAggregatesFilter<"Tile_layers"> | boolean | null
    wms_version?: StringNullableWithAggregatesFilter<"Tile_layers"> | string | null
    wms_info_format?: JsonNullableWithAggregatesFilter<"Tile_layers">
    wms_legend?: JsonNullableWithAggregatesFilter<"Tile_layers">
    max_zoom?: IntNullableWithAggregatesFilter<"Tile_layers"> | number | null
    min_zoom?: IntNullableWithAggregatesFilter<"Tile_layers"> | number | null
    opacity_percent?: IntNullableWithAggregatesFilter<"Tile_layers"> | number | null
    grayscale?: BoolNullableWithAggregatesFilter<"Tile_layers"> | boolean | null
    local_data_size?: IntNullableWithAggregatesFilter<"Tile_layers"> | number | null
    local_data_bounds?: JsonNullableWithAggregatesFilter<"Tile_layers">
    deleted?: BoolNullableWithAggregatesFilter<"Tile_layers"> | boolean | null
  }

  export type Ui_optionsWhereInput = {
    AND?: Enumerable<Ui_optionsWhereInput>
    OR?: Enumerable<Ui_optionsWhereInput>
    NOT?: Enumerable<Ui_optionsWhereInput>
    user_id?: UuidFilter<"Ui_options"> | string
    account_id?: UuidNullableFilter<"Ui_options"> | string | null
    designing?: BoolNullableFilter<"Ui_options"> | boolean | null
    breadcrumbs_overflowing?: BoolNullableFilter<"Ui_options"> | boolean | null
    navs_overflowing?: BoolNullableFilter<"Ui_options"> | boolean | null
    tabs?: JsonNullableFilter<"Ui_options">
    show_map?: BoolNullableFilter<"Ui_options"> | boolean | null
    map_bounds?: JsonNullableFilter<"Ui_options">
    local_map_show?: JsonNullableFilter<"Ui_options">
    tile_layer_sorter?: StringNullableFilter<"Ui_options"> | string | null
    vector_layer_sorter?: StringNullableFilter<"Ui_options"> | string | null
    editing_place_geometry?: UuidNullableFilter<"Ui_options"> | string | null
    editing_check_geometry?: UuidNullableFilter<"Ui_options"> | string | null
    editing_action_geometry?: UuidNullableFilter<"Ui_options"> | string | null
    label?: StringNullableFilter<"Ui_options"> | string | null
    accounts?: XOR<AccountsNullableRelationFilter, AccountsWhereInput> | null
    users?: XOR<UsersRelationFilter, UsersWhereInput>
  }

  export type Ui_optionsOrderByWithRelationInput = {
    user_id?: SortOrder
    account_id?: SortOrderInput | SortOrder
    designing?: SortOrderInput | SortOrder
    breadcrumbs_overflowing?: SortOrderInput | SortOrder
    navs_overflowing?: SortOrderInput | SortOrder
    tabs?: SortOrderInput | SortOrder
    show_map?: SortOrderInput | SortOrder
    map_bounds?: SortOrderInput | SortOrder
    local_map_show?: SortOrderInput | SortOrder
    tile_layer_sorter?: SortOrderInput | SortOrder
    vector_layer_sorter?: SortOrderInput | SortOrder
    editing_place_geometry?: SortOrderInput | SortOrder
    editing_check_geometry?: SortOrderInput | SortOrder
    editing_action_geometry?: SortOrderInput | SortOrder
    label?: SortOrderInput | SortOrder
    accounts?: AccountsOrderByWithRelationInput
    users?: UsersOrderByWithRelationInput
  }

  export type Ui_optionsWhereUniqueInput = Prisma.AtLeast<{
    user_id?: string
    AND?: Enumerable<Ui_optionsWhereInput>
    OR?: Enumerable<Ui_optionsWhereInput>
    NOT?: Enumerable<Ui_optionsWhereInput>
    account_id?: UuidNullableFilter<"Ui_options"> | string | null
    designing?: BoolNullableFilter<"Ui_options"> | boolean | null
    breadcrumbs_overflowing?: BoolNullableFilter<"Ui_options"> | boolean | null
    navs_overflowing?: BoolNullableFilter<"Ui_options"> | boolean | null
    tabs?: JsonNullableFilter<"Ui_options">
    show_map?: BoolNullableFilter<"Ui_options"> | boolean | null
    map_bounds?: JsonNullableFilter<"Ui_options">
    local_map_show?: JsonNullableFilter<"Ui_options">
    tile_layer_sorter?: StringNullableFilter<"Ui_options"> | string | null
    vector_layer_sorter?: StringNullableFilter<"Ui_options"> | string | null
    editing_place_geometry?: UuidNullableFilter<"Ui_options"> | string | null
    editing_check_geometry?: UuidNullableFilter<"Ui_options"> | string | null
    editing_action_geometry?: UuidNullableFilter<"Ui_options"> | string | null
    label?: StringNullableFilter<"Ui_options"> | string | null
    accounts?: XOR<AccountsNullableRelationFilter, AccountsWhereInput> | null
    users?: XOR<UsersRelationFilter, UsersWhereInput>
  }, "user_id">

  export type Ui_optionsOrderByWithAggregationInput = {
    user_id?: SortOrder
    account_id?: SortOrderInput | SortOrder
    designing?: SortOrderInput | SortOrder
    breadcrumbs_overflowing?: SortOrderInput | SortOrder
    navs_overflowing?: SortOrderInput | SortOrder
    tabs?: SortOrderInput | SortOrder
    show_map?: SortOrderInput | SortOrder
    map_bounds?: SortOrderInput | SortOrder
    local_map_show?: SortOrderInput | SortOrder
    tile_layer_sorter?: SortOrderInput | SortOrder
    vector_layer_sorter?: SortOrderInput | SortOrder
    editing_place_geometry?: SortOrderInput | SortOrder
    editing_check_geometry?: SortOrderInput | SortOrder
    editing_action_geometry?: SortOrderInput | SortOrder
    label?: SortOrderInput | SortOrder
    _count?: Ui_optionsCountOrderByAggregateInput
    _max?: Ui_optionsMaxOrderByAggregateInput
    _min?: Ui_optionsMinOrderByAggregateInput
  }

  export type Ui_optionsScalarWhereWithAggregatesInput = {
    AND?: Enumerable<Ui_optionsScalarWhereWithAggregatesInput>
    OR?: Enumerable<Ui_optionsScalarWhereWithAggregatesInput>
    NOT?: Enumerable<Ui_optionsScalarWhereWithAggregatesInput>
    user_id?: UuidWithAggregatesFilter<"Ui_options"> | string
    account_id?: UuidNullableWithAggregatesFilter<"Ui_options"> | string | null
    designing?: BoolNullableWithAggregatesFilter<"Ui_options"> | boolean | null
    breadcrumbs_overflowing?: BoolNullableWithAggregatesFilter<"Ui_options"> | boolean | null
    navs_overflowing?: BoolNullableWithAggregatesFilter<"Ui_options"> | boolean | null
    tabs?: JsonNullableWithAggregatesFilter<"Ui_options">
    show_map?: BoolNullableWithAggregatesFilter<"Ui_options"> | boolean | null
    map_bounds?: JsonNullableWithAggregatesFilter<"Ui_options">
    local_map_show?: JsonNullableWithAggregatesFilter<"Ui_options">
    tile_layer_sorter?: StringNullableWithAggregatesFilter<"Ui_options"> | string | null
    vector_layer_sorter?: StringNullableWithAggregatesFilter<"Ui_options"> | string | null
    editing_place_geometry?: UuidNullableWithAggregatesFilter<"Ui_options"> | string | null
    editing_check_geometry?: UuidNullableWithAggregatesFilter<"Ui_options"> | string | null
    editing_action_geometry?: UuidNullableWithAggregatesFilter<"Ui_options"> | string | null
    label?: StringNullableWithAggregatesFilter<"Ui_options"> | string | null
  }

  export type UnitsWhereInput = {
    AND?: Enumerable<UnitsWhereInput>
    OR?: Enumerable<UnitsWhereInput>
    NOT?: Enumerable<UnitsWhereInput>
    unit_id?: UuidFilter<"Units"> | string
    account_id?: UuidNullableFilter<"Units"> | string | null
    project_id?: UuidNullableFilter<"Units"> | string | null
    use_for_action_values?: BoolNullableFilter<"Units"> | boolean | null
    use_for_action_report_values?: BoolNullableFilter<"Units"> | boolean | null
    use_for_check_values?: BoolNullableFilter<"Units"> | boolean | null
    use_for_place_report_values?: BoolNullableFilter<"Units"> | boolean | null
    use_for_goal_report_values?: BoolNullableFilter<"Units"> | boolean | null
    use_for_subproject_taxa?: BoolNullableFilter<"Units"> | boolean | null
    use_for_check_taxa?: BoolNullableFilter<"Units"> | boolean | null
    name?: StringNullableFilter<"Units"> | string | null
    summable?: BoolNullableFilter<"Units"> | boolean | null
    sort?: IntNullableFilter<"Units"> | number | null
    type?: Enumunit_typeNullableFilter<"Units"> | unit_type | null
    list_id?: UuidNullableFilter<"Units"> | string | null
    label_replace_by_generated_column?: StringNullableFilter<"Units"> | string | null
    deleted?: BoolNullableFilter<"Units"> | boolean | null
    goal_report_values?: Goal_report_valuesListRelationFilter
    accounts?: XOR<AccountsNullableRelationFilter, AccountsWhereInput> | null
    lists?: XOR<ListsNullableRelationFilter, ListsWhereInput> | null
    projects?: XOR<ProjectsNullableRelationFilter, ProjectsWhereInput> | null
  }

  export type UnitsOrderByWithRelationInput = {
    unit_id?: SortOrder
    account_id?: SortOrderInput | SortOrder
    project_id?: SortOrderInput | SortOrder
    use_for_action_values?: SortOrderInput | SortOrder
    use_for_action_report_values?: SortOrderInput | SortOrder
    use_for_check_values?: SortOrderInput | SortOrder
    use_for_place_report_values?: SortOrderInput | SortOrder
    use_for_goal_report_values?: SortOrderInput | SortOrder
    use_for_subproject_taxa?: SortOrderInput | SortOrder
    use_for_check_taxa?: SortOrderInput | SortOrder
    name?: SortOrderInput | SortOrder
    summable?: SortOrderInput | SortOrder
    sort?: SortOrderInput | SortOrder
    type?: SortOrderInput | SortOrder
    list_id?: SortOrderInput | SortOrder
    label_replace_by_generated_column?: SortOrderInput | SortOrder
    deleted?: SortOrderInput | SortOrder
    goal_report_values?: Goal_report_valuesOrderByRelationAggregateInput
    accounts?: AccountsOrderByWithRelationInput
    lists?: ListsOrderByWithRelationInput
    projects?: ProjectsOrderByWithRelationInput
  }

  export type UnitsWhereUniqueInput = Prisma.AtLeast<{
    unit_id?: string
    AND?: Enumerable<UnitsWhereInput>
    OR?: Enumerable<UnitsWhereInput>
    NOT?: Enumerable<UnitsWhereInput>
    account_id?: UuidNullableFilter<"Units"> | string | null
    project_id?: UuidNullableFilter<"Units"> | string | null
    use_for_action_values?: BoolNullableFilter<"Units"> | boolean | null
    use_for_action_report_values?: BoolNullableFilter<"Units"> | boolean | null
    use_for_check_values?: BoolNullableFilter<"Units"> | boolean | null
    use_for_place_report_values?: BoolNullableFilter<"Units"> | boolean | null
    use_for_goal_report_values?: BoolNullableFilter<"Units"> | boolean | null
    use_for_subproject_taxa?: BoolNullableFilter<"Units"> | boolean | null
    use_for_check_taxa?: BoolNullableFilter<"Units"> | boolean | null
    name?: StringNullableFilter<"Units"> | string | null
    summable?: BoolNullableFilter<"Units"> | boolean | null
    sort?: IntNullableFilter<"Units"> | number | null
    type?: Enumunit_typeNullableFilter<"Units"> | unit_type | null
    list_id?: UuidNullableFilter<"Units"> | string | null
    label_replace_by_generated_column?: StringNullableFilter<"Units"> | string | null
    deleted?: BoolNullableFilter<"Units"> | boolean | null
    goal_report_values?: Goal_report_valuesListRelationFilter
    accounts?: XOR<AccountsNullableRelationFilter, AccountsWhereInput> | null
    lists?: XOR<ListsNullableRelationFilter, ListsWhereInput> | null
    projects?: XOR<ProjectsNullableRelationFilter, ProjectsWhereInput> | null
  }, "unit_id">

  export type UnitsOrderByWithAggregationInput = {
    unit_id?: SortOrder
    account_id?: SortOrderInput | SortOrder
    project_id?: SortOrderInput | SortOrder
    use_for_action_values?: SortOrderInput | SortOrder
    use_for_action_report_values?: SortOrderInput | SortOrder
    use_for_check_values?: SortOrderInput | SortOrder
    use_for_place_report_values?: SortOrderInput | SortOrder
    use_for_goal_report_values?: SortOrderInput | SortOrder
    use_for_subproject_taxa?: SortOrderInput | SortOrder
    use_for_check_taxa?: SortOrderInput | SortOrder
    name?: SortOrderInput | SortOrder
    summable?: SortOrderInput | SortOrder
    sort?: SortOrderInput | SortOrder
    type?: SortOrderInput | SortOrder
    list_id?: SortOrderInput | SortOrder
    label_replace_by_generated_column?: SortOrderInput | SortOrder
    deleted?: SortOrderInput | SortOrder
    _count?: UnitsCountOrderByAggregateInput
    _avg?: UnitsAvgOrderByAggregateInput
    _max?: UnitsMaxOrderByAggregateInput
    _min?: UnitsMinOrderByAggregateInput
    _sum?: UnitsSumOrderByAggregateInput
  }

  export type UnitsScalarWhereWithAggregatesInput = {
    AND?: Enumerable<UnitsScalarWhereWithAggregatesInput>
    OR?: Enumerable<UnitsScalarWhereWithAggregatesInput>
    NOT?: Enumerable<UnitsScalarWhereWithAggregatesInput>
    unit_id?: UuidWithAggregatesFilter<"Units"> | string
    account_id?: UuidNullableWithAggregatesFilter<"Units"> | string | null
    project_id?: UuidNullableWithAggregatesFilter<"Units"> | string | null
    use_for_action_values?: BoolNullableWithAggregatesFilter<"Units"> | boolean | null
    use_for_action_report_values?: BoolNullableWithAggregatesFilter<"Units"> | boolean | null
    use_for_check_values?: BoolNullableWithAggregatesFilter<"Units"> | boolean | null
    use_for_place_report_values?: BoolNullableWithAggregatesFilter<"Units"> | boolean | null
    use_for_goal_report_values?: BoolNullableWithAggregatesFilter<"Units"> | boolean | null
    use_for_subproject_taxa?: BoolNullableWithAggregatesFilter<"Units"> | boolean | null
    use_for_check_taxa?: BoolNullableWithAggregatesFilter<"Units"> | boolean | null
    name?: StringNullableWithAggregatesFilter<"Units"> | string | null
    summable?: BoolNullableWithAggregatesFilter<"Units"> | boolean | null
    sort?: IntNullableWithAggregatesFilter<"Units"> | number | null
    type?: Enumunit_typeNullableWithAggregatesFilter<"Units"> | unit_type | null
    list_id?: UuidNullableWithAggregatesFilter<"Units"> | string | null
    label_replace_by_generated_column?: StringNullableWithAggregatesFilter<"Units"> | string | null
    deleted?: BoolNullableWithAggregatesFilter<"Units"> | boolean | null
  }

  export type User_messagesWhereInput = {
    AND?: Enumerable<User_messagesWhereInput>
    OR?: Enumerable<User_messagesWhereInput>
    NOT?: Enumerable<User_messagesWhereInput>
    user_message_id?: UuidFilter<"User_messages"> | string
    account_id?: UuidNullableFilter<"User_messages"> | string | null
    user_id?: UuidNullableFilter<"User_messages"> | string | null
    message_id?: UuidNullableFilter<"User_messages"> | string | null
    label_replace_by_generated_column?: StringNullableFilter<"User_messages"> | string | null
    read?: BoolNullableFilter<"User_messages"> | boolean | null
    accounts?: XOR<AccountsNullableRelationFilter, AccountsWhereInput> | null
    messages?: XOR<MessagesNullableRelationFilter, MessagesWhereInput> | null
    users?: XOR<UsersNullableRelationFilter, UsersWhereInput> | null
  }

  export type User_messagesOrderByWithRelationInput = {
    user_message_id?: SortOrder
    account_id?: SortOrderInput | SortOrder
    user_id?: SortOrderInput | SortOrder
    message_id?: SortOrderInput | SortOrder
    label_replace_by_generated_column?: SortOrderInput | SortOrder
    read?: SortOrderInput | SortOrder
    accounts?: AccountsOrderByWithRelationInput
    messages?: MessagesOrderByWithRelationInput
    users?: UsersOrderByWithRelationInput
  }

  export type User_messagesWhereUniqueInput = Prisma.AtLeast<{
    user_message_id?: string
    AND?: Enumerable<User_messagesWhereInput>
    OR?: Enumerable<User_messagesWhereInput>
    NOT?: Enumerable<User_messagesWhereInput>
    account_id?: UuidNullableFilter<"User_messages"> | string | null
    user_id?: UuidNullableFilter<"User_messages"> | string | null
    message_id?: UuidNullableFilter<"User_messages"> | string | null
    label_replace_by_generated_column?: StringNullableFilter<"User_messages"> | string | null
    read?: BoolNullableFilter<"User_messages"> | boolean | null
    accounts?: XOR<AccountsNullableRelationFilter, AccountsWhereInput> | null
    messages?: XOR<MessagesNullableRelationFilter, MessagesWhereInput> | null
    users?: XOR<UsersNullableRelationFilter, UsersWhereInput> | null
  }, "user_message_id">

  export type User_messagesOrderByWithAggregationInput = {
    user_message_id?: SortOrder
    account_id?: SortOrderInput | SortOrder
    user_id?: SortOrderInput | SortOrder
    message_id?: SortOrderInput | SortOrder
    label_replace_by_generated_column?: SortOrderInput | SortOrder
    read?: SortOrderInput | SortOrder
    _count?: User_messagesCountOrderByAggregateInput
    _max?: User_messagesMaxOrderByAggregateInput
    _min?: User_messagesMinOrderByAggregateInput
  }

  export type User_messagesScalarWhereWithAggregatesInput = {
    AND?: Enumerable<User_messagesScalarWhereWithAggregatesInput>
    OR?: Enumerable<User_messagesScalarWhereWithAggregatesInput>
    NOT?: Enumerable<User_messagesScalarWhereWithAggregatesInput>
    user_message_id?: UuidWithAggregatesFilter<"User_messages"> | string
    account_id?: UuidNullableWithAggregatesFilter<"User_messages"> | string | null
    user_id?: UuidNullableWithAggregatesFilter<"User_messages"> | string | null
    message_id?: UuidNullableWithAggregatesFilter<"User_messages"> | string | null
    label_replace_by_generated_column?: StringNullableWithAggregatesFilter<"User_messages"> | string | null
    read?: BoolNullableWithAggregatesFilter<"User_messages"> | boolean | null
  }

  export type UsersWhereInput = {
    AND?: Enumerable<UsersWhereInput>
    OR?: Enumerable<UsersWhereInput>
    NOT?: Enumerable<UsersWhereInput>
    user_id?: UuidFilter<"Users"> | string
    email?: StringNullableFilter<"Users"> | string | null
    auth_id?: UuidNullableFilter<"Users"> | string | null
    label_replace_by_generated_column?: StringNullableFilter<"Users"> | string | null
    deleted?: BoolNullableFilter<"Users"> | boolean | null
    accounts?: AccountsListRelationFilter
    project_users?: Project_usersListRelationFilter
    subproject_users?: Subproject_usersListRelationFilter
    ui_options?: XOR<Ui_optionsNullableRelationFilter, Ui_optionsWhereInput> | null
    user_messages?: User_messagesListRelationFilter
  }

  export type UsersOrderByWithRelationInput = {
    user_id?: SortOrder
    email?: SortOrderInput | SortOrder
    auth_id?: SortOrderInput | SortOrder
    label_replace_by_generated_column?: SortOrderInput | SortOrder
    deleted?: SortOrderInput | SortOrder
    accounts?: AccountsOrderByRelationAggregateInput
    project_users?: Project_usersOrderByRelationAggregateInput
    subproject_users?: Subproject_usersOrderByRelationAggregateInput
    ui_options?: Ui_optionsOrderByWithRelationInput
    user_messages?: User_messagesOrderByRelationAggregateInput
  }

  export type UsersWhereUniqueInput = Prisma.AtLeast<{
    user_id?: string
    AND?: Enumerable<UsersWhereInput>
    OR?: Enumerable<UsersWhereInput>
    NOT?: Enumerable<UsersWhereInput>
    email?: StringNullableFilter<"Users"> | string | null
    auth_id?: UuidNullableFilter<"Users"> | string | null
    label_replace_by_generated_column?: StringNullableFilter<"Users"> | string | null
    deleted?: BoolNullableFilter<"Users"> | boolean | null
    accounts?: AccountsListRelationFilter
    project_users?: Project_usersListRelationFilter
    subproject_users?: Subproject_usersListRelationFilter
    ui_options?: XOR<Ui_optionsNullableRelationFilter, Ui_optionsWhereInput> | null
    user_messages?: User_messagesListRelationFilter
  }, "user_id">

  export type UsersOrderByWithAggregationInput = {
    user_id?: SortOrder
    email?: SortOrderInput | SortOrder
    auth_id?: SortOrderInput | SortOrder
    label_replace_by_generated_column?: SortOrderInput | SortOrder
    deleted?: SortOrderInput | SortOrder
    _count?: UsersCountOrderByAggregateInput
    _max?: UsersMaxOrderByAggregateInput
    _min?: UsersMinOrderByAggregateInput
  }

  export type UsersScalarWhereWithAggregatesInput = {
    AND?: Enumerable<UsersScalarWhereWithAggregatesInput>
    OR?: Enumerable<UsersScalarWhereWithAggregatesInput>
    NOT?: Enumerable<UsersScalarWhereWithAggregatesInput>
    user_id?: UuidWithAggregatesFilter<"Users"> | string
    email?: StringNullableWithAggregatesFilter<"Users"> | string | null
    auth_id?: UuidNullableWithAggregatesFilter<"Users"> | string | null
    label_replace_by_generated_column?: StringNullableWithAggregatesFilter<"Users"> | string | null
    deleted?: BoolNullableWithAggregatesFilter<"Users"> | boolean | null
  }

  export type Widget_typesWhereInput = {
    AND?: Enumerable<Widget_typesWhereInput>
    OR?: Enumerable<Widget_typesWhereInput>
    NOT?: Enumerable<Widget_typesWhereInput>
    widget_type_id?: UuidFilter<"Widget_types"> | string
    name?: StringNullableFilter<"Widget_types"> | string | null
    needs_list?: BoolNullableFilter<"Widget_types"> | boolean | null
    sort?: IntNullableFilter<"Widget_types"> | number | null
    comment?: StringNullableFilter<"Widget_types"> | string | null
    label_replace_by_generated_column?: StringNullableFilter<"Widget_types"> | string | null
    deleted?: BoolNullableFilter<"Widget_types"> | boolean | null
    widgets_for_fields?: Widgets_for_fieldsListRelationFilter
  }

  export type Widget_typesOrderByWithRelationInput = {
    widget_type_id?: SortOrder
    name?: SortOrderInput | SortOrder
    needs_list?: SortOrderInput | SortOrder
    sort?: SortOrderInput | SortOrder
    comment?: SortOrderInput | SortOrder
    label_replace_by_generated_column?: SortOrderInput | SortOrder
    deleted?: SortOrderInput | SortOrder
    widgets_for_fields?: Widgets_for_fieldsOrderByRelationAggregateInput
  }

  export type Widget_typesWhereUniqueInput = Prisma.AtLeast<{
    widget_type_id?: string
    AND?: Enumerable<Widget_typesWhereInput>
    OR?: Enumerable<Widget_typesWhereInput>
    NOT?: Enumerable<Widget_typesWhereInput>
    name?: StringNullableFilter<"Widget_types"> | string | null
    needs_list?: BoolNullableFilter<"Widget_types"> | boolean | null
    sort?: IntNullableFilter<"Widget_types"> | number | null
    comment?: StringNullableFilter<"Widget_types"> | string | null
    label_replace_by_generated_column?: StringNullableFilter<"Widget_types"> | string | null
    deleted?: BoolNullableFilter<"Widget_types"> | boolean | null
    widgets_for_fields?: Widgets_for_fieldsListRelationFilter
  }, "widget_type_id">

  export type Widget_typesOrderByWithAggregationInput = {
    widget_type_id?: SortOrder
    name?: SortOrderInput | SortOrder
    needs_list?: SortOrderInput | SortOrder
    sort?: SortOrderInput | SortOrder
    comment?: SortOrderInput | SortOrder
    label_replace_by_generated_column?: SortOrderInput | SortOrder
    deleted?: SortOrderInput | SortOrder
    _count?: Widget_typesCountOrderByAggregateInput
    _avg?: Widget_typesAvgOrderByAggregateInput
    _max?: Widget_typesMaxOrderByAggregateInput
    _min?: Widget_typesMinOrderByAggregateInput
    _sum?: Widget_typesSumOrderByAggregateInput
  }

  export type Widget_typesScalarWhereWithAggregatesInput = {
    AND?: Enumerable<Widget_typesScalarWhereWithAggregatesInput>
    OR?: Enumerable<Widget_typesScalarWhereWithAggregatesInput>
    NOT?: Enumerable<Widget_typesScalarWhereWithAggregatesInput>
    widget_type_id?: UuidWithAggregatesFilter<"Widget_types"> | string
    name?: StringNullableWithAggregatesFilter<"Widget_types"> | string | null
    needs_list?: BoolNullableWithAggregatesFilter<"Widget_types"> | boolean | null
    sort?: IntNullableWithAggregatesFilter<"Widget_types"> | number | null
    comment?: StringNullableWithAggregatesFilter<"Widget_types"> | string | null
    label_replace_by_generated_column?: StringNullableWithAggregatesFilter<"Widget_types"> | string | null
    deleted?: BoolNullableWithAggregatesFilter<"Widget_types"> | boolean | null
  }

  export type Widgets_for_fieldsWhereInput = {
    AND?: Enumerable<Widgets_for_fieldsWhereInput>
    OR?: Enumerable<Widgets_for_fieldsWhereInput>
    NOT?: Enumerable<Widgets_for_fieldsWhereInput>
    widget_for_field_id?: UuidFilter<"Widgets_for_fields"> | string
    field_type_id?: UuidNullableFilter<"Widgets_for_fields"> | string | null
    widget_type_id?: UuidNullableFilter<"Widgets_for_fields"> | string | null
    label?: StringNullableFilter<"Widgets_for_fields"> | string | null
    deleted?: BoolNullableFilter<"Widgets_for_fields"> | boolean | null
    field_types?: XOR<Field_typesNullableRelationFilter, Field_typesWhereInput> | null
    widget_types?: XOR<Widget_typesNullableRelationFilter, Widget_typesWhereInput> | null
  }

  export type Widgets_for_fieldsOrderByWithRelationInput = {
    widget_for_field_id?: SortOrder
    field_type_id?: SortOrderInput | SortOrder
    widget_type_id?: SortOrderInput | SortOrder
    label?: SortOrderInput | SortOrder
    deleted?: SortOrderInput | SortOrder
    field_types?: Field_typesOrderByWithRelationInput
    widget_types?: Widget_typesOrderByWithRelationInput
  }

  export type Widgets_for_fieldsWhereUniqueInput = Prisma.AtLeast<{
    widget_for_field_id?: string
    AND?: Enumerable<Widgets_for_fieldsWhereInput>
    OR?: Enumerable<Widgets_for_fieldsWhereInput>
    NOT?: Enumerable<Widgets_for_fieldsWhereInput>
    field_type_id?: UuidNullableFilter<"Widgets_for_fields"> | string | null
    widget_type_id?: UuidNullableFilter<"Widgets_for_fields"> | string | null
    label?: StringNullableFilter<"Widgets_for_fields"> | string | null
    deleted?: BoolNullableFilter<"Widgets_for_fields"> | boolean | null
    field_types?: XOR<Field_typesNullableRelationFilter, Field_typesWhereInput> | null
    widget_types?: XOR<Widget_typesNullableRelationFilter, Widget_typesWhereInput> | null
  }, "widget_for_field_id">

  export type Widgets_for_fieldsOrderByWithAggregationInput = {
    widget_for_field_id?: SortOrder
    field_type_id?: SortOrderInput | SortOrder
    widget_type_id?: SortOrderInput | SortOrder
    label?: SortOrderInput | SortOrder
    deleted?: SortOrderInput | SortOrder
    _count?: Widgets_for_fieldsCountOrderByAggregateInput
    _max?: Widgets_for_fieldsMaxOrderByAggregateInput
    _min?: Widgets_for_fieldsMinOrderByAggregateInput
  }

  export type Widgets_for_fieldsScalarWhereWithAggregatesInput = {
    AND?: Enumerable<Widgets_for_fieldsScalarWhereWithAggregatesInput>
    OR?: Enumerable<Widgets_for_fieldsScalarWhereWithAggregatesInput>
    NOT?: Enumerable<Widgets_for_fieldsScalarWhereWithAggregatesInput>
    widget_for_field_id?: UuidWithAggregatesFilter<"Widgets_for_fields"> | string
    field_type_id?: UuidNullableWithAggregatesFilter<"Widgets_for_fields"> | string | null
    widget_type_id?: UuidNullableWithAggregatesFilter<"Widgets_for_fields"> | string | null
    label?: StringNullableWithAggregatesFilter<"Widgets_for_fields"> | string | null
    deleted?: BoolNullableWithAggregatesFilter<"Widgets_for_fields"> | boolean | null
  }

  export type AccountsCreateInput = {
    account_id: string
    type?: string | null
    period_start?: Date | string | null
    period_end?: Date | string | null
    projects_label_by?: string | null
    label?: string | null
    users?: UsersCreateNestedOneWithoutAccountsInput
    gbif_occurrence_downloads?: Gbif_occurrence_downloadsCreateNestedManyWithoutAccountsInput
    gbif_occurrences?: Gbif_occurrencesCreateNestedManyWithoutAccountsInput
    gbif_taxa?: Gbif_taxaCreateNestedManyWithoutAccountsInput
    goal_report_values?: Goal_report_valuesCreateNestedManyWithoutAccountsInput
    goal_reports?: Goal_reportsCreateNestedManyWithoutAccountsInput
    goals?: GoalsCreateNestedManyWithoutAccountsInput
    list_values?: List_valuesCreateNestedManyWithoutAccountsInput
    lists?: ListsCreateNestedManyWithoutAccountsInput
    observation_sources?: Observation_sourcesCreateNestedManyWithoutAccountsInput
    persons?: PersonsCreateNestedManyWithoutAccountsInput
    place_levels?: Place_levelsCreateNestedManyWithoutAccountsInput
    project_users?: Project_usersCreateNestedManyWithoutAccountsInput
    projects?: ProjectsCreateNestedManyWithoutAccountsInput
    subproject_taxa?: Subproject_taxaCreateNestedManyWithoutAccountsInput
    subproject_users?: Subproject_usersCreateNestedManyWithoutAccountsInput
    subprojects?: SubprojectsCreateNestedManyWithoutAccountsInput
    taxa?: TaxaCreateNestedManyWithoutAccountsInput
    taxonomies?: TaxonomiesCreateNestedManyWithoutAccountsInput
    tile_layers?: Tile_layersCreateNestedManyWithoutAccountsInput
    ui_options?: Ui_optionsCreateNestedManyWithoutAccountsInput
    units?: UnitsCreateNestedManyWithoutAccountsInput
    user_messages?: User_messagesCreateNestedManyWithoutAccountsInput
  }

  export type AccountsUncheckedCreateInput = {
    account_id: string
    user_id?: string | null
    type?: string | null
    period_start?: Date | string | null
    period_end?: Date | string | null
    projects_label_by?: string | null
    label?: string | null
    gbif_occurrence_downloads?: Gbif_occurrence_downloadsUncheckedCreateNestedManyWithoutAccountsInput
    gbif_occurrences?: Gbif_occurrencesUncheckedCreateNestedManyWithoutAccountsInput
    gbif_taxa?: Gbif_taxaUncheckedCreateNestedManyWithoutAccountsInput
    goal_report_values?: Goal_report_valuesUncheckedCreateNestedManyWithoutAccountsInput
    goal_reports?: Goal_reportsUncheckedCreateNestedManyWithoutAccountsInput
    goals?: GoalsUncheckedCreateNestedManyWithoutAccountsInput
    list_values?: List_valuesUncheckedCreateNestedManyWithoutAccountsInput
    lists?: ListsUncheckedCreateNestedManyWithoutAccountsInput
    observation_sources?: Observation_sourcesUncheckedCreateNestedManyWithoutAccountsInput
    persons?: PersonsUncheckedCreateNestedManyWithoutAccountsInput
    place_levels?: Place_levelsUncheckedCreateNestedManyWithoutAccountsInput
    project_users?: Project_usersUncheckedCreateNestedManyWithoutAccountsInput
    projects?: ProjectsUncheckedCreateNestedManyWithoutAccountsInput
    subproject_taxa?: Subproject_taxaUncheckedCreateNestedManyWithoutAccountsInput
    subproject_users?: Subproject_usersUncheckedCreateNestedManyWithoutAccountsInput
    subprojects?: SubprojectsUncheckedCreateNestedManyWithoutAccountsInput
    taxa?: TaxaUncheckedCreateNestedManyWithoutAccountsInput
    taxonomies?: TaxonomiesUncheckedCreateNestedManyWithoutAccountsInput
    tile_layers?: Tile_layersUncheckedCreateNestedManyWithoutAccountsInput
    ui_options?: Ui_optionsUncheckedCreateNestedManyWithoutAccountsInput
    units?: UnitsUncheckedCreateNestedManyWithoutAccountsInput
    user_messages?: User_messagesUncheckedCreateNestedManyWithoutAccountsInput
  }

  export type AccountsUpdateInput = {
    account_id?: StringFieldUpdateOperationsInput | string
    type?: NullableStringFieldUpdateOperationsInput | string | null
    period_start?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    period_end?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    projects_label_by?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    users?: UsersUpdateOneWithoutAccountsNestedInput
    gbif_occurrence_downloads?: Gbif_occurrence_downloadsUpdateManyWithoutAccountsNestedInput
    gbif_occurrences?: Gbif_occurrencesUpdateManyWithoutAccountsNestedInput
    gbif_taxa?: Gbif_taxaUpdateManyWithoutAccountsNestedInput
    goal_report_values?: Goal_report_valuesUpdateManyWithoutAccountsNestedInput
    goal_reports?: Goal_reportsUpdateManyWithoutAccountsNestedInput
    goals?: GoalsUpdateManyWithoutAccountsNestedInput
    list_values?: List_valuesUpdateManyWithoutAccountsNestedInput
    lists?: ListsUpdateManyWithoutAccountsNestedInput
    observation_sources?: Observation_sourcesUpdateManyWithoutAccountsNestedInput
    persons?: PersonsUpdateManyWithoutAccountsNestedInput
    place_levels?: Place_levelsUpdateManyWithoutAccountsNestedInput
    project_users?: Project_usersUpdateManyWithoutAccountsNestedInput
    projects?: ProjectsUpdateManyWithoutAccountsNestedInput
    subproject_taxa?: Subproject_taxaUpdateManyWithoutAccountsNestedInput
    subproject_users?: Subproject_usersUpdateManyWithoutAccountsNestedInput
    subprojects?: SubprojectsUpdateManyWithoutAccountsNestedInput
    taxa?: TaxaUpdateManyWithoutAccountsNestedInput
    taxonomies?: TaxonomiesUpdateManyWithoutAccountsNestedInput
    tile_layers?: Tile_layersUpdateManyWithoutAccountsNestedInput
    ui_options?: Ui_optionsUpdateManyWithoutAccountsNestedInput
    units?: UnitsUpdateManyWithoutAccountsNestedInput
    user_messages?: User_messagesUpdateManyWithoutAccountsNestedInput
  }

  export type AccountsUncheckedUpdateInput = {
    account_id?: StringFieldUpdateOperationsInput | string
    user_id?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    period_start?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    period_end?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    projects_label_by?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    gbif_occurrence_downloads?: Gbif_occurrence_downloadsUncheckedUpdateManyWithoutAccountsNestedInput
    gbif_occurrences?: Gbif_occurrencesUncheckedUpdateManyWithoutAccountsNestedInput
    gbif_taxa?: Gbif_taxaUncheckedUpdateManyWithoutAccountsNestedInput
    goal_report_values?: Goal_report_valuesUncheckedUpdateManyWithoutAccountsNestedInput
    goal_reports?: Goal_reportsUncheckedUpdateManyWithoutAccountsNestedInput
    goals?: GoalsUncheckedUpdateManyWithoutAccountsNestedInput
    list_values?: List_valuesUncheckedUpdateManyWithoutAccountsNestedInput
    lists?: ListsUncheckedUpdateManyWithoutAccountsNestedInput
    observation_sources?: Observation_sourcesUncheckedUpdateManyWithoutAccountsNestedInput
    persons?: PersonsUncheckedUpdateManyWithoutAccountsNestedInput
    place_levels?: Place_levelsUncheckedUpdateManyWithoutAccountsNestedInput
    project_users?: Project_usersUncheckedUpdateManyWithoutAccountsNestedInput
    projects?: ProjectsUncheckedUpdateManyWithoutAccountsNestedInput
    subproject_taxa?: Subproject_taxaUncheckedUpdateManyWithoutAccountsNestedInput
    subproject_users?: Subproject_usersUncheckedUpdateManyWithoutAccountsNestedInput
    subprojects?: SubprojectsUncheckedUpdateManyWithoutAccountsNestedInput
    taxa?: TaxaUncheckedUpdateManyWithoutAccountsNestedInput
    taxonomies?: TaxonomiesUncheckedUpdateManyWithoutAccountsNestedInput
    tile_layers?: Tile_layersUncheckedUpdateManyWithoutAccountsNestedInput
    ui_options?: Ui_optionsUncheckedUpdateManyWithoutAccountsNestedInput
    units?: UnitsUncheckedUpdateManyWithoutAccountsNestedInput
    user_messages?: User_messagesUncheckedUpdateManyWithoutAccountsNestedInput
  }

  export type AccountsCreateManyInput = {
    account_id: string
    user_id?: string | null
    type?: string | null
    period_start?: Date | string | null
    period_end?: Date | string | null
    projects_label_by?: string | null
    label?: string | null
  }

  export type AccountsUpdateManyMutationInput = {
    account_id?: StringFieldUpdateOperationsInput | string
    type?: NullableStringFieldUpdateOperationsInput | string | null
    period_start?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    period_end?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    projects_label_by?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type AccountsUncheckedUpdateManyInput = {
    account_id?: StringFieldUpdateOperationsInput | string
    user_id?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    period_start?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    period_end?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    projects_label_by?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type Field_typesCreateInput = {
    field_type_id: string
    name?: string | null
    sort?: number | null
    comment?: string | null
    label_replace_by_generated_column?: string | null
    deleted?: boolean | null
    widgets_for_fields?: Widgets_for_fieldsCreateNestedManyWithoutField_typesInput
  }

  export type Field_typesUncheckedCreateInput = {
    field_type_id: string
    name?: string | null
    sort?: number | null
    comment?: string | null
    label_replace_by_generated_column?: string | null
    deleted?: boolean | null
    widgets_for_fields?: Widgets_for_fieldsUncheckedCreateNestedManyWithoutField_typesInput
  }

  export type Field_typesUpdateInput = {
    field_type_id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    sort?: NullableIntFieldUpdateOperationsInput | number | null
    comment?: NullableStringFieldUpdateOperationsInput | string | null
    label_replace_by_generated_column?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    widgets_for_fields?: Widgets_for_fieldsUpdateManyWithoutField_typesNestedInput
  }

  export type Field_typesUncheckedUpdateInput = {
    field_type_id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    sort?: NullableIntFieldUpdateOperationsInput | number | null
    comment?: NullableStringFieldUpdateOperationsInput | string | null
    label_replace_by_generated_column?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    widgets_for_fields?: Widgets_for_fieldsUncheckedUpdateManyWithoutField_typesNestedInput
  }

  export type Field_typesCreateManyInput = {
    field_type_id: string
    name?: string | null
    sort?: number | null
    comment?: string | null
    label_replace_by_generated_column?: string | null
    deleted?: boolean | null
  }

  export type Field_typesUpdateManyMutationInput = {
    field_type_id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    sort?: NullableIntFieldUpdateOperationsInput | number | null
    comment?: NullableStringFieldUpdateOperationsInput | string | null
    label_replace_by_generated_column?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type Field_typesUncheckedUpdateManyInput = {
    field_type_id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    sort?: NullableIntFieldUpdateOperationsInput | number | null
    comment?: NullableStringFieldUpdateOperationsInput | string | null
    label_replace_by_generated_column?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type Gbif_occurrence_downloadsCreateInput = {
    gbif_occurrence_download_id: string
    gbif_table?: gbif_table | null
    filters?: NullableJsonNullValueInput | InputJsonValue
    created_time?: Date | string | null
    download_key?: string | null
    error?: string | null
    inserted_time?: Date | string | null
    inserted_count?: number | null
    attribution?: string | null
    deleted?: boolean | null
    accounts?: AccountsCreateNestedOneWithoutGbif_occurrence_downloadsInput
    projects?: ProjectsCreateNestedOneWithoutGbif_occurrence_downloadsInput
    subprojects?: SubprojectsCreateNestedOneWithoutGbif_occurrence_downloadsInput
  }

  export type Gbif_occurrence_downloadsUncheckedCreateInput = {
    gbif_occurrence_download_id: string
    account_id?: string | null
    project_id?: string | null
    subproject_id?: string | null
    gbif_table?: gbif_table | null
    filters?: NullableJsonNullValueInput | InputJsonValue
    created_time?: Date | string | null
    download_key?: string | null
    error?: string | null
    inserted_time?: Date | string | null
    inserted_count?: number | null
    attribution?: string | null
    deleted?: boolean | null
  }

  export type Gbif_occurrence_downloadsUpdateInput = {
    gbif_occurrence_download_id?: StringFieldUpdateOperationsInput | string
    gbif_table?: NullableEnumgbif_tableFieldUpdateOperationsInput | gbif_table | null
    filters?: NullableJsonNullValueInput | InputJsonValue
    created_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    download_key?: NullableStringFieldUpdateOperationsInput | string | null
    error?: NullableStringFieldUpdateOperationsInput | string | null
    inserted_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    inserted_count?: NullableIntFieldUpdateOperationsInput | number | null
    attribution?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    accounts?: AccountsUpdateOneWithoutGbif_occurrence_downloadsNestedInput
    projects?: ProjectsUpdateOneWithoutGbif_occurrence_downloadsNestedInput
    subprojects?: SubprojectsUpdateOneWithoutGbif_occurrence_downloadsNestedInput
  }

  export type Gbif_occurrence_downloadsUncheckedUpdateInput = {
    gbif_occurrence_download_id?: StringFieldUpdateOperationsInput | string
    account_id?: NullableStringFieldUpdateOperationsInput | string | null
    project_id?: NullableStringFieldUpdateOperationsInput | string | null
    subproject_id?: NullableStringFieldUpdateOperationsInput | string | null
    gbif_table?: NullableEnumgbif_tableFieldUpdateOperationsInput | gbif_table | null
    filters?: NullableJsonNullValueInput | InputJsonValue
    created_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    download_key?: NullableStringFieldUpdateOperationsInput | string | null
    error?: NullableStringFieldUpdateOperationsInput | string | null
    inserted_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    inserted_count?: NullableIntFieldUpdateOperationsInput | number | null
    attribution?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type Gbif_occurrence_downloadsCreateManyInput = {
    gbif_occurrence_download_id: string
    account_id?: string | null
    project_id?: string | null
    subproject_id?: string | null
    gbif_table?: gbif_table | null
    filters?: NullableJsonNullValueInput | InputJsonValue
    created_time?: Date | string | null
    download_key?: string | null
    error?: string | null
    inserted_time?: Date | string | null
    inserted_count?: number | null
    attribution?: string | null
    deleted?: boolean | null
  }

  export type Gbif_occurrence_downloadsUpdateManyMutationInput = {
    gbif_occurrence_download_id?: StringFieldUpdateOperationsInput | string
    gbif_table?: NullableEnumgbif_tableFieldUpdateOperationsInput | gbif_table | null
    filters?: NullableJsonNullValueInput | InputJsonValue
    created_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    download_key?: NullableStringFieldUpdateOperationsInput | string | null
    error?: NullableStringFieldUpdateOperationsInput | string | null
    inserted_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    inserted_count?: NullableIntFieldUpdateOperationsInput | number | null
    attribution?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type Gbif_occurrence_downloadsUncheckedUpdateManyInput = {
    gbif_occurrence_download_id?: StringFieldUpdateOperationsInput | string
    account_id?: NullableStringFieldUpdateOperationsInput | string | null
    project_id?: NullableStringFieldUpdateOperationsInput | string | null
    subproject_id?: NullableStringFieldUpdateOperationsInput | string | null
    gbif_table?: NullableEnumgbif_tableFieldUpdateOperationsInput | gbif_table | null
    filters?: NullableJsonNullValueInput | InputJsonValue
    created_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    download_key?: NullableStringFieldUpdateOperationsInput | string | null
    error?: NullableStringFieldUpdateOperationsInput | string | null
    inserted_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    inserted_count?: NullableIntFieldUpdateOperationsInput | number | null
    attribution?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type Gbif_occurrencesCreateInput = {
    gbif_occurrence_id: string
    gbif_data?: NullableJsonNullValueInput | InputJsonValue
    label?: string | null
    accounts?: AccountsCreateNestedOneWithoutGbif_occurrencesInput
    projects?: ProjectsCreateNestedOneWithoutGbif_occurrencesInput
    subprojects?: SubprojectsCreateNestedOneWithoutGbif_occurrencesInput
  }

  export type Gbif_occurrencesUncheckedCreateInput = {
    gbif_occurrence_id: string
    account_id?: string | null
    project_id?: string | null
    subproject_id?: string | null
    gbif_data?: NullableJsonNullValueInput | InputJsonValue
    label?: string | null
  }

  export type Gbif_occurrencesUpdateInput = {
    gbif_occurrence_id?: StringFieldUpdateOperationsInput | string
    gbif_data?: NullableJsonNullValueInput | InputJsonValue
    label?: NullableStringFieldUpdateOperationsInput | string | null
    accounts?: AccountsUpdateOneWithoutGbif_occurrencesNestedInput
    projects?: ProjectsUpdateOneWithoutGbif_occurrencesNestedInput
    subprojects?: SubprojectsUpdateOneWithoutGbif_occurrencesNestedInput
  }

  export type Gbif_occurrencesUncheckedUpdateInput = {
    gbif_occurrence_id?: StringFieldUpdateOperationsInput | string
    account_id?: NullableStringFieldUpdateOperationsInput | string | null
    project_id?: NullableStringFieldUpdateOperationsInput | string | null
    subproject_id?: NullableStringFieldUpdateOperationsInput | string | null
    gbif_data?: NullableJsonNullValueInput | InputJsonValue
    label?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type Gbif_occurrencesCreateManyInput = {
    gbif_occurrence_id: string
    account_id?: string | null
    project_id?: string | null
    subproject_id?: string | null
    gbif_data?: NullableJsonNullValueInput | InputJsonValue
    label?: string | null
  }

  export type Gbif_occurrencesUpdateManyMutationInput = {
    gbif_occurrence_id?: StringFieldUpdateOperationsInput | string
    gbif_data?: NullableJsonNullValueInput | InputJsonValue
    label?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type Gbif_occurrencesUncheckedUpdateManyInput = {
    gbif_occurrence_id?: StringFieldUpdateOperationsInput | string
    account_id?: NullableStringFieldUpdateOperationsInput | string | null
    project_id?: NullableStringFieldUpdateOperationsInput | string | null
    subproject_id?: NullableStringFieldUpdateOperationsInput | string | null
    gbif_data?: NullableJsonNullValueInput | InputJsonValue
    label?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type Gbif_taxaCreateInput = {
    gbif_taxon_id: string
    gbif_data?: NullableJsonNullValueInput | InputJsonValue
    label?: string | null
    accounts?: AccountsCreateNestedOneWithoutGbif_taxaInput
    projects?: ProjectsCreateNestedOneWithoutGbif_taxaInput
  }

  export type Gbif_taxaUncheckedCreateInput = {
    gbif_taxon_id: string
    account_id?: string | null
    project_id?: string | null
    gbif_data?: NullableJsonNullValueInput | InputJsonValue
    label?: string | null
  }

  export type Gbif_taxaUpdateInput = {
    gbif_taxon_id?: StringFieldUpdateOperationsInput | string
    gbif_data?: NullableJsonNullValueInput | InputJsonValue
    label?: NullableStringFieldUpdateOperationsInput | string | null
    accounts?: AccountsUpdateOneWithoutGbif_taxaNestedInput
    projects?: ProjectsUpdateOneWithoutGbif_taxaNestedInput
  }

  export type Gbif_taxaUncheckedUpdateInput = {
    gbif_taxon_id?: StringFieldUpdateOperationsInput | string
    account_id?: NullableStringFieldUpdateOperationsInput | string | null
    project_id?: NullableStringFieldUpdateOperationsInput | string | null
    gbif_data?: NullableJsonNullValueInput | InputJsonValue
    label?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type Gbif_taxaCreateManyInput = {
    gbif_taxon_id: string
    account_id?: string | null
    project_id?: string | null
    gbif_data?: NullableJsonNullValueInput | InputJsonValue
    label?: string | null
  }

  export type Gbif_taxaUpdateManyMutationInput = {
    gbif_taxon_id?: StringFieldUpdateOperationsInput | string
    gbif_data?: NullableJsonNullValueInput | InputJsonValue
    label?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type Gbif_taxaUncheckedUpdateManyInput = {
    gbif_taxon_id?: StringFieldUpdateOperationsInput | string
    account_id?: NullableStringFieldUpdateOperationsInput | string | null
    project_id?: NullableStringFieldUpdateOperationsInput | string | null
    gbif_data?: NullableJsonNullValueInput | InputJsonValue
    label?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type Goal_report_valuesCreateInput = {
    goal_report_value_id: string
    value_integer?: number | null
    value_numeric?: number | null
    value_text?: string | null
    label?: string | null
    deleted?: boolean | null
    accounts?: AccountsCreateNestedOneWithoutGoal_report_valuesInput
    goal_reports?: Goal_reportsCreateNestedOneWithoutGoal_report_valuesInput
    units?: UnitsCreateNestedOneWithoutGoal_report_valuesInput
  }

  export type Goal_report_valuesUncheckedCreateInput = {
    goal_report_value_id: string
    account_id?: string | null
    goal_report_id?: string | null
    unit_id?: string | null
    value_integer?: number | null
    value_numeric?: number | null
    value_text?: string | null
    label?: string | null
    deleted?: boolean | null
  }

  export type Goal_report_valuesUpdateInput = {
    goal_report_value_id?: StringFieldUpdateOperationsInput | string
    value_integer?: NullableIntFieldUpdateOperationsInput | number | null
    value_numeric?: NullableFloatFieldUpdateOperationsInput | number | null
    value_text?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    accounts?: AccountsUpdateOneWithoutGoal_report_valuesNestedInput
    goal_reports?: Goal_reportsUpdateOneWithoutGoal_report_valuesNestedInput
    units?: UnitsUpdateOneWithoutGoal_report_valuesNestedInput
  }

  export type Goal_report_valuesUncheckedUpdateInput = {
    goal_report_value_id?: StringFieldUpdateOperationsInput | string
    account_id?: NullableStringFieldUpdateOperationsInput | string | null
    goal_report_id?: NullableStringFieldUpdateOperationsInput | string | null
    unit_id?: NullableStringFieldUpdateOperationsInput | string | null
    value_integer?: NullableIntFieldUpdateOperationsInput | number | null
    value_numeric?: NullableFloatFieldUpdateOperationsInput | number | null
    value_text?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type Goal_report_valuesCreateManyInput = {
    goal_report_value_id: string
    account_id?: string | null
    goal_report_id?: string | null
    unit_id?: string | null
    value_integer?: number | null
    value_numeric?: number | null
    value_text?: string | null
    label?: string | null
    deleted?: boolean | null
  }

  export type Goal_report_valuesUpdateManyMutationInput = {
    goal_report_value_id?: StringFieldUpdateOperationsInput | string
    value_integer?: NullableIntFieldUpdateOperationsInput | number | null
    value_numeric?: NullableFloatFieldUpdateOperationsInput | number | null
    value_text?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type Goal_report_valuesUncheckedUpdateManyInput = {
    goal_report_value_id?: StringFieldUpdateOperationsInput | string
    account_id?: NullableStringFieldUpdateOperationsInput | string | null
    goal_report_id?: NullableStringFieldUpdateOperationsInput | string | null
    unit_id?: NullableStringFieldUpdateOperationsInput | string | null
    value_integer?: NullableIntFieldUpdateOperationsInput | number | null
    value_numeric?: NullableFloatFieldUpdateOperationsInput | number | null
    value_text?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type Goal_reportsCreateInput = {
    goal_report_id: string
    data?: NullableJsonNullValueInput | InputJsonValue
    label?: string | null
    deleted?: boolean | null
    goal_report_values?: Goal_report_valuesCreateNestedManyWithoutGoal_reportsInput
    accounts?: AccountsCreateNestedOneWithoutGoal_reportsInput
    goals?: GoalsCreateNestedOneWithoutGoal_reportsInput
  }

  export type Goal_reportsUncheckedCreateInput = {
    goal_report_id: string
    account_id?: string | null
    goal_id?: string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label?: string | null
    deleted?: boolean | null
    goal_report_values?: Goal_report_valuesUncheckedCreateNestedManyWithoutGoal_reportsInput
  }

  export type Goal_reportsUpdateInput = {
    goal_report_id?: StringFieldUpdateOperationsInput | string
    data?: NullableJsonNullValueInput | InputJsonValue
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    goal_report_values?: Goal_report_valuesUpdateManyWithoutGoal_reportsNestedInput
    accounts?: AccountsUpdateOneWithoutGoal_reportsNestedInput
    goals?: GoalsUpdateOneWithoutGoal_reportsNestedInput
  }

  export type Goal_reportsUncheckedUpdateInput = {
    goal_report_id?: StringFieldUpdateOperationsInput | string
    account_id?: NullableStringFieldUpdateOperationsInput | string | null
    goal_id?: NullableStringFieldUpdateOperationsInput | string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    goal_report_values?: Goal_report_valuesUncheckedUpdateManyWithoutGoal_reportsNestedInput
  }

  export type Goal_reportsCreateManyInput = {
    goal_report_id: string
    account_id?: string | null
    goal_id?: string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label?: string | null
    deleted?: boolean | null
  }

  export type Goal_reportsUpdateManyMutationInput = {
    goal_report_id?: StringFieldUpdateOperationsInput | string
    data?: NullableJsonNullValueInput | InputJsonValue
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type Goal_reportsUncheckedUpdateManyInput = {
    goal_report_id?: StringFieldUpdateOperationsInput | string
    account_id?: NullableStringFieldUpdateOperationsInput | string | null
    goal_id?: NullableStringFieldUpdateOperationsInput | string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type GoalsCreateInput = {
    goal_id: string
    year?: number | null
    name?: string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label_replace_by_generated_column?: string | null
    deleted?: boolean | null
    goal_reports?: Goal_reportsCreateNestedManyWithoutGoalsInput
    accounts?: AccountsCreateNestedOneWithoutGoalsInput
    subprojects?: SubprojectsCreateNestedOneWithoutGoalsInput
  }

  export type GoalsUncheckedCreateInput = {
    goal_id: string
    account_id?: string | null
    subproject_id?: string | null
    year?: number | null
    name?: string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label_replace_by_generated_column?: string | null
    deleted?: boolean | null
    goal_reports?: Goal_reportsUncheckedCreateNestedManyWithoutGoalsInput
  }

  export type GoalsUpdateInput = {
    goal_id?: StringFieldUpdateOperationsInput | string
    year?: NullableIntFieldUpdateOperationsInput | number | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label_replace_by_generated_column?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    goal_reports?: Goal_reportsUpdateManyWithoutGoalsNestedInput
    accounts?: AccountsUpdateOneWithoutGoalsNestedInput
    subprojects?: SubprojectsUpdateOneWithoutGoalsNestedInput
  }

  export type GoalsUncheckedUpdateInput = {
    goal_id?: StringFieldUpdateOperationsInput | string
    account_id?: NullableStringFieldUpdateOperationsInput | string | null
    subproject_id?: NullableStringFieldUpdateOperationsInput | string | null
    year?: NullableIntFieldUpdateOperationsInput | number | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label_replace_by_generated_column?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    goal_reports?: Goal_reportsUncheckedUpdateManyWithoutGoalsNestedInput
  }

  export type GoalsCreateManyInput = {
    goal_id: string
    account_id?: string | null
    subproject_id?: string | null
    year?: number | null
    name?: string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label_replace_by_generated_column?: string | null
    deleted?: boolean | null
  }

  export type GoalsUpdateManyMutationInput = {
    goal_id?: StringFieldUpdateOperationsInput | string
    year?: NullableIntFieldUpdateOperationsInput | number | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label_replace_by_generated_column?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type GoalsUncheckedUpdateManyInput = {
    goal_id?: StringFieldUpdateOperationsInput | string
    account_id?: NullableStringFieldUpdateOperationsInput | string | null
    subproject_id?: NullableStringFieldUpdateOperationsInput | string | null
    year?: NullableIntFieldUpdateOperationsInput | number | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label_replace_by_generated_column?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type List_valuesCreateInput = {
    list_value_id: string
    value?: string | null
    obsolete?: boolean | null
    label_replace_by_generated_column?: string | null
    deleted?: boolean | null
    accounts?: AccountsCreateNestedOneWithoutList_valuesInput
    lists?: ListsCreateNestedOneWithoutList_valuesInput
  }

  export type List_valuesUncheckedCreateInput = {
    list_value_id: string
    account_id?: string | null
    list_id?: string | null
    value?: string | null
    obsolete?: boolean | null
    label_replace_by_generated_column?: string | null
    deleted?: boolean | null
  }

  export type List_valuesUpdateInput = {
    list_value_id?: StringFieldUpdateOperationsInput | string
    value?: NullableStringFieldUpdateOperationsInput | string | null
    obsolete?: NullableBoolFieldUpdateOperationsInput | boolean | null
    label_replace_by_generated_column?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    accounts?: AccountsUpdateOneWithoutList_valuesNestedInput
    lists?: ListsUpdateOneWithoutList_valuesNestedInput
  }

  export type List_valuesUncheckedUpdateInput = {
    list_value_id?: StringFieldUpdateOperationsInput | string
    account_id?: NullableStringFieldUpdateOperationsInput | string | null
    list_id?: NullableStringFieldUpdateOperationsInput | string | null
    value?: NullableStringFieldUpdateOperationsInput | string | null
    obsolete?: NullableBoolFieldUpdateOperationsInput | boolean | null
    label_replace_by_generated_column?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type List_valuesCreateManyInput = {
    list_value_id: string
    account_id?: string | null
    list_id?: string | null
    value?: string | null
    obsolete?: boolean | null
    label_replace_by_generated_column?: string | null
    deleted?: boolean | null
  }

  export type List_valuesUpdateManyMutationInput = {
    list_value_id?: StringFieldUpdateOperationsInput | string
    value?: NullableStringFieldUpdateOperationsInput | string | null
    obsolete?: NullableBoolFieldUpdateOperationsInput | boolean | null
    label_replace_by_generated_column?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type List_valuesUncheckedUpdateManyInput = {
    list_value_id?: StringFieldUpdateOperationsInput | string
    account_id?: NullableStringFieldUpdateOperationsInput | string | null
    list_id?: NullableStringFieldUpdateOperationsInput | string | null
    value?: NullableStringFieldUpdateOperationsInput | string | null
    obsolete?: NullableBoolFieldUpdateOperationsInput | boolean | null
    label_replace_by_generated_column?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type ListsCreateInput = {
    list_id: string
    name?: string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    obsolete?: boolean | null
    label_replace_by_generated_column?: string | null
    deleted?: boolean | null
    list_values?: List_valuesCreateNestedManyWithoutListsInput
    accounts?: AccountsCreateNestedOneWithoutListsInput
    projects?: ProjectsCreateNestedOneWithoutListsInput
    units?: UnitsCreateNestedManyWithoutListsInput
  }

  export type ListsUncheckedCreateInput = {
    list_id: string
    account_id?: string | null
    project_id?: string | null
    name?: string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    obsolete?: boolean | null
    label_replace_by_generated_column?: string | null
    deleted?: boolean | null
    list_values?: List_valuesUncheckedCreateNestedManyWithoutListsInput
    units?: UnitsUncheckedCreateNestedManyWithoutListsInput
  }

  export type ListsUpdateInput = {
    list_id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    obsolete?: NullableBoolFieldUpdateOperationsInput | boolean | null
    label_replace_by_generated_column?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    list_values?: List_valuesUpdateManyWithoutListsNestedInput
    accounts?: AccountsUpdateOneWithoutListsNestedInput
    projects?: ProjectsUpdateOneWithoutListsNestedInput
    units?: UnitsUpdateManyWithoutListsNestedInput
  }

  export type ListsUncheckedUpdateInput = {
    list_id?: StringFieldUpdateOperationsInput | string
    account_id?: NullableStringFieldUpdateOperationsInput | string | null
    project_id?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    obsolete?: NullableBoolFieldUpdateOperationsInput | boolean | null
    label_replace_by_generated_column?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    list_values?: List_valuesUncheckedUpdateManyWithoutListsNestedInput
    units?: UnitsUncheckedUpdateManyWithoutListsNestedInput
  }

  export type ListsCreateManyInput = {
    list_id: string
    account_id?: string | null
    project_id?: string | null
    name?: string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    obsolete?: boolean | null
    label_replace_by_generated_column?: string | null
    deleted?: boolean | null
  }

  export type ListsUpdateManyMutationInput = {
    list_id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    obsolete?: NullableBoolFieldUpdateOperationsInput | boolean | null
    label_replace_by_generated_column?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type ListsUncheckedUpdateManyInput = {
    list_id?: StringFieldUpdateOperationsInput | string
    account_id?: NullableStringFieldUpdateOperationsInput | string | null
    project_id?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    obsolete?: NullableBoolFieldUpdateOperationsInput | boolean | null
    label_replace_by_generated_column?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type MessagesCreateInput = {
    message_id: string
    label_replace_by_generated_column?: string | null
    date?: Date | string | null
    message?: string | null
    user_messages?: User_messagesCreateNestedManyWithoutMessagesInput
  }

  export type MessagesUncheckedCreateInput = {
    message_id: string
    label_replace_by_generated_column?: string | null
    date?: Date | string | null
    message?: string | null
    user_messages?: User_messagesUncheckedCreateNestedManyWithoutMessagesInput
  }

  export type MessagesUpdateInput = {
    message_id?: StringFieldUpdateOperationsInput | string
    label_replace_by_generated_column?: NullableStringFieldUpdateOperationsInput | string | null
    date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    message?: NullableStringFieldUpdateOperationsInput | string | null
    user_messages?: User_messagesUpdateManyWithoutMessagesNestedInput
  }

  export type MessagesUncheckedUpdateInput = {
    message_id?: StringFieldUpdateOperationsInput | string
    label_replace_by_generated_column?: NullableStringFieldUpdateOperationsInput | string | null
    date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    message?: NullableStringFieldUpdateOperationsInput | string | null
    user_messages?: User_messagesUncheckedUpdateManyWithoutMessagesNestedInput
  }

  export type MessagesCreateManyInput = {
    message_id: string
    label_replace_by_generated_column?: string | null
    date?: Date | string | null
    message?: string | null
  }

  export type MessagesUpdateManyMutationInput = {
    message_id?: StringFieldUpdateOperationsInput | string
    label_replace_by_generated_column?: NullableStringFieldUpdateOperationsInput | string | null
    date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    message?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type MessagesUncheckedUpdateManyInput = {
    message_id?: StringFieldUpdateOperationsInput | string
    label_replace_by_generated_column?: NullableStringFieldUpdateOperationsInput | string | null
    date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    message?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type Observation_sourcesCreateInput = {
    observation_source_id: string
    name?: string | null
    url?: string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label_replace_by_generated_column?: string | null
    deleted?: boolean | null
    accounts?: AccountsCreateNestedOneWithoutObservation_sourcesInput
    projects?: ProjectsCreateNestedOneWithoutObservation_sourcesInput
  }

  export type Observation_sourcesUncheckedCreateInput = {
    observation_source_id: string
    account_id?: string | null
    project_id?: string | null
    name?: string | null
    url?: string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label_replace_by_generated_column?: string | null
    deleted?: boolean | null
  }

  export type Observation_sourcesUpdateInput = {
    observation_source_id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    url?: NullableStringFieldUpdateOperationsInput | string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label_replace_by_generated_column?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    accounts?: AccountsUpdateOneWithoutObservation_sourcesNestedInput
    projects?: ProjectsUpdateOneWithoutObservation_sourcesNestedInput
  }

  export type Observation_sourcesUncheckedUpdateInput = {
    observation_source_id?: StringFieldUpdateOperationsInput | string
    account_id?: NullableStringFieldUpdateOperationsInput | string | null
    project_id?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    url?: NullableStringFieldUpdateOperationsInput | string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label_replace_by_generated_column?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type Observation_sourcesCreateManyInput = {
    observation_source_id: string
    account_id?: string | null
    project_id?: string | null
    name?: string | null
    url?: string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label_replace_by_generated_column?: string | null
    deleted?: boolean | null
  }

  export type Observation_sourcesUpdateManyMutationInput = {
    observation_source_id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    url?: NullableStringFieldUpdateOperationsInput | string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label_replace_by_generated_column?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type Observation_sourcesUncheckedUpdateManyInput = {
    observation_source_id?: StringFieldUpdateOperationsInput | string
    account_id?: NullableStringFieldUpdateOperationsInput | string | null
    project_id?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    url?: NullableStringFieldUpdateOperationsInput | string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label_replace_by_generated_column?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type PersonsCreateInput = {
    person_id: string
    email?: string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label_replace_by_generated_column?: string | null
    deleted?: boolean | null
    accounts?: AccountsCreateNestedOneWithoutPersonsInput
    projects?: ProjectsCreateNestedOneWithoutPersonsInput
  }

  export type PersonsUncheckedCreateInput = {
    person_id: string
    project_id?: string | null
    account_id?: string | null
    email?: string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label_replace_by_generated_column?: string | null
    deleted?: boolean | null
  }

  export type PersonsUpdateInput = {
    person_id?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label_replace_by_generated_column?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    accounts?: AccountsUpdateOneWithoutPersonsNestedInput
    projects?: ProjectsUpdateOneWithoutPersonsNestedInput
  }

  export type PersonsUncheckedUpdateInput = {
    person_id?: StringFieldUpdateOperationsInput | string
    project_id?: NullableStringFieldUpdateOperationsInput | string | null
    account_id?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label_replace_by_generated_column?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type PersonsCreateManyInput = {
    person_id: string
    project_id?: string | null
    account_id?: string | null
    email?: string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label_replace_by_generated_column?: string | null
    deleted?: boolean | null
  }

  export type PersonsUpdateManyMutationInput = {
    person_id?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label_replace_by_generated_column?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type PersonsUncheckedUpdateManyInput = {
    person_id?: StringFieldUpdateOperationsInput | string
    project_id?: NullableStringFieldUpdateOperationsInput | string | null
    account_id?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label_replace_by_generated_column?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type Place_levelsCreateInput = {
    place_level_id: string
    level?: number | null
    name_singular?: string | null
    name_plural?: string | null
    name_short?: string | null
    reports?: boolean | null
    report_values?: boolean | null
    actions?: boolean | null
    action_values?: boolean | null
    action_reports?: boolean | null
    checks?: boolean | null
    check_values?: boolean | null
    check_taxa?: boolean | null
    observations?: boolean | null
    label_replace_by_generated_column?: string | null
    deleted?: boolean | null
    accounts?: AccountsCreateNestedOneWithoutPlace_levelsInput
    projects?: ProjectsCreateNestedOneWithoutPlace_levelsInput
  }

  export type Place_levelsUncheckedCreateInput = {
    place_level_id: string
    account_id?: string | null
    project_id?: string | null
    level?: number | null
    name_singular?: string | null
    name_plural?: string | null
    name_short?: string | null
    reports?: boolean | null
    report_values?: boolean | null
    actions?: boolean | null
    action_values?: boolean | null
    action_reports?: boolean | null
    checks?: boolean | null
    check_values?: boolean | null
    check_taxa?: boolean | null
    observations?: boolean | null
    label_replace_by_generated_column?: string | null
    deleted?: boolean | null
  }

  export type Place_levelsUpdateInput = {
    place_level_id?: StringFieldUpdateOperationsInput | string
    level?: NullableIntFieldUpdateOperationsInput | number | null
    name_singular?: NullableStringFieldUpdateOperationsInput | string | null
    name_plural?: NullableStringFieldUpdateOperationsInput | string | null
    name_short?: NullableStringFieldUpdateOperationsInput | string | null
    reports?: NullableBoolFieldUpdateOperationsInput | boolean | null
    report_values?: NullableBoolFieldUpdateOperationsInput | boolean | null
    actions?: NullableBoolFieldUpdateOperationsInput | boolean | null
    action_values?: NullableBoolFieldUpdateOperationsInput | boolean | null
    action_reports?: NullableBoolFieldUpdateOperationsInput | boolean | null
    checks?: NullableBoolFieldUpdateOperationsInput | boolean | null
    check_values?: NullableBoolFieldUpdateOperationsInput | boolean | null
    check_taxa?: NullableBoolFieldUpdateOperationsInput | boolean | null
    observations?: NullableBoolFieldUpdateOperationsInput | boolean | null
    label_replace_by_generated_column?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    accounts?: AccountsUpdateOneWithoutPlace_levelsNestedInput
    projects?: ProjectsUpdateOneWithoutPlace_levelsNestedInput
  }

  export type Place_levelsUncheckedUpdateInput = {
    place_level_id?: StringFieldUpdateOperationsInput | string
    account_id?: NullableStringFieldUpdateOperationsInput | string | null
    project_id?: NullableStringFieldUpdateOperationsInput | string | null
    level?: NullableIntFieldUpdateOperationsInput | number | null
    name_singular?: NullableStringFieldUpdateOperationsInput | string | null
    name_plural?: NullableStringFieldUpdateOperationsInput | string | null
    name_short?: NullableStringFieldUpdateOperationsInput | string | null
    reports?: NullableBoolFieldUpdateOperationsInput | boolean | null
    report_values?: NullableBoolFieldUpdateOperationsInput | boolean | null
    actions?: NullableBoolFieldUpdateOperationsInput | boolean | null
    action_values?: NullableBoolFieldUpdateOperationsInput | boolean | null
    action_reports?: NullableBoolFieldUpdateOperationsInput | boolean | null
    checks?: NullableBoolFieldUpdateOperationsInput | boolean | null
    check_values?: NullableBoolFieldUpdateOperationsInput | boolean | null
    check_taxa?: NullableBoolFieldUpdateOperationsInput | boolean | null
    observations?: NullableBoolFieldUpdateOperationsInput | boolean | null
    label_replace_by_generated_column?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type Place_levelsCreateManyInput = {
    place_level_id: string
    account_id?: string | null
    project_id?: string | null
    level?: number | null
    name_singular?: string | null
    name_plural?: string | null
    name_short?: string | null
    reports?: boolean | null
    report_values?: boolean | null
    actions?: boolean | null
    action_values?: boolean | null
    action_reports?: boolean | null
    checks?: boolean | null
    check_values?: boolean | null
    check_taxa?: boolean | null
    observations?: boolean | null
    label_replace_by_generated_column?: string | null
    deleted?: boolean | null
  }

  export type Place_levelsUpdateManyMutationInput = {
    place_level_id?: StringFieldUpdateOperationsInput | string
    level?: NullableIntFieldUpdateOperationsInput | number | null
    name_singular?: NullableStringFieldUpdateOperationsInput | string | null
    name_plural?: NullableStringFieldUpdateOperationsInput | string | null
    name_short?: NullableStringFieldUpdateOperationsInput | string | null
    reports?: NullableBoolFieldUpdateOperationsInput | boolean | null
    report_values?: NullableBoolFieldUpdateOperationsInput | boolean | null
    actions?: NullableBoolFieldUpdateOperationsInput | boolean | null
    action_values?: NullableBoolFieldUpdateOperationsInput | boolean | null
    action_reports?: NullableBoolFieldUpdateOperationsInput | boolean | null
    checks?: NullableBoolFieldUpdateOperationsInput | boolean | null
    check_values?: NullableBoolFieldUpdateOperationsInput | boolean | null
    check_taxa?: NullableBoolFieldUpdateOperationsInput | boolean | null
    observations?: NullableBoolFieldUpdateOperationsInput | boolean | null
    label_replace_by_generated_column?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type Place_levelsUncheckedUpdateManyInput = {
    place_level_id?: StringFieldUpdateOperationsInput | string
    account_id?: NullableStringFieldUpdateOperationsInput | string | null
    project_id?: NullableStringFieldUpdateOperationsInput | string | null
    level?: NullableIntFieldUpdateOperationsInput | number | null
    name_singular?: NullableStringFieldUpdateOperationsInput | string | null
    name_plural?: NullableStringFieldUpdateOperationsInput | string | null
    name_short?: NullableStringFieldUpdateOperationsInput | string | null
    reports?: NullableBoolFieldUpdateOperationsInput | boolean | null
    report_values?: NullableBoolFieldUpdateOperationsInput | boolean | null
    actions?: NullableBoolFieldUpdateOperationsInput | boolean | null
    action_values?: NullableBoolFieldUpdateOperationsInput | boolean | null
    action_reports?: NullableBoolFieldUpdateOperationsInput | boolean | null
    checks?: NullableBoolFieldUpdateOperationsInput | boolean | null
    check_values?: NullableBoolFieldUpdateOperationsInput | boolean | null
    check_taxa?: NullableBoolFieldUpdateOperationsInput | boolean | null
    observations?: NullableBoolFieldUpdateOperationsInput | boolean | null
    label_replace_by_generated_column?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type Project_usersCreateInput = {
    project_user_id: string
    role?: string | null
    label?: string | null
    deleted?: boolean | null
    accounts?: AccountsCreateNestedOneWithoutProject_usersInput
    projects?: ProjectsCreateNestedOneWithoutProject_usersInput
    users?: UsersCreateNestedOneWithoutProject_usersInput
  }

  export type Project_usersUncheckedCreateInput = {
    project_user_id: string
    account_id?: string | null
    project_id?: string | null
    user_id?: string | null
    role?: string | null
    label?: string | null
    deleted?: boolean | null
  }

  export type Project_usersUpdateInput = {
    project_user_id?: StringFieldUpdateOperationsInput | string
    role?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    accounts?: AccountsUpdateOneWithoutProject_usersNestedInput
    projects?: ProjectsUpdateOneWithoutProject_usersNestedInput
    users?: UsersUpdateOneWithoutProject_usersNestedInput
  }

  export type Project_usersUncheckedUpdateInput = {
    project_user_id?: StringFieldUpdateOperationsInput | string
    account_id?: NullableStringFieldUpdateOperationsInput | string | null
    project_id?: NullableStringFieldUpdateOperationsInput | string | null
    user_id?: NullableStringFieldUpdateOperationsInput | string | null
    role?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type Project_usersCreateManyInput = {
    project_user_id: string
    account_id?: string | null
    project_id?: string | null
    user_id?: string | null
    role?: string | null
    label?: string | null
    deleted?: boolean | null
  }

  export type Project_usersUpdateManyMutationInput = {
    project_user_id?: StringFieldUpdateOperationsInput | string
    role?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type Project_usersUncheckedUpdateManyInput = {
    project_user_id?: StringFieldUpdateOperationsInput | string
    account_id?: NullableStringFieldUpdateOperationsInput | string | null
    project_id?: NullableStringFieldUpdateOperationsInput | string | null
    user_id?: NullableStringFieldUpdateOperationsInput | string | null
    role?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type ProjectsCreateInput = {
    project_id: string
    name?: string | null
    label?: string | null
    type?: project_type | null
    subproject_name_singular?: string | null
    subproject_name_plural?: string | null
    subproject_order_by?: string | null
    places_label_by?: string | null
    places_order_by?: NullableJsonNullValueInput | InputJsonValue
    persons_label_by?: string | null
    persons_order_by?: string | null
    goal_reports_label_by?: string | null
    goal_reports_order_by?: string | null
    values_on_multiple_levels?: string | null
    multiple_action_values_on_same_level?: string | null
    multiple_check_values_on_same_level?: string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    files_offline?: boolean | null
    files_active_projects?: boolean | null
    files_active_subprojects?: boolean | null
    files_active_places?: boolean | null
    files_active_actions?: boolean | null
    files_active_checks?: boolean | null
    deleted?: boolean | null
    gbif_occurrence_downloads?: Gbif_occurrence_downloadsCreateNestedManyWithoutProjectsInput
    gbif_occurrences?: Gbif_occurrencesCreateNestedManyWithoutProjectsInput
    gbif_taxa?: Gbif_taxaCreateNestedManyWithoutProjectsInput
    lists?: ListsCreateNestedManyWithoutProjectsInput
    observation_sources?: Observation_sourcesCreateNestedManyWithoutProjectsInput
    persons?: PersonsCreateNestedManyWithoutProjectsInput
    place_levels?: Place_levelsCreateNestedManyWithoutProjectsInput
    project_users?: Project_usersCreateNestedManyWithoutProjectsInput
    accounts?: AccountsCreateNestedOneWithoutProjectsInput
    subprojects?: SubprojectsCreateNestedManyWithoutProjectsInput
    taxonomies?: TaxonomiesCreateNestedManyWithoutProjectsInput
    tile_layers?: Tile_layersCreateNestedManyWithoutProjectsInput
    units?: UnitsCreateNestedManyWithoutProjectsInput
  }

  export type ProjectsUncheckedCreateInput = {
    project_id: string
    account_id?: string | null
    name?: string | null
    label?: string | null
    type?: project_type | null
    subproject_name_singular?: string | null
    subproject_name_plural?: string | null
    subproject_order_by?: string | null
    places_label_by?: string | null
    places_order_by?: NullableJsonNullValueInput | InputJsonValue
    persons_label_by?: string | null
    persons_order_by?: string | null
    goal_reports_label_by?: string | null
    goal_reports_order_by?: string | null
    values_on_multiple_levels?: string | null
    multiple_action_values_on_same_level?: string | null
    multiple_check_values_on_same_level?: string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    files_offline?: boolean | null
    files_active_projects?: boolean | null
    files_active_subprojects?: boolean | null
    files_active_places?: boolean | null
    files_active_actions?: boolean | null
    files_active_checks?: boolean | null
    deleted?: boolean | null
    gbif_occurrence_downloads?: Gbif_occurrence_downloadsUncheckedCreateNestedManyWithoutProjectsInput
    gbif_occurrences?: Gbif_occurrencesUncheckedCreateNestedManyWithoutProjectsInput
    gbif_taxa?: Gbif_taxaUncheckedCreateNestedManyWithoutProjectsInput
    lists?: ListsUncheckedCreateNestedManyWithoutProjectsInput
    observation_sources?: Observation_sourcesUncheckedCreateNestedManyWithoutProjectsInput
    persons?: PersonsUncheckedCreateNestedManyWithoutProjectsInput
    place_levels?: Place_levelsUncheckedCreateNestedManyWithoutProjectsInput
    project_users?: Project_usersUncheckedCreateNestedManyWithoutProjectsInput
    subprojects?: SubprojectsUncheckedCreateNestedManyWithoutProjectsInput
    taxonomies?: TaxonomiesUncheckedCreateNestedManyWithoutProjectsInput
    tile_layers?: Tile_layersUncheckedCreateNestedManyWithoutProjectsInput
    units?: UnitsUncheckedCreateNestedManyWithoutProjectsInput
  }

  export type ProjectsUpdateInput = {
    project_id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableEnumproject_typeFieldUpdateOperationsInput | project_type | null
    subproject_name_singular?: NullableStringFieldUpdateOperationsInput | string | null
    subproject_name_plural?: NullableStringFieldUpdateOperationsInput | string | null
    subproject_order_by?: NullableStringFieldUpdateOperationsInput | string | null
    places_label_by?: NullableStringFieldUpdateOperationsInput | string | null
    places_order_by?: NullableJsonNullValueInput | InputJsonValue
    persons_label_by?: NullableStringFieldUpdateOperationsInput | string | null
    persons_order_by?: NullableStringFieldUpdateOperationsInput | string | null
    goal_reports_label_by?: NullableStringFieldUpdateOperationsInput | string | null
    goal_reports_order_by?: NullableStringFieldUpdateOperationsInput | string | null
    values_on_multiple_levels?: NullableStringFieldUpdateOperationsInput | string | null
    multiple_action_values_on_same_level?: NullableStringFieldUpdateOperationsInput | string | null
    multiple_check_values_on_same_level?: NullableStringFieldUpdateOperationsInput | string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    files_offline?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_projects?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_subprojects?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_places?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_actions?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_checks?: NullableBoolFieldUpdateOperationsInput | boolean | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    gbif_occurrence_downloads?: Gbif_occurrence_downloadsUpdateManyWithoutProjectsNestedInput
    gbif_occurrences?: Gbif_occurrencesUpdateManyWithoutProjectsNestedInput
    gbif_taxa?: Gbif_taxaUpdateManyWithoutProjectsNestedInput
    lists?: ListsUpdateManyWithoutProjectsNestedInput
    observation_sources?: Observation_sourcesUpdateManyWithoutProjectsNestedInput
    persons?: PersonsUpdateManyWithoutProjectsNestedInput
    place_levels?: Place_levelsUpdateManyWithoutProjectsNestedInput
    project_users?: Project_usersUpdateManyWithoutProjectsNestedInput
    accounts?: AccountsUpdateOneWithoutProjectsNestedInput
    subprojects?: SubprojectsUpdateManyWithoutProjectsNestedInput
    taxonomies?: TaxonomiesUpdateManyWithoutProjectsNestedInput
    tile_layers?: Tile_layersUpdateManyWithoutProjectsNestedInput
    units?: UnitsUpdateManyWithoutProjectsNestedInput
  }

  export type ProjectsUncheckedUpdateInput = {
    project_id?: StringFieldUpdateOperationsInput | string
    account_id?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableEnumproject_typeFieldUpdateOperationsInput | project_type | null
    subproject_name_singular?: NullableStringFieldUpdateOperationsInput | string | null
    subproject_name_plural?: NullableStringFieldUpdateOperationsInput | string | null
    subproject_order_by?: NullableStringFieldUpdateOperationsInput | string | null
    places_label_by?: NullableStringFieldUpdateOperationsInput | string | null
    places_order_by?: NullableJsonNullValueInput | InputJsonValue
    persons_label_by?: NullableStringFieldUpdateOperationsInput | string | null
    persons_order_by?: NullableStringFieldUpdateOperationsInput | string | null
    goal_reports_label_by?: NullableStringFieldUpdateOperationsInput | string | null
    goal_reports_order_by?: NullableStringFieldUpdateOperationsInput | string | null
    values_on_multiple_levels?: NullableStringFieldUpdateOperationsInput | string | null
    multiple_action_values_on_same_level?: NullableStringFieldUpdateOperationsInput | string | null
    multiple_check_values_on_same_level?: NullableStringFieldUpdateOperationsInput | string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    files_offline?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_projects?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_subprojects?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_places?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_actions?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_checks?: NullableBoolFieldUpdateOperationsInput | boolean | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    gbif_occurrence_downloads?: Gbif_occurrence_downloadsUncheckedUpdateManyWithoutProjectsNestedInput
    gbif_occurrences?: Gbif_occurrencesUncheckedUpdateManyWithoutProjectsNestedInput
    gbif_taxa?: Gbif_taxaUncheckedUpdateManyWithoutProjectsNestedInput
    lists?: ListsUncheckedUpdateManyWithoutProjectsNestedInput
    observation_sources?: Observation_sourcesUncheckedUpdateManyWithoutProjectsNestedInput
    persons?: PersonsUncheckedUpdateManyWithoutProjectsNestedInput
    place_levels?: Place_levelsUncheckedUpdateManyWithoutProjectsNestedInput
    project_users?: Project_usersUncheckedUpdateManyWithoutProjectsNestedInput
    subprojects?: SubprojectsUncheckedUpdateManyWithoutProjectsNestedInput
    taxonomies?: TaxonomiesUncheckedUpdateManyWithoutProjectsNestedInput
    tile_layers?: Tile_layersUncheckedUpdateManyWithoutProjectsNestedInput
    units?: UnitsUncheckedUpdateManyWithoutProjectsNestedInput
  }

  export type ProjectsCreateManyInput = {
    project_id: string
    account_id?: string | null
    name?: string | null
    label?: string | null
    type?: project_type | null
    subproject_name_singular?: string | null
    subproject_name_plural?: string | null
    subproject_order_by?: string | null
    places_label_by?: string | null
    places_order_by?: NullableJsonNullValueInput | InputJsonValue
    persons_label_by?: string | null
    persons_order_by?: string | null
    goal_reports_label_by?: string | null
    goal_reports_order_by?: string | null
    values_on_multiple_levels?: string | null
    multiple_action_values_on_same_level?: string | null
    multiple_check_values_on_same_level?: string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    files_offline?: boolean | null
    files_active_projects?: boolean | null
    files_active_subprojects?: boolean | null
    files_active_places?: boolean | null
    files_active_actions?: boolean | null
    files_active_checks?: boolean | null
    deleted?: boolean | null
  }

  export type ProjectsUpdateManyMutationInput = {
    project_id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableEnumproject_typeFieldUpdateOperationsInput | project_type | null
    subproject_name_singular?: NullableStringFieldUpdateOperationsInput | string | null
    subproject_name_plural?: NullableStringFieldUpdateOperationsInput | string | null
    subproject_order_by?: NullableStringFieldUpdateOperationsInput | string | null
    places_label_by?: NullableStringFieldUpdateOperationsInput | string | null
    places_order_by?: NullableJsonNullValueInput | InputJsonValue
    persons_label_by?: NullableStringFieldUpdateOperationsInput | string | null
    persons_order_by?: NullableStringFieldUpdateOperationsInput | string | null
    goal_reports_label_by?: NullableStringFieldUpdateOperationsInput | string | null
    goal_reports_order_by?: NullableStringFieldUpdateOperationsInput | string | null
    values_on_multiple_levels?: NullableStringFieldUpdateOperationsInput | string | null
    multiple_action_values_on_same_level?: NullableStringFieldUpdateOperationsInput | string | null
    multiple_check_values_on_same_level?: NullableStringFieldUpdateOperationsInput | string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    files_offline?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_projects?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_subprojects?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_places?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_actions?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_checks?: NullableBoolFieldUpdateOperationsInput | boolean | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type ProjectsUncheckedUpdateManyInput = {
    project_id?: StringFieldUpdateOperationsInput | string
    account_id?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableEnumproject_typeFieldUpdateOperationsInput | project_type | null
    subproject_name_singular?: NullableStringFieldUpdateOperationsInput | string | null
    subproject_name_plural?: NullableStringFieldUpdateOperationsInput | string | null
    subproject_order_by?: NullableStringFieldUpdateOperationsInput | string | null
    places_label_by?: NullableStringFieldUpdateOperationsInput | string | null
    places_order_by?: NullableJsonNullValueInput | InputJsonValue
    persons_label_by?: NullableStringFieldUpdateOperationsInput | string | null
    persons_order_by?: NullableStringFieldUpdateOperationsInput | string | null
    goal_reports_label_by?: NullableStringFieldUpdateOperationsInput | string | null
    goal_reports_order_by?: NullableStringFieldUpdateOperationsInput | string | null
    values_on_multiple_levels?: NullableStringFieldUpdateOperationsInput | string | null
    multiple_action_values_on_same_level?: NullableStringFieldUpdateOperationsInput | string | null
    multiple_check_values_on_same_level?: NullableStringFieldUpdateOperationsInput | string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    files_offline?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_projects?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_subprojects?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_places?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_actions?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_checks?: NullableBoolFieldUpdateOperationsInput | boolean | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type Subproject_taxaCreateInput = {
    subproject_taxon_id: string
    label?: string | null
    deleted?: boolean | null
    accounts?: AccountsCreateNestedOneWithoutSubproject_taxaInput
    subprojects?: SubprojectsCreateNestedOneWithoutSubproject_taxaInput
    taxa?: TaxaCreateNestedOneWithoutSubproject_taxaInput
  }

  export type Subproject_taxaUncheckedCreateInput = {
    subproject_taxon_id: string
    account_id?: string | null
    subproject_id?: string | null
    taxon_id?: string | null
    label?: string | null
    deleted?: boolean | null
  }

  export type Subproject_taxaUpdateInput = {
    subproject_taxon_id?: StringFieldUpdateOperationsInput | string
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    accounts?: AccountsUpdateOneWithoutSubproject_taxaNestedInput
    subprojects?: SubprojectsUpdateOneWithoutSubproject_taxaNestedInput
    taxa?: TaxaUpdateOneWithoutSubproject_taxaNestedInput
  }

  export type Subproject_taxaUncheckedUpdateInput = {
    subproject_taxon_id?: StringFieldUpdateOperationsInput | string
    account_id?: NullableStringFieldUpdateOperationsInput | string | null
    subproject_id?: NullableStringFieldUpdateOperationsInput | string | null
    taxon_id?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type Subproject_taxaCreateManyInput = {
    subproject_taxon_id: string
    account_id?: string | null
    subproject_id?: string | null
    taxon_id?: string | null
    label?: string | null
    deleted?: boolean | null
  }

  export type Subproject_taxaUpdateManyMutationInput = {
    subproject_taxon_id?: StringFieldUpdateOperationsInput | string
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type Subproject_taxaUncheckedUpdateManyInput = {
    subproject_taxon_id?: StringFieldUpdateOperationsInput | string
    account_id?: NullableStringFieldUpdateOperationsInput | string | null
    subproject_id?: NullableStringFieldUpdateOperationsInput | string | null
    taxon_id?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type Subproject_usersCreateInput = {
    subproject_user_id: string
    role?: string | null
    label?: string | null
    deleted?: boolean | null
    accounts?: AccountsCreateNestedOneWithoutSubproject_usersInput
    subprojects?: SubprojectsCreateNestedOneWithoutSubproject_usersInput
    users?: UsersCreateNestedOneWithoutSubproject_usersInput
  }

  export type Subproject_usersUncheckedCreateInput = {
    subproject_user_id: string
    account_id?: string | null
    subproject_id?: string | null
    user_id?: string | null
    role?: string | null
    label?: string | null
    deleted?: boolean | null
  }

  export type Subproject_usersUpdateInput = {
    subproject_user_id?: StringFieldUpdateOperationsInput | string
    role?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    accounts?: AccountsUpdateOneWithoutSubproject_usersNestedInput
    subprojects?: SubprojectsUpdateOneWithoutSubproject_usersNestedInput
    users?: UsersUpdateOneWithoutSubproject_usersNestedInput
  }

  export type Subproject_usersUncheckedUpdateInput = {
    subproject_user_id?: StringFieldUpdateOperationsInput | string
    account_id?: NullableStringFieldUpdateOperationsInput | string | null
    subproject_id?: NullableStringFieldUpdateOperationsInput | string | null
    user_id?: NullableStringFieldUpdateOperationsInput | string | null
    role?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type Subproject_usersCreateManyInput = {
    subproject_user_id: string
    account_id?: string | null
    subproject_id?: string | null
    user_id?: string | null
    role?: string | null
    label?: string | null
    deleted?: boolean | null
  }

  export type Subproject_usersUpdateManyMutationInput = {
    subproject_user_id?: StringFieldUpdateOperationsInput | string
    role?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type Subproject_usersUncheckedUpdateManyInput = {
    subproject_user_id?: StringFieldUpdateOperationsInput | string
    account_id?: NullableStringFieldUpdateOperationsInput | string | null
    subproject_id?: NullableStringFieldUpdateOperationsInput | string | null
    user_id?: NullableStringFieldUpdateOperationsInput | string | null
    role?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type SubprojectsCreateInput = {
    subproject_id: string
    name?: string | null
    label_replace_by_generated_column?: string | null
    start_year?: number | null
    end_year?: number | null
    data?: NullableJsonNullValueInput | InputJsonValue
    deleted?: boolean | null
    gbif_occurrence_downloads?: Gbif_occurrence_downloadsCreateNestedManyWithoutSubprojectsInput
    gbif_occurrences?: Gbif_occurrencesCreateNestedManyWithoutSubprojectsInput
    goals?: GoalsCreateNestedManyWithoutSubprojectsInput
    subproject_taxa?: Subproject_taxaCreateNestedManyWithoutSubprojectsInput
    subproject_users?: Subproject_usersCreateNestedManyWithoutSubprojectsInput
    accounts?: AccountsCreateNestedOneWithoutSubprojectsInput
    projects?: ProjectsCreateNestedOneWithoutSubprojectsInput
  }

  export type SubprojectsUncheckedCreateInput = {
    subproject_id: string
    account_id?: string | null
    project_id?: string | null
    name?: string | null
    label_replace_by_generated_column?: string | null
    start_year?: number | null
    end_year?: number | null
    data?: NullableJsonNullValueInput | InputJsonValue
    deleted?: boolean | null
    gbif_occurrence_downloads?: Gbif_occurrence_downloadsUncheckedCreateNestedManyWithoutSubprojectsInput
    gbif_occurrences?: Gbif_occurrencesUncheckedCreateNestedManyWithoutSubprojectsInput
    goals?: GoalsUncheckedCreateNestedManyWithoutSubprojectsInput
    subproject_taxa?: Subproject_taxaUncheckedCreateNestedManyWithoutSubprojectsInput
    subproject_users?: Subproject_usersUncheckedCreateNestedManyWithoutSubprojectsInput
  }

  export type SubprojectsUpdateInput = {
    subproject_id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    label_replace_by_generated_column?: NullableStringFieldUpdateOperationsInput | string | null
    start_year?: NullableIntFieldUpdateOperationsInput | number | null
    end_year?: NullableIntFieldUpdateOperationsInput | number | null
    data?: NullableJsonNullValueInput | InputJsonValue
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    gbif_occurrence_downloads?: Gbif_occurrence_downloadsUpdateManyWithoutSubprojectsNestedInput
    gbif_occurrences?: Gbif_occurrencesUpdateManyWithoutSubprojectsNestedInput
    goals?: GoalsUpdateManyWithoutSubprojectsNestedInput
    subproject_taxa?: Subproject_taxaUpdateManyWithoutSubprojectsNestedInput
    subproject_users?: Subproject_usersUpdateManyWithoutSubprojectsNestedInput
    accounts?: AccountsUpdateOneWithoutSubprojectsNestedInput
    projects?: ProjectsUpdateOneWithoutSubprojectsNestedInput
  }

  export type SubprojectsUncheckedUpdateInput = {
    subproject_id?: StringFieldUpdateOperationsInput | string
    account_id?: NullableStringFieldUpdateOperationsInput | string | null
    project_id?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    label_replace_by_generated_column?: NullableStringFieldUpdateOperationsInput | string | null
    start_year?: NullableIntFieldUpdateOperationsInput | number | null
    end_year?: NullableIntFieldUpdateOperationsInput | number | null
    data?: NullableJsonNullValueInput | InputJsonValue
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    gbif_occurrence_downloads?: Gbif_occurrence_downloadsUncheckedUpdateManyWithoutSubprojectsNestedInput
    gbif_occurrences?: Gbif_occurrencesUncheckedUpdateManyWithoutSubprojectsNestedInput
    goals?: GoalsUncheckedUpdateManyWithoutSubprojectsNestedInput
    subproject_taxa?: Subproject_taxaUncheckedUpdateManyWithoutSubprojectsNestedInput
    subproject_users?: Subproject_usersUncheckedUpdateManyWithoutSubprojectsNestedInput
  }

  export type SubprojectsCreateManyInput = {
    subproject_id: string
    account_id?: string | null
    project_id?: string | null
    name?: string | null
    label_replace_by_generated_column?: string | null
    start_year?: number | null
    end_year?: number | null
    data?: NullableJsonNullValueInput | InputJsonValue
    deleted?: boolean | null
  }

  export type SubprojectsUpdateManyMutationInput = {
    subproject_id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    label_replace_by_generated_column?: NullableStringFieldUpdateOperationsInput | string | null
    start_year?: NullableIntFieldUpdateOperationsInput | number | null
    end_year?: NullableIntFieldUpdateOperationsInput | number | null
    data?: NullableJsonNullValueInput | InputJsonValue
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type SubprojectsUncheckedUpdateManyInput = {
    subproject_id?: StringFieldUpdateOperationsInput | string
    account_id?: NullableStringFieldUpdateOperationsInput | string | null
    project_id?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    label_replace_by_generated_column?: NullableStringFieldUpdateOperationsInput | string | null
    start_year?: NullableIntFieldUpdateOperationsInput | number | null
    end_year?: NullableIntFieldUpdateOperationsInput | number | null
    data?: NullableJsonNullValueInput | InputJsonValue
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type TaxaCreateInput = {
    taxon_id: string
    name?: string | null
    id_in_source?: string | null
    url?: string | null
    label?: string | null
    deleted?: boolean | null
    subproject_taxa?: Subproject_taxaCreateNestedManyWithoutTaxaInput
    accounts?: AccountsCreateNestedOneWithoutTaxaInput
    taxonomies?: TaxonomiesCreateNestedOneWithoutTaxaInput
  }

  export type TaxaUncheckedCreateInput = {
    taxon_id: string
    account_id?: string | null
    taxonomy_id?: string | null
    name?: string | null
    id_in_source?: string | null
    url?: string | null
    label?: string | null
    deleted?: boolean | null
    subproject_taxa?: Subproject_taxaUncheckedCreateNestedManyWithoutTaxaInput
  }

  export type TaxaUpdateInput = {
    taxon_id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    id_in_source?: NullableStringFieldUpdateOperationsInput | string | null
    url?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    subproject_taxa?: Subproject_taxaUpdateManyWithoutTaxaNestedInput
    accounts?: AccountsUpdateOneWithoutTaxaNestedInput
    taxonomies?: TaxonomiesUpdateOneWithoutTaxaNestedInput
  }

  export type TaxaUncheckedUpdateInput = {
    taxon_id?: StringFieldUpdateOperationsInput | string
    account_id?: NullableStringFieldUpdateOperationsInput | string | null
    taxonomy_id?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    id_in_source?: NullableStringFieldUpdateOperationsInput | string | null
    url?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    subproject_taxa?: Subproject_taxaUncheckedUpdateManyWithoutTaxaNestedInput
  }

  export type TaxaCreateManyInput = {
    taxon_id: string
    account_id?: string | null
    taxonomy_id?: string | null
    name?: string | null
    id_in_source?: string | null
    url?: string | null
    label?: string | null
    deleted?: boolean | null
  }

  export type TaxaUpdateManyMutationInput = {
    taxon_id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    id_in_source?: NullableStringFieldUpdateOperationsInput | string | null
    url?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type TaxaUncheckedUpdateManyInput = {
    taxon_id?: StringFieldUpdateOperationsInput | string
    account_id?: NullableStringFieldUpdateOperationsInput | string | null
    taxonomy_id?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    id_in_source?: NullableStringFieldUpdateOperationsInput | string | null
    url?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type TaxonomiesCreateInput = {
    taxonomy_id: string
    type?: taxonomy_type | null
    name?: string | null
    url?: string | null
    obsolete?: boolean | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label_replace_by_generated_column?: string | null
    deleted?: boolean | null
    taxa?: TaxaCreateNestedManyWithoutTaxonomiesInput
    accounts?: AccountsCreateNestedOneWithoutTaxonomiesInput
    projects?: ProjectsCreateNestedOneWithoutTaxonomiesInput
  }

  export type TaxonomiesUncheckedCreateInput = {
    taxonomy_id: string
    account_id?: string | null
    project_id?: string | null
    type?: taxonomy_type | null
    name?: string | null
    url?: string | null
    obsolete?: boolean | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label_replace_by_generated_column?: string | null
    deleted?: boolean | null
    taxa?: TaxaUncheckedCreateNestedManyWithoutTaxonomiesInput
  }

  export type TaxonomiesUpdateInput = {
    taxonomy_id?: StringFieldUpdateOperationsInput | string
    type?: NullableEnumtaxonomy_typeFieldUpdateOperationsInput | taxonomy_type | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    url?: NullableStringFieldUpdateOperationsInput | string | null
    obsolete?: NullableBoolFieldUpdateOperationsInput | boolean | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label_replace_by_generated_column?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    taxa?: TaxaUpdateManyWithoutTaxonomiesNestedInput
    accounts?: AccountsUpdateOneWithoutTaxonomiesNestedInput
    projects?: ProjectsUpdateOneWithoutTaxonomiesNestedInput
  }

  export type TaxonomiesUncheckedUpdateInput = {
    taxonomy_id?: StringFieldUpdateOperationsInput | string
    account_id?: NullableStringFieldUpdateOperationsInput | string | null
    project_id?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableEnumtaxonomy_typeFieldUpdateOperationsInput | taxonomy_type | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    url?: NullableStringFieldUpdateOperationsInput | string | null
    obsolete?: NullableBoolFieldUpdateOperationsInput | boolean | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label_replace_by_generated_column?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    taxa?: TaxaUncheckedUpdateManyWithoutTaxonomiesNestedInput
  }

  export type TaxonomiesCreateManyInput = {
    taxonomy_id: string
    account_id?: string | null
    project_id?: string | null
    type?: taxonomy_type | null
    name?: string | null
    url?: string | null
    obsolete?: boolean | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label_replace_by_generated_column?: string | null
    deleted?: boolean | null
  }

  export type TaxonomiesUpdateManyMutationInput = {
    taxonomy_id?: StringFieldUpdateOperationsInput | string
    type?: NullableEnumtaxonomy_typeFieldUpdateOperationsInput | taxonomy_type | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    url?: NullableStringFieldUpdateOperationsInput | string | null
    obsolete?: NullableBoolFieldUpdateOperationsInput | boolean | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label_replace_by_generated_column?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type TaxonomiesUncheckedUpdateManyInput = {
    taxonomy_id?: StringFieldUpdateOperationsInput | string
    account_id?: NullableStringFieldUpdateOperationsInput | string | null
    project_id?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableEnumtaxonomy_typeFieldUpdateOperationsInput | taxonomy_type | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    url?: NullableStringFieldUpdateOperationsInput | string | null
    obsolete?: NullableBoolFieldUpdateOperationsInput | boolean | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label_replace_by_generated_column?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type Tile_layersCreateInput = {
    tile_layer_id: string
    label?: string | null
    sort?: number | null
    active?: boolean | null
    type?: tile_layer_type_enum | null
    wmts_url_template?: string | null
    wmts_subdomains?: NullableJsonNullValueInput | InputJsonValue
    wms_base_url?: string | null
    wms_format?: NullableJsonNullValueInput | InputJsonValue
    wms_layer?: NullableJsonNullValueInput | InputJsonValue
    wms_parameters?: NullableJsonNullValueInput | InputJsonValue
    wms_styles?: NullableJsonNullValueInput | InputJsonValue
    wms_transparent?: boolean | null
    wms_version?: string | null
    wms_info_format?: NullableJsonNullValueInput | InputJsonValue
    wms_legend?: NullableJsonNullValueInput | InputJsonValue
    max_zoom?: number | null
    min_zoom?: number | null
    opacity_percent?: number | null
    grayscale?: boolean | null
    local_data_size?: number | null
    local_data_bounds?: NullableJsonNullValueInput | InputJsonValue
    deleted?: boolean | null
    accounts?: AccountsCreateNestedOneWithoutTile_layersInput
    projects: ProjectsCreateNestedOneWithoutTile_layersInput
  }

  export type Tile_layersUncheckedCreateInput = {
    tile_layer_id: string
    account_id?: string | null
    project_id: string
    label?: string | null
    sort?: number | null
    active?: boolean | null
    type?: tile_layer_type_enum | null
    wmts_url_template?: string | null
    wmts_subdomains?: NullableJsonNullValueInput | InputJsonValue
    wms_base_url?: string | null
    wms_format?: NullableJsonNullValueInput | InputJsonValue
    wms_layer?: NullableJsonNullValueInput | InputJsonValue
    wms_parameters?: NullableJsonNullValueInput | InputJsonValue
    wms_styles?: NullableJsonNullValueInput | InputJsonValue
    wms_transparent?: boolean | null
    wms_version?: string | null
    wms_info_format?: NullableJsonNullValueInput | InputJsonValue
    wms_legend?: NullableJsonNullValueInput | InputJsonValue
    max_zoom?: number | null
    min_zoom?: number | null
    opacity_percent?: number | null
    grayscale?: boolean | null
    local_data_size?: number | null
    local_data_bounds?: NullableJsonNullValueInput | InputJsonValue
    deleted?: boolean | null
  }

  export type Tile_layersUpdateInput = {
    tile_layer_id?: StringFieldUpdateOperationsInput | string
    label?: NullableStringFieldUpdateOperationsInput | string | null
    sort?: NullableIntFieldUpdateOperationsInput | number | null
    active?: NullableBoolFieldUpdateOperationsInput | boolean | null
    type?: NullableEnumtile_layer_type_enumFieldUpdateOperationsInput | tile_layer_type_enum | null
    wmts_url_template?: NullableStringFieldUpdateOperationsInput | string | null
    wmts_subdomains?: NullableJsonNullValueInput | InputJsonValue
    wms_base_url?: NullableStringFieldUpdateOperationsInput | string | null
    wms_format?: NullableJsonNullValueInput | InputJsonValue
    wms_layer?: NullableJsonNullValueInput | InputJsonValue
    wms_parameters?: NullableJsonNullValueInput | InputJsonValue
    wms_styles?: NullableJsonNullValueInput | InputJsonValue
    wms_transparent?: NullableBoolFieldUpdateOperationsInput | boolean | null
    wms_version?: NullableStringFieldUpdateOperationsInput | string | null
    wms_info_format?: NullableJsonNullValueInput | InputJsonValue
    wms_legend?: NullableJsonNullValueInput | InputJsonValue
    max_zoom?: NullableIntFieldUpdateOperationsInput | number | null
    min_zoom?: NullableIntFieldUpdateOperationsInput | number | null
    opacity_percent?: NullableIntFieldUpdateOperationsInput | number | null
    grayscale?: NullableBoolFieldUpdateOperationsInput | boolean | null
    local_data_size?: NullableIntFieldUpdateOperationsInput | number | null
    local_data_bounds?: NullableJsonNullValueInput | InputJsonValue
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    accounts?: AccountsUpdateOneWithoutTile_layersNestedInput
    projects?: ProjectsUpdateOneRequiredWithoutTile_layersNestedInput
  }

  export type Tile_layersUncheckedUpdateInput = {
    tile_layer_id?: StringFieldUpdateOperationsInput | string
    account_id?: NullableStringFieldUpdateOperationsInput | string | null
    project_id?: StringFieldUpdateOperationsInput | string
    label?: NullableStringFieldUpdateOperationsInput | string | null
    sort?: NullableIntFieldUpdateOperationsInput | number | null
    active?: NullableBoolFieldUpdateOperationsInput | boolean | null
    type?: NullableEnumtile_layer_type_enumFieldUpdateOperationsInput | tile_layer_type_enum | null
    wmts_url_template?: NullableStringFieldUpdateOperationsInput | string | null
    wmts_subdomains?: NullableJsonNullValueInput | InputJsonValue
    wms_base_url?: NullableStringFieldUpdateOperationsInput | string | null
    wms_format?: NullableJsonNullValueInput | InputJsonValue
    wms_layer?: NullableJsonNullValueInput | InputJsonValue
    wms_parameters?: NullableJsonNullValueInput | InputJsonValue
    wms_styles?: NullableJsonNullValueInput | InputJsonValue
    wms_transparent?: NullableBoolFieldUpdateOperationsInput | boolean | null
    wms_version?: NullableStringFieldUpdateOperationsInput | string | null
    wms_info_format?: NullableJsonNullValueInput | InputJsonValue
    wms_legend?: NullableJsonNullValueInput | InputJsonValue
    max_zoom?: NullableIntFieldUpdateOperationsInput | number | null
    min_zoom?: NullableIntFieldUpdateOperationsInput | number | null
    opacity_percent?: NullableIntFieldUpdateOperationsInput | number | null
    grayscale?: NullableBoolFieldUpdateOperationsInput | boolean | null
    local_data_size?: NullableIntFieldUpdateOperationsInput | number | null
    local_data_bounds?: NullableJsonNullValueInput | InputJsonValue
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type Tile_layersCreateManyInput = {
    tile_layer_id: string
    account_id?: string | null
    project_id: string
    label?: string | null
    sort?: number | null
    active?: boolean | null
    type?: tile_layer_type_enum | null
    wmts_url_template?: string | null
    wmts_subdomains?: NullableJsonNullValueInput | InputJsonValue
    wms_base_url?: string | null
    wms_format?: NullableJsonNullValueInput | InputJsonValue
    wms_layer?: NullableJsonNullValueInput | InputJsonValue
    wms_parameters?: NullableJsonNullValueInput | InputJsonValue
    wms_styles?: NullableJsonNullValueInput | InputJsonValue
    wms_transparent?: boolean | null
    wms_version?: string | null
    wms_info_format?: NullableJsonNullValueInput | InputJsonValue
    wms_legend?: NullableJsonNullValueInput | InputJsonValue
    max_zoom?: number | null
    min_zoom?: number | null
    opacity_percent?: number | null
    grayscale?: boolean | null
    local_data_size?: number | null
    local_data_bounds?: NullableJsonNullValueInput | InputJsonValue
    deleted?: boolean | null
  }

  export type Tile_layersUpdateManyMutationInput = {
    tile_layer_id?: StringFieldUpdateOperationsInput | string
    label?: NullableStringFieldUpdateOperationsInput | string | null
    sort?: NullableIntFieldUpdateOperationsInput | number | null
    active?: NullableBoolFieldUpdateOperationsInput | boolean | null
    type?: NullableEnumtile_layer_type_enumFieldUpdateOperationsInput | tile_layer_type_enum | null
    wmts_url_template?: NullableStringFieldUpdateOperationsInput | string | null
    wmts_subdomains?: NullableJsonNullValueInput | InputJsonValue
    wms_base_url?: NullableStringFieldUpdateOperationsInput | string | null
    wms_format?: NullableJsonNullValueInput | InputJsonValue
    wms_layer?: NullableJsonNullValueInput | InputJsonValue
    wms_parameters?: NullableJsonNullValueInput | InputJsonValue
    wms_styles?: NullableJsonNullValueInput | InputJsonValue
    wms_transparent?: NullableBoolFieldUpdateOperationsInput | boolean | null
    wms_version?: NullableStringFieldUpdateOperationsInput | string | null
    wms_info_format?: NullableJsonNullValueInput | InputJsonValue
    wms_legend?: NullableJsonNullValueInput | InputJsonValue
    max_zoom?: NullableIntFieldUpdateOperationsInput | number | null
    min_zoom?: NullableIntFieldUpdateOperationsInput | number | null
    opacity_percent?: NullableIntFieldUpdateOperationsInput | number | null
    grayscale?: NullableBoolFieldUpdateOperationsInput | boolean | null
    local_data_size?: NullableIntFieldUpdateOperationsInput | number | null
    local_data_bounds?: NullableJsonNullValueInput | InputJsonValue
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type Tile_layersUncheckedUpdateManyInput = {
    tile_layer_id?: StringFieldUpdateOperationsInput | string
    account_id?: NullableStringFieldUpdateOperationsInput | string | null
    project_id?: StringFieldUpdateOperationsInput | string
    label?: NullableStringFieldUpdateOperationsInput | string | null
    sort?: NullableIntFieldUpdateOperationsInput | number | null
    active?: NullableBoolFieldUpdateOperationsInput | boolean | null
    type?: NullableEnumtile_layer_type_enumFieldUpdateOperationsInput | tile_layer_type_enum | null
    wmts_url_template?: NullableStringFieldUpdateOperationsInput | string | null
    wmts_subdomains?: NullableJsonNullValueInput | InputJsonValue
    wms_base_url?: NullableStringFieldUpdateOperationsInput | string | null
    wms_format?: NullableJsonNullValueInput | InputJsonValue
    wms_layer?: NullableJsonNullValueInput | InputJsonValue
    wms_parameters?: NullableJsonNullValueInput | InputJsonValue
    wms_styles?: NullableJsonNullValueInput | InputJsonValue
    wms_transparent?: NullableBoolFieldUpdateOperationsInput | boolean | null
    wms_version?: NullableStringFieldUpdateOperationsInput | string | null
    wms_info_format?: NullableJsonNullValueInput | InputJsonValue
    wms_legend?: NullableJsonNullValueInput | InputJsonValue
    max_zoom?: NullableIntFieldUpdateOperationsInput | number | null
    min_zoom?: NullableIntFieldUpdateOperationsInput | number | null
    opacity_percent?: NullableIntFieldUpdateOperationsInput | number | null
    grayscale?: NullableBoolFieldUpdateOperationsInput | boolean | null
    local_data_size?: NullableIntFieldUpdateOperationsInput | number | null
    local_data_bounds?: NullableJsonNullValueInput | InputJsonValue
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type Ui_optionsCreateInput = {
    designing?: boolean | null
    breadcrumbs_overflowing?: boolean | null
    navs_overflowing?: boolean | null
    tabs?: NullableJsonNullValueInput | InputJsonValue
    show_map?: boolean | null
    map_bounds?: NullableJsonNullValueInput | InputJsonValue
    local_map_show?: NullableJsonNullValueInput | InputJsonValue
    tile_layer_sorter?: string | null
    vector_layer_sorter?: string | null
    editing_place_geometry?: string | null
    editing_check_geometry?: string | null
    editing_action_geometry?: string | null
    label?: string | null
    accounts?: AccountsCreateNestedOneWithoutUi_optionsInput
    users: UsersCreateNestedOneWithoutUi_optionsInput
  }

  export type Ui_optionsUncheckedCreateInput = {
    user_id: string
    account_id?: string | null
    designing?: boolean | null
    breadcrumbs_overflowing?: boolean | null
    navs_overflowing?: boolean | null
    tabs?: NullableJsonNullValueInput | InputJsonValue
    show_map?: boolean | null
    map_bounds?: NullableJsonNullValueInput | InputJsonValue
    local_map_show?: NullableJsonNullValueInput | InputJsonValue
    tile_layer_sorter?: string | null
    vector_layer_sorter?: string | null
    editing_place_geometry?: string | null
    editing_check_geometry?: string | null
    editing_action_geometry?: string | null
    label?: string | null
  }

  export type Ui_optionsUpdateInput = {
    designing?: NullableBoolFieldUpdateOperationsInput | boolean | null
    breadcrumbs_overflowing?: NullableBoolFieldUpdateOperationsInput | boolean | null
    navs_overflowing?: NullableBoolFieldUpdateOperationsInput | boolean | null
    tabs?: NullableJsonNullValueInput | InputJsonValue
    show_map?: NullableBoolFieldUpdateOperationsInput | boolean | null
    map_bounds?: NullableJsonNullValueInput | InputJsonValue
    local_map_show?: NullableJsonNullValueInput | InputJsonValue
    tile_layer_sorter?: NullableStringFieldUpdateOperationsInput | string | null
    vector_layer_sorter?: NullableStringFieldUpdateOperationsInput | string | null
    editing_place_geometry?: NullableStringFieldUpdateOperationsInput | string | null
    editing_check_geometry?: NullableStringFieldUpdateOperationsInput | string | null
    editing_action_geometry?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    accounts?: AccountsUpdateOneWithoutUi_optionsNestedInput
    users?: UsersUpdateOneRequiredWithoutUi_optionsNestedInput
  }

  export type Ui_optionsUncheckedUpdateInput = {
    user_id?: StringFieldUpdateOperationsInput | string
    account_id?: NullableStringFieldUpdateOperationsInput | string | null
    designing?: NullableBoolFieldUpdateOperationsInput | boolean | null
    breadcrumbs_overflowing?: NullableBoolFieldUpdateOperationsInput | boolean | null
    navs_overflowing?: NullableBoolFieldUpdateOperationsInput | boolean | null
    tabs?: NullableJsonNullValueInput | InputJsonValue
    show_map?: NullableBoolFieldUpdateOperationsInput | boolean | null
    map_bounds?: NullableJsonNullValueInput | InputJsonValue
    local_map_show?: NullableJsonNullValueInput | InputJsonValue
    tile_layer_sorter?: NullableStringFieldUpdateOperationsInput | string | null
    vector_layer_sorter?: NullableStringFieldUpdateOperationsInput | string | null
    editing_place_geometry?: NullableStringFieldUpdateOperationsInput | string | null
    editing_check_geometry?: NullableStringFieldUpdateOperationsInput | string | null
    editing_action_geometry?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type Ui_optionsCreateManyInput = {
    user_id: string
    account_id?: string | null
    designing?: boolean | null
    breadcrumbs_overflowing?: boolean | null
    navs_overflowing?: boolean | null
    tabs?: NullableJsonNullValueInput | InputJsonValue
    show_map?: boolean | null
    map_bounds?: NullableJsonNullValueInput | InputJsonValue
    local_map_show?: NullableJsonNullValueInput | InputJsonValue
    tile_layer_sorter?: string | null
    vector_layer_sorter?: string | null
    editing_place_geometry?: string | null
    editing_check_geometry?: string | null
    editing_action_geometry?: string | null
    label?: string | null
  }

  export type Ui_optionsUpdateManyMutationInput = {
    designing?: NullableBoolFieldUpdateOperationsInput | boolean | null
    breadcrumbs_overflowing?: NullableBoolFieldUpdateOperationsInput | boolean | null
    navs_overflowing?: NullableBoolFieldUpdateOperationsInput | boolean | null
    tabs?: NullableJsonNullValueInput | InputJsonValue
    show_map?: NullableBoolFieldUpdateOperationsInput | boolean | null
    map_bounds?: NullableJsonNullValueInput | InputJsonValue
    local_map_show?: NullableJsonNullValueInput | InputJsonValue
    tile_layer_sorter?: NullableStringFieldUpdateOperationsInput | string | null
    vector_layer_sorter?: NullableStringFieldUpdateOperationsInput | string | null
    editing_place_geometry?: NullableStringFieldUpdateOperationsInput | string | null
    editing_check_geometry?: NullableStringFieldUpdateOperationsInput | string | null
    editing_action_geometry?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type Ui_optionsUncheckedUpdateManyInput = {
    user_id?: StringFieldUpdateOperationsInput | string
    account_id?: NullableStringFieldUpdateOperationsInput | string | null
    designing?: NullableBoolFieldUpdateOperationsInput | boolean | null
    breadcrumbs_overflowing?: NullableBoolFieldUpdateOperationsInput | boolean | null
    navs_overflowing?: NullableBoolFieldUpdateOperationsInput | boolean | null
    tabs?: NullableJsonNullValueInput | InputJsonValue
    show_map?: NullableBoolFieldUpdateOperationsInput | boolean | null
    map_bounds?: NullableJsonNullValueInput | InputJsonValue
    local_map_show?: NullableJsonNullValueInput | InputJsonValue
    tile_layer_sorter?: NullableStringFieldUpdateOperationsInput | string | null
    vector_layer_sorter?: NullableStringFieldUpdateOperationsInput | string | null
    editing_place_geometry?: NullableStringFieldUpdateOperationsInput | string | null
    editing_check_geometry?: NullableStringFieldUpdateOperationsInput | string | null
    editing_action_geometry?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type UnitsCreateInput = {
    unit_id: string
    use_for_action_values?: boolean | null
    use_for_action_report_values?: boolean | null
    use_for_check_values?: boolean | null
    use_for_place_report_values?: boolean | null
    use_for_goal_report_values?: boolean | null
    use_for_subproject_taxa?: boolean | null
    use_for_check_taxa?: boolean | null
    name?: string | null
    summable?: boolean | null
    sort?: number | null
    type?: unit_type | null
    label_replace_by_generated_column?: string | null
    deleted?: boolean | null
    goal_report_values?: Goal_report_valuesCreateNestedManyWithoutUnitsInput
    accounts?: AccountsCreateNestedOneWithoutUnitsInput
    lists?: ListsCreateNestedOneWithoutUnitsInput
    projects?: ProjectsCreateNestedOneWithoutUnitsInput
  }

  export type UnitsUncheckedCreateInput = {
    unit_id: string
    account_id?: string | null
    project_id?: string | null
    use_for_action_values?: boolean | null
    use_for_action_report_values?: boolean | null
    use_for_check_values?: boolean | null
    use_for_place_report_values?: boolean | null
    use_for_goal_report_values?: boolean | null
    use_for_subproject_taxa?: boolean | null
    use_for_check_taxa?: boolean | null
    name?: string | null
    summable?: boolean | null
    sort?: number | null
    type?: unit_type | null
    list_id?: string | null
    label_replace_by_generated_column?: string | null
    deleted?: boolean | null
    goal_report_values?: Goal_report_valuesUncheckedCreateNestedManyWithoutUnitsInput
  }

  export type UnitsUpdateInput = {
    unit_id?: StringFieldUpdateOperationsInput | string
    use_for_action_values?: NullableBoolFieldUpdateOperationsInput | boolean | null
    use_for_action_report_values?: NullableBoolFieldUpdateOperationsInput | boolean | null
    use_for_check_values?: NullableBoolFieldUpdateOperationsInput | boolean | null
    use_for_place_report_values?: NullableBoolFieldUpdateOperationsInput | boolean | null
    use_for_goal_report_values?: NullableBoolFieldUpdateOperationsInput | boolean | null
    use_for_subproject_taxa?: NullableBoolFieldUpdateOperationsInput | boolean | null
    use_for_check_taxa?: NullableBoolFieldUpdateOperationsInput | boolean | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    summable?: NullableBoolFieldUpdateOperationsInput | boolean | null
    sort?: NullableIntFieldUpdateOperationsInput | number | null
    type?: NullableEnumunit_typeFieldUpdateOperationsInput | unit_type | null
    label_replace_by_generated_column?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    goal_report_values?: Goal_report_valuesUpdateManyWithoutUnitsNestedInput
    accounts?: AccountsUpdateOneWithoutUnitsNestedInput
    lists?: ListsUpdateOneWithoutUnitsNestedInput
    projects?: ProjectsUpdateOneWithoutUnitsNestedInput
  }

  export type UnitsUncheckedUpdateInput = {
    unit_id?: StringFieldUpdateOperationsInput | string
    account_id?: NullableStringFieldUpdateOperationsInput | string | null
    project_id?: NullableStringFieldUpdateOperationsInput | string | null
    use_for_action_values?: NullableBoolFieldUpdateOperationsInput | boolean | null
    use_for_action_report_values?: NullableBoolFieldUpdateOperationsInput | boolean | null
    use_for_check_values?: NullableBoolFieldUpdateOperationsInput | boolean | null
    use_for_place_report_values?: NullableBoolFieldUpdateOperationsInput | boolean | null
    use_for_goal_report_values?: NullableBoolFieldUpdateOperationsInput | boolean | null
    use_for_subproject_taxa?: NullableBoolFieldUpdateOperationsInput | boolean | null
    use_for_check_taxa?: NullableBoolFieldUpdateOperationsInput | boolean | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    summable?: NullableBoolFieldUpdateOperationsInput | boolean | null
    sort?: NullableIntFieldUpdateOperationsInput | number | null
    type?: NullableEnumunit_typeFieldUpdateOperationsInput | unit_type | null
    list_id?: NullableStringFieldUpdateOperationsInput | string | null
    label_replace_by_generated_column?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    goal_report_values?: Goal_report_valuesUncheckedUpdateManyWithoutUnitsNestedInput
  }

  export type UnitsCreateManyInput = {
    unit_id: string
    account_id?: string | null
    project_id?: string | null
    use_for_action_values?: boolean | null
    use_for_action_report_values?: boolean | null
    use_for_check_values?: boolean | null
    use_for_place_report_values?: boolean | null
    use_for_goal_report_values?: boolean | null
    use_for_subproject_taxa?: boolean | null
    use_for_check_taxa?: boolean | null
    name?: string | null
    summable?: boolean | null
    sort?: number | null
    type?: unit_type | null
    list_id?: string | null
    label_replace_by_generated_column?: string | null
    deleted?: boolean | null
  }

  export type UnitsUpdateManyMutationInput = {
    unit_id?: StringFieldUpdateOperationsInput | string
    use_for_action_values?: NullableBoolFieldUpdateOperationsInput | boolean | null
    use_for_action_report_values?: NullableBoolFieldUpdateOperationsInput | boolean | null
    use_for_check_values?: NullableBoolFieldUpdateOperationsInput | boolean | null
    use_for_place_report_values?: NullableBoolFieldUpdateOperationsInput | boolean | null
    use_for_goal_report_values?: NullableBoolFieldUpdateOperationsInput | boolean | null
    use_for_subproject_taxa?: NullableBoolFieldUpdateOperationsInput | boolean | null
    use_for_check_taxa?: NullableBoolFieldUpdateOperationsInput | boolean | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    summable?: NullableBoolFieldUpdateOperationsInput | boolean | null
    sort?: NullableIntFieldUpdateOperationsInput | number | null
    type?: NullableEnumunit_typeFieldUpdateOperationsInput | unit_type | null
    label_replace_by_generated_column?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type UnitsUncheckedUpdateManyInput = {
    unit_id?: StringFieldUpdateOperationsInput | string
    account_id?: NullableStringFieldUpdateOperationsInput | string | null
    project_id?: NullableStringFieldUpdateOperationsInput | string | null
    use_for_action_values?: NullableBoolFieldUpdateOperationsInput | boolean | null
    use_for_action_report_values?: NullableBoolFieldUpdateOperationsInput | boolean | null
    use_for_check_values?: NullableBoolFieldUpdateOperationsInput | boolean | null
    use_for_place_report_values?: NullableBoolFieldUpdateOperationsInput | boolean | null
    use_for_goal_report_values?: NullableBoolFieldUpdateOperationsInput | boolean | null
    use_for_subproject_taxa?: NullableBoolFieldUpdateOperationsInput | boolean | null
    use_for_check_taxa?: NullableBoolFieldUpdateOperationsInput | boolean | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    summable?: NullableBoolFieldUpdateOperationsInput | boolean | null
    sort?: NullableIntFieldUpdateOperationsInput | number | null
    type?: NullableEnumunit_typeFieldUpdateOperationsInput | unit_type | null
    list_id?: NullableStringFieldUpdateOperationsInput | string | null
    label_replace_by_generated_column?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type User_messagesCreateInput = {
    user_message_id: string
    label_replace_by_generated_column?: string | null
    read?: boolean | null
    accounts?: AccountsCreateNestedOneWithoutUser_messagesInput
    messages?: MessagesCreateNestedOneWithoutUser_messagesInput
    users?: UsersCreateNestedOneWithoutUser_messagesInput
  }

  export type User_messagesUncheckedCreateInput = {
    user_message_id: string
    account_id?: string | null
    user_id?: string | null
    message_id?: string | null
    label_replace_by_generated_column?: string | null
    read?: boolean | null
  }

  export type User_messagesUpdateInput = {
    user_message_id?: StringFieldUpdateOperationsInput | string
    label_replace_by_generated_column?: NullableStringFieldUpdateOperationsInput | string | null
    read?: NullableBoolFieldUpdateOperationsInput | boolean | null
    accounts?: AccountsUpdateOneWithoutUser_messagesNestedInput
    messages?: MessagesUpdateOneWithoutUser_messagesNestedInput
    users?: UsersUpdateOneWithoutUser_messagesNestedInput
  }

  export type User_messagesUncheckedUpdateInput = {
    user_message_id?: StringFieldUpdateOperationsInput | string
    account_id?: NullableStringFieldUpdateOperationsInput | string | null
    user_id?: NullableStringFieldUpdateOperationsInput | string | null
    message_id?: NullableStringFieldUpdateOperationsInput | string | null
    label_replace_by_generated_column?: NullableStringFieldUpdateOperationsInput | string | null
    read?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type User_messagesCreateManyInput = {
    user_message_id: string
    account_id?: string | null
    user_id?: string | null
    message_id?: string | null
    label_replace_by_generated_column?: string | null
    read?: boolean | null
  }

  export type User_messagesUpdateManyMutationInput = {
    user_message_id?: StringFieldUpdateOperationsInput | string
    label_replace_by_generated_column?: NullableStringFieldUpdateOperationsInput | string | null
    read?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type User_messagesUncheckedUpdateManyInput = {
    user_message_id?: StringFieldUpdateOperationsInput | string
    account_id?: NullableStringFieldUpdateOperationsInput | string | null
    user_id?: NullableStringFieldUpdateOperationsInput | string | null
    message_id?: NullableStringFieldUpdateOperationsInput | string | null
    label_replace_by_generated_column?: NullableStringFieldUpdateOperationsInput | string | null
    read?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type UsersCreateInput = {
    user_id: string
    email?: string | null
    auth_id?: string | null
    label_replace_by_generated_column?: string | null
    deleted?: boolean | null
    accounts?: AccountsCreateNestedManyWithoutUsersInput
    project_users?: Project_usersCreateNestedManyWithoutUsersInput
    subproject_users?: Subproject_usersCreateNestedManyWithoutUsersInput
    ui_options?: Ui_optionsCreateNestedOneWithoutUsersInput
    user_messages?: User_messagesCreateNestedManyWithoutUsersInput
  }

  export type UsersUncheckedCreateInput = {
    user_id: string
    email?: string | null
    auth_id?: string | null
    label_replace_by_generated_column?: string | null
    deleted?: boolean | null
    accounts?: AccountsUncheckedCreateNestedManyWithoutUsersInput
    project_users?: Project_usersUncheckedCreateNestedManyWithoutUsersInput
    subproject_users?: Subproject_usersUncheckedCreateNestedManyWithoutUsersInput
    ui_options?: Ui_optionsUncheckedCreateNestedOneWithoutUsersInput
    user_messages?: User_messagesUncheckedCreateNestedManyWithoutUsersInput
  }

  export type UsersUpdateInput = {
    user_id?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    auth_id?: NullableStringFieldUpdateOperationsInput | string | null
    label_replace_by_generated_column?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    accounts?: AccountsUpdateManyWithoutUsersNestedInput
    project_users?: Project_usersUpdateManyWithoutUsersNestedInput
    subproject_users?: Subproject_usersUpdateManyWithoutUsersNestedInput
    ui_options?: Ui_optionsUpdateOneWithoutUsersNestedInput
    user_messages?: User_messagesUpdateManyWithoutUsersNestedInput
  }

  export type UsersUncheckedUpdateInput = {
    user_id?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    auth_id?: NullableStringFieldUpdateOperationsInput | string | null
    label_replace_by_generated_column?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    accounts?: AccountsUncheckedUpdateManyWithoutUsersNestedInput
    project_users?: Project_usersUncheckedUpdateManyWithoutUsersNestedInput
    subproject_users?: Subproject_usersUncheckedUpdateManyWithoutUsersNestedInput
    ui_options?: Ui_optionsUncheckedUpdateOneWithoutUsersNestedInput
    user_messages?: User_messagesUncheckedUpdateManyWithoutUsersNestedInput
  }

  export type UsersCreateManyInput = {
    user_id: string
    email?: string | null
    auth_id?: string | null
    label_replace_by_generated_column?: string | null
    deleted?: boolean | null
  }

  export type UsersUpdateManyMutationInput = {
    user_id?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    auth_id?: NullableStringFieldUpdateOperationsInput | string | null
    label_replace_by_generated_column?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type UsersUncheckedUpdateManyInput = {
    user_id?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    auth_id?: NullableStringFieldUpdateOperationsInput | string | null
    label_replace_by_generated_column?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type Widget_typesCreateInput = {
    widget_type_id: string
    name?: string | null
    needs_list?: boolean | null
    sort?: number | null
    comment?: string | null
    label_replace_by_generated_column?: string | null
    deleted?: boolean | null
    widgets_for_fields?: Widgets_for_fieldsCreateNestedManyWithoutWidget_typesInput
  }

  export type Widget_typesUncheckedCreateInput = {
    widget_type_id: string
    name?: string | null
    needs_list?: boolean | null
    sort?: number | null
    comment?: string | null
    label_replace_by_generated_column?: string | null
    deleted?: boolean | null
    widgets_for_fields?: Widgets_for_fieldsUncheckedCreateNestedManyWithoutWidget_typesInput
  }

  export type Widget_typesUpdateInput = {
    widget_type_id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    needs_list?: NullableBoolFieldUpdateOperationsInput | boolean | null
    sort?: NullableIntFieldUpdateOperationsInput | number | null
    comment?: NullableStringFieldUpdateOperationsInput | string | null
    label_replace_by_generated_column?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    widgets_for_fields?: Widgets_for_fieldsUpdateManyWithoutWidget_typesNestedInput
  }

  export type Widget_typesUncheckedUpdateInput = {
    widget_type_id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    needs_list?: NullableBoolFieldUpdateOperationsInput | boolean | null
    sort?: NullableIntFieldUpdateOperationsInput | number | null
    comment?: NullableStringFieldUpdateOperationsInput | string | null
    label_replace_by_generated_column?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    widgets_for_fields?: Widgets_for_fieldsUncheckedUpdateManyWithoutWidget_typesNestedInput
  }

  export type Widget_typesCreateManyInput = {
    widget_type_id: string
    name?: string | null
    needs_list?: boolean | null
    sort?: number | null
    comment?: string | null
    label_replace_by_generated_column?: string | null
    deleted?: boolean | null
  }

  export type Widget_typesUpdateManyMutationInput = {
    widget_type_id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    needs_list?: NullableBoolFieldUpdateOperationsInput | boolean | null
    sort?: NullableIntFieldUpdateOperationsInput | number | null
    comment?: NullableStringFieldUpdateOperationsInput | string | null
    label_replace_by_generated_column?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type Widget_typesUncheckedUpdateManyInput = {
    widget_type_id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    needs_list?: NullableBoolFieldUpdateOperationsInput | boolean | null
    sort?: NullableIntFieldUpdateOperationsInput | number | null
    comment?: NullableStringFieldUpdateOperationsInput | string | null
    label_replace_by_generated_column?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type Widgets_for_fieldsCreateInput = {
    widget_for_field_id: string
    label?: string | null
    deleted?: boolean | null
    field_types?: Field_typesCreateNestedOneWithoutWidgets_for_fieldsInput
    widget_types?: Widget_typesCreateNestedOneWithoutWidgets_for_fieldsInput
  }

  export type Widgets_for_fieldsUncheckedCreateInput = {
    widget_for_field_id: string
    field_type_id?: string | null
    widget_type_id?: string | null
    label?: string | null
    deleted?: boolean | null
  }

  export type Widgets_for_fieldsUpdateInput = {
    widget_for_field_id?: StringFieldUpdateOperationsInput | string
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    field_types?: Field_typesUpdateOneWithoutWidgets_for_fieldsNestedInput
    widget_types?: Widget_typesUpdateOneWithoutWidgets_for_fieldsNestedInput
  }

  export type Widgets_for_fieldsUncheckedUpdateInput = {
    widget_for_field_id?: StringFieldUpdateOperationsInput | string
    field_type_id?: NullableStringFieldUpdateOperationsInput | string | null
    widget_type_id?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type Widgets_for_fieldsCreateManyInput = {
    widget_for_field_id: string
    field_type_id?: string | null
    widget_type_id?: string | null
    label?: string | null
    deleted?: boolean | null
  }

  export type Widgets_for_fieldsUpdateManyMutationInput = {
    widget_for_field_id?: StringFieldUpdateOperationsInput | string
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type Widgets_for_fieldsUncheckedUpdateManyInput = {
    widget_for_field_id?: StringFieldUpdateOperationsInput | string
    field_type_id?: NullableStringFieldUpdateOperationsInput | string | null
    widget_type_id?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type UuidFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: Enumerable<string> | ListStringFieldRefInput<$PrismaModel>
    notIn?: Enumerable<string> | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedUuidFilter<$PrismaModel> | string
  }

  export type UuidNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: Enumerable<string> | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: Enumerable<string> | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedUuidNullableFilter<$PrismaModel> | string | null
  }

  export type StringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: Enumerable<string> | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: Enumerable<string> | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type DateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Enumerable<Date> | Enumerable<string> | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Enumerable<Date> | Enumerable<string> | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type UsersNullableRelationFilter = {
    is?: UsersWhereInput | null
    isNot?: UsersWhereInput | null
  }

  export type Gbif_occurrence_downloadsListRelationFilter = {
    every?: Gbif_occurrence_downloadsWhereInput
    some?: Gbif_occurrence_downloadsWhereInput
    none?: Gbif_occurrence_downloadsWhereInput
  }

  export type Gbif_occurrencesListRelationFilter = {
    every?: Gbif_occurrencesWhereInput
    some?: Gbif_occurrencesWhereInput
    none?: Gbif_occurrencesWhereInput
  }

  export type Gbif_taxaListRelationFilter = {
    every?: Gbif_taxaWhereInput
    some?: Gbif_taxaWhereInput
    none?: Gbif_taxaWhereInput
  }

  export type Goal_report_valuesListRelationFilter = {
    every?: Goal_report_valuesWhereInput
    some?: Goal_report_valuesWhereInput
    none?: Goal_report_valuesWhereInput
  }

  export type Goal_reportsListRelationFilter = {
    every?: Goal_reportsWhereInput
    some?: Goal_reportsWhereInput
    none?: Goal_reportsWhereInput
  }

  export type GoalsListRelationFilter = {
    every?: GoalsWhereInput
    some?: GoalsWhereInput
    none?: GoalsWhereInput
  }

  export type List_valuesListRelationFilter = {
    every?: List_valuesWhereInput
    some?: List_valuesWhereInput
    none?: List_valuesWhereInput
  }

  export type ListsListRelationFilter = {
    every?: ListsWhereInput
    some?: ListsWhereInput
    none?: ListsWhereInput
  }

  export type Observation_sourcesListRelationFilter = {
    every?: Observation_sourcesWhereInput
    some?: Observation_sourcesWhereInput
    none?: Observation_sourcesWhereInput
  }

  export type PersonsListRelationFilter = {
    every?: PersonsWhereInput
    some?: PersonsWhereInput
    none?: PersonsWhereInput
  }

  export type Place_levelsListRelationFilter = {
    every?: Place_levelsWhereInput
    some?: Place_levelsWhereInput
    none?: Place_levelsWhereInput
  }

  export type Project_usersListRelationFilter = {
    every?: Project_usersWhereInput
    some?: Project_usersWhereInput
    none?: Project_usersWhereInput
  }

  export type ProjectsListRelationFilter = {
    every?: ProjectsWhereInput
    some?: ProjectsWhereInput
    none?: ProjectsWhereInput
  }

  export type Subproject_taxaListRelationFilter = {
    every?: Subproject_taxaWhereInput
    some?: Subproject_taxaWhereInput
    none?: Subproject_taxaWhereInput
  }

  export type Subproject_usersListRelationFilter = {
    every?: Subproject_usersWhereInput
    some?: Subproject_usersWhereInput
    none?: Subproject_usersWhereInput
  }

  export type SubprojectsListRelationFilter = {
    every?: SubprojectsWhereInput
    some?: SubprojectsWhereInput
    none?: SubprojectsWhereInput
  }

  export type TaxaListRelationFilter = {
    every?: TaxaWhereInput
    some?: TaxaWhereInput
    none?: TaxaWhereInput
  }

  export type TaxonomiesListRelationFilter = {
    every?: TaxonomiesWhereInput
    some?: TaxonomiesWhereInput
    none?: TaxonomiesWhereInput
  }

  export type Tile_layersListRelationFilter = {
    every?: Tile_layersWhereInput
    some?: Tile_layersWhereInput
    none?: Tile_layersWhereInput
  }

  export type Ui_optionsListRelationFilter = {
    every?: Ui_optionsWhereInput
    some?: Ui_optionsWhereInput
    none?: Ui_optionsWhereInput
  }

  export type UnitsListRelationFilter = {
    every?: UnitsWhereInput
    some?: UnitsWhereInput
    none?: UnitsWhereInput
  }

  export type User_messagesListRelationFilter = {
    every?: User_messagesWhereInput
    some?: User_messagesWhereInput
    none?: User_messagesWhereInput
  }

  export type SortOrderInput = {
    sort: SortOrder
    nulls?: NullsOrder
  }

  export type Gbif_occurrence_downloadsOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type Gbif_occurrencesOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type Gbif_taxaOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type Goal_report_valuesOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type Goal_reportsOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type GoalsOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type List_valuesOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ListsOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type Observation_sourcesOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type PersonsOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type Place_levelsOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type Project_usersOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ProjectsOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type Subproject_taxaOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type Subproject_usersOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type SubprojectsOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type TaxaOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type TaxonomiesOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type Tile_layersOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type Ui_optionsOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type UnitsOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type User_messagesOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type AccountsCountOrderByAggregateInput = {
    account_id?: SortOrder
    user_id?: SortOrder
    type?: SortOrder
    period_start?: SortOrder
    period_end?: SortOrder
    projects_label_by?: SortOrder
    label?: SortOrder
  }

  export type AccountsMaxOrderByAggregateInput = {
    account_id?: SortOrder
    user_id?: SortOrder
    type?: SortOrder
    period_start?: SortOrder
    period_end?: SortOrder
    projects_label_by?: SortOrder
    label?: SortOrder
  }

  export type AccountsMinOrderByAggregateInput = {
    account_id?: SortOrder
    user_id?: SortOrder
    type?: SortOrder
    period_start?: SortOrder
    period_end?: SortOrder
    projects_label_by?: SortOrder
    label?: SortOrder
  }

  export type UuidWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: Enumerable<string> | ListStringFieldRefInput<$PrismaModel>
    notIn?: Enumerable<string> | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedUuidWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type UuidNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: Enumerable<string> | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: Enumerable<string> | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedUuidNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type StringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: Enumerable<string> | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: Enumerable<string> | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type DateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Enumerable<Date> | Enumerable<string> | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Enumerable<Date> | Enumerable<string> | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type IntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: Enumerable<number> | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: Enumerable<number> | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type BoolNullableFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableFilter<$PrismaModel> | boolean | null
  }

  export type Widgets_for_fieldsListRelationFilter = {
    every?: Widgets_for_fieldsWhereInput
    some?: Widgets_for_fieldsWhereInput
    none?: Widgets_for_fieldsWhereInput
  }

  export type Widgets_for_fieldsOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type Field_typesCountOrderByAggregateInput = {
    field_type_id?: SortOrder
    name?: SortOrder
    sort?: SortOrder
    comment?: SortOrder
    label_replace_by_generated_column?: SortOrder
    deleted?: SortOrder
  }

  export type Field_typesAvgOrderByAggregateInput = {
    sort?: SortOrder
  }

  export type Field_typesMaxOrderByAggregateInput = {
    field_type_id?: SortOrder
    name?: SortOrder
    sort?: SortOrder
    comment?: SortOrder
    label_replace_by_generated_column?: SortOrder
    deleted?: SortOrder
  }

  export type Field_typesMinOrderByAggregateInput = {
    field_type_id?: SortOrder
    name?: SortOrder
    sort?: SortOrder
    comment?: SortOrder
    label_replace_by_generated_column?: SortOrder
    deleted?: SortOrder
  }

  export type Field_typesSumOrderByAggregateInput = {
    sort?: SortOrder
  }

  export type IntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: Enumerable<number> | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: Enumerable<number> | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type BoolNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableWithAggregatesFilter<$PrismaModel> | boolean | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedBoolNullableFilter<$PrismaModel>
    _max?: NestedBoolNullableFilter<$PrismaModel>
  }

  export type Enumgbif_tableNullableFilter<$PrismaModel = never> = {
    equals?: gbif_table | Enumgbif_tableFieldRefInput<$PrismaModel> | null
    in?: Enumerable<gbif_table> | ListEnumgbif_tableFieldRefInput<$PrismaModel> | null
    notIn?: Enumerable<gbif_table> | ListEnumgbif_tableFieldRefInput<$PrismaModel> | null
    not?: NestedEnumgbif_tableNullableFilter<$PrismaModel> | gbif_table | null
  }
  export type JsonNullableFilter<$PrismaModel = never> = 
    | PatchUndefined<
        Either<Required<JsonNullableFilterBase<$PrismaModel>>, Exclude<keyof Required<JsonNullableFilterBase<$PrismaModel>>, 'path'>>,
        Required<JsonNullableFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<JsonNullableFilterBase<$PrismaModel>>, 'path'>>

  export type JsonNullableFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: Array<string>
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
  }

  export type AccountsNullableRelationFilter = {
    is?: AccountsWhereInput | null
    isNot?: AccountsWhereInput | null
  }

  export type ProjectsNullableRelationFilter = {
    is?: ProjectsWhereInput | null
    isNot?: ProjectsWhereInput | null
  }

  export type SubprojectsNullableRelationFilter = {
    is?: SubprojectsWhereInput | null
    isNot?: SubprojectsWhereInput | null
  }

  export type Gbif_occurrence_downloadsCountOrderByAggregateInput = {
    gbif_occurrence_download_id?: SortOrder
    account_id?: SortOrder
    project_id?: SortOrder
    subproject_id?: SortOrder
    gbif_table?: SortOrder
    filters?: SortOrder
    created_time?: SortOrder
    download_key?: SortOrder
    error?: SortOrder
    inserted_time?: SortOrder
    inserted_count?: SortOrder
    attribution?: SortOrder
    deleted?: SortOrder
  }

  export type Gbif_occurrence_downloadsAvgOrderByAggregateInput = {
    inserted_count?: SortOrder
  }

  export type Gbif_occurrence_downloadsMaxOrderByAggregateInput = {
    gbif_occurrence_download_id?: SortOrder
    account_id?: SortOrder
    project_id?: SortOrder
    subproject_id?: SortOrder
    gbif_table?: SortOrder
    created_time?: SortOrder
    download_key?: SortOrder
    error?: SortOrder
    inserted_time?: SortOrder
    inserted_count?: SortOrder
    attribution?: SortOrder
    deleted?: SortOrder
  }

  export type Gbif_occurrence_downloadsMinOrderByAggregateInput = {
    gbif_occurrence_download_id?: SortOrder
    account_id?: SortOrder
    project_id?: SortOrder
    subproject_id?: SortOrder
    gbif_table?: SortOrder
    created_time?: SortOrder
    download_key?: SortOrder
    error?: SortOrder
    inserted_time?: SortOrder
    inserted_count?: SortOrder
    attribution?: SortOrder
    deleted?: SortOrder
  }

  export type Gbif_occurrence_downloadsSumOrderByAggregateInput = {
    inserted_count?: SortOrder
  }

  export type Enumgbif_tableNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: gbif_table | Enumgbif_tableFieldRefInput<$PrismaModel> | null
    in?: Enumerable<gbif_table> | ListEnumgbif_tableFieldRefInput<$PrismaModel> | null
    notIn?: Enumerable<gbif_table> | ListEnumgbif_tableFieldRefInput<$PrismaModel> | null
    not?: NestedEnumgbif_tableNullableWithAggregatesFilter<$PrismaModel> | gbif_table | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedEnumgbif_tableNullableFilter<$PrismaModel>
    _max?: NestedEnumgbif_tableNullableFilter<$PrismaModel>
  }
  export type JsonNullableWithAggregatesFilter<$PrismaModel = never> = 
    | PatchUndefined<
        Either<Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>, Exclude<keyof Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>, 'path'>>,
        Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>, 'path'>>

  export type JsonNullableWithAggregatesFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: Array<string>
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedJsonNullableFilter<$PrismaModel>
    _max?: NestedJsonNullableFilter<$PrismaModel>
  }

  export type Gbif_occurrencesCountOrderByAggregateInput = {
    gbif_occurrence_id?: SortOrder
    account_id?: SortOrder
    project_id?: SortOrder
    subproject_id?: SortOrder
    gbif_data?: SortOrder
    label?: SortOrder
  }

  export type Gbif_occurrencesMaxOrderByAggregateInput = {
    gbif_occurrence_id?: SortOrder
    account_id?: SortOrder
    project_id?: SortOrder
    subproject_id?: SortOrder
    label?: SortOrder
  }

  export type Gbif_occurrencesMinOrderByAggregateInput = {
    gbif_occurrence_id?: SortOrder
    account_id?: SortOrder
    project_id?: SortOrder
    subproject_id?: SortOrder
    label?: SortOrder
  }

  export type Gbif_taxaCountOrderByAggregateInput = {
    gbif_taxon_id?: SortOrder
    account_id?: SortOrder
    project_id?: SortOrder
    gbif_data?: SortOrder
    label?: SortOrder
  }

  export type Gbif_taxaMaxOrderByAggregateInput = {
    gbif_taxon_id?: SortOrder
    account_id?: SortOrder
    project_id?: SortOrder
    label?: SortOrder
  }

  export type Gbif_taxaMinOrderByAggregateInput = {
    gbif_taxon_id?: SortOrder
    account_id?: SortOrder
    project_id?: SortOrder
    label?: SortOrder
  }

  export type FloatNullableFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: Enumerable<number> | ListFloatFieldRefInput<$PrismaModel> | null
    notIn?: Enumerable<number> | ListFloatFieldRefInput<$PrismaModel> | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableFilter<$PrismaModel> | number | null
  }

  export type Goal_reportsNullableRelationFilter = {
    is?: Goal_reportsWhereInput | null
    isNot?: Goal_reportsWhereInput | null
  }

  export type UnitsNullableRelationFilter = {
    is?: UnitsWhereInput | null
    isNot?: UnitsWhereInput | null
  }

  export type Goal_report_valuesCountOrderByAggregateInput = {
    goal_report_value_id?: SortOrder
    account_id?: SortOrder
    goal_report_id?: SortOrder
    unit_id?: SortOrder
    value_integer?: SortOrder
    value_numeric?: SortOrder
    value_text?: SortOrder
    label?: SortOrder
    deleted?: SortOrder
  }

  export type Goal_report_valuesAvgOrderByAggregateInput = {
    value_integer?: SortOrder
    value_numeric?: SortOrder
  }

  export type Goal_report_valuesMaxOrderByAggregateInput = {
    goal_report_value_id?: SortOrder
    account_id?: SortOrder
    goal_report_id?: SortOrder
    unit_id?: SortOrder
    value_integer?: SortOrder
    value_numeric?: SortOrder
    value_text?: SortOrder
    label?: SortOrder
    deleted?: SortOrder
  }

  export type Goal_report_valuesMinOrderByAggregateInput = {
    goal_report_value_id?: SortOrder
    account_id?: SortOrder
    goal_report_id?: SortOrder
    unit_id?: SortOrder
    value_integer?: SortOrder
    value_numeric?: SortOrder
    value_text?: SortOrder
    label?: SortOrder
    deleted?: SortOrder
  }

  export type Goal_report_valuesSumOrderByAggregateInput = {
    value_integer?: SortOrder
    value_numeric?: SortOrder
  }

  export type FloatNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: Enumerable<number> | ListFloatFieldRefInput<$PrismaModel> | null
    notIn?: Enumerable<number> | ListFloatFieldRefInput<$PrismaModel> | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedFloatNullableFilter<$PrismaModel>
    _min?: NestedFloatNullableFilter<$PrismaModel>
    _max?: NestedFloatNullableFilter<$PrismaModel>
  }

  export type GoalsNullableRelationFilter = {
    is?: GoalsWhereInput | null
    isNot?: GoalsWhereInput | null
  }

  export type Goal_reportsCountOrderByAggregateInput = {
    goal_report_id?: SortOrder
    account_id?: SortOrder
    goal_id?: SortOrder
    data?: SortOrder
    label?: SortOrder
    deleted?: SortOrder
  }

  export type Goal_reportsMaxOrderByAggregateInput = {
    goal_report_id?: SortOrder
    account_id?: SortOrder
    goal_id?: SortOrder
    label?: SortOrder
    deleted?: SortOrder
  }

  export type Goal_reportsMinOrderByAggregateInput = {
    goal_report_id?: SortOrder
    account_id?: SortOrder
    goal_id?: SortOrder
    label?: SortOrder
    deleted?: SortOrder
  }

  export type GoalsCountOrderByAggregateInput = {
    goal_id?: SortOrder
    account_id?: SortOrder
    subproject_id?: SortOrder
    year?: SortOrder
    name?: SortOrder
    data?: SortOrder
    label_replace_by_generated_column?: SortOrder
    deleted?: SortOrder
  }

  export type GoalsAvgOrderByAggregateInput = {
    year?: SortOrder
  }

  export type GoalsMaxOrderByAggregateInput = {
    goal_id?: SortOrder
    account_id?: SortOrder
    subproject_id?: SortOrder
    year?: SortOrder
    name?: SortOrder
    label_replace_by_generated_column?: SortOrder
    deleted?: SortOrder
  }

  export type GoalsMinOrderByAggregateInput = {
    goal_id?: SortOrder
    account_id?: SortOrder
    subproject_id?: SortOrder
    year?: SortOrder
    name?: SortOrder
    label_replace_by_generated_column?: SortOrder
    deleted?: SortOrder
  }

  export type GoalsSumOrderByAggregateInput = {
    year?: SortOrder
  }

  export type ListsNullableRelationFilter = {
    is?: ListsWhereInput | null
    isNot?: ListsWhereInput | null
  }

  export type List_valuesCountOrderByAggregateInput = {
    list_value_id?: SortOrder
    account_id?: SortOrder
    list_id?: SortOrder
    value?: SortOrder
    obsolete?: SortOrder
    label_replace_by_generated_column?: SortOrder
    deleted?: SortOrder
  }

  export type List_valuesMaxOrderByAggregateInput = {
    list_value_id?: SortOrder
    account_id?: SortOrder
    list_id?: SortOrder
    value?: SortOrder
    obsolete?: SortOrder
    label_replace_by_generated_column?: SortOrder
    deleted?: SortOrder
  }

  export type List_valuesMinOrderByAggregateInput = {
    list_value_id?: SortOrder
    account_id?: SortOrder
    list_id?: SortOrder
    value?: SortOrder
    obsolete?: SortOrder
    label_replace_by_generated_column?: SortOrder
    deleted?: SortOrder
  }

  export type ListsCountOrderByAggregateInput = {
    list_id?: SortOrder
    account_id?: SortOrder
    project_id?: SortOrder
    name?: SortOrder
    data?: SortOrder
    obsolete?: SortOrder
    label_replace_by_generated_column?: SortOrder
    deleted?: SortOrder
  }

  export type ListsMaxOrderByAggregateInput = {
    list_id?: SortOrder
    account_id?: SortOrder
    project_id?: SortOrder
    name?: SortOrder
    obsolete?: SortOrder
    label_replace_by_generated_column?: SortOrder
    deleted?: SortOrder
  }

  export type ListsMinOrderByAggregateInput = {
    list_id?: SortOrder
    account_id?: SortOrder
    project_id?: SortOrder
    name?: SortOrder
    obsolete?: SortOrder
    label_replace_by_generated_column?: SortOrder
    deleted?: SortOrder
  }

  export type MessagesCountOrderByAggregateInput = {
    message_id?: SortOrder
    label_replace_by_generated_column?: SortOrder
    date?: SortOrder
    message?: SortOrder
  }

  export type MessagesMaxOrderByAggregateInput = {
    message_id?: SortOrder
    label_replace_by_generated_column?: SortOrder
    date?: SortOrder
    message?: SortOrder
  }

  export type MessagesMinOrderByAggregateInput = {
    message_id?: SortOrder
    label_replace_by_generated_column?: SortOrder
    date?: SortOrder
    message?: SortOrder
  }

  export type Observation_sourcesCountOrderByAggregateInput = {
    observation_source_id?: SortOrder
    account_id?: SortOrder
    project_id?: SortOrder
    name?: SortOrder
    url?: SortOrder
    data?: SortOrder
    label_replace_by_generated_column?: SortOrder
    deleted?: SortOrder
  }

  export type Observation_sourcesMaxOrderByAggregateInput = {
    observation_source_id?: SortOrder
    account_id?: SortOrder
    project_id?: SortOrder
    name?: SortOrder
    url?: SortOrder
    label_replace_by_generated_column?: SortOrder
    deleted?: SortOrder
  }

  export type Observation_sourcesMinOrderByAggregateInput = {
    observation_source_id?: SortOrder
    account_id?: SortOrder
    project_id?: SortOrder
    name?: SortOrder
    url?: SortOrder
    label_replace_by_generated_column?: SortOrder
    deleted?: SortOrder
  }

  export type PersonsCountOrderByAggregateInput = {
    person_id?: SortOrder
    project_id?: SortOrder
    account_id?: SortOrder
    email?: SortOrder
    data?: SortOrder
    label_replace_by_generated_column?: SortOrder
    deleted?: SortOrder
  }

  export type PersonsMaxOrderByAggregateInput = {
    person_id?: SortOrder
    project_id?: SortOrder
    account_id?: SortOrder
    email?: SortOrder
    label_replace_by_generated_column?: SortOrder
    deleted?: SortOrder
  }

  export type PersonsMinOrderByAggregateInput = {
    person_id?: SortOrder
    project_id?: SortOrder
    account_id?: SortOrder
    email?: SortOrder
    label_replace_by_generated_column?: SortOrder
    deleted?: SortOrder
  }

  export type Place_levelsCountOrderByAggregateInput = {
    place_level_id?: SortOrder
    account_id?: SortOrder
    project_id?: SortOrder
    level?: SortOrder
    name_singular?: SortOrder
    name_plural?: SortOrder
    name_short?: SortOrder
    reports?: SortOrder
    report_values?: SortOrder
    actions?: SortOrder
    action_values?: SortOrder
    action_reports?: SortOrder
    checks?: SortOrder
    check_values?: SortOrder
    check_taxa?: SortOrder
    observations?: SortOrder
    label_replace_by_generated_column?: SortOrder
    deleted?: SortOrder
  }

  export type Place_levelsAvgOrderByAggregateInput = {
    level?: SortOrder
  }

  export type Place_levelsMaxOrderByAggregateInput = {
    place_level_id?: SortOrder
    account_id?: SortOrder
    project_id?: SortOrder
    level?: SortOrder
    name_singular?: SortOrder
    name_plural?: SortOrder
    name_short?: SortOrder
    reports?: SortOrder
    report_values?: SortOrder
    actions?: SortOrder
    action_values?: SortOrder
    action_reports?: SortOrder
    checks?: SortOrder
    check_values?: SortOrder
    check_taxa?: SortOrder
    observations?: SortOrder
    label_replace_by_generated_column?: SortOrder
    deleted?: SortOrder
  }

  export type Place_levelsMinOrderByAggregateInput = {
    place_level_id?: SortOrder
    account_id?: SortOrder
    project_id?: SortOrder
    level?: SortOrder
    name_singular?: SortOrder
    name_plural?: SortOrder
    name_short?: SortOrder
    reports?: SortOrder
    report_values?: SortOrder
    actions?: SortOrder
    action_values?: SortOrder
    action_reports?: SortOrder
    checks?: SortOrder
    check_values?: SortOrder
    check_taxa?: SortOrder
    observations?: SortOrder
    label_replace_by_generated_column?: SortOrder
    deleted?: SortOrder
  }

  export type Place_levelsSumOrderByAggregateInput = {
    level?: SortOrder
  }

  export type Project_usersCountOrderByAggregateInput = {
    project_user_id?: SortOrder
    account_id?: SortOrder
    project_id?: SortOrder
    user_id?: SortOrder
    role?: SortOrder
    label?: SortOrder
    deleted?: SortOrder
  }

  export type Project_usersMaxOrderByAggregateInput = {
    project_user_id?: SortOrder
    account_id?: SortOrder
    project_id?: SortOrder
    user_id?: SortOrder
    role?: SortOrder
    label?: SortOrder
    deleted?: SortOrder
  }

  export type Project_usersMinOrderByAggregateInput = {
    project_user_id?: SortOrder
    account_id?: SortOrder
    project_id?: SortOrder
    user_id?: SortOrder
    role?: SortOrder
    label?: SortOrder
    deleted?: SortOrder
  }

  export type Enumproject_typeNullableFilter<$PrismaModel = never> = {
    equals?: project_type | Enumproject_typeFieldRefInput<$PrismaModel> | null
    in?: Enumerable<project_type> | ListEnumproject_typeFieldRefInput<$PrismaModel> | null
    notIn?: Enumerable<project_type> | ListEnumproject_typeFieldRefInput<$PrismaModel> | null
    not?: NestedEnumproject_typeNullableFilter<$PrismaModel> | project_type | null
  }

  export type ProjectsCountOrderByAggregateInput = {
    project_id?: SortOrder
    account_id?: SortOrder
    name?: SortOrder
    label?: SortOrder
    type?: SortOrder
    subproject_name_singular?: SortOrder
    subproject_name_plural?: SortOrder
    subproject_order_by?: SortOrder
    places_label_by?: SortOrder
    places_order_by?: SortOrder
    persons_label_by?: SortOrder
    persons_order_by?: SortOrder
    goal_reports_label_by?: SortOrder
    goal_reports_order_by?: SortOrder
    values_on_multiple_levels?: SortOrder
    multiple_action_values_on_same_level?: SortOrder
    multiple_check_values_on_same_level?: SortOrder
    data?: SortOrder
    files_offline?: SortOrder
    files_active_projects?: SortOrder
    files_active_subprojects?: SortOrder
    files_active_places?: SortOrder
    files_active_actions?: SortOrder
    files_active_checks?: SortOrder
    deleted?: SortOrder
  }

  export type ProjectsMaxOrderByAggregateInput = {
    project_id?: SortOrder
    account_id?: SortOrder
    name?: SortOrder
    label?: SortOrder
    type?: SortOrder
    subproject_name_singular?: SortOrder
    subproject_name_plural?: SortOrder
    subproject_order_by?: SortOrder
    places_label_by?: SortOrder
    persons_label_by?: SortOrder
    persons_order_by?: SortOrder
    goal_reports_label_by?: SortOrder
    goal_reports_order_by?: SortOrder
    values_on_multiple_levels?: SortOrder
    multiple_action_values_on_same_level?: SortOrder
    multiple_check_values_on_same_level?: SortOrder
    files_offline?: SortOrder
    files_active_projects?: SortOrder
    files_active_subprojects?: SortOrder
    files_active_places?: SortOrder
    files_active_actions?: SortOrder
    files_active_checks?: SortOrder
    deleted?: SortOrder
  }

  export type ProjectsMinOrderByAggregateInput = {
    project_id?: SortOrder
    account_id?: SortOrder
    name?: SortOrder
    label?: SortOrder
    type?: SortOrder
    subproject_name_singular?: SortOrder
    subproject_name_plural?: SortOrder
    subproject_order_by?: SortOrder
    places_label_by?: SortOrder
    persons_label_by?: SortOrder
    persons_order_by?: SortOrder
    goal_reports_label_by?: SortOrder
    goal_reports_order_by?: SortOrder
    values_on_multiple_levels?: SortOrder
    multiple_action_values_on_same_level?: SortOrder
    multiple_check_values_on_same_level?: SortOrder
    files_offline?: SortOrder
    files_active_projects?: SortOrder
    files_active_subprojects?: SortOrder
    files_active_places?: SortOrder
    files_active_actions?: SortOrder
    files_active_checks?: SortOrder
    deleted?: SortOrder
  }

  export type Enumproject_typeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: project_type | Enumproject_typeFieldRefInput<$PrismaModel> | null
    in?: Enumerable<project_type> | ListEnumproject_typeFieldRefInput<$PrismaModel> | null
    notIn?: Enumerable<project_type> | ListEnumproject_typeFieldRefInput<$PrismaModel> | null
    not?: NestedEnumproject_typeNullableWithAggregatesFilter<$PrismaModel> | project_type | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedEnumproject_typeNullableFilter<$PrismaModel>
    _max?: NestedEnumproject_typeNullableFilter<$PrismaModel>
  }

  export type TaxaNullableRelationFilter = {
    is?: TaxaWhereInput | null
    isNot?: TaxaWhereInput | null
  }

  export type Subproject_taxaCountOrderByAggregateInput = {
    subproject_taxon_id?: SortOrder
    account_id?: SortOrder
    subproject_id?: SortOrder
    taxon_id?: SortOrder
    label?: SortOrder
    deleted?: SortOrder
  }

  export type Subproject_taxaMaxOrderByAggregateInput = {
    subproject_taxon_id?: SortOrder
    account_id?: SortOrder
    subproject_id?: SortOrder
    taxon_id?: SortOrder
    label?: SortOrder
    deleted?: SortOrder
  }

  export type Subproject_taxaMinOrderByAggregateInput = {
    subproject_taxon_id?: SortOrder
    account_id?: SortOrder
    subproject_id?: SortOrder
    taxon_id?: SortOrder
    label?: SortOrder
    deleted?: SortOrder
  }

  export type Subproject_usersCountOrderByAggregateInput = {
    subproject_user_id?: SortOrder
    account_id?: SortOrder
    subproject_id?: SortOrder
    user_id?: SortOrder
    role?: SortOrder
    label?: SortOrder
    deleted?: SortOrder
  }

  export type Subproject_usersMaxOrderByAggregateInput = {
    subproject_user_id?: SortOrder
    account_id?: SortOrder
    subproject_id?: SortOrder
    user_id?: SortOrder
    role?: SortOrder
    label?: SortOrder
    deleted?: SortOrder
  }

  export type Subproject_usersMinOrderByAggregateInput = {
    subproject_user_id?: SortOrder
    account_id?: SortOrder
    subproject_id?: SortOrder
    user_id?: SortOrder
    role?: SortOrder
    label?: SortOrder
    deleted?: SortOrder
  }

  export type SubprojectsCountOrderByAggregateInput = {
    subproject_id?: SortOrder
    account_id?: SortOrder
    project_id?: SortOrder
    name?: SortOrder
    label_replace_by_generated_column?: SortOrder
    start_year?: SortOrder
    end_year?: SortOrder
    data?: SortOrder
    deleted?: SortOrder
  }

  export type SubprojectsAvgOrderByAggregateInput = {
    start_year?: SortOrder
    end_year?: SortOrder
  }

  export type SubprojectsMaxOrderByAggregateInput = {
    subproject_id?: SortOrder
    account_id?: SortOrder
    project_id?: SortOrder
    name?: SortOrder
    label_replace_by_generated_column?: SortOrder
    start_year?: SortOrder
    end_year?: SortOrder
    deleted?: SortOrder
  }

  export type SubprojectsMinOrderByAggregateInput = {
    subproject_id?: SortOrder
    account_id?: SortOrder
    project_id?: SortOrder
    name?: SortOrder
    label_replace_by_generated_column?: SortOrder
    start_year?: SortOrder
    end_year?: SortOrder
    deleted?: SortOrder
  }

  export type SubprojectsSumOrderByAggregateInput = {
    start_year?: SortOrder
    end_year?: SortOrder
  }

  export type TaxonomiesNullableRelationFilter = {
    is?: TaxonomiesWhereInput | null
    isNot?: TaxonomiesWhereInput | null
  }

  export type TaxaCountOrderByAggregateInput = {
    taxon_id?: SortOrder
    account_id?: SortOrder
    taxonomy_id?: SortOrder
    name?: SortOrder
    id_in_source?: SortOrder
    url?: SortOrder
    label?: SortOrder
    deleted?: SortOrder
  }

  export type TaxaMaxOrderByAggregateInput = {
    taxon_id?: SortOrder
    account_id?: SortOrder
    taxonomy_id?: SortOrder
    name?: SortOrder
    id_in_source?: SortOrder
    url?: SortOrder
    label?: SortOrder
    deleted?: SortOrder
  }

  export type TaxaMinOrderByAggregateInput = {
    taxon_id?: SortOrder
    account_id?: SortOrder
    taxonomy_id?: SortOrder
    name?: SortOrder
    id_in_source?: SortOrder
    url?: SortOrder
    label?: SortOrder
    deleted?: SortOrder
  }

  export type Enumtaxonomy_typeNullableFilter<$PrismaModel = never> = {
    equals?: taxonomy_type | Enumtaxonomy_typeFieldRefInput<$PrismaModel> | null
    in?: Enumerable<taxonomy_type> | ListEnumtaxonomy_typeFieldRefInput<$PrismaModel> | null
    notIn?: Enumerable<taxonomy_type> | ListEnumtaxonomy_typeFieldRefInput<$PrismaModel> | null
    not?: NestedEnumtaxonomy_typeNullableFilter<$PrismaModel> | taxonomy_type | null
  }

  export type TaxonomiesCountOrderByAggregateInput = {
    taxonomy_id?: SortOrder
    account_id?: SortOrder
    project_id?: SortOrder
    type?: SortOrder
    name?: SortOrder
    url?: SortOrder
    obsolete?: SortOrder
    data?: SortOrder
    label_replace_by_generated_column?: SortOrder
    deleted?: SortOrder
  }

  export type TaxonomiesMaxOrderByAggregateInput = {
    taxonomy_id?: SortOrder
    account_id?: SortOrder
    project_id?: SortOrder
    type?: SortOrder
    name?: SortOrder
    url?: SortOrder
    obsolete?: SortOrder
    label_replace_by_generated_column?: SortOrder
    deleted?: SortOrder
  }

  export type TaxonomiesMinOrderByAggregateInput = {
    taxonomy_id?: SortOrder
    account_id?: SortOrder
    project_id?: SortOrder
    type?: SortOrder
    name?: SortOrder
    url?: SortOrder
    obsolete?: SortOrder
    label_replace_by_generated_column?: SortOrder
    deleted?: SortOrder
  }

  export type Enumtaxonomy_typeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: taxonomy_type | Enumtaxonomy_typeFieldRefInput<$PrismaModel> | null
    in?: Enumerable<taxonomy_type> | ListEnumtaxonomy_typeFieldRefInput<$PrismaModel> | null
    notIn?: Enumerable<taxonomy_type> | ListEnumtaxonomy_typeFieldRefInput<$PrismaModel> | null
    not?: NestedEnumtaxonomy_typeNullableWithAggregatesFilter<$PrismaModel> | taxonomy_type | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedEnumtaxonomy_typeNullableFilter<$PrismaModel>
    _max?: NestedEnumtaxonomy_typeNullableFilter<$PrismaModel>
  }

  export type Enumtile_layer_type_enumNullableFilter<$PrismaModel = never> = {
    equals?: tile_layer_type_enum | Enumtile_layer_type_enumFieldRefInput<$PrismaModel> | null
    in?: Enumerable<tile_layer_type_enum> | ListEnumtile_layer_type_enumFieldRefInput<$PrismaModel> | null
    notIn?: Enumerable<tile_layer_type_enum> | ListEnumtile_layer_type_enumFieldRefInput<$PrismaModel> | null
    not?: NestedEnumtile_layer_type_enumNullableFilter<$PrismaModel> | tile_layer_type_enum | null
  }

  export type ProjectsRelationFilter = {
    is?: ProjectsWhereInput
    isNot?: ProjectsWhereInput
  }

  export type Tile_layersCountOrderByAggregateInput = {
    tile_layer_id?: SortOrder
    account_id?: SortOrder
    project_id?: SortOrder
    label?: SortOrder
    sort?: SortOrder
    active?: SortOrder
    type?: SortOrder
    wmts_url_template?: SortOrder
    wmts_subdomains?: SortOrder
    wms_base_url?: SortOrder
    wms_format?: SortOrder
    wms_layer?: SortOrder
    wms_parameters?: SortOrder
    wms_styles?: SortOrder
    wms_transparent?: SortOrder
    wms_version?: SortOrder
    wms_info_format?: SortOrder
    wms_legend?: SortOrder
    max_zoom?: SortOrder
    min_zoom?: SortOrder
    opacity_percent?: SortOrder
    grayscale?: SortOrder
    local_data_size?: SortOrder
    local_data_bounds?: SortOrder
    deleted?: SortOrder
  }

  export type Tile_layersAvgOrderByAggregateInput = {
    sort?: SortOrder
    max_zoom?: SortOrder
    min_zoom?: SortOrder
    opacity_percent?: SortOrder
    local_data_size?: SortOrder
  }

  export type Tile_layersMaxOrderByAggregateInput = {
    tile_layer_id?: SortOrder
    account_id?: SortOrder
    project_id?: SortOrder
    label?: SortOrder
    sort?: SortOrder
    active?: SortOrder
    type?: SortOrder
    wmts_url_template?: SortOrder
    wms_base_url?: SortOrder
    wms_transparent?: SortOrder
    wms_version?: SortOrder
    max_zoom?: SortOrder
    min_zoom?: SortOrder
    opacity_percent?: SortOrder
    grayscale?: SortOrder
    local_data_size?: SortOrder
    deleted?: SortOrder
  }

  export type Tile_layersMinOrderByAggregateInput = {
    tile_layer_id?: SortOrder
    account_id?: SortOrder
    project_id?: SortOrder
    label?: SortOrder
    sort?: SortOrder
    active?: SortOrder
    type?: SortOrder
    wmts_url_template?: SortOrder
    wms_base_url?: SortOrder
    wms_transparent?: SortOrder
    wms_version?: SortOrder
    max_zoom?: SortOrder
    min_zoom?: SortOrder
    opacity_percent?: SortOrder
    grayscale?: SortOrder
    local_data_size?: SortOrder
    deleted?: SortOrder
  }

  export type Tile_layersSumOrderByAggregateInput = {
    sort?: SortOrder
    max_zoom?: SortOrder
    min_zoom?: SortOrder
    opacity_percent?: SortOrder
    local_data_size?: SortOrder
  }

  export type Enumtile_layer_type_enumNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: tile_layer_type_enum | Enumtile_layer_type_enumFieldRefInput<$PrismaModel> | null
    in?: Enumerable<tile_layer_type_enum> | ListEnumtile_layer_type_enumFieldRefInput<$PrismaModel> | null
    notIn?: Enumerable<tile_layer_type_enum> | ListEnumtile_layer_type_enumFieldRefInput<$PrismaModel> | null
    not?: NestedEnumtile_layer_type_enumNullableWithAggregatesFilter<$PrismaModel> | tile_layer_type_enum | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedEnumtile_layer_type_enumNullableFilter<$PrismaModel>
    _max?: NestedEnumtile_layer_type_enumNullableFilter<$PrismaModel>
  }

  export type UsersRelationFilter = {
    is?: UsersWhereInput
    isNot?: UsersWhereInput
  }

  export type Ui_optionsCountOrderByAggregateInput = {
    user_id?: SortOrder
    account_id?: SortOrder
    designing?: SortOrder
    breadcrumbs_overflowing?: SortOrder
    navs_overflowing?: SortOrder
    tabs?: SortOrder
    show_map?: SortOrder
    map_bounds?: SortOrder
    local_map_show?: SortOrder
    tile_layer_sorter?: SortOrder
    vector_layer_sorter?: SortOrder
    editing_place_geometry?: SortOrder
    editing_check_geometry?: SortOrder
    editing_action_geometry?: SortOrder
    label?: SortOrder
  }

  export type Ui_optionsMaxOrderByAggregateInput = {
    user_id?: SortOrder
    account_id?: SortOrder
    designing?: SortOrder
    breadcrumbs_overflowing?: SortOrder
    navs_overflowing?: SortOrder
    show_map?: SortOrder
    tile_layer_sorter?: SortOrder
    vector_layer_sorter?: SortOrder
    editing_place_geometry?: SortOrder
    editing_check_geometry?: SortOrder
    editing_action_geometry?: SortOrder
    label?: SortOrder
  }

  export type Ui_optionsMinOrderByAggregateInput = {
    user_id?: SortOrder
    account_id?: SortOrder
    designing?: SortOrder
    breadcrumbs_overflowing?: SortOrder
    navs_overflowing?: SortOrder
    show_map?: SortOrder
    tile_layer_sorter?: SortOrder
    vector_layer_sorter?: SortOrder
    editing_place_geometry?: SortOrder
    editing_check_geometry?: SortOrder
    editing_action_geometry?: SortOrder
    label?: SortOrder
  }

  export type Enumunit_typeNullableFilter<$PrismaModel = never> = {
    equals?: unit_type | Enumunit_typeFieldRefInput<$PrismaModel> | null
    in?: Enumerable<unit_type> | ListEnumunit_typeFieldRefInput<$PrismaModel> | null
    notIn?: Enumerable<unit_type> | ListEnumunit_typeFieldRefInput<$PrismaModel> | null
    not?: NestedEnumunit_typeNullableFilter<$PrismaModel> | unit_type | null
  }

  export type UnitsCountOrderByAggregateInput = {
    unit_id?: SortOrder
    account_id?: SortOrder
    project_id?: SortOrder
    use_for_action_values?: SortOrder
    use_for_action_report_values?: SortOrder
    use_for_check_values?: SortOrder
    use_for_place_report_values?: SortOrder
    use_for_goal_report_values?: SortOrder
    use_for_subproject_taxa?: SortOrder
    use_for_check_taxa?: SortOrder
    name?: SortOrder
    summable?: SortOrder
    sort?: SortOrder
    type?: SortOrder
    list_id?: SortOrder
    label_replace_by_generated_column?: SortOrder
    deleted?: SortOrder
  }

  export type UnitsAvgOrderByAggregateInput = {
    sort?: SortOrder
  }

  export type UnitsMaxOrderByAggregateInput = {
    unit_id?: SortOrder
    account_id?: SortOrder
    project_id?: SortOrder
    use_for_action_values?: SortOrder
    use_for_action_report_values?: SortOrder
    use_for_check_values?: SortOrder
    use_for_place_report_values?: SortOrder
    use_for_goal_report_values?: SortOrder
    use_for_subproject_taxa?: SortOrder
    use_for_check_taxa?: SortOrder
    name?: SortOrder
    summable?: SortOrder
    sort?: SortOrder
    type?: SortOrder
    list_id?: SortOrder
    label_replace_by_generated_column?: SortOrder
    deleted?: SortOrder
  }

  export type UnitsMinOrderByAggregateInput = {
    unit_id?: SortOrder
    account_id?: SortOrder
    project_id?: SortOrder
    use_for_action_values?: SortOrder
    use_for_action_report_values?: SortOrder
    use_for_check_values?: SortOrder
    use_for_place_report_values?: SortOrder
    use_for_goal_report_values?: SortOrder
    use_for_subproject_taxa?: SortOrder
    use_for_check_taxa?: SortOrder
    name?: SortOrder
    summable?: SortOrder
    sort?: SortOrder
    type?: SortOrder
    list_id?: SortOrder
    label_replace_by_generated_column?: SortOrder
    deleted?: SortOrder
  }

  export type UnitsSumOrderByAggregateInput = {
    sort?: SortOrder
  }

  export type Enumunit_typeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: unit_type | Enumunit_typeFieldRefInput<$PrismaModel> | null
    in?: Enumerable<unit_type> | ListEnumunit_typeFieldRefInput<$PrismaModel> | null
    notIn?: Enumerable<unit_type> | ListEnumunit_typeFieldRefInput<$PrismaModel> | null
    not?: NestedEnumunit_typeNullableWithAggregatesFilter<$PrismaModel> | unit_type | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedEnumunit_typeNullableFilter<$PrismaModel>
    _max?: NestedEnumunit_typeNullableFilter<$PrismaModel>
  }

  export type MessagesNullableRelationFilter = {
    is?: MessagesWhereInput | null
    isNot?: MessagesWhereInput | null
  }

  export type User_messagesCountOrderByAggregateInput = {
    user_message_id?: SortOrder
    account_id?: SortOrder
    user_id?: SortOrder
    message_id?: SortOrder
    label_replace_by_generated_column?: SortOrder
    read?: SortOrder
  }

  export type User_messagesMaxOrderByAggregateInput = {
    user_message_id?: SortOrder
    account_id?: SortOrder
    user_id?: SortOrder
    message_id?: SortOrder
    label_replace_by_generated_column?: SortOrder
    read?: SortOrder
  }

  export type User_messagesMinOrderByAggregateInput = {
    user_message_id?: SortOrder
    account_id?: SortOrder
    user_id?: SortOrder
    message_id?: SortOrder
    label_replace_by_generated_column?: SortOrder
    read?: SortOrder
  }

  export type AccountsListRelationFilter = {
    every?: AccountsWhereInput
    some?: AccountsWhereInput
    none?: AccountsWhereInput
  }

  export type Ui_optionsNullableRelationFilter = {
    is?: Ui_optionsWhereInput | null
    isNot?: Ui_optionsWhereInput | null
  }

  export type AccountsOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type UsersCountOrderByAggregateInput = {
    user_id?: SortOrder
    email?: SortOrder
    auth_id?: SortOrder
    label_replace_by_generated_column?: SortOrder
    deleted?: SortOrder
  }

  export type UsersMaxOrderByAggregateInput = {
    user_id?: SortOrder
    email?: SortOrder
    auth_id?: SortOrder
    label_replace_by_generated_column?: SortOrder
    deleted?: SortOrder
  }

  export type UsersMinOrderByAggregateInput = {
    user_id?: SortOrder
    email?: SortOrder
    auth_id?: SortOrder
    label_replace_by_generated_column?: SortOrder
    deleted?: SortOrder
  }

  export type Widget_typesCountOrderByAggregateInput = {
    widget_type_id?: SortOrder
    name?: SortOrder
    needs_list?: SortOrder
    sort?: SortOrder
    comment?: SortOrder
    label_replace_by_generated_column?: SortOrder
    deleted?: SortOrder
  }

  export type Widget_typesAvgOrderByAggregateInput = {
    sort?: SortOrder
  }

  export type Widget_typesMaxOrderByAggregateInput = {
    widget_type_id?: SortOrder
    name?: SortOrder
    needs_list?: SortOrder
    sort?: SortOrder
    comment?: SortOrder
    label_replace_by_generated_column?: SortOrder
    deleted?: SortOrder
  }

  export type Widget_typesMinOrderByAggregateInput = {
    widget_type_id?: SortOrder
    name?: SortOrder
    needs_list?: SortOrder
    sort?: SortOrder
    comment?: SortOrder
    label_replace_by_generated_column?: SortOrder
    deleted?: SortOrder
  }

  export type Widget_typesSumOrderByAggregateInput = {
    sort?: SortOrder
  }

  export type Field_typesNullableRelationFilter = {
    is?: Field_typesWhereInput | null
    isNot?: Field_typesWhereInput | null
  }

  export type Widget_typesNullableRelationFilter = {
    is?: Widget_typesWhereInput | null
    isNot?: Widget_typesWhereInput | null
  }

  export type Widgets_for_fieldsCountOrderByAggregateInput = {
    widget_for_field_id?: SortOrder
    field_type_id?: SortOrder
    widget_type_id?: SortOrder
    label?: SortOrder
    deleted?: SortOrder
  }

  export type Widgets_for_fieldsMaxOrderByAggregateInput = {
    widget_for_field_id?: SortOrder
    field_type_id?: SortOrder
    widget_type_id?: SortOrder
    label?: SortOrder
    deleted?: SortOrder
  }

  export type Widgets_for_fieldsMinOrderByAggregateInput = {
    widget_for_field_id?: SortOrder
    field_type_id?: SortOrder
    widget_type_id?: SortOrder
    label?: SortOrder
    deleted?: SortOrder
  }

  export type UsersCreateNestedOneWithoutAccountsInput = {
    create?: XOR<UsersCreateWithoutAccountsInput, UsersUncheckedCreateWithoutAccountsInput>
    connectOrCreate?: UsersCreateOrConnectWithoutAccountsInput
    connect?: UsersWhereUniqueInput
  }

  export type Gbif_occurrence_downloadsCreateNestedManyWithoutAccountsInput = {
    create?: XOR<Enumerable<Gbif_occurrence_downloadsCreateWithoutAccountsInput>, Enumerable<Gbif_occurrence_downloadsUncheckedCreateWithoutAccountsInput>>
    connectOrCreate?: Enumerable<Gbif_occurrence_downloadsCreateOrConnectWithoutAccountsInput>
    createMany?: Gbif_occurrence_downloadsCreateManyAccountsInputEnvelope
    connect?: Enumerable<Gbif_occurrence_downloadsWhereUniqueInput>
  }

  export type Gbif_occurrencesCreateNestedManyWithoutAccountsInput = {
    create?: XOR<Enumerable<Gbif_occurrencesCreateWithoutAccountsInput>, Enumerable<Gbif_occurrencesUncheckedCreateWithoutAccountsInput>>
    connectOrCreate?: Enumerable<Gbif_occurrencesCreateOrConnectWithoutAccountsInput>
    createMany?: Gbif_occurrencesCreateManyAccountsInputEnvelope
    connect?: Enumerable<Gbif_occurrencesWhereUniqueInput>
  }

  export type Gbif_taxaCreateNestedManyWithoutAccountsInput = {
    create?: XOR<Enumerable<Gbif_taxaCreateWithoutAccountsInput>, Enumerable<Gbif_taxaUncheckedCreateWithoutAccountsInput>>
    connectOrCreate?: Enumerable<Gbif_taxaCreateOrConnectWithoutAccountsInput>
    createMany?: Gbif_taxaCreateManyAccountsInputEnvelope
    connect?: Enumerable<Gbif_taxaWhereUniqueInput>
  }

  export type Goal_report_valuesCreateNestedManyWithoutAccountsInput = {
    create?: XOR<Enumerable<Goal_report_valuesCreateWithoutAccountsInput>, Enumerable<Goal_report_valuesUncheckedCreateWithoutAccountsInput>>
    connectOrCreate?: Enumerable<Goal_report_valuesCreateOrConnectWithoutAccountsInput>
    createMany?: Goal_report_valuesCreateManyAccountsInputEnvelope
    connect?: Enumerable<Goal_report_valuesWhereUniqueInput>
  }

  export type Goal_reportsCreateNestedManyWithoutAccountsInput = {
    create?: XOR<Enumerable<Goal_reportsCreateWithoutAccountsInput>, Enumerable<Goal_reportsUncheckedCreateWithoutAccountsInput>>
    connectOrCreate?: Enumerable<Goal_reportsCreateOrConnectWithoutAccountsInput>
    createMany?: Goal_reportsCreateManyAccountsInputEnvelope
    connect?: Enumerable<Goal_reportsWhereUniqueInput>
  }

  export type GoalsCreateNestedManyWithoutAccountsInput = {
    create?: XOR<Enumerable<GoalsCreateWithoutAccountsInput>, Enumerable<GoalsUncheckedCreateWithoutAccountsInput>>
    connectOrCreate?: Enumerable<GoalsCreateOrConnectWithoutAccountsInput>
    createMany?: GoalsCreateManyAccountsInputEnvelope
    connect?: Enumerable<GoalsWhereUniqueInput>
  }

  export type List_valuesCreateNestedManyWithoutAccountsInput = {
    create?: XOR<Enumerable<List_valuesCreateWithoutAccountsInput>, Enumerable<List_valuesUncheckedCreateWithoutAccountsInput>>
    connectOrCreate?: Enumerable<List_valuesCreateOrConnectWithoutAccountsInput>
    createMany?: List_valuesCreateManyAccountsInputEnvelope
    connect?: Enumerable<List_valuesWhereUniqueInput>
  }

  export type ListsCreateNestedManyWithoutAccountsInput = {
    create?: XOR<Enumerable<ListsCreateWithoutAccountsInput>, Enumerable<ListsUncheckedCreateWithoutAccountsInput>>
    connectOrCreate?: Enumerable<ListsCreateOrConnectWithoutAccountsInput>
    createMany?: ListsCreateManyAccountsInputEnvelope
    connect?: Enumerable<ListsWhereUniqueInput>
  }

  export type Observation_sourcesCreateNestedManyWithoutAccountsInput = {
    create?: XOR<Enumerable<Observation_sourcesCreateWithoutAccountsInput>, Enumerable<Observation_sourcesUncheckedCreateWithoutAccountsInput>>
    connectOrCreate?: Enumerable<Observation_sourcesCreateOrConnectWithoutAccountsInput>
    createMany?: Observation_sourcesCreateManyAccountsInputEnvelope
    connect?: Enumerable<Observation_sourcesWhereUniqueInput>
  }

  export type PersonsCreateNestedManyWithoutAccountsInput = {
    create?: XOR<Enumerable<PersonsCreateWithoutAccountsInput>, Enumerable<PersonsUncheckedCreateWithoutAccountsInput>>
    connectOrCreate?: Enumerable<PersonsCreateOrConnectWithoutAccountsInput>
    createMany?: PersonsCreateManyAccountsInputEnvelope
    connect?: Enumerable<PersonsWhereUniqueInput>
  }

  export type Place_levelsCreateNestedManyWithoutAccountsInput = {
    create?: XOR<Enumerable<Place_levelsCreateWithoutAccountsInput>, Enumerable<Place_levelsUncheckedCreateWithoutAccountsInput>>
    connectOrCreate?: Enumerable<Place_levelsCreateOrConnectWithoutAccountsInput>
    createMany?: Place_levelsCreateManyAccountsInputEnvelope
    connect?: Enumerable<Place_levelsWhereUniqueInput>
  }

  export type Project_usersCreateNestedManyWithoutAccountsInput = {
    create?: XOR<Enumerable<Project_usersCreateWithoutAccountsInput>, Enumerable<Project_usersUncheckedCreateWithoutAccountsInput>>
    connectOrCreate?: Enumerable<Project_usersCreateOrConnectWithoutAccountsInput>
    createMany?: Project_usersCreateManyAccountsInputEnvelope
    connect?: Enumerable<Project_usersWhereUniqueInput>
  }

  export type ProjectsCreateNestedManyWithoutAccountsInput = {
    create?: XOR<Enumerable<ProjectsCreateWithoutAccountsInput>, Enumerable<ProjectsUncheckedCreateWithoutAccountsInput>>
    connectOrCreate?: Enumerable<ProjectsCreateOrConnectWithoutAccountsInput>
    createMany?: ProjectsCreateManyAccountsInputEnvelope
    connect?: Enumerable<ProjectsWhereUniqueInput>
  }

  export type Subproject_taxaCreateNestedManyWithoutAccountsInput = {
    create?: XOR<Enumerable<Subproject_taxaCreateWithoutAccountsInput>, Enumerable<Subproject_taxaUncheckedCreateWithoutAccountsInput>>
    connectOrCreate?: Enumerable<Subproject_taxaCreateOrConnectWithoutAccountsInput>
    createMany?: Subproject_taxaCreateManyAccountsInputEnvelope
    connect?: Enumerable<Subproject_taxaWhereUniqueInput>
  }

  export type Subproject_usersCreateNestedManyWithoutAccountsInput = {
    create?: XOR<Enumerable<Subproject_usersCreateWithoutAccountsInput>, Enumerable<Subproject_usersUncheckedCreateWithoutAccountsInput>>
    connectOrCreate?: Enumerable<Subproject_usersCreateOrConnectWithoutAccountsInput>
    createMany?: Subproject_usersCreateManyAccountsInputEnvelope
    connect?: Enumerable<Subproject_usersWhereUniqueInput>
  }

  export type SubprojectsCreateNestedManyWithoutAccountsInput = {
    create?: XOR<Enumerable<SubprojectsCreateWithoutAccountsInput>, Enumerable<SubprojectsUncheckedCreateWithoutAccountsInput>>
    connectOrCreate?: Enumerable<SubprojectsCreateOrConnectWithoutAccountsInput>
    createMany?: SubprojectsCreateManyAccountsInputEnvelope
    connect?: Enumerable<SubprojectsWhereUniqueInput>
  }

  export type TaxaCreateNestedManyWithoutAccountsInput = {
    create?: XOR<Enumerable<TaxaCreateWithoutAccountsInput>, Enumerable<TaxaUncheckedCreateWithoutAccountsInput>>
    connectOrCreate?: Enumerable<TaxaCreateOrConnectWithoutAccountsInput>
    createMany?: TaxaCreateManyAccountsInputEnvelope
    connect?: Enumerable<TaxaWhereUniqueInput>
  }

  export type TaxonomiesCreateNestedManyWithoutAccountsInput = {
    create?: XOR<Enumerable<TaxonomiesCreateWithoutAccountsInput>, Enumerable<TaxonomiesUncheckedCreateWithoutAccountsInput>>
    connectOrCreate?: Enumerable<TaxonomiesCreateOrConnectWithoutAccountsInput>
    createMany?: TaxonomiesCreateManyAccountsInputEnvelope
    connect?: Enumerable<TaxonomiesWhereUniqueInput>
  }

  export type Tile_layersCreateNestedManyWithoutAccountsInput = {
    create?: XOR<Enumerable<Tile_layersCreateWithoutAccountsInput>, Enumerable<Tile_layersUncheckedCreateWithoutAccountsInput>>
    connectOrCreate?: Enumerable<Tile_layersCreateOrConnectWithoutAccountsInput>
    createMany?: Tile_layersCreateManyAccountsInputEnvelope
    connect?: Enumerable<Tile_layersWhereUniqueInput>
  }

  export type Ui_optionsCreateNestedManyWithoutAccountsInput = {
    create?: XOR<Enumerable<Ui_optionsCreateWithoutAccountsInput>, Enumerable<Ui_optionsUncheckedCreateWithoutAccountsInput>>
    connectOrCreate?: Enumerable<Ui_optionsCreateOrConnectWithoutAccountsInput>
    createMany?: Ui_optionsCreateManyAccountsInputEnvelope
    connect?: Enumerable<Ui_optionsWhereUniqueInput>
  }

  export type UnitsCreateNestedManyWithoutAccountsInput = {
    create?: XOR<Enumerable<UnitsCreateWithoutAccountsInput>, Enumerable<UnitsUncheckedCreateWithoutAccountsInput>>
    connectOrCreate?: Enumerable<UnitsCreateOrConnectWithoutAccountsInput>
    createMany?: UnitsCreateManyAccountsInputEnvelope
    connect?: Enumerable<UnitsWhereUniqueInput>
  }

  export type User_messagesCreateNestedManyWithoutAccountsInput = {
    create?: XOR<Enumerable<User_messagesCreateWithoutAccountsInput>, Enumerable<User_messagesUncheckedCreateWithoutAccountsInput>>
    connectOrCreate?: Enumerable<User_messagesCreateOrConnectWithoutAccountsInput>
    createMany?: User_messagesCreateManyAccountsInputEnvelope
    connect?: Enumerable<User_messagesWhereUniqueInput>
  }

  export type Gbif_occurrence_downloadsUncheckedCreateNestedManyWithoutAccountsInput = {
    create?: XOR<Enumerable<Gbif_occurrence_downloadsCreateWithoutAccountsInput>, Enumerable<Gbif_occurrence_downloadsUncheckedCreateWithoutAccountsInput>>
    connectOrCreate?: Enumerable<Gbif_occurrence_downloadsCreateOrConnectWithoutAccountsInput>
    createMany?: Gbif_occurrence_downloadsCreateManyAccountsInputEnvelope
    connect?: Enumerable<Gbif_occurrence_downloadsWhereUniqueInput>
  }

  export type Gbif_occurrencesUncheckedCreateNestedManyWithoutAccountsInput = {
    create?: XOR<Enumerable<Gbif_occurrencesCreateWithoutAccountsInput>, Enumerable<Gbif_occurrencesUncheckedCreateWithoutAccountsInput>>
    connectOrCreate?: Enumerable<Gbif_occurrencesCreateOrConnectWithoutAccountsInput>
    createMany?: Gbif_occurrencesCreateManyAccountsInputEnvelope
    connect?: Enumerable<Gbif_occurrencesWhereUniqueInput>
  }

  export type Gbif_taxaUncheckedCreateNestedManyWithoutAccountsInput = {
    create?: XOR<Enumerable<Gbif_taxaCreateWithoutAccountsInput>, Enumerable<Gbif_taxaUncheckedCreateWithoutAccountsInput>>
    connectOrCreate?: Enumerable<Gbif_taxaCreateOrConnectWithoutAccountsInput>
    createMany?: Gbif_taxaCreateManyAccountsInputEnvelope
    connect?: Enumerable<Gbif_taxaWhereUniqueInput>
  }

  export type Goal_report_valuesUncheckedCreateNestedManyWithoutAccountsInput = {
    create?: XOR<Enumerable<Goal_report_valuesCreateWithoutAccountsInput>, Enumerable<Goal_report_valuesUncheckedCreateWithoutAccountsInput>>
    connectOrCreate?: Enumerable<Goal_report_valuesCreateOrConnectWithoutAccountsInput>
    createMany?: Goal_report_valuesCreateManyAccountsInputEnvelope
    connect?: Enumerable<Goal_report_valuesWhereUniqueInput>
  }

  export type Goal_reportsUncheckedCreateNestedManyWithoutAccountsInput = {
    create?: XOR<Enumerable<Goal_reportsCreateWithoutAccountsInput>, Enumerable<Goal_reportsUncheckedCreateWithoutAccountsInput>>
    connectOrCreate?: Enumerable<Goal_reportsCreateOrConnectWithoutAccountsInput>
    createMany?: Goal_reportsCreateManyAccountsInputEnvelope
    connect?: Enumerable<Goal_reportsWhereUniqueInput>
  }

  export type GoalsUncheckedCreateNestedManyWithoutAccountsInput = {
    create?: XOR<Enumerable<GoalsCreateWithoutAccountsInput>, Enumerable<GoalsUncheckedCreateWithoutAccountsInput>>
    connectOrCreate?: Enumerable<GoalsCreateOrConnectWithoutAccountsInput>
    createMany?: GoalsCreateManyAccountsInputEnvelope
    connect?: Enumerable<GoalsWhereUniqueInput>
  }

  export type List_valuesUncheckedCreateNestedManyWithoutAccountsInput = {
    create?: XOR<Enumerable<List_valuesCreateWithoutAccountsInput>, Enumerable<List_valuesUncheckedCreateWithoutAccountsInput>>
    connectOrCreate?: Enumerable<List_valuesCreateOrConnectWithoutAccountsInput>
    createMany?: List_valuesCreateManyAccountsInputEnvelope
    connect?: Enumerable<List_valuesWhereUniqueInput>
  }

  export type ListsUncheckedCreateNestedManyWithoutAccountsInput = {
    create?: XOR<Enumerable<ListsCreateWithoutAccountsInput>, Enumerable<ListsUncheckedCreateWithoutAccountsInput>>
    connectOrCreate?: Enumerable<ListsCreateOrConnectWithoutAccountsInput>
    createMany?: ListsCreateManyAccountsInputEnvelope
    connect?: Enumerable<ListsWhereUniqueInput>
  }

  export type Observation_sourcesUncheckedCreateNestedManyWithoutAccountsInput = {
    create?: XOR<Enumerable<Observation_sourcesCreateWithoutAccountsInput>, Enumerable<Observation_sourcesUncheckedCreateWithoutAccountsInput>>
    connectOrCreate?: Enumerable<Observation_sourcesCreateOrConnectWithoutAccountsInput>
    createMany?: Observation_sourcesCreateManyAccountsInputEnvelope
    connect?: Enumerable<Observation_sourcesWhereUniqueInput>
  }

  export type PersonsUncheckedCreateNestedManyWithoutAccountsInput = {
    create?: XOR<Enumerable<PersonsCreateWithoutAccountsInput>, Enumerable<PersonsUncheckedCreateWithoutAccountsInput>>
    connectOrCreate?: Enumerable<PersonsCreateOrConnectWithoutAccountsInput>
    createMany?: PersonsCreateManyAccountsInputEnvelope
    connect?: Enumerable<PersonsWhereUniqueInput>
  }

  export type Place_levelsUncheckedCreateNestedManyWithoutAccountsInput = {
    create?: XOR<Enumerable<Place_levelsCreateWithoutAccountsInput>, Enumerable<Place_levelsUncheckedCreateWithoutAccountsInput>>
    connectOrCreate?: Enumerable<Place_levelsCreateOrConnectWithoutAccountsInput>
    createMany?: Place_levelsCreateManyAccountsInputEnvelope
    connect?: Enumerable<Place_levelsWhereUniqueInput>
  }

  export type Project_usersUncheckedCreateNestedManyWithoutAccountsInput = {
    create?: XOR<Enumerable<Project_usersCreateWithoutAccountsInput>, Enumerable<Project_usersUncheckedCreateWithoutAccountsInput>>
    connectOrCreate?: Enumerable<Project_usersCreateOrConnectWithoutAccountsInput>
    createMany?: Project_usersCreateManyAccountsInputEnvelope
    connect?: Enumerable<Project_usersWhereUniqueInput>
  }

  export type ProjectsUncheckedCreateNestedManyWithoutAccountsInput = {
    create?: XOR<Enumerable<ProjectsCreateWithoutAccountsInput>, Enumerable<ProjectsUncheckedCreateWithoutAccountsInput>>
    connectOrCreate?: Enumerable<ProjectsCreateOrConnectWithoutAccountsInput>
    createMany?: ProjectsCreateManyAccountsInputEnvelope
    connect?: Enumerable<ProjectsWhereUniqueInput>
  }

  export type Subproject_taxaUncheckedCreateNestedManyWithoutAccountsInput = {
    create?: XOR<Enumerable<Subproject_taxaCreateWithoutAccountsInput>, Enumerable<Subproject_taxaUncheckedCreateWithoutAccountsInput>>
    connectOrCreate?: Enumerable<Subproject_taxaCreateOrConnectWithoutAccountsInput>
    createMany?: Subproject_taxaCreateManyAccountsInputEnvelope
    connect?: Enumerable<Subproject_taxaWhereUniqueInput>
  }

  export type Subproject_usersUncheckedCreateNestedManyWithoutAccountsInput = {
    create?: XOR<Enumerable<Subproject_usersCreateWithoutAccountsInput>, Enumerable<Subproject_usersUncheckedCreateWithoutAccountsInput>>
    connectOrCreate?: Enumerable<Subproject_usersCreateOrConnectWithoutAccountsInput>
    createMany?: Subproject_usersCreateManyAccountsInputEnvelope
    connect?: Enumerable<Subproject_usersWhereUniqueInput>
  }

  export type SubprojectsUncheckedCreateNestedManyWithoutAccountsInput = {
    create?: XOR<Enumerable<SubprojectsCreateWithoutAccountsInput>, Enumerable<SubprojectsUncheckedCreateWithoutAccountsInput>>
    connectOrCreate?: Enumerable<SubprojectsCreateOrConnectWithoutAccountsInput>
    createMany?: SubprojectsCreateManyAccountsInputEnvelope
    connect?: Enumerable<SubprojectsWhereUniqueInput>
  }

  export type TaxaUncheckedCreateNestedManyWithoutAccountsInput = {
    create?: XOR<Enumerable<TaxaCreateWithoutAccountsInput>, Enumerable<TaxaUncheckedCreateWithoutAccountsInput>>
    connectOrCreate?: Enumerable<TaxaCreateOrConnectWithoutAccountsInput>
    createMany?: TaxaCreateManyAccountsInputEnvelope
    connect?: Enumerable<TaxaWhereUniqueInput>
  }

  export type TaxonomiesUncheckedCreateNestedManyWithoutAccountsInput = {
    create?: XOR<Enumerable<TaxonomiesCreateWithoutAccountsInput>, Enumerable<TaxonomiesUncheckedCreateWithoutAccountsInput>>
    connectOrCreate?: Enumerable<TaxonomiesCreateOrConnectWithoutAccountsInput>
    createMany?: TaxonomiesCreateManyAccountsInputEnvelope
    connect?: Enumerable<TaxonomiesWhereUniqueInput>
  }

  export type Tile_layersUncheckedCreateNestedManyWithoutAccountsInput = {
    create?: XOR<Enumerable<Tile_layersCreateWithoutAccountsInput>, Enumerable<Tile_layersUncheckedCreateWithoutAccountsInput>>
    connectOrCreate?: Enumerable<Tile_layersCreateOrConnectWithoutAccountsInput>
    createMany?: Tile_layersCreateManyAccountsInputEnvelope
    connect?: Enumerable<Tile_layersWhereUniqueInput>
  }

  export type Ui_optionsUncheckedCreateNestedManyWithoutAccountsInput = {
    create?: XOR<Enumerable<Ui_optionsCreateWithoutAccountsInput>, Enumerable<Ui_optionsUncheckedCreateWithoutAccountsInput>>
    connectOrCreate?: Enumerable<Ui_optionsCreateOrConnectWithoutAccountsInput>
    createMany?: Ui_optionsCreateManyAccountsInputEnvelope
    connect?: Enumerable<Ui_optionsWhereUniqueInput>
  }

  export type UnitsUncheckedCreateNestedManyWithoutAccountsInput = {
    create?: XOR<Enumerable<UnitsCreateWithoutAccountsInput>, Enumerable<UnitsUncheckedCreateWithoutAccountsInput>>
    connectOrCreate?: Enumerable<UnitsCreateOrConnectWithoutAccountsInput>
    createMany?: UnitsCreateManyAccountsInputEnvelope
    connect?: Enumerable<UnitsWhereUniqueInput>
  }

  export type User_messagesUncheckedCreateNestedManyWithoutAccountsInput = {
    create?: XOR<Enumerable<User_messagesCreateWithoutAccountsInput>, Enumerable<User_messagesUncheckedCreateWithoutAccountsInput>>
    connectOrCreate?: Enumerable<User_messagesCreateOrConnectWithoutAccountsInput>
    createMany?: User_messagesCreateManyAccountsInputEnvelope
    connect?: Enumerable<User_messagesWhereUniqueInput>
  }

  export type StringFieldUpdateOperationsInput = {
    set?: string
  }

  export type NullableStringFieldUpdateOperationsInput = {
    set?: string | null
  }

  export type NullableDateTimeFieldUpdateOperationsInput = {
    set?: Date | string | null
  }

  export type UsersUpdateOneWithoutAccountsNestedInput = {
    create?: XOR<UsersCreateWithoutAccountsInput, UsersUncheckedCreateWithoutAccountsInput>
    connectOrCreate?: UsersCreateOrConnectWithoutAccountsInput
    upsert?: UsersUpsertWithoutAccountsInput
    disconnect?: UsersWhereInput | boolean
    delete?: UsersWhereInput | boolean
    connect?: UsersWhereUniqueInput
    update?: XOR<XOR<UsersUpdateToOneWithWhereWithoutAccountsInput, UsersUpdateWithoutAccountsInput>, UsersUncheckedUpdateWithoutAccountsInput>
  }

  export type Gbif_occurrence_downloadsUpdateManyWithoutAccountsNestedInput = {
    create?: XOR<Enumerable<Gbif_occurrence_downloadsCreateWithoutAccountsInput>, Enumerable<Gbif_occurrence_downloadsUncheckedCreateWithoutAccountsInput>>
    connectOrCreate?: Enumerable<Gbif_occurrence_downloadsCreateOrConnectWithoutAccountsInput>
    upsert?: Enumerable<Gbif_occurrence_downloadsUpsertWithWhereUniqueWithoutAccountsInput>
    createMany?: Gbif_occurrence_downloadsCreateManyAccountsInputEnvelope
    set?: Enumerable<Gbif_occurrence_downloadsWhereUniqueInput>
    disconnect?: Enumerable<Gbif_occurrence_downloadsWhereUniqueInput>
    delete?: Enumerable<Gbif_occurrence_downloadsWhereUniqueInput>
    connect?: Enumerable<Gbif_occurrence_downloadsWhereUniqueInput>
    update?: Enumerable<Gbif_occurrence_downloadsUpdateWithWhereUniqueWithoutAccountsInput>
    updateMany?: Enumerable<Gbif_occurrence_downloadsUpdateManyWithWhereWithoutAccountsInput>
    deleteMany?: Enumerable<Gbif_occurrence_downloadsScalarWhereInput>
  }

  export type Gbif_occurrencesUpdateManyWithoutAccountsNestedInput = {
    create?: XOR<Enumerable<Gbif_occurrencesCreateWithoutAccountsInput>, Enumerable<Gbif_occurrencesUncheckedCreateWithoutAccountsInput>>
    connectOrCreate?: Enumerable<Gbif_occurrencesCreateOrConnectWithoutAccountsInput>
    upsert?: Enumerable<Gbif_occurrencesUpsertWithWhereUniqueWithoutAccountsInput>
    createMany?: Gbif_occurrencesCreateManyAccountsInputEnvelope
    set?: Enumerable<Gbif_occurrencesWhereUniqueInput>
    disconnect?: Enumerable<Gbif_occurrencesWhereUniqueInput>
    delete?: Enumerable<Gbif_occurrencesWhereUniqueInput>
    connect?: Enumerable<Gbif_occurrencesWhereUniqueInput>
    update?: Enumerable<Gbif_occurrencesUpdateWithWhereUniqueWithoutAccountsInput>
    updateMany?: Enumerable<Gbif_occurrencesUpdateManyWithWhereWithoutAccountsInput>
    deleteMany?: Enumerable<Gbif_occurrencesScalarWhereInput>
  }

  export type Gbif_taxaUpdateManyWithoutAccountsNestedInput = {
    create?: XOR<Enumerable<Gbif_taxaCreateWithoutAccountsInput>, Enumerable<Gbif_taxaUncheckedCreateWithoutAccountsInput>>
    connectOrCreate?: Enumerable<Gbif_taxaCreateOrConnectWithoutAccountsInput>
    upsert?: Enumerable<Gbif_taxaUpsertWithWhereUniqueWithoutAccountsInput>
    createMany?: Gbif_taxaCreateManyAccountsInputEnvelope
    set?: Enumerable<Gbif_taxaWhereUniqueInput>
    disconnect?: Enumerable<Gbif_taxaWhereUniqueInput>
    delete?: Enumerable<Gbif_taxaWhereUniqueInput>
    connect?: Enumerable<Gbif_taxaWhereUniqueInput>
    update?: Enumerable<Gbif_taxaUpdateWithWhereUniqueWithoutAccountsInput>
    updateMany?: Enumerable<Gbif_taxaUpdateManyWithWhereWithoutAccountsInput>
    deleteMany?: Enumerable<Gbif_taxaScalarWhereInput>
  }

  export type Goal_report_valuesUpdateManyWithoutAccountsNestedInput = {
    create?: XOR<Enumerable<Goal_report_valuesCreateWithoutAccountsInput>, Enumerable<Goal_report_valuesUncheckedCreateWithoutAccountsInput>>
    connectOrCreate?: Enumerable<Goal_report_valuesCreateOrConnectWithoutAccountsInput>
    upsert?: Enumerable<Goal_report_valuesUpsertWithWhereUniqueWithoutAccountsInput>
    createMany?: Goal_report_valuesCreateManyAccountsInputEnvelope
    set?: Enumerable<Goal_report_valuesWhereUniqueInput>
    disconnect?: Enumerable<Goal_report_valuesWhereUniqueInput>
    delete?: Enumerable<Goal_report_valuesWhereUniqueInput>
    connect?: Enumerable<Goal_report_valuesWhereUniqueInput>
    update?: Enumerable<Goal_report_valuesUpdateWithWhereUniqueWithoutAccountsInput>
    updateMany?: Enumerable<Goal_report_valuesUpdateManyWithWhereWithoutAccountsInput>
    deleteMany?: Enumerable<Goal_report_valuesScalarWhereInput>
  }

  export type Goal_reportsUpdateManyWithoutAccountsNestedInput = {
    create?: XOR<Enumerable<Goal_reportsCreateWithoutAccountsInput>, Enumerable<Goal_reportsUncheckedCreateWithoutAccountsInput>>
    connectOrCreate?: Enumerable<Goal_reportsCreateOrConnectWithoutAccountsInput>
    upsert?: Enumerable<Goal_reportsUpsertWithWhereUniqueWithoutAccountsInput>
    createMany?: Goal_reportsCreateManyAccountsInputEnvelope
    set?: Enumerable<Goal_reportsWhereUniqueInput>
    disconnect?: Enumerable<Goal_reportsWhereUniqueInput>
    delete?: Enumerable<Goal_reportsWhereUniqueInput>
    connect?: Enumerable<Goal_reportsWhereUniqueInput>
    update?: Enumerable<Goal_reportsUpdateWithWhereUniqueWithoutAccountsInput>
    updateMany?: Enumerable<Goal_reportsUpdateManyWithWhereWithoutAccountsInput>
    deleteMany?: Enumerable<Goal_reportsScalarWhereInput>
  }

  export type GoalsUpdateManyWithoutAccountsNestedInput = {
    create?: XOR<Enumerable<GoalsCreateWithoutAccountsInput>, Enumerable<GoalsUncheckedCreateWithoutAccountsInput>>
    connectOrCreate?: Enumerable<GoalsCreateOrConnectWithoutAccountsInput>
    upsert?: Enumerable<GoalsUpsertWithWhereUniqueWithoutAccountsInput>
    createMany?: GoalsCreateManyAccountsInputEnvelope
    set?: Enumerable<GoalsWhereUniqueInput>
    disconnect?: Enumerable<GoalsWhereUniqueInput>
    delete?: Enumerable<GoalsWhereUniqueInput>
    connect?: Enumerable<GoalsWhereUniqueInput>
    update?: Enumerable<GoalsUpdateWithWhereUniqueWithoutAccountsInput>
    updateMany?: Enumerable<GoalsUpdateManyWithWhereWithoutAccountsInput>
    deleteMany?: Enumerable<GoalsScalarWhereInput>
  }

  export type List_valuesUpdateManyWithoutAccountsNestedInput = {
    create?: XOR<Enumerable<List_valuesCreateWithoutAccountsInput>, Enumerable<List_valuesUncheckedCreateWithoutAccountsInput>>
    connectOrCreate?: Enumerable<List_valuesCreateOrConnectWithoutAccountsInput>
    upsert?: Enumerable<List_valuesUpsertWithWhereUniqueWithoutAccountsInput>
    createMany?: List_valuesCreateManyAccountsInputEnvelope
    set?: Enumerable<List_valuesWhereUniqueInput>
    disconnect?: Enumerable<List_valuesWhereUniqueInput>
    delete?: Enumerable<List_valuesWhereUniqueInput>
    connect?: Enumerable<List_valuesWhereUniqueInput>
    update?: Enumerable<List_valuesUpdateWithWhereUniqueWithoutAccountsInput>
    updateMany?: Enumerable<List_valuesUpdateManyWithWhereWithoutAccountsInput>
    deleteMany?: Enumerable<List_valuesScalarWhereInput>
  }

  export type ListsUpdateManyWithoutAccountsNestedInput = {
    create?: XOR<Enumerable<ListsCreateWithoutAccountsInput>, Enumerable<ListsUncheckedCreateWithoutAccountsInput>>
    connectOrCreate?: Enumerable<ListsCreateOrConnectWithoutAccountsInput>
    upsert?: Enumerable<ListsUpsertWithWhereUniqueWithoutAccountsInput>
    createMany?: ListsCreateManyAccountsInputEnvelope
    set?: Enumerable<ListsWhereUniqueInput>
    disconnect?: Enumerable<ListsWhereUniqueInput>
    delete?: Enumerable<ListsWhereUniqueInput>
    connect?: Enumerable<ListsWhereUniqueInput>
    update?: Enumerable<ListsUpdateWithWhereUniqueWithoutAccountsInput>
    updateMany?: Enumerable<ListsUpdateManyWithWhereWithoutAccountsInput>
    deleteMany?: Enumerable<ListsScalarWhereInput>
  }

  export type Observation_sourcesUpdateManyWithoutAccountsNestedInput = {
    create?: XOR<Enumerable<Observation_sourcesCreateWithoutAccountsInput>, Enumerable<Observation_sourcesUncheckedCreateWithoutAccountsInput>>
    connectOrCreate?: Enumerable<Observation_sourcesCreateOrConnectWithoutAccountsInput>
    upsert?: Enumerable<Observation_sourcesUpsertWithWhereUniqueWithoutAccountsInput>
    createMany?: Observation_sourcesCreateManyAccountsInputEnvelope
    set?: Enumerable<Observation_sourcesWhereUniqueInput>
    disconnect?: Enumerable<Observation_sourcesWhereUniqueInput>
    delete?: Enumerable<Observation_sourcesWhereUniqueInput>
    connect?: Enumerable<Observation_sourcesWhereUniqueInput>
    update?: Enumerable<Observation_sourcesUpdateWithWhereUniqueWithoutAccountsInput>
    updateMany?: Enumerable<Observation_sourcesUpdateManyWithWhereWithoutAccountsInput>
    deleteMany?: Enumerable<Observation_sourcesScalarWhereInput>
  }

  export type PersonsUpdateManyWithoutAccountsNestedInput = {
    create?: XOR<Enumerable<PersonsCreateWithoutAccountsInput>, Enumerable<PersonsUncheckedCreateWithoutAccountsInput>>
    connectOrCreate?: Enumerable<PersonsCreateOrConnectWithoutAccountsInput>
    upsert?: Enumerable<PersonsUpsertWithWhereUniqueWithoutAccountsInput>
    createMany?: PersonsCreateManyAccountsInputEnvelope
    set?: Enumerable<PersonsWhereUniqueInput>
    disconnect?: Enumerable<PersonsWhereUniqueInput>
    delete?: Enumerable<PersonsWhereUniqueInput>
    connect?: Enumerable<PersonsWhereUniqueInput>
    update?: Enumerable<PersonsUpdateWithWhereUniqueWithoutAccountsInput>
    updateMany?: Enumerable<PersonsUpdateManyWithWhereWithoutAccountsInput>
    deleteMany?: Enumerable<PersonsScalarWhereInput>
  }

  export type Place_levelsUpdateManyWithoutAccountsNestedInput = {
    create?: XOR<Enumerable<Place_levelsCreateWithoutAccountsInput>, Enumerable<Place_levelsUncheckedCreateWithoutAccountsInput>>
    connectOrCreate?: Enumerable<Place_levelsCreateOrConnectWithoutAccountsInput>
    upsert?: Enumerable<Place_levelsUpsertWithWhereUniqueWithoutAccountsInput>
    createMany?: Place_levelsCreateManyAccountsInputEnvelope
    set?: Enumerable<Place_levelsWhereUniqueInput>
    disconnect?: Enumerable<Place_levelsWhereUniqueInput>
    delete?: Enumerable<Place_levelsWhereUniqueInput>
    connect?: Enumerable<Place_levelsWhereUniqueInput>
    update?: Enumerable<Place_levelsUpdateWithWhereUniqueWithoutAccountsInput>
    updateMany?: Enumerable<Place_levelsUpdateManyWithWhereWithoutAccountsInput>
    deleteMany?: Enumerable<Place_levelsScalarWhereInput>
  }

  export type Project_usersUpdateManyWithoutAccountsNestedInput = {
    create?: XOR<Enumerable<Project_usersCreateWithoutAccountsInput>, Enumerable<Project_usersUncheckedCreateWithoutAccountsInput>>
    connectOrCreate?: Enumerable<Project_usersCreateOrConnectWithoutAccountsInput>
    upsert?: Enumerable<Project_usersUpsertWithWhereUniqueWithoutAccountsInput>
    createMany?: Project_usersCreateManyAccountsInputEnvelope
    set?: Enumerable<Project_usersWhereUniqueInput>
    disconnect?: Enumerable<Project_usersWhereUniqueInput>
    delete?: Enumerable<Project_usersWhereUniqueInput>
    connect?: Enumerable<Project_usersWhereUniqueInput>
    update?: Enumerable<Project_usersUpdateWithWhereUniqueWithoutAccountsInput>
    updateMany?: Enumerable<Project_usersUpdateManyWithWhereWithoutAccountsInput>
    deleteMany?: Enumerable<Project_usersScalarWhereInput>
  }

  export type ProjectsUpdateManyWithoutAccountsNestedInput = {
    create?: XOR<Enumerable<ProjectsCreateWithoutAccountsInput>, Enumerable<ProjectsUncheckedCreateWithoutAccountsInput>>
    connectOrCreate?: Enumerable<ProjectsCreateOrConnectWithoutAccountsInput>
    upsert?: Enumerable<ProjectsUpsertWithWhereUniqueWithoutAccountsInput>
    createMany?: ProjectsCreateManyAccountsInputEnvelope
    set?: Enumerable<ProjectsWhereUniqueInput>
    disconnect?: Enumerable<ProjectsWhereUniqueInput>
    delete?: Enumerable<ProjectsWhereUniqueInput>
    connect?: Enumerable<ProjectsWhereUniqueInput>
    update?: Enumerable<ProjectsUpdateWithWhereUniqueWithoutAccountsInput>
    updateMany?: Enumerable<ProjectsUpdateManyWithWhereWithoutAccountsInput>
    deleteMany?: Enumerable<ProjectsScalarWhereInput>
  }

  export type Subproject_taxaUpdateManyWithoutAccountsNestedInput = {
    create?: XOR<Enumerable<Subproject_taxaCreateWithoutAccountsInput>, Enumerable<Subproject_taxaUncheckedCreateWithoutAccountsInput>>
    connectOrCreate?: Enumerable<Subproject_taxaCreateOrConnectWithoutAccountsInput>
    upsert?: Enumerable<Subproject_taxaUpsertWithWhereUniqueWithoutAccountsInput>
    createMany?: Subproject_taxaCreateManyAccountsInputEnvelope
    set?: Enumerable<Subproject_taxaWhereUniqueInput>
    disconnect?: Enumerable<Subproject_taxaWhereUniqueInput>
    delete?: Enumerable<Subproject_taxaWhereUniqueInput>
    connect?: Enumerable<Subproject_taxaWhereUniqueInput>
    update?: Enumerable<Subproject_taxaUpdateWithWhereUniqueWithoutAccountsInput>
    updateMany?: Enumerable<Subproject_taxaUpdateManyWithWhereWithoutAccountsInput>
    deleteMany?: Enumerable<Subproject_taxaScalarWhereInput>
  }

  export type Subproject_usersUpdateManyWithoutAccountsNestedInput = {
    create?: XOR<Enumerable<Subproject_usersCreateWithoutAccountsInput>, Enumerable<Subproject_usersUncheckedCreateWithoutAccountsInput>>
    connectOrCreate?: Enumerable<Subproject_usersCreateOrConnectWithoutAccountsInput>
    upsert?: Enumerable<Subproject_usersUpsertWithWhereUniqueWithoutAccountsInput>
    createMany?: Subproject_usersCreateManyAccountsInputEnvelope
    set?: Enumerable<Subproject_usersWhereUniqueInput>
    disconnect?: Enumerable<Subproject_usersWhereUniqueInput>
    delete?: Enumerable<Subproject_usersWhereUniqueInput>
    connect?: Enumerable<Subproject_usersWhereUniqueInput>
    update?: Enumerable<Subproject_usersUpdateWithWhereUniqueWithoutAccountsInput>
    updateMany?: Enumerable<Subproject_usersUpdateManyWithWhereWithoutAccountsInput>
    deleteMany?: Enumerable<Subproject_usersScalarWhereInput>
  }

  export type SubprojectsUpdateManyWithoutAccountsNestedInput = {
    create?: XOR<Enumerable<SubprojectsCreateWithoutAccountsInput>, Enumerable<SubprojectsUncheckedCreateWithoutAccountsInput>>
    connectOrCreate?: Enumerable<SubprojectsCreateOrConnectWithoutAccountsInput>
    upsert?: Enumerable<SubprojectsUpsertWithWhereUniqueWithoutAccountsInput>
    createMany?: SubprojectsCreateManyAccountsInputEnvelope
    set?: Enumerable<SubprojectsWhereUniqueInput>
    disconnect?: Enumerable<SubprojectsWhereUniqueInput>
    delete?: Enumerable<SubprojectsWhereUniqueInput>
    connect?: Enumerable<SubprojectsWhereUniqueInput>
    update?: Enumerable<SubprojectsUpdateWithWhereUniqueWithoutAccountsInput>
    updateMany?: Enumerable<SubprojectsUpdateManyWithWhereWithoutAccountsInput>
    deleteMany?: Enumerable<SubprojectsScalarWhereInput>
  }

  export type TaxaUpdateManyWithoutAccountsNestedInput = {
    create?: XOR<Enumerable<TaxaCreateWithoutAccountsInput>, Enumerable<TaxaUncheckedCreateWithoutAccountsInput>>
    connectOrCreate?: Enumerable<TaxaCreateOrConnectWithoutAccountsInput>
    upsert?: Enumerable<TaxaUpsertWithWhereUniqueWithoutAccountsInput>
    createMany?: TaxaCreateManyAccountsInputEnvelope
    set?: Enumerable<TaxaWhereUniqueInput>
    disconnect?: Enumerable<TaxaWhereUniqueInput>
    delete?: Enumerable<TaxaWhereUniqueInput>
    connect?: Enumerable<TaxaWhereUniqueInput>
    update?: Enumerable<TaxaUpdateWithWhereUniqueWithoutAccountsInput>
    updateMany?: Enumerable<TaxaUpdateManyWithWhereWithoutAccountsInput>
    deleteMany?: Enumerable<TaxaScalarWhereInput>
  }

  export type TaxonomiesUpdateManyWithoutAccountsNestedInput = {
    create?: XOR<Enumerable<TaxonomiesCreateWithoutAccountsInput>, Enumerable<TaxonomiesUncheckedCreateWithoutAccountsInput>>
    connectOrCreate?: Enumerable<TaxonomiesCreateOrConnectWithoutAccountsInput>
    upsert?: Enumerable<TaxonomiesUpsertWithWhereUniqueWithoutAccountsInput>
    createMany?: TaxonomiesCreateManyAccountsInputEnvelope
    set?: Enumerable<TaxonomiesWhereUniqueInput>
    disconnect?: Enumerable<TaxonomiesWhereUniqueInput>
    delete?: Enumerable<TaxonomiesWhereUniqueInput>
    connect?: Enumerable<TaxonomiesWhereUniqueInput>
    update?: Enumerable<TaxonomiesUpdateWithWhereUniqueWithoutAccountsInput>
    updateMany?: Enumerable<TaxonomiesUpdateManyWithWhereWithoutAccountsInput>
    deleteMany?: Enumerable<TaxonomiesScalarWhereInput>
  }

  export type Tile_layersUpdateManyWithoutAccountsNestedInput = {
    create?: XOR<Enumerable<Tile_layersCreateWithoutAccountsInput>, Enumerable<Tile_layersUncheckedCreateWithoutAccountsInput>>
    connectOrCreate?: Enumerable<Tile_layersCreateOrConnectWithoutAccountsInput>
    upsert?: Enumerable<Tile_layersUpsertWithWhereUniqueWithoutAccountsInput>
    createMany?: Tile_layersCreateManyAccountsInputEnvelope
    set?: Enumerable<Tile_layersWhereUniqueInput>
    disconnect?: Enumerable<Tile_layersWhereUniqueInput>
    delete?: Enumerable<Tile_layersWhereUniqueInput>
    connect?: Enumerable<Tile_layersWhereUniqueInput>
    update?: Enumerable<Tile_layersUpdateWithWhereUniqueWithoutAccountsInput>
    updateMany?: Enumerable<Tile_layersUpdateManyWithWhereWithoutAccountsInput>
    deleteMany?: Enumerable<Tile_layersScalarWhereInput>
  }

  export type Ui_optionsUpdateManyWithoutAccountsNestedInput = {
    create?: XOR<Enumerable<Ui_optionsCreateWithoutAccountsInput>, Enumerable<Ui_optionsUncheckedCreateWithoutAccountsInput>>
    connectOrCreate?: Enumerable<Ui_optionsCreateOrConnectWithoutAccountsInput>
    upsert?: Enumerable<Ui_optionsUpsertWithWhereUniqueWithoutAccountsInput>
    createMany?: Ui_optionsCreateManyAccountsInputEnvelope
    set?: Enumerable<Ui_optionsWhereUniqueInput>
    disconnect?: Enumerable<Ui_optionsWhereUniqueInput>
    delete?: Enumerable<Ui_optionsWhereUniqueInput>
    connect?: Enumerable<Ui_optionsWhereUniqueInput>
    update?: Enumerable<Ui_optionsUpdateWithWhereUniqueWithoutAccountsInput>
    updateMany?: Enumerable<Ui_optionsUpdateManyWithWhereWithoutAccountsInput>
    deleteMany?: Enumerable<Ui_optionsScalarWhereInput>
  }

  export type UnitsUpdateManyWithoutAccountsNestedInput = {
    create?: XOR<Enumerable<UnitsCreateWithoutAccountsInput>, Enumerable<UnitsUncheckedCreateWithoutAccountsInput>>
    connectOrCreate?: Enumerable<UnitsCreateOrConnectWithoutAccountsInput>
    upsert?: Enumerable<UnitsUpsertWithWhereUniqueWithoutAccountsInput>
    createMany?: UnitsCreateManyAccountsInputEnvelope
    set?: Enumerable<UnitsWhereUniqueInput>
    disconnect?: Enumerable<UnitsWhereUniqueInput>
    delete?: Enumerable<UnitsWhereUniqueInput>
    connect?: Enumerable<UnitsWhereUniqueInput>
    update?: Enumerable<UnitsUpdateWithWhereUniqueWithoutAccountsInput>
    updateMany?: Enumerable<UnitsUpdateManyWithWhereWithoutAccountsInput>
    deleteMany?: Enumerable<UnitsScalarWhereInput>
  }

  export type User_messagesUpdateManyWithoutAccountsNestedInput = {
    create?: XOR<Enumerable<User_messagesCreateWithoutAccountsInput>, Enumerable<User_messagesUncheckedCreateWithoutAccountsInput>>
    connectOrCreate?: Enumerable<User_messagesCreateOrConnectWithoutAccountsInput>
    upsert?: Enumerable<User_messagesUpsertWithWhereUniqueWithoutAccountsInput>
    createMany?: User_messagesCreateManyAccountsInputEnvelope
    set?: Enumerable<User_messagesWhereUniqueInput>
    disconnect?: Enumerable<User_messagesWhereUniqueInput>
    delete?: Enumerable<User_messagesWhereUniqueInput>
    connect?: Enumerable<User_messagesWhereUniqueInput>
    update?: Enumerable<User_messagesUpdateWithWhereUniqueWithoutAccountsInput>
    updateMany?: Enumerable<User_messagesUpdateManyWithWhereWithoutAccountsInput>
    deleteMany?: Enumerable<User_messagesScalarWhereInput>
  }

  export type Gbif_occurrence_downloadsUncheckedUpdateManyWithoutAccountsNestedInput = {
    create?: XOR<Enumerable<Gbif_occurrence_downloadsCreateWithoutAccountsInput>, Enumerable<Gbif_occurrence_downloadsUncheckedCreateWithoutAccountsInput>>
    connectOrCreate?: Enumerable<Gbif_occurrence_downloadsCreateOrConnectWithoutAccountsInput>
    upsert?: Enumerable<Gbif_occurrence_downloadsUpsertWithWhereUniqueWithoutAccountsInput>
    createMany?: Gbif_occurrence_downloadsCreateManyAccountsInputEnvelope
    set?: Enumerable<Gbif_occurrence_downloadsWhereUniqueInput>
    disconnect?: Enumerable<Gbif_occurrence_downloadsWhereUniqueInput>
    delete?: Enumerable<Gbif_occurrence_downloadsWhereUniqueInput>
    connect?: Enumerable<Gbif_occurrence_downloadsWhereUniqueInput>
    update?: Enumerable<Gbif_occurrence_downloadsUpdateWithWhereUniqueWithoutAccountsInput>
    updateMany?: Enumerable<Gbif_occurrence_downloadsUpdateManyWithWhereWithoutAccountsInput>
    deleteMany?: Enumerable<Gbif_occurrence_downloadsScalarWhereInput>
  }

  export type Gbif_occurrencesUncheckedUpdateManyWithoutAccountsNestedInput = {
    create?: XOR<Enumerable<Gbif_occurrencesCreateWithoutAccountsInput>, Enumerable<Gbif_occurrencesUncheckedCreateWithoutAccountsInput>>
    connectOrCreate?: Enumerable<Gbif_occurrencesCreateOrConnectWithoutAccountsInput>
    upsert?: Enumerable<Gbif_occurrencesUpsertWithWhereUniqueWithoutAccountsInput>
    createMany?: Gbif_occurrencesCreateManyAccountsInputEnvelope
    set?: Enumerable<Gbif_occurrencesWhereUniqueInput>
    disconnect?: Enumerable<Gbif_occurrencesWhereUniqueInput>
    delete?: Enumerable<Gbif_occurrencesWhereUniqueInput>
    connect?: Enumerable<Gbif_occurrencesWhereUniqueInput>
    update?: Enumerable<Gbif_occurrencesUpdateWithWhereUniqueWithoutAccountsInput>
    updateMany?: Enumerable<Gbif_occurrencesUpdateManyWithWhereWithoutAccountsInput>
    deleteMany?: Enumerable<Gbif_occurrencesScalarWhereInput>
  }

  export type Gbif_taxaUncheckedUpdateManyWithoutAccountsNestedInput = {
    create?: XOR<Enumerable<Gbif_taxaCreateWithoutAccountsInput>, Enumerable<Gbif_taxaUncheckedCreateWithoutAccountsInput>>
    connectOrCreate?: Enumerable<Gbif_taxaCreateOrConnectWithoutAccountsInput>
    upsert?: Enumerable<Gbif_taxaUpsertWithWhereUniqueWithoutAccountsInput>
    createMany?: Gbif_taxaCreateManyAccountsInputEnvelope
    set?: Enumerable<Gbif_taxaWhereUniqueInput>
    disconnect?: Enumerable<Gbif_taxaWhereUniqueInput>
    delete?: Enumerable<Gbif_taxaWhereUniqueInput>
    connect?: Enumerable<Gbif_taxaWhereUniqueInput>
    update?: Enumerable<Gbif_taxaUpdateWithWhereUniqueWithoutAccountsInput>
    updateMany?: Enumerable<Gbif_taxaUpdateManyWithWhereWithoutAccountsInput>
    deleteMany?: Enumerable<Gbif_taxaScalarWhereInput>
  }

  export type Goal_report_valuesUncheckedUpdateManyWithoutAccountsNestedInput = {
    create?: XOR<Enumerable<Goal_report_valuesCreateWithoutAccountsInput>, Enumerable<Goal_report_valuesUncheckedCreateWithoutAccountsInput>>
    connectOrCreate?: Enumerable<Goal_report_valuesCreateOrConnectWithoutAccountsInput>
    upsert?: Enumerable<Goal_report_valuesUpsertWithWhereUniqueWithoutAccountsInput>
    createMany?: Goal_report_valuesCreateManyAccountsInputEnvelope
    set?: Enumerable<Goal_report_valuesWhereUniqueInput>
    disconnect?: Enumerable<Goal_report_valuesWhereUniqueInput>
    delete?: Enumerable<Goal_report_valuesWhereUniqueInput>
    connect?: Enumerable<Goal_report_valuesWhereUniqueInput>
    update?: Enumerable<Goal_report_valuesUpdateWithWhereUniqueWithoutAccountsInput>
    updateMany?: Enumerable<Goal_report_valuesUpdateManyWithWhereWithoutAccountsInput>
    deleteMany?: Enumerable<Goal_report_valuesScalarWhereInput>
  }

  export type Goal_reportsUncheckedUpdateManyWithoutAccountsNestedInput = {
    create?: XOR<Enumerable<Goal_reportsCreateWithoutAccountsInput>, Enumerable<Goal_reportsUncheckedCreateWithoutAccountsInput>>
    connectOrCreate?: Enumerable<Goal_reportsCreateOrConnectWithoutAccountsInput>
    upsert?: Enumerable<Goal_reportsUpsertWithWhereUniqueWithoutAccountsInput>
    createMany?: Goal_reportsCreateManyAccountsInputEnvelope
    set?: Enumerable<Goal_reportsWhereUniqueInput>
    disconnect?: Enumerable<Goal_reportsWhereUniqueInput>
    delete?: Enumerable<Goal_reportsWhereUniqueInput>
    connect?: Enumerable<Goal_reportsWhereUniqueInput>
    update?: Enumerable<Goal_reportsUpdateWithWhereUniqueWithoutAccountsInput>
    updateMany?: Enumerable<Goal_reportsUpdateManyWithWhereWithoutAccountsInput>
    deleteMany?: Enumerable<Goal_reportsScalarWhereInput>
  }

  export type GoalsUncheckedUpdateManyWithoutAccountsNestedInput = {
    create?: XOR<Enumerable<GoalsCreateWithoutAccountsInput>, Enumerable<GoalsUncheckedCreateWithoutAccountsInput>>
    connectOrCreate?: Enumerable<GoalsCreateOrConnectWithoutAccountsInput>
    upsert?: Enumerable<GoalsUpsertWithWhereUniqueWithoutAccountsInput>
    createMany?: GoalsCreateManyAccountsInputEnvelope
    set?: Enumerable<GoalsWhereUniqueInput>
    disconnect?: Enumerable<GoalsWhereUniqueInput>
    delete?: Enumerable<GoalsWhereUniqueInput>
    connect?: Enumerable<GoalsWhereUniqueInput>
    update?: Enumerable<GoalsUpdateWithWhereUniqueWithoutAccountsInput>
    updateMany?: Enumerable<GoalsUpdateManyWithWhereWithoutAccountsInput>
    deleteMany?: Enumerable<GoalsScalarWhereInput>
  }

  export type List_valuesUncheckedUpdateManyWithoutAccountsNestedInput = {
    create?: XOR<Enumerable<List_valuesCreateWithoutAccountsInput>, Enumerable<List_valuesUncheckedCreateWithoutAccountsInput>>
    connectOrCreate?: Enumerable<List_valuesCreateOrConnectWithoutAccountsInput>
    upsert?: Enumerable<List_valuesUpsertWithWhereUniqueWithoutAccountsInput>
    createMany?: List_valuesCreateManyAccountsInputEnvelope
    set?: Enumerable<List_valuesWhereUniqueInput>
    disconnect?: Enumerable<List_valuesWhereUniqueInput>
    delete?: Enumerable<List_valuesWhereUniqueInput>
    connect?: Enumerable<List_valuesWhereUniqueInput>
    update?: Enumerable<List_valuesUpdateWithWhereUniqueWithoutAccountsInput>
    updateMany?: Enumerable<List_valuesUpdateManyWithWhereWithoutAccountsInput>
    deleteMany?: Enumerable<List_valuesScalarWhereInput>
  }

  export type ListsUncheckedUpdateManyWithoutAccountsNestedInput = {
    create?: XOR<Enumerable<ListsCreateWithoutAccountsInput>, Enumerable<ListsUncheckedCreateWithoutAccountsInput>>
    connectOrCreate?: Enumerable<ListsCreateOrConnectWithoutAccountsInput>
    upsert?: Enumerable<ListsUpsertWithWhereUniqueWithoutAccountsInput>
    createMany?: ListsCreateManyAccountsInputEnvelope
    set?: Enumerable<ListsWhereUniqueInput>
    disconnect?: Enumerable<ListsWhereUniqueInput>
    delete?: Enumerable<ListsWhereUniqueInput>
    connect?: Enumerable<ListsWhereUniqueInput>
    update?: Enumerable<ListsUpdateWithWhereUniqueWithoutAccountsInput>
    updateMany?: Enumerable<ListsUpdateManyWithWhereWithoutAccountsInput>
    deleteMany?: Enumerable<ListsScalarWhereInput>
  }

  export type Observation_sourcesUncheckedUpdateManyWithoutAccountsNestedInput = {
    create?: XOR<Enumerable<Observation_sourcesCreateWithoutAccountsInput>, Enumerable<Observation_sourcesUncheckedCreateWithoutAccountsInput>>
    connectOrCreate?: Enumerable<Observation_sourcesCreateOrConnectWithoutAccountsInput>
    upsert?: Enumerable<Observation_sourcesUpsertWithWhereUniqueWithoutAccountsInput>
    createMany?: Observation_sourcesCreateManyAccountsInputEnvelope
    set?: Enumerable<Observation_sourcesWhereUniqueInput>
    disconnect?: Enumerable<Observation_sourcesWhereUniqueInput>
    delete?: Enumerable<Observation_sourcesWhereUniqueInput>
    connect?: Enumerable<Observation_sourcesWhereUniqueInput>
    update?: Enumerable<Observation_sourcesUpdateWithWhereUniqueWithoutAccountsInput>
    updateMany?: Enumerable<Observation_sourcesUpdateManyWithWhereWithoutAccountsInput>
    deleteMany?: Enumerable<Observation_sourcesScalarWhereInput>
  }

  export type PersonsUncheckedUpdateManyWithoutAccountsNestedInput = {
    create?: XOR<Enumerable<PersonsCreateWithoutAccountsInput>, Enumerable<PersonsUncheckedCreateWithoutAccountsInput>>
    connectOrCreate?: Enumerable<PersonsCreateOrConnectWithoutAccountsInput>
    upsert?: Enumerable<PersonsUpsertWithWhereUniqueWithoutAccountsInput>
    createMany?: PersonsCreateManyAccountsInputEnvelope
    set?: Enumerable<PersonsWhereUniqueInput>
    disconnect?: Enumerable<PersonsWhereUniqueInput>
    delete?: Enumerable<PersonsWhereUniqueInput>
    connect?: Enumerable<PersonsWhereUniqueInput>
    update?: Enumerable<PersonsUpdateWithWhereUniqueWithoutAccountsInput>
    updateMany?: Enumerable<PersonsUpdateManyWithWhereWithoutAccountsInput>
    deleteMany?: Enumerable<PersonsScalarWhereInput>
  }

  export type Place_levelsUncheckedUpdateManyWithoutAccountsNestedInput = {
    create?: XOR<Enumerable<Place_levelsCreateWithoutAccountsInput>, Enumerable<Place_levelsUncheckedCreateWithoutAccountsInput>>
    connectOrCreate?: Enumerable<Place_levelsCreateOrConnectWithoutAccountsInput>
    upsert?: Enumerable<Place_levelsUpsertWithWhereUniqueWithoutAccountsInput>
    createMany?: Place_levelsCreateManyAccountsInputEnvelope
    set?: Enumerable<Place_levelsWhereUniqueInput>
    disconnect?: Enumerable<Place_levelsWhereUniqueInput>
    delete?: Enumerable<Place_levelsWhereUniqueInput>
    connect?: Enumerable<Place_levelsWhereUniqueInput>
    update?: Enumerable<Place_levelsUpdateWithWhereUniqueWithoutAccountsInput>
    updateMany?: Enumerable<Place_levelsUpdateManyWithWhereWithoutAccountsInput>
    deleteMany?: Enumerable<Place_levelsScalarWhereInput>
  }

  export type Project_usersUncheckedUpdateManyWithoutAccountsNestedInput = {
    create?: XOR<Enumerable<Project_usersCreateWithoutAccountsInput>, Enumerable<Project_usersUncheckedCreateWithoutAccountsInput>>
    connectOrCreate?: Enumerable<Project_usersCreateOrConnectWithoutAccountsInput>
    upsert?: Enumerable<Project_usersUpsertWithWhereUniqueWithoutAccountsInput>
    createMany?: Project_usersCreateManyAccountsInputEnvelope
    set?: Enumerable<Project_usersWhereUniqueInput>
    disconnect?: Enumerable<Project_usersWhereUniqueInput>
    delete?: Enumerable<Project_usersWhereUniqueInput>
    connect?: Enumerable<Project_usersWhereUniqueInput>
    update?: Enumerable<Project_usersUpdateWithWhereUniqueWithoutAccountsInput>
    updateMany?: Enumerable<Project_usersUpdateManyWithWhereWithoutAccountsInput>
    deleteMany?: Enumerable<Project_usersScalarWhereInput>
  }

  export type ProjectsUncheckedUpdateManyWithoutAccountsNestedInput = {
    create?: XOR<Enumerable<ProjectsCreateWithoutAccountsInput>, Enumerable<ProjectsUncheckedCreateWithoutAccountsInput>>
    connectOrCreate?: Enumerable<ProjectsCreateOrConnectWithoutAccountsInput>
    upsert?: Enumerable<ProjectsUpsertWithWhereUniqueWithoutAccountsInput>
    createMany?: ProjectsCreateManyAccountsInputEnvelope
    set?: Enumerable<ProjectsWhereUniqueInput>
    disconnect?: Enumerable<ProjectsWhereUniqueInput>
    delete?: Enumerable<ProjectsWhereUniqueInput>
    connect?: Enumerable<ProjectsWhereUniqueInput>
    update?: Enumerable<ProjectsUpdateWithWhereUniqueWithoutAccountsInput>
    updateMany?: Enumerable<ProjectsUpdateManyWithWhereWithoutAccountsInput>
    deleteMany?: Enumerable<ProjectsScalarWhereInput>
  }

  export type Subproject_taxaUncheckedUpdateManyWithoutAccountsNestedInput = {
    create?: XOR<Enumerable<Subproject_taxaCreateWithoutAccountsInput>, Enumerable<Subproject_taxaUncheckedCreateWithoutAccountsInput>>
    connectOrCreate?: Enumerable<Subproject_taxaCreateOrConnectWithoutAccountsInput>
    upsert?: Enumerable<Subproject_taxaUpsertWithWhereUniqueWithoutAccountsInput>
    createMany?: Subproject_taxaCreateManyAccountsInputEnvelope
    set?: Enumerable<Subproject_taxaWhereUniqueInput>
    disconnect?: Enumerable<Subproject_taxaWhereUniqueInput>
    delete?: Enumerable<Subproject_taxaWhereUniqueInput>
    connect?: Enumerable<Subproject_taxaWhereUniqueInput>
    update?: Enumerable<Subproject_taxaUpdateWithWhereUniqueWithoutAccountsInput>
    updateMany?: Enumerable<Subproject_taxaUpdateManyWithWhereWithoutAccountsInput>
    deleteMany?: Enumerable<Subproject_taxaScalarWhereInput>
  }

  export type Subproject_usersUncheckedUpdateManyWithoutAccountsNestedInput = {
    create?: XOR<Enumerable<Subproject_usersCreateWithoutAccountsInput>, Enumerable<Subproject_usersUncheckedCreateWithoutAccountsInput>>
    connectOrCreate?: Enumerable<Subproject_usersCreateOrConnectWithoutAccountsInput>
    upsert?: Enumerable<Subproject_usersUpsertWithWhereUniqueWithoutAccountsInput>
    createMany?: Subproject_usersCreateManyAccountsInputEnvelope
    set?: Enumerable<Subproject_usersWhereUniqueInput>
    disconnect?: Enumerable<Subproject_usersWhereUniqueInput>
    delete?: Enumerable<Subproject_usersWhereUniqueInput>
    connect?: Enumerable<Subproject_usersWhereUniqueInput>
    update?: Enumerable<Subproject_usersUpdateWithWhereUniqueWithoutAccountsInput>
    updateMany?: Enumerable<Subproject_usersUpdateManyWithWhereWithoutAccountsInput>
    deleteMany?: Enumerable<Subproject_usersScalarWhereInput>
  }

  export type SubprojectsUncheckedUpdateManyWithoutAccountsNestedInput = {
    create?: XOR<Enumerable<SubprojectsCreateWithoutAccountsInput>, Enumerable<SubprojectsUncheckedCreateWithoutAccountsInput>>
    connectOrCreate?: Enumerable<SubprojectsCreateOrConnectWithoutAccountsInput>
    upsert?: Enumerable<SubprojectsUpsertWithWhereUniqueWithoutAccountsInput>
    createMany?: SubprojectsCreateManyAccountsInputEnvelope
    set?: Enumerable<SubprojectsWhereUniqueInput>
    disconnect?: Enumerable<SubprojectsWhereUniqueInput>
    delete?: Enumerable<SubprojectsWhereUniqueInput>
    connect?: Enumerable<SubprojectsWhereUniqueInput>
    update?: Enumerable<SubprojectsUpdateWithWhereUniqueWithoutAccountsInput>
    updateMany?: Enumerable<SubprojectsUpdateManyWithWhereWithoutAccountsInput>
    deleteMany?: Enumerable<SubprojectsScalarWhereInput>
  }

  export type TaxaUncheckedUpdateManyWithoutAccountsNestedInput = {
    create?: XOR<Enumerable<TaxaCreateWithoutAccountsInput>, Enumerable<TaxaUncheckedCreateWithoutAccountsInput>>
    connectOrCreate?: Enumerable<TaxaCreateOrConnectWithoutAccountsInput>
    upsert?: Enumerable<TaxaUpsertWithWhereUniqueWithoutAccountsInput>
    createMany?: TaxaCreateManyAccountsInputEnvelope
    set?: Enumerable<TaxaWhereUniqueInput>
    disconnect?: Enumerable<TaxaWhereUniqueInput>
    delete?: Enumerable<TaxaWhereUniqueInput>
    connect?: Enumerable<TaxaWhereUniqueInput>
    update?: Enumerable<TaxaUpdateWithWhereUniqueWithoutAccountsInput>
    updateMany?: Enumerable<TaxaUpdateManyWithWhereWithoutAccountsInput>
    deleteMany?: Enumerable<TaxaScalarWhereInput>
  }

  export type TaxonomiesUncheckedUpdateManyWithoutAccountsNestedInput = {
    create?: XOR<Enumerable<TaxonomiesCreateWithoutAccountsInput>, Enumerable<TaxonomiesUncheckedCreateWithoutAccountsInput>>
    connectOrCreate?: Enumerable<TaxonomiesCreateOrConnectWithoutAccountsInput>
    upsert?: Enumerable<TaxonomiesUpsertWithWhereUniqueWithoutAccountsInput>
    createMany?: TaxonomiesCreateManyAccountsInputEnvelope
    set?: Enumerable<TaxonomiesWhereUniqueInput>
    disconnect?: Enumerable<TaxonomiesWhereUniqueInput>
    delete?: Enumerable<TaxonomiesWhereUniqueInput>
    connect?: Enumerable<TaxonomiesWhereUniqueInput>
    update?: Enumerable<TaxonomiesUpdateWithWhereUniqueWithoutAccountsInput>
    updateMany?: Enumerable<TaxonomiesUpdateManyWithWhereWithoutAccountsInput>
    deleteMany?: Enumerable<TaxonomiesScalarWhereInput>
  }

  export type Tile_layersUncheckedUpdateManyWithoutAccountsNestedInput = {
    create?: XOR<Enumerable<Tile_layersCreateWithoutAccountsInput>, Enumerable<Tile_layersUncheckedCreateWithoutAccountsInput>>
    connectOrCreate?: Enumerable<Tile_layersCreateOrConnectWithoutAccountsInput>
    upsert?: Enumerable<Tile_layersUpsertWithWhereUniqueWithoutAccountsInput>
    createMany?: Tile_layersCreateManyAccountsInputEnvelope
    set?: Enumerable<Tile_layersWhereUniqueInput>
    disconnect?: Enumerable<Tile_layersWhereUniqueInput>
    delete?: Enumerable<Tile_layersWhereUniqueInput>
    connect?: Enumerable<Tile_layersWhereUniqueInput>
    update?: Enumerable<Tile_layersUpdateWithWhereUniqueWithoutAccountsInput>
    updateMany?: Enumerable<Tile_layersUpdateManyWithWhereWithoutAccountsInput>
    deleteMany?: Enumerable<Tile_layersScalarWhereInput>
  }

  export type Ui_optionsUncheckedUpdateManyWithoutAccountsNestedInput = {
    create?: XOR<Enumerable<Ui_optionsCreateWithoutAccountsInput>, Enumerable<Ui_optionsUncheckedCreateWithoutAccountsInput>>
    connectOrCreate?: Enumerable<Ui_optionsCreateOrConnectWithoutAccountsInput>
    upsert?: Enumerable<Ui_optionsUpsertWithWhereUniqueWithoutAccountsInput>
    createMany?: Ui_optionsCreateManyAccountsInputEnvelope
    set?: Enumerable<Ui_optionsWhereUniqueInput>
    disconnect?: Enumerable<Ui_optionsWhereUniqueInput>
    delete?: Enumerable<Ui_optionsWhereUniqueInput>
    connect?: Enumerable<Ui_optionsWhereUniqueInput>
    update?: Enumerable<Ui_optionsUpdateWithWhereUniqueWithoutAccountsInput>
    updateMany?: Enumerable<Ui_optionsUpdateManyWithWhereWithoutAccountsInput>
    deleteMany?: Enumerable<Ui_optionsScalarWhereInput>
  }

  export type UnitsUncheckedUpdateManyWithoutAccountsNestedInput = {
    create?: XOR<Enumerable<UnitsCreateWithoutAccountsInput>, Enumerable<UnitsUncheckedCreateWithoutAccountsInput>>
    connectOrCreate?: Enumerable<UnitsCreateOrConnectWithoutAccountsInput>
    upsert?: Enumerable<UnitsUpsertWithWhereUniqueWithoutAccountsInput>
    createMany?: UnitsCreateManyAccountsInputEnvelope
    set?: Enumerable<UnitsWhereUniqueInput>
    disconnect?: Enumerable<UnitsWhereUniqueInput>
    delete?: Enumerable<UnitsWhereUniqueInput>
    connect?: Enumerable<UnitsWhereUniqueInput>
    update?: Enumerable<UnitsUpdateWithWhereUniqueWithoutAccountsInput>
    updateMany?: Enumerable<UnitsUpdateManyWithWhereWithoutAccountsInput>
    deleteMany?: Enumerable<UnitsScalarWhereInput>
  }

  export type User_messagesUncheckedUpdateManyWithoutAccountsNestedInput = {
    create?: XOR<Enumerable<User_messagesCreateWithoutAccountsInput>, Enumerable<User_messagesUncheckedCreateWithoutAccountsInput>>
    connectOrCreate?: Enumerable<User_messagesCreateOrConnectWithoutAccountsInput>
    upsert?: Enumerable<User_messagesUpsertWithWhereUniqueWithoutAccountsInput>
    createMany?: User_messagesCreateManyAccountsInputEnvelope
    set?: Enumerable<User_messagesWhereUniqueInput>
    disconnect?: Enumerable<User_messagesWhereUniqueInput>
    delete?: Enumerable<User_messagesWhereUniqueInput>
    connect?: Enumerable<User_messagesWhereUniqueInput>
    update?: Enumerable<User_messagesUpdateWithWhereUniqueWithoutAccountsInput>
    updateMany?: Enumerable<User_messagesUpdateManyWithWhereWithoutAccountsInput>
    deleteMany?: Enumerable<User_messagesScalarWhereInput>
  }

  export type Widgets_for_fieldsCreateNestedManyWithoutField_typesInput = {
    create?: XOR<Enumerable<Widgets_for_fieldsCreateWithoutField_typesInput>, Enumerable<Widgets_for_fieldsUncheckedCreateWithoutField_typesInput>>
    connectOrCreate?: Enumerable<Widgets_for_fieldsCreateOrConnectWithoutField_typesInput>
    createMany?: Widgets_for_fieldsCreateManyField_typesInputEnvelope
    connect?: Enumerable<Widgets_for_fieldsWhereUniqueInput>
  }

  export type Widgets_for_fieldsUncheckedCreateNestedManyWithoutField_typesInput = {
    create?: XOR<Enumerable<Widgets_for_fieldsCreateWithoutField_typesInput>, Enumerable<Widgets_for_fieldsUncheckedCreateWithoutField_typesInput>>
    connectOrCreate?: Enumerable<Widgets_for_fieldsCreateOrConnectWithoutField_typesInput>
    createMany?: Widgets_for_fieldsCreateManyField_typesInputEnvelope
    connect?: Enumerable<Widgets_for_fieldsWhereUniqueInput>
  }

  export type NullableIntFieldUpdateOperationsInput = {
    set?: number | null
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type NullableBoolFieldUpdateOperationsInput = {
    set?: boolean | null
  }

  export type Widgets_for_fieldsUpdateManyWithoutField_typesNestedInput = {
    create?: XOR<Enumerable<Widgets_for_fieldsCreateWithoutField_typesInput>, Enumerable<Widgets_for_fieldsUncheckedCreateWithoutField_typesInput>>
    connectOrCreate?: Enumerable<Widgets_for_fieldsCreateOrConnectWithoutField_typesInput>
    upsert?: Enumerable<Widgets_for_fieldsUpsertWithWhereUniqueWithoutField_typesInput>
    createMany?: Widgets_for_fieldsCreateManyField_typesInputEnvelope
    set?: Enumerable<Widgets_for_fieldsWhereUniqueInput>
    disconnect?: Enumerable<Widgets_for_fieldsWhereUniqueInput>
    delete?: Enumerable<Widgets_for_fieldsWhereUniqueInput>
    connect?: Enumerable<Widgets_for_fieldsWhereUniqueInput>
    update?: Enumerable<Widgets_for_fieldsUpdateWithWhereUniqueWithoutField_typesInput>
    updateMany?: Enumerable<Widgets_for_fieldsUpdateManyWithWhereWithoutField_typesInput>
    deleteMany?: Enumerable<Widgets_for_fieldsScalarWhereInput>
  }

  export type Widgets_for_fieldsUncheckedUpdateManyWithoutField_typesNestedInput = {
    create?: XOR<Enumerable<Widgets_for_fieldsCreateWithoutField_typesInput>, Enumerable<Widgets_for_fieldsUncheckedCreateWithoutField_typesInput>>
    connectOrCreate?: Enumerable<Widgets_for_fieldsCreateOrConnectWithoutField_typesInput>
    upsert?: Enumerable<Widgets_for_fieldsUpsertWithWhereUniqueWithoutField_typesInput>
    createMany?: Widgets_for_fieldsCreateManyField_typesInputEnvelope
    set?: Enumerable<Widgets_for_fieldsWhereUniqueInput>
    disconnect?: Enumerable<Widgets_for_fieldsWhereUniqueInput>
    delete?: Enumerable<Widgets_for_fieldsWhereUniqueInput>
    connect?: Enumerable<Widgets_for_fieldsWhereUniqueInput>
    update?: Enumerable<Widgets_for_fieldsUpdateWithWhereUniqueWithoutField_typesInput>
    updateMany?: Enumerable<Widgets_for_fieldsUpdateManyWithWhereWithoutField_typesInput>
    deleteMany?: Enumerable<Widgets_for_fieldsScalarWhereInput>
  }

  export type AccountsCreateNestedOneWithoutGbif_occurrence_downloadsInput = {
    create?: XOR<AccountsCreateWithoutGbif_occurrence_downloadsInput, AccountsUncheckedCreateWithoutGbif_occurrence_downloadsInput>
    connectOrCreate?: AccountsCreateOrConnectWithoutGbif_occurrence_downloadsInput
    connect?: AccountsWhereUniqueInput
  }

  export type ProjectsCreateNestedOneWithoutGbif_occurrence_downloadsInput = {
    create?: XOR<ProjectsCreateWithoutGbif_occurrence_downloadsInput, ProjectsUncheckedCreateWithoutGbif_occurrence_downloadsInput>
    connectOrCreate?: ProjectsCreateOrConnectWithoutGbif_occurrence_downloadsInput
    connect?: ProjectsWhereUniqueInput
  }

  export type SubprojectsCreateNestedOneWithoutGbif_occurrence_downloadsInput = {
    create?: XOR<SubprojectsCreateWithoutGbif_occurrence_downloadsInput, SubprojectsUncheckedCreateWithoutGbif_occurrence_downloadsInput>
    connectOrCreate?: SubprojectsCreateOrConnectWithoutGbif_occurrence_downloadsInput
    connect?: SubprojectsWhereUniqueInput
  }

  export type NullableEnumgbif_tableFieldUpdateOperationsInput = {
    set?: gbif_table | null
  }

  export type AccountsUpdateOneWithoutGbif_occurrence_downloadsNestedInput = {
    create?: XOR<AccountsCreateWithoutGbif_occurrence_downloadsInput, AccountsUncheckedCreateWithoutGbif_occurrence_downloadsInput>
    connectOrCreate?: AccountsCreateOrConnectWithoutGbif_occurrence_downloadsInput
    upsert?: AccountsUpsertWithoutGbif_occurrence_downloadsInput
    disconnect?: AccountsWhereInput | boolean
    delete?: AccountsWhereInput | boolean
    connect?: AccountsWhereUniqueInput
    update?: XOR<XOR<AccountsUpdateToOneWithWhereWithoutGbif_occurrence_downloadsInput, AccountsUpdateWithoutGbif_occurrence_downloadsInput>, AccountsUncheckedUpdateWithoutGbif_occurrence_downloadsInput>
  }

  export type ProjectsUpdateOneWithoutGbif_occurrence_downloadsNestedInput = {
    create?: XOR<ProjectsCreateWithoutGbif_occurrence_downloadsInput, ProjectsUncheckedCreateWithoutGbif_occurrence_downloadsInput>
    connectOrCreate?: ProjectsCreateOrConnectWithoutGbif_occurrence_downloadsInput
    upsert?: ProjectsUpsertWithoutGbif_occurrence_downloadsInput
    disconnect?: ProjectsWhereInput | boolean
    delete?: ProjectsWhereInput | boolean
    connect?: ProjectsWhereUniqueInput
    update?: XOR<XOR<ProjectsUpdateToOneWithWhereWithoutGbif_occurrence_downloadsInput, ProjectsUpdateWithoutGbif_occurrence_downloadsInput>, ProjectsUncheckedUpdateWithoutGbif_occurrence_downloadsInput>
  }

  export type SubprojectsUpdateOneWithoutGbif_occurrence_downloadsNestedInput = {
    create?: XOR<SubprojectsCreateWithoutGbif_occurrence_downloadsInput, SubprojectsUncheckedCreateWithoutGbif_occurrence_downloadsInput>
    connectOrCreate?: SubprojectsCreateOrConnectWithoutGbif_occurrence_downloadsInput
    upsert?: SubprojectsUpsertWithoutGbif_occurrence_downloadsInput
    disconnect?: SubprojectsWhereInput | boolean
    delete?: SubprojectsWhereInput | boolean
    connect?: SubprojectsWhereUniqueInput
    update?: XOR<XOR<SubprojectsUpdateToOneWithWhereWithoutGbif_occurrence_downloadsInput, SubprojectsUpdateWithoutGbif_occurrence_downloadsInput>, SubprojectsUncheckedUpdateWithoutGbif_occurrence_downloadsInput>
  }

  export type AccountsCreateNestedOneWithoutGbif_occurrencesInput = {
    create?: XOR<AccountsCreateWithoutGbif_occurrencesInput, AccountsUncheckedCreateWithoutGbif_occurrencesInput>
    connectOrCreate?: AccountsCreateOrConnectWithoutGbif_occurrencesInput
    connect?: AccountsWhereUniqueInput
  }

  export type ProjectsCreateNestedOneWithoutGbif_occurrencesInput = {
    create?: XOR<ProjectsCreateWithoutGbif_occurrencesInput, ProjectsUncheckedCreateWithoutGbif_occurrencesInput>
    connectOrCreate?: ProjectsCreateOrConnectWithoutGbif_occurrencesInput
    connect?: ProjectsWhereUniqueInput
  }

  export type SubprojectsCreateNestedOneWithoutGbif_occurrencesInput = {
    create?: XOR<SubprojectsCreateWithoutGbif_occurrencesInput, SubprojectsUncheckedCreateWithoutGbif_occurrencesInput>
    connectOrCreate?: SubprojectsCreateOrConnectWithoutGbif_occurrencesInput
    connect?: SubprojectsWhereUniqueInput
  }

  export type AccountsUpdateOneWithoutGbif_occurrencesNestedInput = {
    create?: XOR<AccountsCreateWithoutGbif_occurrencesInput, AccountsUncheckedCreateWithoutGbif_occurrencesInput>
    connectOrCreate?: AccountsCreateOrConnectWithoutGbif_occurrencesInput
    upsert?: AccountsUpsertWithoutGbif_occurrencesInput
    disconnect?: AccountsWhereInput | boolean
    delete?: AccountsWhereInput | boolean
    connect?: AccountsWhereUniqueInput
    update?: XOR<XOR<AccountsUpdateToOneWithWhereWithoutGbif_occurrencesInput, AccountsUpdateWithoutGbif_occurrencesInput>, AccountsUncheckedUpdateWithoutGbif_occurrencesInput>
  }

  export type ProjectsUpdateOneWithoutGbif_occurrencesNestedInput = {
    create?: XOR<ProjectsCreateWithoutGbif_occurrencesInput, ProjectsUncheckedCreateWithoutGbif_occurrencesInput>
    connectOrCreate?: ProjectsCreateOrConnectWithoutGbif_occurrencesInput
    upsert?: ProjectsUpsertWithoutGbif_occurrencesInput
    disconnect?: ProjectsWhereInput | boolean
    delete?: ProjectsWhereInput | boolean
    connect?: ProjectsWhereUniqueInput
    update?: XOR<XOR<ProjectsUpdateToOneWithWhereWithoutGbif_occurrencesInput, ProjectsUpdateWithoutGbif_occurrencesInput>, ProjectsUncheckedUpdateWithoutGbif_occurrencesInput>
  }

  export type SubprojectsUpdateOneWithoutGbif_occurrencesNestedInput = {
    create?: XOR<SubprojectsCreateWithoutGbif_occurrencesInput, SubprojectsUncheckedCreateWithoutGbif_occurrencesInput>
    connectOrCreate?: SubprojectsCreateOrConnectWithoutGbif_occurrencesInput
    upsert?: SubprojectsUpsertWithoutGbif_occurrencesInput
    disconnect?: SubprojectsWhereInput | boolean
    delete?: SubprojectsWhereInput | boolean
    connect?: SubprojectsWhereUniqueInput
    update?: XOR<XOR<SubprojectsUpdateToOneWithWhereWithoutGbif_occurrencesInput, SubprojectsUpdateWithoutGbif_occurrencesInput>, SubprojectsUncheckedUpdateWithoutGbif_occurrencesInput>
  }

  export type AccountsCreateNestedOneWithoutGbif_taxaInput = {
    create?: XOR<AccountsCreateWithoutGbif_taxaInput, AccountsUncheckedCreateWithoutGbif_taxaInput>
    connectOrCreate?: AccountsCreateOrConnectWithoutGbif_taxaInput
    connect?: AccountsWhereUniqueInput
  }

  export type ProjectsCreateNestedOneWithoutGbif_taxaInput = {
    create?: XOR<ProjectsCreateWithoutGbif_taxaInput, ProjectsUncheckedCreateWithoutGbif_taxaInput>
    connectOrCreate?: ProjectsCreateOrConnectWithoutGbif_taxaInput
    connect?: ProjectsWhereUniqueInput
  }

  export type AccountsUpdateOneWithoutGbif_taxaNestedInput = {
    create?: XOR<AccountsCreateWithoutGbif_taxaInput, AccountsUncheckedCreateWithoutGbif_taxaInput>
    connectOrCreate?: AccountsCreateOrConnectWithoutGbif_taxaInput
    upsert?: AccountsUpsertWithoutGbif_taxaInput
    disconnect?: AccountsWhereInput | boolean
    delete?: AccountsWhereInput | boolean
    connect?: AccountsWhereUniqueInput
    update?: XOR<XOR<AccountsUpdateToOneWithWhereWithoutGbif_taxaInput, AccountsUpdateWithoutGbif_taxaInput>, AccountsUncheckedUpdateWithoutGbif_taxaInput>
  }

  export type ProjectsUpdateOneWithoutGbif_taxaNestedInput = {
    create?: XOR<ProjectsCreateWithoutGbif_taxaInput, ProjectsUncheckedCreateWithoutGbif_taxaInput>
    connectOrCreate?: ProjectsCreateOrConnectWithoutGbif_taxaInput
    upsert?: ProjectsUpsertWithoutGbif_taxaInput
    disconnect?: ProjectsWhereInput | boolean
    delete?: ProjectsWhereInput | boolean
    connect?: ProjectsWhereUniqueInput
    update?: XOR<XOR<ProjectsUpdateToOneWithWhereWithoutGbif_taxaInput, ProjectsUpdateWithoutGbif_taxaInput>, ProjectsUncheckedUpdateWithoutGbif_taxaInput>
  }

  export type AccountsCreateNestedOneWithoutGoal_report_valuesInput = {
    create?: XOR<AccountsCreateWithoutGoal_report_valuesInput, AccountsUncheckedCreateWithoutGoal_report_valuesInput>
    connectOrCreate?: AccountsCreateOrConnectWithoutGoal_report_valuesInput
    connect?: AccountsWhereUniqueInput
  }

  export type Goal_reportsCreateNestedOneWithoutGoal_report_valuesInput = {
    create?: XOR<Goal_reportsCreateWithoutGoal_report_valuesInput, Goal_reportsUncheckedCreateWithoutGoal_report_valuesInput>
    connectOrCreate?: Goal_reportsCreateOrConnectWithoutGoal_report_valuesInput
    connect?: Goal_reportsWhereUniqueInput
  }

  export type UnitsCreateNestedOneWithoutGoal_report_valuesInput = {
    create?: XOR<UnitsCreateWithoutGoal_report_valuesInput, UnitsUncheckedCreateWithoutGoal_report_valuesInput>
    connectOrCreate?: UnitsCreateOrConnectWithoutGoal_report_valuesInput
    connect?: UnitsWhereUniqueInput
  }

  export type NullableFloatFieldUpdateOperationsInput = {
    set?: number | null
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type AccountsUpdateOneWithoutGoal_report_valuesNestedInput = {
    create?: XOR<AccountsCreateWithoutGoal_report_valuesInput, AccountsUncheckedCreateWithoutGoal_report_valuesInput>
    connectOrCreate?: AccountsCreateOrConnectWithoutGoal_report_valuesInput
    upsert?: AccountsUpsertWithoutGoal_report_valuesInput
    disconnect?: AccountsWhereInput | boolean
    delete?: AccountsWhereInput | boolean
    connect?: AccountsWhereUniqueInput
    update?: XOR<XOR<AccountsUpdateToOneWithWhereWithoutGoal_report_valuesInput, AccountsUpdateWithoutGoal_report_valuesInput>, AccountsUncheckedUpdateWithoutGoal_report_valuesInput>
  }

  export type Goal_reportsUpdateOneWithoutGoal_report_valuesNestedInput = {
    create?: XOR<Goal_reportsCreateWithoutGoal_report_valuesInput, Goal_reportsUncheckedCreateWithoutGoal_report_valuesInput>
    connectOrCreate?: Goal_reportsCreateOrConnectWithoutGoal_report_valuesInput
    upsert?: Goal_reportsUpsertWithoutGoal_report_valuesInput
    disconnect?: Goal_reportsWhereInput | boolean
    delete?: Goal_reportsWhereInput | boolean
    connect?: Goal_reportsWhereUniqueInput
    update?: XOR<XOR<Goal_reportsUpdateToOneWithWhereWithoutGoal_report_valuesInput, Goal_reportsUpdateWithoutGoal_report_valuesInput>, Goal_reportsUncheckedUpdateWithoutGoal_report_valuesInput>
  }

  export type UnitsUpdateOneWithoutGoal_report_valuesNestedInput = {
    create?: XOR<UnitsCreateWithoutGoal_report_valuesInput, UnitsUncheckedCreateWithoutGoal_report_valuesInput>
    connectOrCreate?: UnitsCreateOrConnectWithoutGoal_report_valuesInput
    upsert?: UnitsUpsertWithoutGoal_report_valuesInput
    disconnect?: UnitsWhereInput | boolean
    delete?: UnitsWhereInput | boolean
    connect?: UnitsWhereUniqueInput
    update?: XOR<XOR<UnitsUpdateToOneWithWhereWithoutGoal_report_valuesInput, UnitsUpdateWithoutGoal_report_valuesInput>, UnitsUncheckedUpdateWithoutGoal_report_valuesInput>
  }

  export type Goal_report_valuesCreateNestedManyWithoutGoal_reportsInput = {
    create?: XOR<Enumerable<Goal_report_valuesCreateWithoutGoal_reportsInput>, Enumerable<Goal_report_valuesUncheckedCreateWithoutGoal_reportsInput>>
    connectOrCreate?: Enumerable<Goal_report_valuesCreateOrConnectWithoutGoal_reportsInput>
    createMany?: Goal_report_valuesCreateManyGoal_reportsInputEnvelope
    connect?: Enumerable<Goal_report_valuesWhereUniqueInput>
  }

  export type AccountsCreateNestedOneWithoutGoal_reportsInput = {
    create?: XOR<AccountsCreateWithoutGoal_reportsInput, AccountsUncheckedCreateWithoutGoal_reportsInput>
    connectOrCreate?: AccountsCreateOrConnectWithoutGoal_reportsInput
    connect?: AccountsWhereUniqueInput
  }

  export type GoalsCreateNestedOneWithoutGoal_reportsInput = {
    create?: XOR<GoalsCreateWithoutGoal_reportsInput, GoalsUncheckedCreateWithoutGoal_reportsInput>
    connectOrCreate?: GoalsCreateOrConnectWithoutGoal_reportsInput
    connect?: GoalsWhereUniqueInput
  }

  export type Goal_report_valuesUncheckedCreateNestedManyWithoutGoal_reportsInput = {
    create?: XOR<Enumerable<Goal_report_valuesCreateWithoutGoal_reportsInput>, Enumerable<Goal_report_valuesUncheckedCreateWithoutGoal_reportsInput>>
    connectOrCreate?: Enumerable<Goal_report_valuesCreateOrConnectWithoutGoal_reportsInput>
    createMany?: Goal_report_valuesCreateManyGoal_reportsInputEnvelope
    connect?: Enumerable<Goal_report_valuesWhereUniqueInput>
  }

  export type Goal_report_valuesUpdateManyWithoutGoal_reportsNestedInput = {
    create?: XOR<Enumerable<Goal_report_valuesCreateWithoutGoal_reportsInput>, Enumerable<Goal_report_valuesUncheckedCreateWithoutGoal_reportsInput>>
    connectOrCreate?: Enumerable<Goal_report_valuesCreateOrConnectWithoutGoal_reportsInput>
    upsert?: Enumerable<Goal_report_valuesUpsertWithWhereUniqueWithoutGoal_reportsInput>
    createMany?: Goal_report_valuesCreateManyGoal_reportsInputEnvelope
    set?: Enumerable<Goal_report_valuesWhereUniqueInput>
    disconnect?: Enumerable<Goal_report_valuesWhereUniqueInput>
    delete?: Enumerable<Goal_report_valuesWhereUniqueInput>
    connect?: Enumerable<Goal_report_valuesWhereUniqueInput>
    update?: Enumerable<Goal_report_valuesUpdateWithWhereUniqueWithoutGoal_reportsInput>
    updateMany?: Enumerable<Goal_report_valuesUpdateManyWithWhereWithoutGoal_reportsInput>
    deleteMany?: Enumerable<Goal_report_valuesScalarWhereInput>
  }

  export type AccountsUpdateOneWithoutGoal_reportsNestedInput = {
    create?: XOR<AccountsCreateWithoutGoal_reportsInput, AccountsUncheckedCreateWithoutGoal_reportsInput>
    connectOrCreate?: AccountsCreateOrConnectWithoutGoal_reportsInput
    upsert?: AccountsUpsertWithoutGoal_reportsInput
    disconnect?: AccountsWhereInput | boolean
    delete?: AccountsWhereInput | boolean
    connect?: AccountsWhereUniqueInput
    update?: XOR<XOR<AccountsUpdateToOneWithWhereWithoutGoal_reportsInput, AccountsUpdateWithoutGoal_reportsInput>, AccountsUncheckedUpdateWithoutGoal_reportsInput>
  }

  export type GoalsUpdateOneWithoutGoal_reportsNestedInput = {
    create?: XOR<GoalsCreateWithoutGoal_reportsInput, GoalsUncheckedCreateWithoutGoal_reportsInput>
    connectOrCreate?: GoalsCreateOrConnectWithoutGoal_reportsInput
    upsert?: GoalsUpsertWithoutGoal_reportsInput
    disconnect?: GoalsWhereInput | boolean
    delete?: GoalsWhereInput | boolean
    connect?: GoalsWhereUniqueInput
    update?: XOR<XOR<GoalsUpdateToOneWithWhereWithoutGoal_reportsInput, GoalsUpdateWithoutGoal_reportsInput>, GoalsUncheckedUpdateWithoutGoal_reportsInput>
  }

  export type Goal_report_valuesUncheckedUpdateManyWithoutGoal_reportsNestedInput = {
    create?: XOR<Enumerable<Goal_report_valuesCreateWithoutGoal_reportsInput>, Enumerable<Goal_report_valuesUncheckedCreateWithoutGoal_reportsInput>>
    connectOrCreate?: Enumerable<Goal_report_valuesCreateOrConnectWithoutGoal_reportsInput>
    upsert?: Enumerable<Goal_report_valuesUpsertWithWhereUniqueWithoutGoal_reportsInput>
    createMany?: Goal_report_valuesCreateManyGoal_reportsInputEnvelope
    set?: Enumerable<Goal_report_valuesWhereUniqueInput>
    disconnect?: Enumerable<Goal_report_valuesWhereUniqueInput>
    delete?: Enumerable<Goal_report_valuesWhereUniqueInput>
    connect?: Enumerable<Goal_report_valuesWhereUniqueInput>
    update?: Enumerable<Goal_report_valuesUpdateWithWhereUniqueWithoutGoal_reportsInput>
    updateMany?: Enumerable<Goal_report_valuesUpdateManyWithWhereWithoutGoal_reportsInput>
    deleteMany?: Enumerable<Goal_report_valuesScalarWhereInput>
  }

  export type Goal_reportsCreateNestedManyWithoutGoalsInput = {
    create?: XOR<Enumerable<Goal_reportsCreateWithoutGoalsInput>, Enumerable<Goal_reportsUncheckedCreateWithoutGoalsInput>>
    connectOrCreate?: Enumerable<Goal_reportsCreateOrConnectWithoutGoalsInput>
    createMany?: Goal_reportsCreateManyGoalsInputEnvelope
    connect?: Enumerable<Goal_reportsWhereUniqueInput>
  }

  export type AccountsCreateNestedOneWithoutGoalsInput = {
    create?: XOR<AccountsCreateWithoutGoalsInput, AccountsUncheckedCreateWithoutGoalsInput>
    connectOrCreate?: AccountsCreateOrConnectWithoutGoalsInput
    connect?: AccountsWhereUniqueInput
  }

  export type SubprojectsCreateNestedOneWithoutGoalsInput = {
    create?: XOR<SubprojectsCreateWithoutGoalsInput, SubprojectsUncheckedCreateWithoutGoalsInput>
    connectOrCreate?: SubprojectsCreateOrConnectWithoutGoalsInput
    connect?: SubprojectsWhereUniqueInput
  }

  export type Goal_reportsUncheckedCreateNestedManyWithoutGoalsInput = {
    create?: XOR<Enumerable<Goal_reportsCreateWithoutGoalsInput>, Enumerable<Goal_reportsUncheckedCreateWithoutGoalsInput>>
    connectOrCreate?: Enumerable<Goal_reportsCreateOrConnectWithoutGoalsInput>
    createMany?: Goal_reportsCreateManyGoalsInputEnvelope
    connect?: Enumerable<Goal_reportsWhereUniqueInput>
  }

  export type Goal_reportsUpdateManyWithoutGoalsNestedInput = {
    create?: XOR<Enumerable<Goal_reportsCreateWithoutGoalsInput>, Enumerable<Goal_reportsUncheckedCreateWithoutGoalsInput>>
    connectOrCreate?: Enumerable<Goal_reportsCreateOrConnectWithoutGoalsInput>
    upsert?: Enumerable<Goal_reportsUpsertWithWhereUniqueWithoutGoalsInput>
    createMany?: Goal_reportsCreateManyGoalsInputEnvelope
    set?: Enumerable<Goal_reportsWhereUniqueInput>
    disconnect?: Enumerable<Goal_reportsWhereUniqueInput>
    delete?: Enumerable<Goal_reportsWhereUniqueInput>
    connect?: Enumerable<Goal_reportsWhereUniqueInput>
    update?: Enumerable<Goal_reportsUpdateWithWhereUniqueWithoutGoalsInput>
    updateMany?: Enumerable<Goal_reportsUpdateManyWithWhereWithoutGoalsInput>
    deleteMany?: Enumerable<Goal_reportsScalarWhereInput>
  }

  export type AccountsUpdateOneWithoutGoalsNestedInput = {
    create?: XOR<AccountsCreateWithoutGoalsInput, AccountsUncheckedCreateWithoutGoalsInput>
    connectOrCreate?: AccountsCreateOrConnectWithoutGoalsInput
    upsert?: AccountsUpsertWithoutGoalsInput
    disconnect?: AccountsWhereInput | boolean
    delete?: AccountsWhereInput | boolean
    connect?: AccountsWhereUniqueInput
    update?: XOR<XOR<AccountsUpdateToOneWithWhereWithoutGoalsInput, AccountsUpdateWithoutGoalsInput>, AccountsUncheckedUpdateWithoutGoalsInput>
  }

  export type SubprojectsUpdateOneWithoutGoalsNestedInput = {
    create?: XOR<SubprojectsCreateWithoutGoalsInput, SubprojectsUncheckedCreateWithoutGoalsInput>
    connectOrCreate?: SubprojectsCreateOrConnectWithoutGoalsInput
    upsert?: SubprojectsUpsertWithoutGoalsInput
    disconnect?: SubprojectsWhereInput | boolean
    delete?: SubprojectsWhereInput | boolean
    connect?: SubprojectsWhereUniqueInput
    update?: XOR<XOR<SubprojectsUpdateToOneWithWhereWithoutGoalsInput, SubprojectsUpdateWithoutGoalsInput>, SubprojectsUncheckedUpdateWithoutGoalsInput>
  }

  export type Goal_reportsUncheckedUpdateManyWithoutGoalsNestedInput = {
    create?: XOR<Enumerable<Goal_reportsCreateWithoutGoalsInput>, Enumerable<Goal_reportsUncheckedCreateWithoutGoalsInput>>
    connectOrCreate?: Enumerable<Goal_reportsCreateOrConnectWithoutGoalsInput>
    upsert?: Enumerable<Goal_reportsUpsertWithWhereUniqueWithoutGoalsInput>
    createMany?: Goal_reportsCreateManyGoalsInputEnvelope
    set?: Enumerable<Goal_reportsWhereUniqueInput>
    disconnect?: Enumerable<Goal_reportsWhereUniqueInput>
    delete?: Enumerable<Goal_reportsWhereUniqueInput>
    connect?: Enumerable<Goal_reportsWhereUniqueInput>
    update?: Enumerable<Goal_reportsUpdateWithWhereUniqueWithoutGoalsInput>
    updateMany?: Enumerable<Goal_reportsUpdateManyWithWhereWithoutGoalsInput>
    deleteMany?: Enumerable<Goal_reportsScalarWhereInput>
  }

  export type AccountsCreateNestedOneWithoutList_valuesInput = {
    create?: XOR<AccountsCreateWithoutList_valuesInput, AccountsUncheckedCreateWithoutList_valuesInput>
    connectOrCreate?: AccountsCreateOrConnectWithoutList_valuesInput
    connect?: AccountsWhereUniqueInput
  }

  export type ListsCreateNestedOneWithoutList_valuesInput = {
    create?: XOR<ListsCreateWithoutList_valuesInput, ListsUncheckedCreateWithoutList_valuesInput>
    connectOrCreate?: ListsCreateOrConnectWithoutList_valuesInput
    connect?: ListsWhereUniqueInput
  }

  export type AccountsUpdateOneWithoutList_valuesNestedInput = {
    create?: XOR<AccountsCreateWithoutList_valuesInput, AccountsUncheckedCreateWithoutList_valuesInput>
    connectOrCreate?: AccountsCreateOrConnectWithoutList_valuesInput
    upsert?: AccountsUpsertWithoutList_valuesInput
    disconnect?: AccountsWhereInput | boolean
    delete?: AccountsWhereInput | boolean
    connect?: AccountsWhereUniqueInput
    update?: XOR<XOR<AccountsUpdateToOneWithWhereWithoutList_valuesInput, AccountsUpdateWithoutList_valuesInput>, AccountsUncheckedUpdateWithoutList_valuesInput>
  }

  export type ListsUpdateOneWithoutList_valuesNestedInput = {
    create?: XOR<ListsCreateWithoutList_valuesInput, ListsUncheckedCreateWithoutList_valuesInput>
    connectOrCreate?: ListsCreateOrConnectWithoutList_valuesInput
    upsert?: ListsUpsertWithoutList_valuesInput
    disconnect?: ListsWhereInput | boolean
    delete?: ListsWhereInput | boolean
    connect?: ListsWhereUniqueInput
    update?: XOR<XOR<ListsUpdateToOneWithWhereWithoutList_valuesInput, ListsUpdateWithoutList_valuesInput>, ListsUncheckedUpdateWithoutList_valuesInput>
  }

  export type List_valuesCreateNestedManyWithoutListsInput = {
    create?: XOR<Enumerable<List_valuesCreateWithoutListsInput>, Enumerable<List_valuesUncheckedCreateWithoutListsInput>>
    connectOrCreate?: Enumerable<List_valuesCreateOrConnectWithoutListsInput>
    createMany?: List_valuesCreateManyListsInputEnvelope
    connect?: Enumerable<List_valuesWhereUniqueInput>
  }

  export type AccountsCreateNestedOneWithoutListsInput = {
    create?: XOR<AccountsCreateWithoutListsInput, AccountsUncheckedCreateWithoutListsInput>
    connectOrCreate?: AccountsCreateOrConnectWithoutListsInput
    connect?: AccountsWhereUniqueInput
  }

  export type ProjectsCreateNestedOneWithoutListsInput = {
    create?: XOR<ProjectsCreateWithoutListsInput, ProjectsUncheckedCreateWithoutListsInput>
    connectOrCreate?: ProjectsCreateOrConnectWithoutListsInput
    connect?: ProjectsWhereUniqueInput
  }

  export type UnitsCreateNestedManyWithoutListsInput = {
    create?: XOR<Enumerable<UnitsCreateWithoutListsInput>, Enumerable<UnitsUncheckedCreateWithoutListsInput>>
    connectOrCreate?: Enumerable<UnitsCreateOrConnectWithoutListsInput>
    createMany?: UnitsCreateManyListsInputEnvelope
    connect?: Enumerable<UnitsWhereUniqueInput>
  }

  export type List_valuesUncheckedCreateNestedManyWithoutListsInput = {
    create?: XOR<Enumerable<List_valuesCreateWithoutListsInput>, Enumerable<List_valuesUncheckedCreateWithoutListsInput>>
    connectOrCreate?: Enumerable<List_valuesCreateOrConnectWithoutListsInput>
    createMany?: List_valuesCreateManyListsInputEnvelope
    connect?: Enumerable<List_valuesWhereUniqueInput>
  }

  export type UnitsUncheckedCreateNestedManyWithoutListsInput = {
    create?: XOR<Enumerable<UnitsCreateWithoutListsInput>, Enumerable<UnitsUncheckedCreateWithoutListsInput>>
    connectOrCreate?: Enumerable<UnitsCreateOrConnectWithoutListsInput>
    createMany?: UnitsCreateManyListsInputEnvelope
    connect?: Enumerable<UnitsWhereUniqueInput>
  }

  export type List_valuesUpdateManyWithoutListsNestedInput = {
    create?: XOR<Enumerable<List_valuesCreateWithoutListsInput>, Enumerable<List_valuesUncheckedCreateWithoutListsInput>>
    connectOrCreate?: Enumerable<List_valuesCreateOrConnectWithoutListsInput>
    upsert?: Enumerable<List_valuesUpsertWithWhereUniqueWithoutListsInput>
    createMany?: List_valuesCreateManyListsInputEnvelope
    set?: Enumerable<List_valuesWhereUniqueInput>
    disconnect?: Enumerable<List_valuesWhereUniqueInput>
    delete?: Enumerable<List_valuesWhereUniqueInput>
    connect?: Enumerable<List_valuesWhereUniqueInput>
    update?: Enumerable<List_valuesUpdateWithWhereUniqueWithoutListsInput>
    updateMany?: Enumerable<List_valuesUpdateManyWithWhereWithoutListsInput>
    deleteMany?: Enumerable<List_valuesScalarWhereInput>
  }

  export type AccountsUpdateOneWithoutListsNestedInput = {
    create?: XOR<AccountsCreateWithoutListsInput, AccountsUncheckedCreateWithoutListsInput>
    connectOrCreate?: AccountsCreateOrConnectWithoutListsInput
    upsert?: AccountsUpsertWithoutListsInput
    disconnect?: AccountsWhereInput | boolean
    delete?: AccountsWhereInput | boolean
    connect?: AccountsWhereUniqueInput
    update?: XOR<XOR<AccountsUpdateToOneWithWhereWithoutListsInput, AccountsUpdateWithoutListsInput>, AccountsUncheckedUpdateWithoutListsInput>
  }

  export type ProjectsUpdateOneWithoutListsNestedInput = {
    create?: XOR<ProjectsCreateWithoutListsInput, ProjectsUncheckedCreateWithoutListsInput>
    connectOrCreate?: ProjectsCreateOrConnectWithoutListsInput
    upsert?: ProjectsUpsertWithoutListsInput
    disconnect?: ProjectsWhereInput | boolean
    delete?: ProjectsWhereInput | boolean
    connect?: ProjectsWhereUniqueInput
    update?: XOR<XOR<ProjectsUpdateToOneWithWhereWithoutListsInput, ProjectsUpdateWithoutListsInput>, ProjectsUncheckedUpdateWithoutListsInput>
  }

  export type UnitsUpdateManyWithoutListsNestedInput = {
    create?: XOR<Enumerable<UnitsCreateWithoutListsInput>, Enumerable<UnitsUncheckedCreateWithoutListsInput>>
    connectOrCreate?: Enumerable<UnitsCreateOrConnectWithoutListsInput>
    upsert?: Enumerable<UnitsUpsertWithWhereUniqueWithoutListsInput>
    createMany?: UnitsCreateManyListsInputEnvelope
    set?: Enumerable<UnitsWhereUniqueInput>
    disconnect?: Enumerable<UnitsWhereUniqueInput>
    delete?: Enumerable<UnitsWhereUniqueInput>
    connect?: Enumerable<UnitsWhereUniqueInput>
    update?: Enumerable<UnitsUpdateWithWhereUniqueWithoutListsInput>
    updateMany?: Enumerable<UnitsUpdateManyWithWhereWithoutListsInput>
    deleteMany?: Enumerable<UnitsScalarWhereInput>
  }

  export type List_valuesUncheckedUpdateManyWithoutListsNestedInput = {
    create?: XOR<Enumerable<List_valuesCreateWithoutListsInput>, Enumerable<List_valuesUncheckedCreateWithoutListsInput>>
    connectOrCreate?: Enumerable<List_valuesCreateOrConnectWithoutListsInput>
    upsert?: Enumerable<List_valuesUpsertWithWhereUniqueWithoutListsInput>
    createMany?: List_valuesCreateManyListsInputEnvelope
    set?: Enumerable<List_valuesWhereUniqueInput>
    disconnect?: Enumerable<List_valuesWhereUniqueInput>
    delete?: Enumerable<List_valuesWhereUniqueInput>
    connect?: Enumerable<List_valuesWhereUniqueInput>
    update?: Enumerable<List_valuesUpdateWithWhereUniqueWithoutListsInput>
    updateMany?: Enumerable<List_valuesUpdateManyWithWhereWithoutListsInput>
    deleteMany?: Enumerable<List_valuesScalarWhereInput>
  }

  export type UnitsUncheckedUpdateManyWithoutListsNestedInput = {
    create?: XOR<Enumerable<UnitsCreateWithoutListsInput>, Enumerable<UnitsUncheckedCreateWithoutListsInput>>
    connectOrCreate?: Enumerable<UnitsCreateOrConnectWithoutListsInput>
    upsert?: Enumerable<UnitsUpsertWithWhereUniqueWithoutListsInput>
    createMany?: UnitsCreateManyListsInputEnvelope
    set?: Enumerable<UnitsWhereUniqueInput>
    disconnect?: Enumerable<UnitsWhereUniqueInput>
    delete?: Enumerable<UnitsWhereUniqueInput>
    connect?: Enumerable<UnitsWhereUniqueInput>
    update?: Enumerable<UnitsUpdateWithWhereUniqueWithoutListsInput>
    updateMany?: Enumerable<UnitsUpdateManyWithWhereWithoutListsInput>
    deleteMany?: Enumerable<UnitsScalarWhereInput>
  }

  export type User_messagesCreateNestedManyWithoutMessagesInput = {
    create?: XOR<Enumerable<User_messagesCreateWithoutMessagesInput>, Enumerable<User_messagesUncheckedCreateWithoutMessagesInput>>
    connectOrCreate?: Enumerable<User_messagesCreateOrConnectWithoutMessagesInput>
    createMany?: User_messagesCreateManyMessagesInputEnvelope
    connect?: Enumerable<User_messagesWhereUniqueInput>
  }

  export type User_messagesUncheckedCreateNestedManyWithoutMessagesInput = {
    create?: XOR<Enumerable<User_messagesCreateWithoutMessagesInput>, Enumerable<User_messagesUncheckedCreateWithoutMessagesInput>>
    connectOrCreate?: Enumerable<User_messagesCreateOrConnectWithoutMessagesInput>
    createMany?: User_messagesCreateManyMessagesInputEnvelope
    connect?: Enumerable<User_messagesWhereUniqueInput>
  }

  export type User_messagesUpdateManyWithoutMessagesNestedInput = {
    create?: XOR<Enumerable<User_messagesCreateWithoutMessagesInput>, Enumerable<User_messagesUncheckedCreateWithoutMessagesInput>>
    connectOrCreate?: Enumerable<User_messagesCreateOrConnectWithoutMessagesInput>
    upsert?: Enumerable<User_messagesUpsertWithWhereUniqueWithoutMessagesInput>
    createMany?: User_messagesCreateManyMessagesInputEnvelope
    set?: Enumerable<User_messagesWhereUniqueInput>
    disconnect?: Enumerable<User_messagesWhereUniqueInput>
    delete?: Enumerable<User_messagesWhereUniqueInput>
    connect?: Enumerable<User_messagesWhereUniqueInput>
    update?: Enumerable<User_messagesUpdateWithWhereUniqueWithoutMessagesInput>
    updateMany?: Enumerable<User_messagesUpdateManyWithWhereWithoutMessagesInput>
    deleteMany?: Enumerable<User_messagesScalarWhereInput>
  }

  export type User_messagesUncheckedUpdateManyWithoutMessagesNestedInput = {
    create?: XOR<Enumerable<User_messagesCreateWithoutMessagesInput>, Enumerable<User_messagesUncheckedCreateWithoutMessagesInput>>
    connectOrCreate?: Enumerable<User_messagesCreateOrConnectWithoutMessagesInput>
    upsert?: Enumerable<User_messagesUpsertWithWhereUniqueWithoutMessagesInput>
    createMany?: User_messagesCreateManyMessagesInputEnvelope
    set?: Enumerable<User_messagesWhereUniqueInput>
    disconnect?: Enumerable<User_messagesWhereUniqueInput>
    delete?: Enumerable<User_messagesWhereUniqueInput>
    connect?: Enumerable<User_messagesWhereUniqueInput>
    update?: Enumerable<User_messagesUpdateWithWhereUniqueWithoutMessagesInput>
    updateMany?: Enumerable<User_messagesUpdateManyWithWhereWithoutMessagesInput>
    deleteMany?: Enumerable<User_messagesScalarWhereInput>
  }

  export type AccountsCreateNestedOneWithoutObservation_sourcesInput = {
    create?: XOR<AccountsCreateWithoutObservation_sourcesInput, AccountsUncheckedCreateWithoutObservation_sourcesInput>
    connectOrCreate?: AccountsCreateOrConnectWithoutObservation_sourcesInput
    connect?: AccountsWhereUniqueInput
  }

  export type ProjectsCreateNestedOneWithoutObservation_sourcesInput = {
    create?: XOR<ProjectsCreateWithoutObservation_sourcesInput, ProjectsUncheckedCreateWithoutObservation_sourcesInput>
    connectOrCreate?: ProjectsCreateOrConnectWithoutObservation_sourcesInput
    connect?: ProjectsWhereUniqueInput
  }

  export type AccountsUpdateOneWithoutObservation_sourcesNestedInput = {
    create?: XOR<AccountsCreateWithoutObservation_sourcesInput, AccountsUncheckedCreateWithoutObservation_sourcesInput>
    connectOrCreate?: AccountsCreateOrConnectWithoutObservation_sourcesInput
    upsert?: AccountsUpsertWithoutObservation_sourcesInput
    disconnect?: AccountsWhereInput | boolean
    delete?: AccountsWhereInput | boolean
    connect?: AccountsWhereUniqueInput
    update?: XOR<XOR<AccountsUpdateToOneWithWhereWithoutObservation_sourcesInput, AccountsUpdateWithoutObservation_sourcesInput>, AccountsUncheckedUpdateWithoutObservation_sourcesInput>
  }

  export type ProjectsUpdateOneWithoutObservation_sourcesNestedInput = {
    create?: XOR<ProjectsCreateWithoutObservation_sourcesInput, ProjectsUncheckedCreateWithoutObservation_sourcesInput>
    connectOrCreate?: ProjectsCreateOrConnectWithoutObservation_sourcesInput
    upsert?: ProjectsUpsertWithoutObservation_sourcesInput
    disconnect?: ProjectsWhereInput | boolean
    delete?: ProjectsWhereInput | boolean
    connect?: ProjectsWhereUniqueInput
    update?: XOR<XOR<ProjectsUpdateToOneWithWhereWithoutObservation_sourcesInput, ProjectsUpdateWithoutObservation_sourcesInput>, ProjectsUncheckedUpdateWithoutObservation_sourcesInput>
  }

  export type AccountsCreateNestedOneWithoutPersonsInput = {
    create?: XOR<AccountsCreateWithoutPersonsInput, AccountsUncheckedCreateWithoutPersonsInput>
    connectOrCreate?: AccountsCreateOrConnectWithoutPersonsInput
    connect?: AccountsWhereUniqueInput
  }

  export type ProjectsCreateNestedOneWithoutPersonsInput = {
    create?: XOR<ProjectsCreateWithoutPersonsInput, ProjectsUncheckedCreateWithoutPersonsInput>
    connectOrCreate?: ProjectsCreateOrConnectWithoutPersonsInput
    connect?: ProjectsWhereUniqueInput
  }

  export type AccountsUpdateOneWithoutPersonsNestedInput = {
    create?: XOR<AccountsCreateWithoutPersonsInput, AccountsUncheckedCreateWithoutPersonsInput>
    connectOrCreate?: AccountsCreateOrConnectWithoutPersonsInput
    upsert?: AccountsUpsertWithoutPersonsInput
    disconnect?: AccountsWhereInput | boolean
    delete?: AccountsWhereInput | boolean
    connect?: AccountsWhereUniqueInput
    update?: XOR<XOR<AccountsUpdateToOneWithWhereWithoutPersonsInput, AccountsUpdateWithoutPersonsInput>, AccountsUncheckedUpdateWithoutPersonsInput>
  }

  export type ProjectsUpdateOneWithoutPersonsNestedInput = {
    create?: XOR<ProjectsCreateWithoutPersonsInput, ProjectsUncheckedCreateWithoutPersonsInput>
    connectOrCreate?: ProjectsCreateOrConnectWithoutPersonsInput
    upsert?: ProjectsUpsertWithoutPersonsInput
    disconnect?: ProjectsWhereInput | boolean
    delete?: ProjectsWhereInput | boolean
    connect?: ProjectsWhereUniqueInput
    update?: XOR<XOR<ProjectsUpdateToOneWithWhereWithoutPersonsInput, ProjectsUpdateWithoutPersonsInput>, ProjectsUncheckedUpdateWithoutPersonsInput>
  }

  export type AccountsCreateNestedOneWithoutPlace_levelsInput = {
    create?: XOR<AccountsCreateWithoutPlace_levelsInput, AccountsUncheckedCreateWithoutPlace_levelsInput>
    connectOrCreate?: AccountsCreateOrConnectWithoutPlace_levelsInput
    connect?: AccountsWhereUniqueInput
  }

  export type ProjectsCreateNestedOneWithoutPlace_levelsInput = {
    create?: XOR<ProjectsCreateWithoutPlace_levelsInput, ProjectsUncheckedCreateWithoutPlace_levelsInput>
    connectOrCreate?: ProjectsCreateOrConnectWithoutPlace_levelsInput
    connect?: ProjectsWhereUniqueInput
  }

  export type AccountsUpdateOneWithoutPlace_levelsNestedInput = {
    create?: XOR<AccountsCreateWithoutPlace_levelsInput, AccountsUncheckedCreateWithoutPlace_levelsInput>
    connectOrCreate?: AccountsCreateOrConnectWithoutPlace_levelsInput
    upsert?: AccountsUpsertWithoutPlace_levelsInput
    disconnect?: AccountsWhereInput | boolean
    delete?: AccountsWhereInput | boolean
    connect?: AccountsWhereUniqueInput
    update?: XOR<XOR<AccountsUpdateToOneWithWhereWithoutPlace_levelsInput, AccountsUpdateWithoutPlace_levelsInput>, AccountsUncheckedUpdateWithoutPlace_levelsInput>
  }

  export type ProjectsUpdateOneWithoutPlace_levelsNestedInput = {
    create?: XOR<ProjectsCreateWithoutPlace_levelsInput, ProjectsUncheckedCreateWithoutPlace_levelsInput>
    connectOrCreate?: ProjectsCreateOrConnectWithoutPlace_levelsInput
    upsert?: ProjectsUpsertWithoutPlace_levelsInput
    disconnect?: ProjectsWhereInput | boolean
    delete?: ProjectsWhereInput | boolean
    connect?: ProjectsWhereUniqueInput
    update?: XOR<XOR<ProjectsUpdateToOneWithWhereWithoutPlace_levelsInput, ProjectsUpdateWithoutPlace_levelsInput>, ProjectsUncheckedUpdateWithoutPlace_levelsInput>
  }

  export type AccountsCreateNestedOneWithoutProject_usersInput = {
    create?: XOR<AccountsCreateWithoutProject_usersInput, AccountsUncheckedCreateWithoutProject_usersInput>
    connectOrCreate?: AccountsCreateOrConnectWithoutProject_usersInput
    connect?: AccountsWhereUniqueInput
  }

  export type ProjectsCreateNestedOneWithoutProject_usersInput = {
    create?: XOR<ProjectsCreateWithoutProject_usersInput, ProjectsUncheckedCreateWithoutProject_usersInput>
    connectOrCreate?: ProjectsCreateOrConnectWithoutProject_usersInput
    connect?: ProjectsWhereUniqueInput
  }

  export type UsersCreateNestedOneWithoutProject_usersInput = {
    create?: XOR<UsersCreateWithoutProject_usersInput, UsersUncheckedCreateWithoutProject_usersInput>
    connectOrCreate?: UsersCreateOrConnectWithoutProject_usersInput
    connect?: UsersWhereUniqueInput
  }

  export type AccountsUpdateOneWithoutProject_usersNestedInput = {
    create?: XOR<AccountsCreateWithoutProject_usersInput, AccountsUncheckedCreateWithoutProject_usersInput>
    connectOrCreate?: AccountsCreateOrConnectWithoutProject_usersInput
    upsert?: AccountsUpsertWithoutProject_usersInput
    disconnect?: AccountsWhereInput | boolean
    delete?: AccountsWhereInput | boolean
    connect?: AccountsWhereUniqueInput
    update?: XOR<XOR<AccountsUpdateToOneWithWhereWithoutProject_usersInput, AccountsUpdateWithoutProject_usersInput>, AccountsUncheckedUpdateWithoutProject_usersInput>
  }

  export type ProjectsUpdateOneWithoutProject_usersNestedInput = {
    create?: XOR<ProjectsCreateWithoutProject_usersInput, ProjectsUncheckedCreateWithoutProject_usersInput>
    connectOrCreate?: ProjectsCreateOrConnectWithoutProject_usersInput
    upsert?: ProjectsUpsertWithoutProject_usersInput
    disconnect?: ProjectsWhereInput | boolean
    delete?: ProjectsWhereInput | boolean
    connect?: ProjectsWhereUniqueInput
    update?: XOR<XOR<ProjectsUpdateToOneWithWhereWithoutProject_usersInput, ProjectsUpdateWithoutProject_usersInput>, ProjectsUncheckedUpdateWithoutProject_usersInput>
  }

  export type UsersUpdateOneWithoutProject_usersNestedInput = {
    create?: XOR<UsersCreateWithoutProject_usersInput, UsersUncheckedCreateWithoutProject_usersInput>
    connectOrCreate?: UsersCreateOrConnectWithoutProject_usersInput
    upsert?: UsersUpsertWithoutProject_usersInput
    disconnect?: UsersWhereInput | boolean
    delete?: UsersWhereInput | boolean
    connect?: UsersWhereUniqueInput
    update?: XOR<XOR<UsersUpdateToOneWithWhereWithoutProject_usersInput, UsersUpdateWithoutProject_usersInput>, UsersUncheckedUpdateWithoutProject_usersInput>
  }

  export type Gbif_occurrence_downloadsCreateNestedManyWithoutProjectsInput = {
    create?: XOR<Enumerable<Gbif_occurrence_downloadsCreateWithoutProjectsInput>, Enumerable<Gbif_occurrence_downloadsUncheckedCreateWithoutProjectsInput>>
    connectOrCreate?: Enumerable<Gbif_occurrence_downloadsCreateOrConnectWithoutProjectsInput>
    createMany?: Gbif_occurrence_downloadsCreateManyProjectsInputEnvelope
    connect?: Enumerable<Gbif_occurrence_downloadsWhereUniqueInput>
  }

  export type Gbif_occurrencesCreateNestedManyWithoutProjectsInput = {
    create?: XOR<Enumerable<Gbif_occurrencesCreateWithoutProjectsInput>, Enumerable<Gbif_occurrencesUncheckedCreateWithoutProjectsInput>>
    connectOrCreate?: Enumerable<Gbif_occurrencesCreateOrConnectWithoutProjectsInput>
    createMany?: Gbif_occurrencesCreateManyProjectsInputEnvelope
    connect?: Enumerable<Gbif_occurrencesWhereUniqueInput>
  }

  export type Gbif_taxaCreateNestedManyWithoutProjectsInput = {
    create?: XOR<Enumerable<Gbif_taxaCreateWithoutProjectsInput>, Enumerable<Gbif_taxaUncheckedCreateWithoutProjectsInput>>
    connectOrCreate?: Enumerable<Gbif_taxaCreateOrConnectWithoutProjectsInput>
    createMany?: Gbif_taxaCreateManyProjectsInputEnvelope
    connect?: Enumerable<Gbif_taxaWhereUniqueInput>
  }

  export type ListsCreateNestedManyWithoutProjectsInput = {
    create?: XOR<Enumerable<ListsCreateWithoutProjectsInput>, Enumerable<ListsUncheckedCreateWithoutProjectsInput>>
    connectOrCreate?: Enumerable<ListsCreateOrConnectWithoutProjectsInput>
    createMany?: ListsCreateManyProjectsInputEnvelope
    connect?: Enumerable<ListsWhereUniqueInput>
  }

  export type Observation_sourcesCreateNestedManyWithoutProjectsInput = {
    create?: XOR<Enumerable<Observation_sourcesCreateWithoutProjectsInput>, Enumerable<Observation_sourcesUncheckedCreateWithoutProjectsInput>>
    connectOrCreate?: Enumerable<Observation_sourcesCreateOrConnectWithoutProjectsInput>
    createMany?: Observation_sourcesCreateManyProjectsInputEnvelope
    connect?: Enumerable<Observation_sourcesWhereUniqueInput>
  }

  export type PersonsCreateNestedManyWithoutProjectsInput = {
    create?: XOR<Enumerable<PersonsCreateWithoutProjectsInput>, Enumerable<PersonsUncheckedCreateWithoutProjectsInput>>
    connectOrCreate?: Enumerable<PersonsCreateOrConnectWithoutProjectsInput>
    createMany?: PersonsCreateManyProjectsInputEnvelope
    connect?: Enumerable<PersonsWhereUniqueInput>
  }

  export type Place_levelsCreateNestedManyWithoutProjectsInput = {
    create?: XOR<Enumerable<Place_levelsCreateWithoutProjectsInput>, Enumerable<Place_levelsUncheckedCreateWithoutProjectsInput>>
    connectOrCreate?: Enumerable<Place_levelsCreateOrConnectWithoutProjectsInput>
    createMany?: Place_levelsCreateManyProjectsInputEnvelope
    connect?: Enumerable<Place_levelsWhereUniqueInput>
  }

  export type Project_usersCreateNestedManyWithoutProjectsInput = {
    create?: XOR<Enumerable<Project_usersCreateWithoutProjectsInput>, Enumerable<Project_usersUncheckedCreateWithoutProjectsInput>>
    connectOrCreate?: Enumerable<Project_usersCreateOrConnectWithoutProjectsInput>
    createMany?: Project_usersCreateManyProjectsInputEnvelope
    connect?: Enumerable<Project_usersWhereUniqueInput>
  }

  export type AccountsCreateNestedOneWithoutProjectsInput = {
    create?: XOR<AccountsCreateWithoutProjectsInput, AccountsUncheckedCreateWithoutProjectsInput>
    connectOrCreate?: AccountsCreateOrConnectWithoutProjectsInput
    connect?: AccountsWhereUniqueInput
  }

  export type SubprojectsCreateNestedManyWithoutProjectsInput = {
    create?: XOR<Enumerable<SubprojectsCreateWithoutProjectsInput>, Enumerable<SubprojectsUncheckedCreateWithoutProjectsInput>>
    connectOrCreate?: Enumerable<SubprojectsCreateOrConnectWithoutProjectsInput>
    createMany?: SubprojectsCreateManyProjectsInputEnvelope
    connect?: Enumerable<SubprojectsWhereUniqueInput>
  }

  export type TaxonomiesCreateNestedManyWithoutProjectsInput = {
    create?: XOR<Enumerable<TaxonomiesCreateWithoutProjectsInput>, Enumerable<TaxonomiesUncheckedCreateWithoutProjectsInput>>
    connectOrCreate?: Enumerable<TaxonomiesCreateOrConnectWithoutProjectsInput>
    createMany?: TaxonomiesCreateManyProjectsInputEnvelope
    connect?: Enumerable<TaxonomiesWhereUniqueInput>
  }

  export type Tile_layersCreateNestedManyWithoutProjectsInput = {
    create?: XOR<Enumerable<Tile_layersCreateWithoutProjectsInput>, Enumerable<Tile_layersUncheckedCreateWithoutProjectsInput>>
    connectOrCreate?: Enumerable<Tile_layersCreateOrConnectWithoutProjectsInput>
    createMany?: Tile_layersCreateManyProjectsInputEnvelope
    connect?: Enumerable<Tile_layersWhereUniqueInput>
  }

  export type UnitsCreateNestedManyWithoutProjectsInput = {
    create?: XOR<Enumerable<UnitsCreateWithoutProjectsInput>, Enumerable<UnitsUncheckedCreateWithoutProjectsInput>>
    connectOrCreate?: Enumerable<UnitsCreateOrConnectWithoutProjectsInput>
    createMany?: UnitsCreateManyProjectsInputEnvelope
    connect?: Enumerable<UnitsWhereUniqueInput>
  }

  export type Gbif_occurrence_downloadsUncheckedCreateNestedManyWithoutProjectsInput = {
    create?: XOR<Enumerable<Gbif_occurrence_downloadsCreateWithoutProjectsInput>, Enumerable<Gbif_occurrence_downloadsUncheckedCreateWithoutProjectsInput>>
    connectOrCreate?: Enumerable<Gbif_occurrence_downloadsCreateOrConnectWithoutProjectsInput>
    createMany?: Gbif_occurrence_downloadsCreateManyProjectsInputEnvelope
    connect?: Enumerable<Gbif_occurrence_downloadsWhereUniqueInput>
  }

  export type Gbif_occurrencesUncheckedCreateNestedManyWithoutProjectsInput = {
    create?: XOR<Enumerable<Gbif_occurrencesCreateWithoutProjectsInput>, Enumerable<Gbif_occurrencesUncheckedCreateWithoutProjectsInput>>
    connectOrCreate?: Enumerable<Gbif_occurrencesCreateOrConnectWithoutProjectsInput>
    createMany?: Gbif_occurrencesCreateManyProjectsInputEnvelope
    connect?: Enumerable<Gbif_occurrencesWhereUniqueInput>
  }

  export type Gbif_taxaUncheckedCreateNestedManyWithoutProjectsInput = {
    create?: XOR<Enumerable<Gbif_taxaCreateWithoutProjectsInput>, Enumerable<Gbif_taxaUncheckedCreateWithoutProjectsInput>>
    connectOrCreate?: Enumerable<Gbif_taxaCreateOrConnectWithoutProjectsInput>
    createMany?: Gbif_taxaCreateManyProjectsInputEnvelope
    connect?: Enumerable<Gbif_taxaWhereUniqueInput>
  }

  export type ListsUncheckedCreateNestedManyWithoutProjectsInput = {
    create?: XOR<Enumerable<ListsCreateWithoutProjectsInput>, Enumerable<ListsUncheckedCreateWithoutProjectsInput>>
    connectOrCreate?: Enumerable<ListsCreateOrConnectWithoutProjectsInput>
    createMany?: ListsCreateManyProjectsInputEnvelope
    connect?: Enumerable<ListsWhereUniqueInput>
  }

  export type Observation_sourcesUncheckedCreateNestedManyWithoutProjectsInput = {
    create?: XOR<Enumerable<Observation_sourcesCreateWithoutProjectsInput>, Enumerable<Observation_sourcesUncheckedCreateWithoutProjectsInput>>
    connectOrCreate?: Enumerable<Observation_sourcesCreateOrConnectWithoutProjectsInput>
    createMany?: Observation_sourcesCreateManyProjectsInputEnvelope
    connect?: Enumerable<Observation_sourcesWhereUniqueInput>
  }

  export type PersonsUncheckedCreateNestedManyWithoutProjectsInput = {
    create?: XOR<Enumerable<PersonsCreateWithoutProjectsInput>, Enumerable<PersonsUncheckedCreateWithoutProjectsInput>>
    connectOrCreate?: Enumerable<PersonsCreateOrConnectWithoutProjectsInput>
    createMany?: PersonsCreateManyProjectsInputEnvelope
    connect?: Enumerable<PersonsWhereUniqueInput>
  }

  export type Place_levelsUncheckedCreateNestedManyWithoutProjectsInput = {
    create?: XOR<Enumerable<Place_levelsCreateWithoutProjectsInput>, Enumerable<Place_levelsUncheckedCreateWithoutProjectsInput>>
    connectOrCreate?: Enumerable<Place_levelsCreateOrConnectWithoutProjectsInput>
    createMany?: Place_levelsCreateManyProjectsInputEnvelope
    connect?: Enumerable<Place_levelsWhereUniqueInput>
  }

  export type Project_usersUncheckedCreateNestedManyWithoutProjectsInput = {
    create?: XOR<Enumerable<Project_usersCreateWithoutProjectsInput>, Enumerable<Project_usersUncheckedCreateWithoutProjectsInput>>
    connectOrCreate?: Enumerable<Project_usersCreateOrConnectWithoutProjectsInput>
    createMany?: Project_usersCreateManyProjectsInputEnvelope
    connect?: Enumerable<Project_usersWhereUniqueInput>
  }

  export type SubprojectsUncheckedCreateNestedManyWithoutProjectsInput = {
    create?: XOR<Enumerable<SubprojectsCreateWithoutProjectsInput>, Enumerable<SubprojectsUncheckedCreateWithoutProjectsInput>>
    connectOrCreate?: Enumerable<SubprojectsCreateOrConnectWithoutProjectsInput>
    createMany?: SubprojectsCreateManyProjectsInputEnvelope
    connect?: Enumerable<SubprojectsWhereUniqueInput>
  }

  export type TaxonomiesUncheckedCreateNestedManyWithoutProjectsInput = {
    create?: XOR<Enumerable<TaxonomiesCreateWithoutProjectsInput>, Enumerable<TaxonomiesUncheckedCreateWithoutProjectsInput>>
    connectOrCreate?: Enumerable<TaxonomiesCreateOrConnectWithoutProjectsInput>
    createMany?: TaxonomiesCreateManyProjectsInputEnvelope
    connect?: Enumerable<TaxonomiesWhereUniqueInput>
  }

  export type Tile_layersUncheckedCreateNestedManyWithoutProjectsInput = {
    create?: XOR<Enumerable<Tile_layersCreateWithoutProjectsInput>, Enumerable<Tile_layersUncheckedCreateWithoutProjectsInput>>
    connectOrCreate?: Enumerable<Tile_layersCreateOrConnectWithoutProjectsInput>
    createMany?: Tile_layersCreateManyProjectsInputEnvelope
    connect?: Enumerable<Tile_layersWhereUniqueInput>
  }

  export type UnitsUncheckedCreateNestedManyWithoutProjectsInput = {
    create?: XOR<Enumerable<UnitsCreateWithoutProjectsInput>, Enumerable<UnitsUncheckedCreateWithoutProjectsInput>>
    connectOrCreate?: Enumerable<UnitsCreateOrConnectWithoutProjectsInput>
    createMany?: UnitsCreateManyProjectsInputEnvelope
    connect?: Enumerable<UnitsWhereUniqueInput>
  }

  export type NullableEnumproject_typeFieldUpdateOperationsInput = {
    set?: project_type | null
  }

  export type Gbif_occurrence_downloadsUpdateManyWithoutProjectsNestedInput = {
    create?: XOR<Enumerable<Gbif_occurrence_downloadsCreateWithoutProjectsInput>, Enumerable<Gbif_occurrence_downloadsUncheckedCreateWithoutProjectsInput>>
    connectOrCreate?: Enumerable<Gbif_occurrence_downloadsCreateOrConnectWithoutProjectsInput>
    upsert?: Enumerable<Gbif_occurrence_downloadsUpsertWithWhereUniqueWithoutProjectsInput>
    createMany?: Gbif_occurrence_downloadsCreateManyProjectsInputEnvelope
    set?: Enumerable<Gbif_occurrence_downloadsWhereUniqueInput>
    disconnect?: Enumerable<Gbif_occurrence_downloadsWhereUniqueInput>
    delete?: Enumerable<Gbif_occurrence_downloadsWhereUniqueInput>
    connect?: Enumerable<Gbif_occurrence_downloadsWhereUniqueInput>
    update?: Enumerable<Gbif_occurrence_downloadsUpdateWithWhereUniqueWithoutProjectsInput>
    updateMany?: Enumerable<Gbif_occurrence_downloadsUpdateManyWithWhereWithoutProjectsInput>
    deleteMany?: Enumerable<Gbif_occurrence_downloadsScalarWhereInput>
  }

  export type Gbif_occurrencesUpdateManyWithoutProjectsNestedInput = {
    create?: XOR<Enumerable<Gbif_occurrencesCreateWithoutProjectsInput>, Enumerable<Gbif_occurrencesUncheckedCreateWithoutProjectsInput>>
    connectOrCreate?: Enumerable<Gbif_occurrencesCreateOrConnectWithoutProjectsInput>
    upsert?: Enumerable<Gbif_occurrencesUpsertWithWhereUniqueWithoutProjectsInput>
    createMany?: Gbif_occurrencesCreateManyProjectsInputEnvelope
    set?: Enumerable<Gbif_occurrencesWhereUniqueInput>
    disconnect?: Enumerable<Gbif_occurrencesWhereUniqueInput>
    delete?: Enumerable<Gbif_occurrencesWhereUniqueInput>
    connect?: Enumerable<Gbif_occurrencesWhereUniqueInput>
    update?: Enumerable<Gbif_occurrencesUpdateWithWhereUniqueWithoutProjectsInput>
    updateMany?: Enumerable<Gbif_occurrencesUpdateManyWithWhereWithoutProjectsInput>
    deleteMany?: Enumerable<Gbif_occurrencesScalarWhereInput>
  }

  export type Gbif_taxaUpdateManyWithoutProjectsNestedInput = {
    create?: XOR<Enumerable<Gbif_taxaCreateWithoutProjectsInput>, Enumerable<Gbif_taxaUncheckedCreateWithoutProjectsInput>>
    connectOrCreate?: Enumerable<Gbif_taxaCreateOrConnectWithoutProjectsInput>
    upsert?: Enumerable<Gbif_taxaUpsertWithWhereUniqueWithoutProjectsInput>
    createMany?: Gbif_taxaCreateManyProjectsInputEnvelope
    set?: Enumerable<Gbif_taxaWhereUniqueInput>
    disconnect?: Enumerable<Gbif_taxaWhereUniqueInput>
    delete?: Enumerable<Gbif_taxaWhereUniqueInput>
    connect?: Enumerable<Gbif_taxaWhereUniqueInput>
    update?: Enumerable<Gbif_taxaUpdateWithWhereUniqueWithoutProjectsInput>
    updateMany?: Enumerable<Gbif_taxaUpdateManyWithWhereWithoutProjectsInput>
    deleteMany?: Enumerable<Gbif_taxaScalarWhereInput>
  }

  export type ListsUpdateManyWithoutProjectsNestedInput = {
    create?: XOR<Enumerable<ListsCreateWithoutProjectsInput>, Enumerable<ListsUncheckedCreateWithoutProjectsInput>>
    connectOrCreate?: Enumerable<ListsCreateOrConnectWithoutProjectsInput>
    upsert?: Enumerable<ListsUpsertWithWhereUniqueWithoutProjectsInput>
    createMany?: ListsCreateManyProjectsInputEnvelope
    set?: Enumerable<ListsWhereUniqueInput>
    disconnect?: Enumerable<ListsWhereUniqueInput>
    delete?: Enumerable<ListsWhereUniqueInput>
    connect?: Enumerable<ListsWhereUniqueInput>
    update?: Enumerable<ListsUpdateWithWhereUniqueWithoutProjectsInput>
    updateMany?: Enumerable<ListsUpdateManyWithWhereWithoutProjectsInput>
    deleteMany?: Enumerable<ListsScalarWhereInput>
  }

  export type Observation_sourcesUpdateManyWithoutProjectsNestedInput = {
    create?: XOR<Enumerable<Observation_sourcesCreateWithoutProjectsInput>, Enumerable<Observation_sourcesUncheckedCreateWithoutProjectsInput>>
    connectOrCreate?: Enumerable<Observation_sourcesCreateOrConnectWithoutProjectsInput>
    upsert?: Enumerable<Observation_sourcesUpsertWithWhereUniqueWithoutProjectsInput>
    createMany?: Observation_sourcesCreateManyProjectsInputEnvelope
    set?: Enumerable<Observation_sourcesWhereUniqueInput>
    disconnect?: Enumerable<Observation_sourcesWhereUniqueInput>
    delete?: Enumerable<Observation_sourcesWhereUniqueInput>
    connect?: Enumerable<Observation_sourcesWhereUniqueInput>
    update?: Enumerable<Observation_sourcesUpdateWithWhereUniqueWithoutProjectsInput>
    updateMany?: Enumerable<Observation_sourcesUpdateManyWithWhereWithoutProjectsInput>
    deleteMany?: Enumerable<Observation_sourcesScalarWhereInput>
  }

  export type PersonsUpdateManyWithoutProjectsNestedInput = {
    create?: XOR<Enumerable<PersonsCreateWithoutProjectsInput>, Enumerable<PersonsUncheckedCreateWithoutProjectsInput>>
    connectOrCreate?: Enumerable<PersonsCreateOrConnectWithoutProjectsInput>
    upsert?: Enumerable<PersonsUpsertWithWhereUniqueWithoutProjectsInput>
    createMany?: PersonsCreateManyProjectsInputEnvelope
    set?: Enumerable<PersonsWhereUniqueInput>
    disconnect?: Enumerable<PersonsWhereUniqueInput>
    delete?: Enumerable<PersonsWhereUniqueInput>
    connect?: Enumerable<PersonsWhereUniqueInput>
    update?: Enumerable<PersonsUpdateWithWhereUniqueWithoutProjectsInput>
    updateMany?: Enumerable<PersonsUpdateManyWithWhereWithoutProjectsInput>
    deleteMany?: Enumerable<PersonsScalarWhereInput>
  }

  export type Place_levelsUpdateManyWithoutProjectsNestedInput = {
    create?: XOR<Enumerable<Place_levelsCreateWithoutProjectsInput>, Enumerable<Place_levelsUncheckedCreateWithoutProjectsInput>>
    connectOrCreate?: Enumerable<Place_levelsCreateOrConnectWithoutProjectsInput>
    upsert?: Enumerable<Place_levelsUpsertWithWhereUniqueWithoutProjectsInput>
    createMany?: Place_levelsCreateManyProjectsInputEnvelope
    set?: Enumerable<Place_levelsWhereUniqueInput>
    disconnect?: Enumerable<Place_levelsWhereUniqueInput>
    delete?: Enumerable<Place_levelsWhereUniqueInput>
    connect?: Enumerable<Place_levelsWhereUniqueInput>
    update?: Enumerable<Place_levelsUpdateWithWhereUniqueWithoutProjectsInput>
    updateMany?: Enumerable<Place_levelsUpdateManyWithWhereWithoutProjectsInput>
    deleteMany?: Enumerable<Place_levelsScalarWhereInput>
  }

  export type Project_usersUpdateManyWithoutProjectsNestedInput = {
    create?: XOR<Enumerable<Project_usersCreateWithoutProjectsInput>, Enumerable<Project_usersUncheckedCreateWithoutProjectsInput>>
    connectOrCreate?: Enumerable<Project_usersCreateOrConnectWithoutProjectsInput>
    upsert?: Enumerable<Project_usersUpsertWithWhereUniqueWithoutProjectsInput>
    createMany?: Project_usersCreateManyProjectsInputEnvelope
    set?: Enumerable<Project_usersWhereUniqueInput>
    disconnect?: Enumerable<Project_usersWhereUniqueInput>
    delete?: Enumerable<Project_usersWhereUniqueInput>
    connect?: Enumerable<Project_usersWhereUniqueInput>
    update?: Enumerable<Project_usersUpdateWithWhereUniqueWithoutProjectsInput>
    updateMany?: Enumerable<Project_usersUpdateManyWithWhereWithoutProjectsInput>
    deleteMany?: Enumerable<Project_usersScalarWhereInput>
  }

  export type AccountsUpdateOneWithoutProjectsNestedInput = {
    create?: XOR<AccountsCreateWithoutProjectsInput, AccountsUncheckedCreateWithoutProjectsInput>
    connectOrCreate?: AccountsCreateOrConnectWithoutProjectsInput
    upsert?: AccountsUpsertWithoutProjectsInput
    disconnect?: AccountsWhereInput | boolean
    delete?: AccountsWhereInput | boolean
    connect?: AccountsWhereUniqueInput
    update?: XOR<XOR<AccountsUpdateToOneWithWhereWithoutProjectsInput, AccountsUpdateWithoutProjectsInput>, AccountsUncheckedUpdateWithoutProjectsInput>
  }

  export type SubprojectsUpdateManyWithoutProjectsNestedInput = {
    create?: XOR<Enumerable<SubprojectsCreateWithoutProjectsInput>, Enumerable<SubprojectsUncheckedCreateWithoutProjectsInput>>
    connectOrCreate?: Enumerable<SubprojectsCreateOrConnectWithoutProjectsInput>
    upsert?: Enumerable<SubprojectsUpsertWithWhereUniqueWithoutProjectsInput>
    createMany?: SubprojectsCreateManyProjectsInputEnvelope
    set?: Enumerable<SubprojectsWhereUniqueInput>
    disconnect?: Enumerable<SubprojectsWhereUniqueInput>
    delete?: Enumerable<SubprojectsWhereUniqueInput>
    connect?: Enumerable<SubprojectsWhereUniqueInput>
    update?: Enumerable<SubprojectsUpdateWithWhereUniqueWithoutProjectsInput>
    updateMany?: Enumerable<SubprojectsUpdateManyWithWhereWithoutProjectsInput>
    deleteMany?: Enumerable<SubprojectsScalarWhereInput>
  }

  export type TaxonomiesUpdateManyWithoutProjectsNestedInput = {
    create?: XOR<Enumerable<TaxonomiesCreateWithoutProjectsInput>, Enumerable<TaxonomiesUncheckedCreateWithoutProjectsInput>>
    connectOrCreate?: Enumerable<TaxonomiesCreateOrConnectWithoutProjectsInput>
    upsert?: Enumerable<TaxonomiesUpsertWithWhereUniqueWithoutProjectsInput>
    createMany?: TaxonomiesCreateManyProjectsInputEnvelope
    set?: Enumerable<TaxonomiesWhereUniqueInput>
    disconnect?: Enumerable<TaxonomiesWhereUniqueInput>
    delete?: Enumerable<TaxonomiesWhereUniqueInput>
    connect?: Enumerable<TaxonomiesWhereUniqueInput>
    update?: Enumerable<TaxonomiesUpdateWithWhereUniqueWithoutProjectsInput>
    updateMany?: Enumerable<TaxonomiesUpdateManyWithWhereWithoutProjectsInput>
    deleteMany?: Enumerable<TaxonomiesScalarWhereInput>
  }

  export type Tile_layersUpdateManyWithoutProjectsNestedInput = {
    create?: XOR<Enumerable<Tile_layersCreateWithoutProjectsInput>, Enumerable<Tile_layersUncheckedCreateWithoutProjectsInput>>
    connectOrCreate?: Enumerable<Tile_layersCreateOrConnectWithoutProjectsInput>
    upsert?: Enumerable<Tile_layersUpsertWithWhereUniqueWithoutProjectsInput>
    createMany?: Tile_layersCreateManyProjectsInputEnvelope
    set?: Enumerable<Tile_layersWhereUniqueInput>
    disconnect?: Enumerable<Tile_layersWhereUniqueInput>
    delete?: Enumerable<Tile_layersWhereUniqueInput>
    connect?: Enumerable<Tile_layersWhereUniqueInput>
    update?: Enumerable<Tile_layersUpdateWithWhereUniqueWithoutProjectsInput>
    updateMany?: Enumerable<Tile_layersUpdateManyWithWhereWithoutProjectsInput>
    deleteMany?: Enumerable<Tile_layersScalarWhereInput>
  }

  export type UnitsUpdateManyWithoutProjectsNestedInput = {
    create?: XOR<Enumerable<UnitsCreateWithoutProjectsInput>, Enumerable<UnitsUncheckedCreateWithoutProjectsInput>>
    connectOrCreate?: Enumerable<UnitsCreateOrConnectWithoutProjectsInput>
    upsert?: Enumerable<UnitsUpsertWithWhereUniqueWithoutProjectsInput>
    createMany?: UnitsCreateManyProjectsInputEnvelope
    set?: Enumerable<UnitsWhereUniqueInput>
    disconnect?: Enumerable<UnitsWhereUniqueInput>
    delete?: Enumerable<UnitsWhereUniqueInput>
    connect?: Enumerable<UnitsWhereUniqueInput>
    update?: Enumerable<UnitsUpdateWithWhereUniqueWithoutProjectsInput>
    updateMany?: Enumerable<UnitsUpdateManyWithWhereWithoutProjectsInput>
    deleteMany?: Enumerable<UnitsScalarWhereInput>
  }

  export type Gbif_occurrence_downloadsUncheckedUpdateManyWithoutProjectsNestedInput = {
    create?: XOR<Enumerable<Gbif_occurrence_downloadsCreateWithoutProjectsInput>, Enumerable<Gbif_occurrence_downloadsUncheckedCreateWithoutProjectsInput>>
    connectOrCreate?: Enumerable<Gbif_occurrence_downloadsCreateOrConnectWithoutProjectsInput>
    upsert?: Enumerable<Gbif_occurrence_downloadsUpsertWithWhereUniqueWithoutProjectsInput>
    createMany?: Gbif_occurrence_downloadsCreateManyProjectsInputEnvelope
    set?: Enumerable<Gbif_occurrence_downloadsWhereUniqueInput>
    disconnect?: Enumerable<Gbif_occurrence_downloadsWhereUniqueInput>
    delete?: Enumerable<Gbif_occurrence_downloadsWhereUniqueInput>
    connect?: Enumerable<Gbif_occurrence_downloadsWhereUniqueInput>
    update?: Enumerable<Gbif_occurrence_downloadsUpdateWithWhereUniqueWithoutProjectsInput>
    updateMany?: Enumerable<Gbif_occurrence_downloadsUpdateManyWithWhereWithoutProjectsInput>
    deleteMany?: Enumerable<Gbif_occurrence_downloadsScalarWhereInput>
  }

  export type Gbif_occurrencesUncheckedUpdateManyWithoutProjectsNestedInput = {
    create?: XOR<Enumerable<Gbif_occurrencesCreateWithoutProjectsInput>, Enumerable<Gbif_occurrencesUncheckedCreateWithoutProjectsInput>>
    connectOrCreate?: Enumerable<Gbif_occurrencesCreateOrConnectWithoutProjectsInput>
    upsert?: Enumerable<Gbif_occurrencesUpsertWithWhereUniqueWithoutProjectsInput>
    createMany?: Gbif_occurrencesCreateManyProjectsInputEnvelope
    set?: Enumerable<Gbif_occurrencesWhereUniqueInput>
    disconnect?: Enumerable<Gbif_occurrencesWhereUniqueInput>
    delete?: Enumerable<Gbif_occurrencesWhereUniqueInput>
    connect?: Enumerable<Gbif_occurrencesWhereUniqueInput>
    update?: Enumerable<Gbif_occurrencesUpdateWithWhereUniqueWithoutProjectsInput>
    updateMany?: Enumerable<Gbif_occurrencesUpdateManyWithWhereWithoutProjectsInput>
    deleteMany?: Enumerable<Gbif_occurrencesScalarWhereInput>
  }

  export type Gbif_taxaUncheckedUpdateManyWithoutProjectsNestedInput = {
    create?: XOR<Enumerable<Gbif_taxaCreateWithoutProjectsInput>, Enumerable<Gbif_taxaUncheckedCreateWithoutProjectsInput>>
    connectOrCreate?: Enumerable<Gbif_taxaCreateOrConnectWithoutProjectsInput>
    upsert?: Enumerable<Gbif_taxaUpsertWithWhereUniqueWithoutProjectsInput>
    createMany?: Gbif_taxaCreateManyProjectsInputEnvelope
    set?: Enumerable<Gbif_taxaWhereUniqueInput>
    disconnect?: Enumerable<Gbif_taxaWhereUniqueInput>
    delete?: Enumerable<Gbif_taxaWhereUniqueInput>
    connect?: Enumerable<Gbif_taxaWhereUniqueInput>
    update?: Enumerable<Gbif_taxaUpdateWithWhereUniqueWithoutProjectsInput>
    updateMany?: Enumerable<Gbif_taxaUpdateManyWithWhereWithoutProjectsInput>
    deleteMany?: Enumerable<Gbif_taxaScalarWhereInput>
  }

  export type ListsUncheckedUpdateManyWithoutProjectsNestedInput = {
    create?: XOR<Enumerable<ListsCreateWithoutProjectsInput>, Enumerable<ListsUncheckedCreateWithoutProjectsInput>>
    connectOrCreate?: Enumerable<ListsCreateOrConnectWithoutProjectsInput>
    upsert?: Enumerable<ListsUpsertWithWhereUniqueWithoutProjectsInput>
    createMany?: ListsCreateManyProjectsInputEnvelope
    set?: Enumerable<ListsWhereUniqueInput>
    disconnect?: Enumerable<ListsWhereUniqueInput>
    delete?: Enumerable<ListsWhereUniqueInput>
    connect?: Enumerable<ListsWhereUniqueInput>
    update?: Enumerable<ListsUpdateWithWhereUniqueWithoutProjectsInput>
    updateMany?: Enumerable<ListsUpdateManyWithWhereWithoutProjectsInput>
    deleteMany?: Enumerable<ListsScalarWhereInput>
  }

  export type Observation_sourcesUncheckedUpdateManyWithoutProjectsNestedInput = {
    create?: XOR<Enumerable<Observation_sourcesCreateWithoutProjectsInput>, Enumerable<Observation_sourcesUncheckedCreateWithoutProjectsInput>>
    connectOrCreate?: Enumerable<Observation_sourcesCreateOrConnectWithoutProjectsInput>
    upsert?: Enumerable<Observation_sourcesUpsertWithWhereUniqueWithoutProjectsInput>
    createMany?: Observation_sourcesCreateManyProjectsInputEnvelope
    set?: Enumerable<Observation_sourcesWhereUniqueInput>
    disconnect?: Enumerable<Observation_sourcesWhereUniqueInput>
    delete?: Enumerable<Observation_sourcesWhereUniqueInput>
    connect?: Enumerable<Observation_sourcesWhereUniqueInput>
    update?: Enumerable<Observation_sourcesUpdateWithWhereUniqueWithoutProjectsInput>
    updateMany?: Enumerable<Observation_sourcesUpdateManyWithWhereWithoutProjectsInput>
    deleteMany?: Enumerable<Observation_sourcesScalarWhereInput>
  }

  export type PersonsUncheckedUpdateManyWithoutProjectsNestedInput = {
    create?: XOR<Enumerable<PersonsCreateWithoutProjectsInput>, Enumerable<PersonsUncheckedCreateWithoutProjectsInput>>
    connectOrCreate?: Enumerable<PersonsCreateOrConnectWithoutProjectsInput>
    upsert?: Enumerable<PersonsUpsertWithWhereUniqueWithoutProjectsInput>
    createMany?: PersonsCreateManyProjectsInputEnvelope
    set?: Enumerable<PersonsWhereUniqueInput>
    disconnect?: Enumerable<PersonsWhereUniqueInput>
    delete?: Enumerable<PersonsWhereUniqueInput>
    connect?: Enumerable<PersonsWhereUniqueInput>
    update?: Enumerable<PersonsUpdateWithWhereUniqueWithoutProjectsInput>
    updateMany?: Enumerable<PersonsUpdateManyWithWhereWithoutProjectsInput>
    deleteMany?: Enumerable<PersonsScalarWhereInput>
  }

  export type Place_levelsUncheckedUpdateManyWithoutProjectsNestedInput = {
    create?: XOR<Enumerable<Place_levelsCreateWithoutProjectsInput>, Enumerable<Place_levelsUncheckedCreateWithoutProjectsInput>>
    connectOrCreate?: Enumerable<Place_levelsCreateOrConnectWithoutProjectsInput>
    upsert?: Enumerable<Place_levelsUpsertWithWhereUniqueWithoutProjectsInput>
    createMany?: Place_levelsCreateManyProjectsInputEnvelope
    set?: Enumerable<Place_levelsWhereUniqueInput>
    disconnect?: Enumerable<Place_levelsWhereUniqueInput>
    delete?: Enumerable<Place_levelsWhereUniqueInput>
    connect?: Enumerable<Place_levelsWhereUniqueInput>
    update?: Enumerable<Place_levelsUpdateWithWhereUniqueWithoutProjectsInput>
    updateMany?: Enumerable<Place_levelsUpdateManyWithWhereWithoutProjectsInput>
    deleteMany?: Enumerable<Place_levelsScalarWhereInput>
  }

  export type Project_usersUncheckedUpdateManyWithoutProjectsNestedInput = {
    create?: XOR<Enumerable<Project_usersCreateWithoutProjectsInput>, Enumerable<Project_usersUncheckedCreateWithoutProjectsInput>>
    connectOrCreate?: Enumerable<Project_usersCreateOrConnectWithoutProjectsInput>
    upsert?: Enumerable<Project_usersUpsertWithWhereUniqueWithoutProjectsInput>
    createMany?: Project_usersCreateManyProjectsInputEnvelope
    set?: Enumerable<Project_usersWhereUniqueInput>
    disconnect?: Enumerable<Project_usersWhereUniqueInput>
    delete?: Enumerable<Project_usersWhereUniqueInput>
    connect?: Enumerable<Project_usersWhereUniqueInput>
    update?: Enumerable<Project_usersUpdateWithWhereUniqueWithoutProjectsInput>
    updateMany?: Enumerable<Project_usersUpdateManyWithWhereWithoutProjectsInput>
    deleteMany?: Enumerable<Project_usersScalarWhereInput>
  }

  export type SubprojectsUncheckedUpdateManyWithoutProjectsNestedInput = {
    create?: XOR<Enumerable<SubprojectsCreateWithoutProjectsInput>, Enumerable<SubprojectsUncheckedCreateWithoutProjectsInput>>
    connectOrCreate?: Enumerable<SubprojectsCreateOrConnectWithoutProjectsInput>
    upsert?: Enumerable<SubprojectsUpsertWithWhereUniqueWithoutProjectsInput>
    createMany?: SubprojectsCreateManyProjectsInputEnvelope
    set?: Enumerable<SubprojectsWhereUniqueInput>
    disconnect?: Enumerable<SubprojectsWhereUniqueInput>
    delete?: Enumerable<SubprojectsWhereUniqueInput>
    connect?: Enumerable<SubprojectsWhereUniqueInput>
    update?: Enumerable<SubprojectsUpdateWithWhereUniqueWithoutProjectsInput>
    updateMany?: Enumerable<SubprojectsUpdateManyWithWhereWithoutProjectsInput>
    deleteMany?: Enumerable<SubprojectsScalarWhereInput>
  }

  export type TaxonomiesUncheckedUpdateManyWithoutProjectsNestedInput = {
    create?: XOR<Enumerable<TaxonomiesCreateWithoutProjectsInput>, Enumerable<TaxonomiesUncheckedCreateWithoutProjectsInput>>
    connectOrCreate?: Enumerable<TaxonomiesCreateOrConnectWithoutProjectsInput>
    upsert?: Enumerable<TaxonomiesUpsertWithWhereUniqueWithoutProjectsInput>
    createMany?: TaxonomiesCreateManyProjectsInputEnvelope
    set?: Enumerable<TaxonomiesWhereUniqueInput>
    disconnect?: Enumerable<TaxonomiesWhereUniqueInput>
    delete?: Enumerable<TaxonomiesWhereUniqueInput>
    connect?: Enumerable<TaxonomiesWhereUniqueInput>
    update?: Enumerable<TaxonomiesUpdateWithWhereUniqueWithoutProjectsInput>
    updateMany?: Enumerable<TaxonomiesUpdateManyWithWhereWithoutProjectsInput>
    deleteMany?: Enumerable<TaxonomiesScalarWhereInput>
  }

  export type Tile_layersUncheckedUpdateManyWithoutProjectsNestedInput = {
    create?: XOR<Enumerable<Tile_layersCreateWithoutProjectsInput>, Enumerable<Tile_layersUncheckedCreateWithoutProjectsInput>>
    connectOrCreate?: Enumerable<Tile_layersCreateOrConnectWithoutProjectsInput>
    upsert?: Enumerable<Tile_layersUpsertWithWhereUniqueWithoutProjectsInput>
    createMany?: Tile_layersCreateManyProjectsInputEnvelope
    set?: Enumerable<Tile_layersWhereUniqueInput>
    disconnect?: Enumerable<Tile_layersWhereUniqueInput>
    delete?: Enumerable<Tile_layersWhereUniqueInput>
    connect?: Enumerable<Tile_layersWhereUniqueInput>
    update?: Enumerable<Tile_layersUpdateWithWhereUniqueWithoutProjectsInput>
    updateMany?: Enumerable<Tile_layersUpdateManyWithWhereWithoutProjectsInput>
    deleteMany?: Enumerable<Tile_layersScalarWhereInput>
  }

  export type UnitsUncheckedUpdateManyWithoutProjectsNestedInput = {
    create?: XOR<Enumerable<UnitsCreateWithoutProjectsInput>, Enumerable<UnitsUncheckedCreateWithoutProjectsInput>>
    connectOrCreate?: Enumerable<UnitsCreateOrConnectWithoutProjectsInput>
    upsert?: Enumerable<UnitsUpsertWithWhereUniqueWithoutProjectsInput>
    createMany?: UnitsCreateManyProjectsInputEnvelope
    set?: Enumerable<UnitsWhereUniqueInput>
    disconnect?: Enumerable<UnitsWhereUniqueInput>
    delete?: Enumerable<UnitsWhereUniqueInput>
    connect?: Enumerable<UnitsWhereUniqueInput>
    update?: Enumerable<UnitsUpdateWithWhereUniqueWithoutProjectsInput>
    updateMany?: Enumerable<UnitsUpdateManyWithWhereWithoutProjectsInput>
    deleteMany?: Enumerable<UnitsScalarWhereInput>
  }

  export type AccountsCreateNestedOneWithoutSubproject_taxaInput = {
    create?: XOR<AccountsCreateWithoutSubproject_taxaInput, AccountsUncheckedCreateWithoutSubproject_taxaInput>
    connectOrCreate?: AccountsCreateOrConnectWithoutSubproject_taxaInput
    connect?: AccountsWhereUniqueInput
  }

  export type SubprojectsCreateNestedOneWithoutSubproject_taxaInput = {
    create?: XOR<SubprojectsCreateWithoutSubproject_taxaInput, SubprojectsUncheckedCreateWithoutSubproject_taxaInput>
    connectOrCreate?: SubprojectsCreateOrConnectWithoutSubproject_taxaInput
    connect?: SubprojectsWhereUniqueInput
  }

  export type TaxaCreateNestedOneWithoutSubproject_taxaInput = {
    create?: XOR<TaxaCreateWithoutSubproject_taxaInput, TaxaUncheckedCreateWithoutSubproject_taxaInput>
    connectOrCreate?: TaxaCreateOrConnectWithoutSubproject_taxaInput
    connect?: TaxaWhereUniqueInput
  }

  export type AccountsUpdateOneWithoutSubproject_taxaNestedInput = {
    create?: XOR<AccountsCreateWithoutSubproject_taxaInput, AccountsUncheckedCreateWithoutSubproject_taxaInput>
    connectOrCreate?: AccountsCreateOrConnectWithoutSubproject_taxaInput
    upsert?: AccountsUpsertWithoutSubproject_taxaInput
    disconnect?: AccountsWhereInput | boolean
    delete?: AccountsWhereInput | boolean
    connect?: AccountsWhereUniqueInput
    update?: XOR<XOR<AccountsUpdateToOneWithWhereWithoutSubproject_taxaInput, AccountsUpdateWithoutSubproject_taxaInput>, AccountsUncheckedUpdateWithoutSubproject_taxaInput>
  }

  export type SubprojectsUpdateOneWithoutSubproject_taxaNestedInput = {
    create?: XOR<SubprojectsCreateWithoutSubproject_taxaInput, SubprojectsUncheckedCreateWithoutSubproject_taxaInput>
    connectOrCreate?: SubprojectsCreateOrConnectWithoutSubproject_taxaInput
    upsert?: SubprojectsUpsertWithoutSubproject_taxaInput
    disconnect?: SubprojectsWhereInput | boolean
    delete?: SubprojectsWhereInput | boolean
    connect?: SubprojectsWhereUniqueInput
    update?: XOR<XOR<SubprojectsUpdateToOneWithWhereWithoutSubproject_taxaInput, SubprojectsUpdateWithoutSubproject_taxaInput>, SubprojectsUncheckedUpdateWithoutSubproject_taxaInput>
  }

  export type TaxaUpdateOneWithoutSubproject_taxaNestedInput = {
    create?: XOR<TaxaCreateWithoutSubproject_taxaInput, TaxaUncheckedCreateWithoutSubproject_taxaInput>
    connectOrCreate?: TaxaCreateOrConnectWithoutSubproject_taxaInput
    upsert?: TaxaUpsertWithoutSubproject_taxaInput
    disconnect?: TaxaWhereInput | boolean
    delete?: TaxaWhereInput | boolean
    connect?: TaxaWhereUniqueInput
    update?: XOR<XOR<TaxaUpdateToOneWithWhereWithoutSubproject_taxaInput, TaxaUpdateWithoutSubproject_taxaInput>, TaxaUncheckedUpdateWithoutSubproject_taxaInput>
  }

  export type AccountsCreateNestedOneWithoutSubproject_usersInput = {
    create?: XOR<AccountsCreateWithoutSubproject_usersInput, AccountsUncheckedCreateWithoutSubproject_usersInput>
    connectOrCreate?: AccountsCreateOrConnectWithoutSubproject_usersInput
    connect?: AccountsWhereUniqueInput
  }

  export type SubprojectsCreateNestedOneWithoutSubproject_usersInput = {
    create?: XOR<SubprojectsCreateWithoutSubproject_usersInput, SubprojectsUncheckedCreateWithoutSubproject_usersInput>
    connectOrCreate?: SubprojectsCreateOrConnectWithoutSubproject_usersInput
    connect?: SubprojectsWhereUniqueInput
  }

  export type UsersCreateNestedOneWithoutSubproject_usersInput = {
    create?: XOR<UsersCreateWithoutSubproject_usersInput, UsersUncheckedCreateWithoutSubproject_usersInput>
    connectOrCreate?: UsersCreateOrConnectWithoutSubproject_usersInput
    connect?: UsersWhereUniqueInput
  }

  export type AccountsUpdateOneWithoutSubproject_usersNestedInput = {
    create?: XOR<AccountsCreateWithoutSubproject_usersInput, AccountsUncheckedCreateWithoutSubproject_usersInput>
    connectOrCreate?: AccountsCreateOrConnectWithoutSubproject_usersInput
    upsert?: AccountsUpsertWithoutSubproject_usersInput
    disconnect?: AccountsWhereInput | boolean
    delete?: AccountsWhereInput | boolean
    connect?: AccountsWhereUniqueInput
    update?: XOR<XOR<AccountsUpdateToOneWithWhereWithoutSubproject_usersInput, AccountsUpdateWithoutSubproject_usersInput>, AccountsUncheckedUpdateWithoutSubproject_usersInput>
  }

  export type SubprojectsUpdateOneWithoutSubproject_usersNestedInput = {
    create?: XOR<SubprojectsCreateWithoutSubproject_usersInput, SubprojectsUncheckedCreateWithoutSubproject_usersInput>
    connectOrCreate?: SubprojectsCreateOrConnectWithoutSubproject_usersInput
    upsert?: SubprojectsUpsertWithoutSubproject_usersInput
    disconnect?: SubprojectsWhereInput | boolean
    delete?: SubprojectsWhereInput | boolean
    connect?: SubprojectsWhereUniqueInput
    update?: XOR<XOR<SubprojectsUpdateToOneWithWhereWithoutSubproject_usersInput, SubprojectsUpdateWithoutSubproject_usersInput>, SubprojectsUncheckedUpdateWithoutSubproject_usersInput>
  }

  export type UsersUpdateOneWithoutSubproject_usersNestedInput = {
    create?: XOR<UsersCreateWithoutSubproject_usersInput, UsersUncheckedCreateWithoutSubproject_usersInput>
    connectOrCreate?: UsersCreateOrConnectWithoutSubproject_usersInput
    upsert?: UsersUpsertWithoutSubproject_usersInput
    disconnect?: UsersWhereInput | boolean
    delete?: UsersWhereInput | boolean
    connect?: UsersWhereUniqueInput
    update?: XOR<XOR<UsersUpdateToOneWithWhereWithoutSubproject_usersInput, UsersUpdateWithoutSubproject_usersInput>, UsersUncheckedUpdateWithoutSubproject_usersInput>
  }

  export type Gbif_occurrence_downloadsCreateNestedManyWithoutSubprojectsInput = {
    create?: XOR<Enumerable<Gbif_occurrence_downloadsCreateWithoutSubprojectsInput>, Enumerable<Gbif_occurrence_downloadsUncheckedCreateWithoutSubprojectsInput>>
    connectOrCreate?: Enumerable<Gbif_occurrence_downloadsCreateOrConnectWithoutSubprojectsInput>
    createMany?: Gbif_occurrence_downloadsCreateManySubprojectsInputEnvelope
    connect?: Enumerable<Gbif_occurrence_downloadsWhereUniqueInput>
  }

  export type Gbif_occurrencesCreateNestedManyWithoutSubprojectsInput = {
    create?: XOR<Enumerable<Gbif_occurrencesCreateWithoutSubprojectsInput>, Enumerable<Gbif_occurrencesUncheckedCreateWithoutSubprojectsInput>>
    connectOrCreate?: Enumerable<Gbif_occurrencesCreateOrConnectWithoutSubprojectsInput>
    createMany?: Gbif_occurrencesCreateManySubprojectsInputEnvelope
    connect?: Enumerable<Gbif_occurrencesWhereUniqueInput>
  }

  export type GoalsCreateNestedManyWithoutSubprojectsInput = {
    create?: XOR<Enumerable<GoalsCreateWithoutSubprojectsInput>, Enumerable<GoalsUncheckedCreateWithoutSubprojectsInput>>
    connectOrCreate?: Enumerable<GoalsCreateOrConnectWithoutSubprojectsInput>
    createMany?: GoalsCreateManySubprojectsInputEnvelope
    connect?: Enumerable<GoalsWhereUniqueInput>
  }

  export type Subproject_taxaCreateNestedManyWithoutSubprojectsInput = {
    create?: XOR<Enumerable<Subproject_taxaCreateWithoutSubprojectsInput>, Enumerable<Subproject_taxaUncheckedCreateWithoutSubprojectsInput>>
    connectOrCreate?: Enumerable<Subproject_taxaCreateOrConnectWithoutSubprojectsInput>
    createMany?: Subproject_taxaCreateManySubprojectsInputEnvelope
    connect?: Enumerable<Subproject_taxaWhereUniqueInput>
  }

  export type Subproject_usersCreateNestedManyWithoutSubprojectsInput = {
    create?: XOR<Enumerable<Subproject_usersCreateWithoutSubprojectsInput>, Enumerable<Subproject_usersUncheckedCreateWithoutSubprojectsInput>>
    connectOrCreate?: Enumerable<Subproject_usersCreateOrConnectWithoutSubprojectsInput>
    createMany?: Subproject_usersCreateManySubprojectsInputEnvelope
    connect?: Enumerable<Subproject_usersWhereUniqueInput>
  }

  export type AccountsCreateNestedOneWithoutSubprojectsInput = {
    create?: XOR<AccountsCreateWithoutSubprojectsInput, AccountsUncheckedCreateWithoutSubprojectsInput>
    connectOrCreate?: AccountsCreateOrConnectWithoutSubprojectsInput
    connect?: AccountsWhereUniqueInput
  }

  export type ProjectsCreateNestedOneWithoutSubprojectsInput = {
    create?: XOR<ProjectsCreateWithoutSubprojectsInput, ProjectsUncheckedCreateWithoutSubprojectsInput>
    connectOrCreate?: ProjectsCreateOrConnectWithoutSubprojectsInput
    connect?: ProjectsWhereUniqueInput
  }

  export type Gbif_occurrence_downloadsUncheckedCreateNestedManyWithoutSubprojectsInput = {
    create?: XOR<Enumerable<Gbif_occurrence_downloadsCreateWithoutSubprojectsInput>, Enumerable<Gbif_occurrence_downloadsUncheckedCreateWithoutSubprojectsInput>>
    connectOrCreate?: Enumerable<Gbif_occurrence_downloadsCreateOrConnectWithoutSubprojectsInput>
    createMany?: Gbif_occurrence_downloadsCreateManySubprojectsInputEnvelope
    connect?: Enumerable<Gbif_occurrence_downloadsWhereUniqueInput>
  }

  export type Gbif_occurrencesUncheckedCreateNestedManyWithoutSubprojectsInput = {
    create?: XOR<Enumerable<Gbif_occurrencesCreateWithoutSubprojectsInput>, Enumerable<Gbif_occurrencesUncheckedCreateWithoutSubprojectsInput>>
    connectOrCreate?: Enumerable<Gbif_occurrencesCreateOrConnectWithoutSubprojectsInput>
    createMany?: Gbif_occurrencesCreateManySubprojectsInputEnvelope
    connect?: Enumerable<Gbif_occurrencesWhereUniqueInput>
  }

  export type GoalsUncheckedCreateNestedManyWithoutSubprojectsInput = {
    create?: XOR<Enumerable<GoalsCreateWithoutSubprojectsInput>, Enumerable<GoalsUncheckedCreateWithoutSubprojectsInput>>
    connectOrCreate?: Enumerable<GoalsCreateOrConnectWithoutSubprojectsInput>
    createMany?: GoalsCreateManySubprojectsInputEnvelope
    connect?: Enumerable<GoalsWhereUniqueInput>
  }

  export type Subproject_taxaUncheckedCreateNestedManyWithoutSubprojectsInput = {
    create?: XOR<Enumerable<Subproject_taxaCreateWithoutSubprojectsInput>, Enumerable<Subproject_taxaUncheckedCreateWithoutSubprojectsInput>>
    connectOrCreate?: Enumerable<Subproject_taxaCreateOrConnectWithoutSubprojectsInput>
    createMany?: Subproject_taxaCreateManySubprojectsInputEnvelope
    connect?: Enumerable<Subproject_taxaWhereUniqueInput>
  }

  export type Subproject_usersUncheckedCreateNestedManyWithoutSubprojectsInput = {
    create?: XOR<Enumerable<Subproject_usersCreateWithoutSubprojectsInput>, Enumerable<Subproject_usersUncheckedCreateWithoutSubprojectsInput>>
    connectOrCreate?: Enumerable<Subproject_usersCreateOrConnectWithoutSubprojectsInput>
    createMany?: Subproject_usersCreateManySubprojectsInputEnvelope
    connect?: Enumerable<Subproject_usersWhereUniqueInput>
  }

  export type Gbif_occurrence_downloadsUpdateManyWithoutSubprojectsNestedInput = {
    create?: XOR<Enumerable<Gbif_occurrence_downloadsCreateWithoutSubprojectsInput>, Enumerable<Gbif_occurrence_downloadsUncheckedCreateWithoutSubprojectsInput>>
    connectOrCreate?: Enumerable<Gbif_occurrence_downloadsCreateOrConnectWithoutSubprojectsInput>
    upsert?: Enumerable<Gbif_occurrence_downloadsUpsertWithWhereUniqueWithoutSubprojectsInput>
    createMany?: Gbif_occurrence_downloadsCreateManySubprojectsInputEnvelope
    set?: Enumerable<Gbif_occurrence_downloadsWhereUniqueInput>
    disconnect?: Enumerable<Gbif_occurrence_downloadsWhereUniqueInput>
    delete?: Enumerable<Gbif_occurrence_downloadsWhereUniqueInput>
    connect?: Enumerable<Gbif_occurrence_downloadsWhereUniqueInput>
    update?: Enumerable<Gbif_occurrence_downloadsUpdateWithWhereUniqueWithoutSubprojectsInput>
    updateMany?: Enumerable<Gbif_occurrence_downloadsUpdateManyWithWhereWithoutSubprojectsInput>
    deleteMany?: Enumerable<Gbif_occurrence_downloadsScalarWhereInput>
  }

  export type Gbif_occurrencesUpdateManyWithoutSubprojectsNestedInput = {
    create?: XOR<Enumerable<Gbif_occurrencesCreateWithoutSubprojectsInput>, Enumerable<Gbif_occurrencesUncheckedCreateWithoutSubprojectsInput>>
    connectOrCreate?: Enumerable<Gbif_occurrencesCreateOrConnectWithoutSubprojectsInput>
    upsert?: Enumerable<Gbif_occurrencesUpsertWithWhereUniqueWithoutSubprojectsInput>
    createMany?: Gbif_occurrencesCreateManySubprojectsInputEnvelope
    set?: Enumerable<Gbif_occurrencesWhereUniqueInput>
    disconnect?: Enumerable<Gbif_occurrencesWhereUniqueInput>
    delete?: Enumerable<Gbif_occurrencesWhereUniqueInput>
    connect?: Enumerable<Gbif_occurrencesWhereUniqueInput>
    update?: Enumerable<Gbif_occurrencesUpdateWithWhereUniqueWithoutSubprojectsInput>
    updateMany?: Enumerable<Gbif_occurrencesUpdateManyWithWhereWithoutSubprojectsInput>
    deleteMany?: Enumerable<Gbif_occurrencesScalarWhereInput>
  }

  export type GoalsUpdateManyWithoutSubprojectsNestedInput = {
    create?: XOR<Enumerable<GoalsCreateWithoutSubprojectsInput>, Enumerable<GoalsUncheckedCreateWithoutSubprojectsInput>>
    connectOrCreate?: Enumerable<GoalsCreateOrConnectWithoutSubprojectsInput>
    upsert?: Enumerable<GoalsUpsertWithWhereUniqueWithoutSubprojectsInput>
    createMany?: GoalsCreateManySubprojectsInputEnvelope
    set?: Enumerable<GoalsWhereUniqueInput>
    disconnect?: Enumerable<GoalsWhereUniqueInput>
    delete?: Enumerable<GoalsWhereUniqueInput>
    connect?: Enumerable<GoalsWhereUniqueInput>
    update?: Enumerable<GoalsUpdateWithWhereUniqueWithoutSubprojectsInput>
    updateMany?: Enumerable<GoalsUpdateManyWithWhereWithoutSubprojectsInput>
    deleteMany?: Enumerable<GoalsScalarWhereInput>
  }

  export type Subproject_taxaUpdateManyWithoutSubprojectsNestedInput = {
    create?: XOR<Enumerable<Subproject_taxaCreateWithoutSubprojectsInput>, Enumerable<Subproject_taxaUncheckedCreateWithoutSubprojectsInput>>
    connectOrCreate?: Enumerable<Subproject_taxaCreateOrConnectWithoutSubprojectsInput>
    upsert?: Enumerable<Subproject_taxaUpsertWithWhereUniqueWithoutSubprojectsInput>
    createMany?: Subproject_taxaCreateManySubprojectsInputEnvelope
    set?: Enumerable<Subproject_taxaWhereUniqueInput>
    disconnect?: Enumerable<Subproject_taxaWhereUniqueInput>
    delete?: Enumerable<Subproject_taxaWhereUniqueInput>
    connect?: Enumerable<Subproject_taxaWhereUniqueInput>
    update?: Enumerable<Subproject_taxaUpdateWithWhereUniqueWithoutSubprojectsInput>
    updateMany?: Enumerable<Subproject_taxaUpdateManyWithWhereWithoutSubprojectsInput>
    deleteMany?: Enumerable<Subproject_taxaScalarWhereInput>
  }

  export type Subproject_usersUpdateManyWithoutSubprojectsNestedInput = {
    create?: XOR<Enumerable<Subproject_usersCreateWithoutSubprojectsInput>, Enumerable<Subproject_usersUncheckedCreateWithoutSubprojectsInput>>
    connectOrCreate?: Enumerable<Subproject_usersCreateOrConnectWithoutSubprojectsInput>
    upsert?: Enumerable<Subproject_usersUpsertWithWhereUniqueWithoutSubprojectsInput>
    createMany?: Subproject_usersCreateManySubprojectsInputEnvelope
    set?: Enumerable<Subproject_usersWhereUniqueInput>
    disconnect?: Enumerable<Subproject_usersWhereUniqueInput>
    delete?: Enumerable<Subproject_usersWhereUniqueInput>
    connect?: Enumerable<Subproject_usersWhereUniqueInput>
    update?: Enumerable<Subproject_usersUpdateWithWhereUniqueWithoutSubprojectsInput>
    updateMany?: Enumerable<Subproject_usersUpdateManyWithWhereWithoutSubprojectsInput>
    deleteMany?: Enumerable<Subproject_usersScalarWhereInput>
  }

  export type AccountsUpdateOneWithoutSubprojectsNestedInput = {
    create?: XOR<AccountsCreateWithoutSubprojectsInput, AccountsUncheckedCreateWithoutSubprojectsInput>
    connectOrCreate?: AccountsCreateOrConnectWithoutSubprojectsInput
    upsert?: AccountsUpsertWithoutSubprojectsInput
    disconnect?: AccountsWhereInput | boolean
    delete?: AccountsWhereInput | boolean
    connect?: AccountsWhereUniqueInput
    update?: XOR<XOR<AccountsUpdateToOneWithWhereWithoutSubprojectsInput, AccountsUpdateWithoutSubprojectsInput>, AccountsUncheckedUpdateWithoutSubprojectsInput>
  }

  export type ProjectsUpdateOneWithoutSubprojectsNestedInput = {
    create?: XOR<ProjectsCreateWithoutSubprojectsInput, ProjectsUncheckedCreateWithoutSubprojectsInput>
    connectOrCreate?: ProjectsCreateOrConnectWithoutSubprojectsInput
    upsert?: ProjectsUpsertWithoutSubprojectsInput
    disconnect?: ProjectsWhereInput | boolean
    delete?: ProjectsWhereInput | boolean
    connect?: ProjectsWhereUniqueInput
    update?: XOR<XOR<ProjectsUpdateToOneWithWhereWithoutSubprojectsInput, ProjectsUpdateWithoutSubprojectsInput>, ProjectsUncheckedUpdateWithoutSubprojectsInput>
  }

  export type Gbif_occurrence_downloadsUncheckedUpdateManyWithoutSubprojectsNestedInput = {
    create?: XOR<Enumerable<Gbif_occurrence_downloadsCreateWithoutSubprojectsInput>, Enumerable<Gbif_occurrence_downloadsUncheckedCreateWithoutSubprojectsInput>>
    connectOrCreate?: Enumerable<Gbif_occurrence_downloadsCreateOrConnectWithoutSubprojectsInput>
    upsert?: Enumerable<Gbif_occurrence_downloadsUpsertWithWhereUniqueWithoutSubprojectsInput>
    createMany?: Gbif_occurrence_downloadsCreateManySubprojectsInputEnvelope
    set?: Enumerable<Gbif_occurrence_downloadsWhereUniqueInput>
    disconnect?: Enumerable<Gbif_occurrence_downloadsWhereUniqueInput>
    delete?: Enumerable<Gbif_occurrence_downloadsWhereUniqueInput>
    connect?: Enumerable<Gbif_occurrence_downloadsWhereUniqueInput>
    update?: Enumerable<Gbif_occurrence_downloadsUpdateWithWhereUniqueWithoutSubprojectsInput>
    updateMany?: Enumerable<Gbif_occurrence_downloadsUpdateManyWithWhereWithoutSubprojectsInput>
    deleteMany?: Enumerable<Gbif_occurrence_downloadsScalarWhereInput>
  }

  export type Gbif_occurrencesUncheckedUpdateManyWithoutSubprojectsNestedInput = {
    create?: XOR<Enumerable<Gbif_occurrencesCreateWithoutSubprojectsInput>, Enumerable<Gbif_occurrencesUncheckedCreateWithoutSubprojectsInput>>
    connectOrCreate?: Enumerable<Gbif_occurrencesCreateOrConnectWithoutSubprojectsInput>
    upsert?: Enumerable<Gbif_occurrencesUpsertWithWhereUniqueWithoutSubprojectsInput>
    createMany?: Gbif_occurrencesCreateManySubprojectsInputEnvelope
    set?: Enumerable<Gbif_occurrencesWhereUniqueInput>
    disconnect?: Enumerable<Gbif_occurrencesWhereUniqueInput>
    delete?: Enumerable<Gbif_occurrencesWhereUniqueInput>
    connect?: Enumerable<Gbif_occurrencesWhereUniqueInput>
    update?: Enumerable<Gbif_occurrencesUpdateWithWhereUniqueWithoutSubprojectsInput>
    updateMany?: Enumerable<Gbif_occurrencesUpdateManyWithWhereWithoutSubprojectsInput>
    deleteMany?: Enumerable<Gbif_occurrencesScalarWhereInput>
  }

  export type GoalsUncheckedUpdateManyWithoutSubprojectsNestedInput = {
    create?: XOR<Enumerable<GoalsCreateWithoutSubprojectsInput>, Enumerable<GoalsUncheckedCreateWithoutSubprojectsInput>>
    connectOrCreate?: Enumerable<GoalsCreateOrConnectWithoutSubprojectsInput>
    upsert?: Enumerable<GoalsUpsertWithWhereUniqueWithoutSubprojectsInput>
    createMany?: GoalsCreateManySubprojectsInputEnvelope
    set?: Enumerable<GoalsWhereUniqueInput>
    disconnect?: Enumerable<GoalsWhereUniqueInput>
    delete?: Enumerable<GoalsWhereUniqueInput>
    connect?: Enumerable<GoalsWhereUniqueInput>
    update?: Enumerable<GoalsUpdateWithWhereUniqueWithoutSubprojectsInput>
    updateMany?: Enumerable<GoalsUpdateManyWithWhereWithoutSubprojectsInput>
    deleteMany?: Enumerable<GoalsScalarWhereInput>
  }

  export type Subproject_taxaUncheckedUpdateManyWithoutSubprojectsNestedInput = {
    create?: XOR<Enumerable<Subproject_taxaCreateWithoutSubprojectsInput>, Enumerable<Subproject_taxaUncheckedCreateWithoutSubprojectsInput>>
    connectOrCreate?: Enumerable<Subproject_taxaCreateOrConnectWithoutSubprojectsInput>
    upsert?: Enumerable<Subproject_taxaUpsertWithWhereUniqueWithoutSubprojectsInput>
    createMany?: Subproject_taxaCreateManySubprojectsInputEnvelope
    set?: Enumerable<Subproject_taxaWhereUniqueInput>
    disconnect?: Enumerable<Subproject_taxaWhereUniqueInput>
    delete?: Enumerable<Subproject_taxaWhereUniqueInput>
    connect?: Enumerable<Subproject_taxaWhereUniqueInput>
    update?: Enumerable<Subproject_taxaUpdateWithWhereUniqueWithoutSubprojectsInput>
    updateMany?: Enumerable<Subproject_taxaUpdateManyWithWhereWithoutSubprojectsInput>
    deleteMany?: Enumerable<Subproject_taxaScalarWhereInput>
  }

  export type Subproject_usersUncheckedUpdateManyWithoutSubprojectsNestedInput = {
    create?: XOR<Enumerable<Subproject_usersCreateWithoutSubprojectsInput>, Enumerable<Subproject_usersUncheckedCreateWithoutSubprojectsInput>>
    connectOrCreate?: Enumerable<Subproject_usersCreateOrConnectWithoutSubprojectsInput>
    upsert?: Enumerable<Subproject_usersUpsertWithWhereUniqueWithoutSubprojectsInput>
    createMany?: Subproject_usersCreateManySubprojectsInputEnvelope
    set?: Enumerable<Subproject_usersWhereUniqueInput>
    disconnect?: Enumerable<Subproject_usersWhereUniqueInput>
    delete?: Enumerable<Subproject_usersWhereUniqueInput>
    connect?: Enumerable<Subproject_usersWhereUniqueInput>
    update?: Enumerable<Subproject_usersUpdateWithWhereUniqueWithoutSubprojectsInput>
    updateMany?: Enumerable<Subproject_usersUpdateManyWithWhereWithoutSubprojectsInput>
    deleteMany?: Enumerable<Subproject_usersScalarWhereInput>
  }

  export type Subproject_taxaCreateNestedManyWithoutTaxaInput = {
    create?: XOR<Enumerable<Subproject_taxaCreateWithoutTaxaInput>, Enumerable<Subproject_taxaUncheckedCreateWithoutTaxaInput>>
    connectOrCreate?: Enumerable<Subproject_taxaCreateOrConnectWithoutTaxaInput>
    createMany?: Subproject_taxaCreateManyTaxaInputEnvelope
    connect?: Enumerable<Subproject_taxaWhereUniqueInput>
  }

  export type AccountsCreateNestedOneWithoutTaxaInput = {
    create?: XOR<AccountsCreateWithoutTaxaInput, AccountsUncheckedCreateWithoutTaxaInput>
    connectOrCreate?: AccountsCreateOrConnectWithoutTaxaInput
    connect?: AccountsWhereUniqueInput
  }

  export type TaxonomiesCreateNestedOneWithoutTaxaInput = {
    create?: XOR<TaxonomiesCreateWithoutTaxaInput, TaxonomiesUncheckedCreateWithoutTaxaInput>
    connectOrCreate?: TaxonomiesCreateOrConnectWithoutTaxaInput
    connect?: TaxonomiesWhereUniqueInput
  }

  export type Subproject_taxaUncheckedCreateNestedManyWithoutTaxaInput = {
    create?: XOR<Enumerable<Subproject_taxaCreateWithoutTaxaInput>, Enumerable<Subproject_taxaUncheckedCreateWithoutTaxaInput>>
    connectOrCreate?: Enumerable<Subproject_taxaCreateOrConnectWithoutTaxaInput>
    createMany?: Subproject_taxaCreateManyTaxaInputEnvelope
    connect?: Enumerable<Subproject_taxaWhereUniqueInput>
  }

  export type Subproject_taxaUpdateManyWithoutTaxaNestedInput = {
    create?: XOR<Enumerable<Subproject_taxaCreateWithoutTaxaInput>, Enumerable<Subproject_taxaUncheckedCreateWithoutTaxaInput>>
    connectOrCreate?: Enumerable<Subproject_taxaCreateOrConnectWithoutTaxaInput>
    upsert?: Enumerable<Subproject_taxaUpsertWithWhereUniqueWithoutTaxaInput>
    createMany?: Subproject_taxaCreateManyTaxaInputEnvelope
    set?: Enumerable<Subproject_taxaWhereUniqueInput>
    disconnect?: Enumerable<Subproject_taxaWhereUniqueInput>
    delete?: Enumerable<Subproject_taxaWhereUniqueInput>
    connect?: Enumerable<Subproject_taxaWhereUniqueInput>
    update?: Enumerable<Subproject_taxaUpdateWithWhereUniqueWithoutTaxaInput>
    updateMany?: Enumerable<Subproject_taxaUpdateManyWithWhereWithoutTaxaInput>
    deleteMany?: Enumerable<Subproject_taxaScalarWhereInput>
  }

  export type AccountsUpdateOneWithoutTaxaNestedInput = {
    create?: XOR<AccountsCreateWithoutTaxaInput, AccountsUncheckedCreateWithoutTaxaInput>
    connectOrCreate?: AccountsCreateOrConnectWithoutTaxaInput
    upsert?: AccountsUpsertWithoutTaxaInput
    disconnect?: AccountsWhereInput | boolean
    delete?: AccountsWhereInput | boolean
    connect?: AccountsWhereUniqueInput
    update?: XOR<XOR<AccountsUpdateToOneWithWhereWithoutTaxaInput, AccountsUpdateWithoutTaxaInput>, AccountsUncheckedUpdateWithoutTaxaInput>
  }

  export type TaxonomiesUpdateOneWithoutTaxaNestedInput = {
    create?: XOR<TaxonomiesCreateWithoutTaxaInput, TaxonomiesUncheckedCreateWithoutTaxaInput>
    connectOrCreate?: TaxonomiesCreateOrConnectWithoutTaxaInput
    upsert?: TaxonomiesUpsertWithoutTaxaInput
    disconnect?: TaxonomiesWhereInput | boolean
    delete?: TaxonomiesWhereInput | boolean
    connect?: TaxonomiesWhereUniqueInput
    update?: XOR<XOR<TaxonomiesUpdateToOneWithWhereWithoutTaxaInput, TaxonomiesUpdateWithoutTaxaInput>, TaxonomiesUncheckedUpdateWithoutTaxaInput>
  }

  export type Subproject_taxaUncheckedUpdateManyWithoutTaxaNestedInput = {
    create?: XOR<Enumerable<Subproject_taxaCreateWithoutTaxaInput>, Enumerable<Subproject_taxaUncheckedCreateWithoutTaxaInput>>
    connectOrCreate?: Enumerable<Subproject_taxaCreateOrConnectWithoutTaxaInput>
    upsert?: Enumerable<Subproject_taxaUpsertWithWhereUniqueWithoutTaxaInput>
    createMany?: Subproject_taxaCreateManyTaxaInputEnvelope
    set?: Enumerable<Subproject_taxaWhereUniqueInput>
    disconnect?: Enumerable<Subproject_taxaWhereUniqueInput>
    delete?: Enumerable<Subproject_taxaWhereUniqueInput>
    connect?: Enumerable<Subproject_taxaWhereUniqueInput>
    update?: Enumerable<Subproject_taxaUpdateWithWhereUniqueWithoutTaxaInput>
    updateMany?: Enumerable<Subproject_taxaUpdateManyWithWhereWithoutTaxaInput>
    deleteMany?: Enumerable<Subproject_taxaScalarWhereInput>
  }

  export type TaxaCreateNestedManyWithoutTaxonomiesInput = {
    create?: XOR<Enumerable<TaxaCreateWithoutTaxonomiesInput>, Enumerable<TaxaUncheckedCreateWithoutTaxonomiesInput>>
    connectOrCreate?: Enumerable<TaxaCreateOrConnectWithoutTaxonomiesInput>
    createMany?: TaxaCreateManyTaxonomiesInputEnvelope
    connect?: Enumerable<TaxaWhereUniqueInput>
  }

  export type AccountsCreateNestedOneWithoutTaxonomiesInput = {
    create?: XOR<AccountsCreateWithoutTaxonomiesInput, AccountsUncheckedCreateWithoutTaxonomiesInput>
    connectOrCreate?: AccountsCreateOrConnectWithoutTaxonomiesInput
    connect?: AccountsWhereUniqueInput
  }

  export type ProjectsCreateNestedOneWithoutTaxonomiesInput = {
    create?: XOR<ProjectsCreateWithoutTaxonomiesInput, ProjectsUncheckedCreateWithoutTaxonomiesInput>
    connectOrCreate?: ProjectsCreateOrConnectWithoutTaxonomiesInput
    connect?: ProjectsWhereUniqueInput
  }

  export type TaxaUncheckedCreateNestedManyWithoutTaxonomiesInput = {
    create?: XOR<Enumerable<TaxaCreateWithoutTaxonomiesInput>, Enumerable<TaxaUncheckedCreateWithoutTaxonomiesInput>>
    connectOrCreate?: Enumerable<TaxaCreateOrConnectWithoutTaxonomiesInput>
    createMany?: TaxaCreateManyTaxonomiesInputEnvelope
    connect?: Enumerable<TaxaWhereUniqueInput>
  }

  export type NullableEnumtaxonomy_typeFieldUpdateOperationsInput = {
    set?: taxonomy_type | null
  }

  export type TaxaUpdateManyWithoutTaxonomiesNestedInput = {
    create?: XOR<Enumerable<TaxaCreateWithoutTaxonomiesInput>, Enumerable<TaxaUncheckedCreateWithoutTaxonomiesInput>>
    connectOrCreate?: Enumerable<TaxaCreateOrConnectWithoutTaxonomiesInput>
    upsert?: Enumerable<TaxaUpsertWithWhereUniqueWithoutTaxonomiesInput>
    createMany?: TaxaCreateManyTaxonomiesInputEnvelope
    set?: Enumerable<TaxaWhereUniqueInput>
    disconnect?: Enumerable<TaxaWhereUniqueInput>
    delete?: Enumerable<TaxaWhereUniqueInput>
    connect?: Enumerable<TaxaWhereUniqueInput>
    update?: Enumerable<TaxaUpdateWithWhereUniqueWithoutTaxonomiesInput>
    updateMany?: Enumerable<TaxaUpdateManyWithWhereWithoutTaxonomiesInput>
    deleteMany?: Enumerable<TaxaScalarWhereInput>
  }

  export type AccountsUpdateOneWithoutTaxonomiesNestedInput = {
    create?: XOR<AccountsCreateWithoutTaxonomiesInput, AccountsUncheckedCreateWithoutTaxonomiesInput>
    connectOrCreate?: AccountsCreateOrConnectWithoutTaxonomiesInput
    upsert?: AccountsUpsertWithoutTaxonomiesInput
    disconnect?: AccountsWhereInput | boolean
    delete?: AccountsWhereInput | boolean
    connect?: AccountsWhereUniqueInput
    update?: XOR<XOR<AccountsUpdateToOneWithWhereWithoutTaxonomiesInput, AccountsUpdateWithoutTaxonomiesInput>, AccountsUncheckedUpdateWithoutTaxonomiesInput>
  }

  export type ProjectsUpdateOneWithoutTaxonomiesNestedInput = {
    create?: XOR<ProjectsCreateWithoutTaxonomiesInput, ProjectsUncheckedCreateWithoutTaxonomiesInput>
    connectOrCreate?: ProjectsCreateOrConnectWithoutTaxonomiesInput
    upsert?: ProjectsUpsertWithoutTaxonomiesInput
    disconnect?: ProjectsWhereInput | boolean
    delete?: ProjectsWhereInput | boolean
    connect?: ProjectsWhereUniqueInput
    update?: XOR<XOR<ProjectsUpdateToOneWithWhereWithoutTaxonomiesInput, ProjectsUpdateWithoutTaxonomiesInput>, ProjectsUncheckedUpdateWithoutTaxonomiesInput>
  }

  export type TaxaUncheckedUpdateManyWithoutTaxonomiesNestedInput = {
    create?: XOR<Enumerable<TaxaCreateWithoutTaxonomiesInput>, Enumerable<TaxaUncheckedCreateWithoutTaxonomiesInput>>
    connectOrCreate?: Enumerable<TaxaCreateOrConnectWithoutTaxonomiesInput>
    upsert?: Enumerable<TaxaUpsertWithWhereUniqueWithoutTaxonomiesInput>
    createMany?: TaxaCreateManyTaxonomiesInputEnvelope
    set?: Enumerable<TaxaWhereUniqueInput>
    disconnect?: Enumerable<TaxaWhereUniqueInput>
    delete?: Enumerable<TaxaWhereUniqueInput>
    connect?: Enumerable<TaxaWhereUniqueInput>
    update?: Enumerable<TaxaUpdateWithWhereUniqueWithoutTaxonomiesInput>
    updateMany?: Enumerable<TaxaUpdateManyWithWhereWithoutTaxonomiesInput>
    deleteMany?: Enumerable<TaxaScalarWhereInput>
  }

  export type AccountsCreateNestedOneWithoutTile_layersInput = {
    create?: XOR<AccountsCreateWithoutTile_layersInput, AccountsUncheckedCreateWithoutTile_layersInput>
    connectOrCreate?: AccountsCreateOrConnectWithoutTile_layersInput
    connect?: AccountsWhereUniqueInput
  }

  export type ProjectsCreateNestedOneWithoutTile_layersInput = {
    create?: XOR<ProjectsCreateWithoutTile_layersInput, ProjectsUncheckedCreateWithoutTile_layersInput>
    connectOrCreate?: ProjectsCreateOrConnectWithoutTile_layersInput
    connect?: ProjectsWhereUniqueInput
  }

  export type NullableEnumtile_layer_type_enumFieldUpdateOperationsInput = {
    set?: tile_layer_type_enum | null
  }

  export type AccountsUpdateOneWithoutTile_layersNestedInput = {
    create?: XOR<AccountsCreateWithoutTile_layersInput, AccountsUncheckedCreateWithoutTile_layersInput>
    connectOrCreate?: AccountsCreateOrConnectWithoutTile_layersInput
    upsert?: AccountsUpsertWithoutTile_layersInput
    disconnect?: AccountsWhereInput | boolean
    delete?: AccountsWhereInput | boolean
    connect?: AccountsWhereUniqueInput
    update?: XOR<XOR<AccountsUpdateToOneWithWhereWithoutTile_layersInput, AccountsUpdateWithoutTile_layersInput>, AccountsUncheckedUpdateWithoutTile_layersInput>
  }

  export type ProjectsUpdateOneRequiredWithoutTile_layersNestedInput = {
    create?: XOR<ProjectsCreateWithoutTile_layersInput, ProjectsUncheckedCreateWithoutTile_layersInput>
    connectOrCreate?: ProjectsCreateOrConnectWithoutTile_layersInput
    upsert?: ProjectsUpsertWithoutTile_layersInput
    connect?: ProjectsWhereUniqueInput
    update?: XOR<XOR<ProjectsUpdateToOneWithWhereWithoutTile_layersInput, ProjectsUpdateWithoutTile_layersInput>, ProjectsUncheckedUpdateWithoutTile_layersInput>
  }

  export type AccountsCreateNestedOneWithoutUi_optionsInput = {
    create?: XOR<AccountsCreateWithoutUi_optionsInput, AccountsUncheckedCreateWithoutUi_optionsInput>
    connectOrCreate?: AccountsCreateOrConnectWithoutUi_optionsInput
    connect?: AccountsWhereUniqueInput
  }

  export type UsersCreateNestedOneWithoutUi_optionsInput = {
    create?: XOR<UsersCreateWithoutUi_optionsInput, UsersUncheckedCreateWithoutUi_optionsInput>
    connectOrCreate?: UsersCreateOrConnectWithoutUi_optionsInput
    connect?: UsersWhereUniqueInput
  }

  export type AccountsUpdateOneWithoutUi_optionsNestedInput = {
    create?: XOR<AccountsCreateWithoutUi_optionsInput, AccountsUncheckedCreateWithoutUi_optionsInput>
    connectOrCreate?: AccountsCreateOrConnectWithoutUi_optionsInput
    upsert?: AccountsUpsertWithoutUi_optionsInput
    disconnect?: AccountsWhereInput | boolean
    delete?: AccountsWhereInput | boolean
    connect?: AccountsWhereUniqueInput
    update?: XOR<XOR<AccountsUpdateToOneWithWhereWithoutUi_optionsInput, AccountsUpdateWithoutUi_optionsInput>, AccountsUncheckedUpdateWithoutUi_optionsInput>
  }

  export type UsersUpdateOneRequiredWithoutUi_optionsNestedInput = {
    create?: XOR<UsersCreateWithoutUi_optionsInput, UsersUncheckedCreateWithoutUi_optionsInput>
    connectOrCreate?: UsersCreateOrConnectWithoutUi_optionsInput
    upsert?: UsersUpsertWithoutUi_optionsInput
    connect?: UsersWhereUniqueInput
    update?: XOR<XOR<UsersUpdateToOneWithWhereWithoutUi_optionsInput, UsersUpdateWithoutUi_optionsInput>, UsersUncheckedUpdateWithoutUi_optionsInput>
  }

  export type Goal_report_valuesCreateNestedManyWithoutUnitsInput = {
    create?: XOR<Enumerable<Goal_report_valuesCreateWithoutUnitsInput>, Enumerable<Goal_report_valuesUncheckedCreateWithoutUnitsInput>>
    connectOrCreate?: Enumerable<Goal_report_valuesCreateOrConnectWithoutUnitsInput>
    createMany?: Goal_report_valuesCreateManyUnitsInputEnvelope
    connect?: Enumerable<Goal_report_valuesWhereUniqueInput>
  }

  export type AccountsCreateNestedOneWithoutUnitsInput = {
    create?: XOR<AccountsCreateWithoutUnitsInput, AccountsUncheckedCreateWithoutUnitsInput>
    connectOrCreate?: AccountsCreateOrConnectWithoutUnitsInput
    connect?: AccountsWhereUniqueInput
  }

  export type ListsCreateNestedOneWithoutUnitsInput = {
    create?: XOR<ListsCreateWithoutUnitsInput, ListsUncheckedCreateWithoutUnitsInput>
    connectOrCreate?: ListsCreateOrConnectWithoutUnitsInput
    connect?: ListsWhereUniqueInput
  }

  export type ProjectsCreateNestedOneWithoutUnitsInput = {
    create?: XOR<ProjectsCreateWithoutUnitsInput, ProjectsUncheckedCreateWithoutUnitsInput>
    connectOrCreate?: ProjectsCreateOrConnectWithoutUnitsInput
    connect?: ProjectsWhereUniqueInput
  }

  export type Goal_report_valuesUncheckedCreateNestedManyWithoutUnitsInput = {
    create?: XOR<Enumerable<Goal_report_valuesCreateWithoutUnitsInput>, Enumerable<Goal_report_valuesUncheckedCreateWithoutUnitsInput>>
    connectOrCreate?: Enumerable<Goal_report_valuesCreateOrConnectWithoutUnitsInput>
    createMany?: Goal_report_valuesCreateManyUnitsInputEnvelope
    connect?: Enumerable<Goal_report_valuesWhereUniqueInput>
  }

  export type NullableEnumunit_typeFieldUpdateOperationsInput = {
    set?: unit_type | null
  }

  export type Goal_report_valuesUpdateManyWithoutUnitsNestedInput = {
    create?: XOR<Enumerable<Goal_report_valuesCreateWithoutUnitsInput>, Enumerable<Goal_report_valuesUncheckedCreateWithoutUnitsInput>>
    connectOrCreate?: Enumerable<Goal_report_valuesCreateOrConnectWithoutUnitsInput>
    upsert?: Enumerable<Goal_report_valuesUpsertWithWhereUniqueWithoutUnitsInput>
    createMany?: Goal_report_valuesCreateManyUnitsInputEnvelope
    set?: Enumerable<Goal_report_valuesWhereUniqueInput>
    disconnect?: Enumerable<Goal_report_valuesWhereUniqueInput>
    delete?: Enumerable<Goal_report_valuesWhereUniqueInput>
    connect?: Enumerable<Goal_report_valuesWhereUniqueInput>
    update?: Enumerable<Goal_report_valuesUpdateWithWhereUniqueWithoutUnitsInput>
    updateMany?: Enumerable<Goal_report_valuesUpdateManyWithWhereWithoutUnitsInput>
    deleteMany?: Enumerable<Goal_report_valuesScalarWhereInput>
  }

  export type AccountsUpdateOneWithoutUnitsNestedInput = {
    create?: XOR<AccountsCreateWithoutUnitsInput, AccountsUncheckedCreateWithoutUnitsInput>
    connectOrCreate?: AccountsCreateOrConnectWithoutUnitsInput
    upsert?: AccountsUpsertWithoutUnitsInput
    disconnect?: AccountsWhereInput | boolean
    delete?: AccountsWhereInput | boolean
    connect?: AccountsWhereUniqueInput
    update?: XOR<XOR<AccountsUpdateToOneWithWhereWithoutUnitsInput, AccountsUpdateWithoutUnitsInput>, AccountsUncheckedUpdateWithoutUnitsInput>
  }

  export type ListsUpdateOneWithoutUnitsNestedInput = {
    create?: XOR<ListsCreateWithoutUnitsInput, ListsUncheckedCreateWithoutUnitsInput>
    connectOrCreate?: ListsCreateOrConnectWithoutUnitsInput
    upsert?: ListsUpsertWithoutUnitsInput
    disconnect?: ListsWhereInput | boolean
    delete?: ListsWhereInput | boolean
    connect?: ListsWhereUniqueInput
    update?: XOR<XOR<ListsUpdateToOneWithWhereWithoutUnitsInput, ListsUpdateWithoutUnitsInput>, ListsUncheckedUpdateWithoutUnitsInput>
  }

  export type ProjectsUpdateOneWithoutUnitsNestedInput = {
    create?: XOR<ProjectsCreateWithoutUnitsInput, ProjectsUncheckedCreateWithoutUnitsInput>
    connectOrCreate?: ProjectsCreateOrConnectWithoutUnitsInput
    upsert?: ProjectsUpsertWithoutUnitsInput
    disconnect?: ProjectsWhereInput | boolean
    delete?: ProjectsWhereInput | boolean
    connect?: ProjectsWhereUniqueInput
    update?: XOR<XOR<ProjectsUpdateToOneWithWhereWithoutUnitsInput, ProjectsUpdateWithoutUnitsInput>, ProjectsUncheckedUpdateWithoutUnitsInput>
  }

  export type Goal_report_valuesUncheckedUpdateManyWithoutUnitsNestedInput = {
    create?: XOR<Enumerable<Goal_report_valuesCreateWithoutUnitsInput>, Enumerable<Goal_report_valuesUncheckedCreateWithoutUnitsInput>>
    connectOrCreate?: Enumerable<Goal_report_valuesCreateOrConnectWithoutUnitsInput>
    upsert?: Enumerable<Goal_report_valuesUpsertWithWhereUniqueWithoutUnitsInput>
    createMany?: Goal_report_valuesCreateManyUnitsInputEnvelope
    set?: Enumerable<Goal_report_valuesWhereUniqueInput>
    disconnect?: Enumerable<Goal_report_valuesWhereUniqueInput>
    delete?: Enumerable<Goal_report_valuesWhereUniqueInput>
    connect?: Enumerable<Goal_report_valuesWhereUniqueInput>
    update?: Enumerable<Goal_report_valuesUpdateWithWhereUniqueWithoutUnitsInput>
    updateMany?: Enumerable<Goal_report_valuesUpdateManyWithWhereWithoutUnitsInput>
    deleteMany?: Enumerable<Goal_report_valuesScalarWhereInput>
  }

  export type AccountsCreateNestedOneWithoutUser_messagesInput = {
    create?: XOR<AccountsCreateWithoutUser_messagesInput, AccountsUncheckedCreateWithoutUser_messagesInput>
    connectOrCreate?: AccountsCreateOrConnectWithoutUser_messagesInput
    connect?: AccountsWhereUniqueInput
  }

  export type MessagesCreateNestedOneWithoutUser_messagesInput = {
    create?: XOR<MessagesCreateWithoutUser_messagesInput, MessagesUncheckedCreateWithoutUser_messagesInput>
    connectOrCreate?: MessagesCreateOrConnectWithoutUser_messagesInput
    connect?: MessagesWhereUniqueInput
  }

  export type UsersCreateNestedOneWithoutUser_messagesInput = {
    create?: XOR<UsersCreateWithoutUser_messagesInput, UsersUncheckedCreateWithoutUser_messagesInput>
    connectOrCreate?: UsersCreateOrConnectWithoutUser_messagesInput
    connect?: UsersWhereUniqueInput
  }

  export type AccountsUpdateOneWithoutUser_messagesNestedInput = {
    create?: XOR<AccountsCreateWithoutUser_messagesInput, AccountsUncheckedCreateWithoutUser_messagesInput>
    connectOrCreate?: AccountsCreateOrConnectWithoutUser_messagesInput
    upsert?: AccountsUpsertWithoutUser_messagesInput
    disconnect?: AccountsWhereInput | boolean
    delete?: AccountsWhereInput | boolean
    connect?: AccountsWhereUniqueInput
    update?: XOR<XOR<AccountsUpdateToOneWithWhereWithoutUser_messagesInput, AccountsUpdateWithoutUser_messagesInput>, AccountsUncheckedUpdateWithoutUser_messagesInput>
  }

  export type MessagesUpdateOneWithoutUser_messagesNestedInput = {
    create?: XOR<MessagesCreateWithoutUser_messagesInput, MessagesUncheckedCreateWithoutUser_messagesInput>
    connectOrCreate?: MessagesCreateOrConnectWithoutUser_messagesInput
    upsert?: MessagesUpsertWithoutUser_messagesInput
    disconnect?: MessagesWhereInput | boolean
    delete?: MessagesWhereInput | boolean
    connect?: MessagesWhereUniqueInput
    update?: XOR<XOR<MessagesUpdateToOneWithWhereWithoutUser_messagesInput, MessagesUpdateWithoutUser_messagesInput>, MessagesUncheckedUpdateWithoutUser_messagesInput>
  }

  export type UsersUpdateOneWithoutUser_messagesNestedInput = {
    create?: XOR<UsersCreateWithoutUser_messagesInput, UsersUncheckedCreateWithoutUser_messagesInput>
    connectOrCreate?: UsersCreateOrConnectWithoutUser_messagesInput
    upsert?: UsersUpsertWithoutUser_messagesInput
    disconnect?: UsersWhereInput | boolean
    delete?: UsersWhereInput | boolean
    connect?: UsersWhereUniqueInput
    update?: XOR<XOR<UsersUpdateToOneWithWhereWithoutUser_messagesInput, UsersUpdateWithoutUser_messagesInput>, UsersUncheckedUpdateWithoutUser_messagesInput>
  }

  export type AccountsCreateNestedManyWithoutUsersInput = {
    create?: XOR<Enumerable<AccountsCreateWithoutUsersInput>, Enumerable<AccountsUncheckedCreateWithoutUsersInput>>
    connectOrCreate?: Enumerable<AccountsCreateOrConnectWithoutUsersInput>
    createMany?: AccountsCreateManyUsersInputEnvelope
    connect?: Enumerable<AccountsWhereUniqueInput>
  }

  export type Project_usersCreateNestedManyWithoutUsersInput = {
    create?: XOR<Enumerable<Project_usersCreateWithoutUsersInput>, Enumerable<Project_usersUncheckedCreateWithoutUsersInput>>
    connectOrCreate?: Enumerable<Project_usersCreateOrConnectWithoutUsersInput>
    createMany?: Project_usersCreateManyUsersInputEnvelope
    connect?: Enumerable<Project_usersWhereUniqueInput>
  }

  export type Subproject_usersCreateNestedManyWithoutUsersInput = {
    create?: XOR<Enumerable<Subproject_usersCreateWithoutUsersInput>, Enumerable<Subproject_usersUncheckedCreateWithoutUsersInput>>
    connectOrCreate?: Enumerable<Subproject_usersCreateOrConnectWithoutUsersInput>
    createMany?: Subproject_usersCreateManyUsersInputEnvelope
    connect?: Enumerable<Subproject_usersWhereUniqueInput>
  }

  export type Ui_optionsCreateNestedOneWithoutUsersInput = {
    create?: XOR<Ui_optionsCreateWithoutUsersInput, Ui_optionsUncheckedCreateWithoutUsersInput>
    connectOrCreate?: Ui_optionsCreateOrConnectWithoutUsersInput
    connect?: Ui_optionsWhereUniqueInput
  }

  export type User_messagesCreateNestedManyWithoutUsersInput = {
    create?: XOR<Enumerable<User_messagesCreateWithoutUsersInput>, Enumerable<User_messagesUncheckedCreateWithoutUsersInput>>
    connectOrCreate?: Enumerable<User_messagesCreateOrConnectWithoutUsersInput>
    createMany?: User_messagesCreateManyUsersInputEnvelope
    connect?: Enumerable<User_messagesWhereUniqueInput>
  }

  export type AccountsUncheckedCreateNestedManyWithoutUsersInput = {
    create?: XOR<Enumerable<AccountsCreateWithoutUsersInput>, Enumerable<AccountsUncheckedCreateWithoutUsersInput>>
    connectOrCreate?: Enumerable<AccountsCreateOrConnectWithoutUsersInput>
    createMany?: AccountsCreateManyUsersInputEnvelope
    connect?: Enumerable<AccountsWhereUniqueInput>
  }

  export type Project_usersUncheckedCreateNestedManyWithoutUsersInput = {
    create?: XOR<Enumerable<Project_usersCreateWithoutUsersInput>, Enumerable<Project_usersUncheckedCreateWithoutUsersInput>>
    connectOrCreate?: Enumerable<Project_usersCreateOrConnectWithoutUsersInput>
    createMany?: Project_usersCreateManyUsersInputEnvelope
    connect?: Enumerable<Project_usersWhereUniqueInput>
  }

  export type Subproject_usersUncheckedCreateNestedManyWithoutUsersInput = {
    create?: XOR<Enumerable<Subproject_usersCreateWithoutUsersInput>, Enumerable<Subproject_usersUncheckedCreateWithoutUsersInput>>
    connectOrCreate?: Enumerable<Subproject_usersCreateOrConnectWithoutUsersInput>
    createMany?: Subproject_usersCreateManyUsersInputEnvelope
    connect?: Enumerable<Subproject_usersWhereUniqueInput>
  }

  export type Ui_optionsUncheckedCreateNestedOneWithoutUsersInput = {
    create?: XOR<Ui_optionsCreateWithoutUsersInput, Ui_optionsUncheckedCreateWithoutUsersInput>
    connectOrCreate?: Ui_optionsCreateOrConnectWithoutUsersInput
    connect?: Ui_optionsWhereUniqueInput
  }

  export type User_messagesUncheckedCreateNestedManyWithoutUsersInput = {
    create?: XOR<Enumerable<User_messagesCreateWithoutUsersInput>, Enumerable<User_messagesUncheckedCreateWithoutUsersInput>>
    connectOrCreate?: Enumerable<User_messagesCreateOrConnectWithoutUsersInput>
    createMany?: User_messagesCreateManyUsersInputEnvelope
    connect?: Enumerable<User_messagesWhereUniqueInput>
  }

  export type AccountsUpdateManyWithoutUsersNestedInput = {
    create?: XOR<Enumerable<AccountsCreateWithoutUsersInput>, Enumerable<AccountsUncheckedCreateWithoutUsersInput>>
    connectOrCreate?: Enumerable<AccountsCreateOrConnectWithoutUsersInput>
    upsert?: Enumerable<AccountsUpsertWithWhereUniqueWithoutUsersInput>
    createMany?: AccountsCreateManyUsersInputEnvelope
    set?: Enumerable<AccountsWhereUniqueInput>
    disconnect?: Enumerable<AccountsWhereUniqueInput>
    delete?: Enumerable<AccountsWhereUniqueInput>
    connect?: Enumerable<AccountsWhereUniqueInput>
    update?: Enumerable<AccountsUpdateWithWhereUniqueWithoutUsersInput>
    updateMany?: Enumerable<AccountsUpdateManyWithWhereWithoutUsersInput>
    deleteMany?: Enumerable<AccountsScalarWhereInput>
  }

  export type Project_usersUpdateManyWithoutUsersNestedInput = {
    create?: XOR<Enumerable<Project_usersCreateWithoutUsersInput>, Enumerable<Project_usersUncheckedCreateWithoutUsersInput>>
    connectOrCreate?: Enumerable<Project_usersCreateOrConnectWithoutUsersInput>
    upsert?: Enumerable<Project_usersUpsertWithWhereUniqueWithoutUsersInput>
    createMany?: Project_usersCreateManyUsersInputEnvelope
    set?: Enumerable<Project_usersWhereUniqueInput>
    disconnect?: Enumerable<Project_usersWhereUniqueInput>
    delete?: Enumerable<Project_usersWhereUniqueInput>
    connect?: Enumerable<Project_usersWhereUniqueInput>
    update?: Enumerable<Project_usersUpdateWithWhereUniqueWithoutUsersInput>
    updateMany?: Enumerable<Project_usersUpdateManyWithWhereWithoutUsersInput>
    deleteMany?: Enumerable<Project_usersScalarWhereInput>
  }

  export type Subproject_usersUpdateManyWithoutUsersNestedInput = {
    create?: XOR<Enumerable<Subproject_usersCreateWithoutUsersInput>, Enumerable<Subproject_usersUncheckedCreateWithoutUsersInput>>
    connectOrCreate?: Enumerable<Subproject_usersCreateOrConnectWithoutUsersInput>
    upsert?: Enumerable<Subproject_usersUpsertWithWhereUniqueWithoutUsersInput>
    createMany?: Subproject_usersCreateManyUsersInputEnvelope
    set?: Enumerable<Subproject_usersWhereUniqueInput>
    disconnect?: Enumerable<Subproject_usersWhereUniqueInput>
    delete?: Enumerable<Subproject_usersWhereUniqueInput>
    connect?: Enumerable<Subproject_usersWhereUniqueInput>
    update?: Enumerable<Subproject_usersUpdateWithWhereUniqueWithoutUsersInput>
    updateMany?: Enumerable<Subproject_usersUpdateManyWithWhereWithoutUsersInput>
    deleteMany?: Enumerable<Subproject_usersScalarWhereInput>
  }

  export type Ui_optionsUpdateOneWithoutUsersNestedInput = {
    create?: XOR<Ui_optionsCreateWithoutUsersInput, Ui_optionsUncheckedCreateWithoutUsersInput>
    connectOrCreate?: Ui_optionsCreateOrConnectWithoutUsersInput
    upsert?: Ui_optionsUpsertWithoutUsersInput
    disconnect?: Ui_optionsWhereInput | boolean
    delete?: Ui_optionsWhereInput | boolean
    connect?: Ui_optionsWhereUniqueInput
    update?: XOR<XOR<Ui_optionsUpdateToOneWithWhereWithoutUsersInput, Ui_optionsUpdateWithoutUsersInput>, Ui_optionsUncheckedUpdateWithoutUsersInput>
  }

  export type User_messagesUpdateManyWithoutUsersNestedInput = {
    create?: XOR<Enumerable<User_messagesCreateWithoutUsersInput>, Enumerable<User_messagesUncheckedCreateWithoutUsersInput>>
    connectOrCreate?: Enumerable<User_messagesCreateOrConnectWithoutUsersInput>
    upsert?: Enumerable<User_messagesUpsertWithWhereUniqueWithoutUsersInput>
    createMany?: User_messagesCreateManyUsersInputEnvelope
    set?: Enumerable<User_messagesWhereUniqueInput>
    disconnect?: Enumerable<User_messagesWhereUniqueInput>
    delete?: Enumerable<User_messagesWhereUniqueInput>
    connect?: Enumerable<User_messagesWhereUniqueInput>
    update?: Enumerable<User_messagesUpdateWithWhereUniqueWithoutUsersInput>
    updateMany?: Enumerable<User_messagesUpdateManyWithWhereWithoutUsersInput>
    deleteMany?: Enumerable<User_messagesScalarWhereInput>
  }

  export type AccountsUncheckedUpdateManyWithoutUsersNestedInput = {
    create?: XOR<Enumerable<AccountsCreateWithoutUsersInput>, Enumerable<AccountsUncheckedCreateWithoutUsersInput>>
    connectOrCreate?: Enumerable<AccountsCreateOrConnectWithoutUsersInput>
    upsert?: Enumerable<AccountsUpsertWithWhereUniqueWithoutUsersInput>
    createMany?: AccountsCreateManyUsersInputEnvelope
    set?: Enumerable<AccountsWhereUniqueInput>
    disconnect?: Enumerable<AccountsWhereUniqueInput>
    delete?: Enumerable<AccountsWhereUniqueInput>
    connect?: Enumerable<AccountsWhereUniqueInput>
    update?: Enumerable<AccountsUpdateWithWhereUniqueWithoutUsersInput>
    updateMany?: Enumerable<AccountsUpdateManyWithWhereWithoutUsersInput>
    deleteMany?: Enumerable<AccountsScalarWhereInput>
  }

  export type Project_usersUncheckedUpdateManyWithoutUsersNestedInput = {
    create?: XOR<Enumerable<Project_usersCreateWithoutUsersInput>, Enumerable<Project_usersUncheckedCreateWithoutUsersInput>>
    connectOrCreate?: Enumerable<Project_usersCreateOrConnectWithoutUsersInput>
    upsert?: Enumerable<Project_usersUpsertWithWhereUniqueWithoutUsersInput>
    createMany?: Project_usersCreateManyUsersInputEnvelope
    set?: Enumerable<Project_usersWhereUniqueInput>
    disconnect?: Enumerable<Project_usersWhereUniqueInput>
    delete?: Enumerable<Project_usersWhereUniqueInput>
    connect?: Enumerable<Project_usersWhereUniqueInput>
    update?: Enumerable<Project_usersUpdateWithWhereUniqueWithoutUsersInput>
    updateMany?: Enumerable<Project_usersUpdateManyWithWhereWithoutUsersInput>
    deleteMany?: Enumerable<Project_usersScalarWhereInput>
  }

  export type Subproject_usersUncheckedUpdateManyWithoutUsersNestedInput = {
    create?: XOR<Enumerable<Subproject_usersCreateWithoutUsersInput>, Enumerable<Subproject_usersUncheckedCreateWithoutUsersInput>>
    connectOrCreate?: Enumerable<Subproject_usersCreateOrConnectWithoutUsersInput>
    upsert?: Enumerable<Subproject_usersUpsertWithWhereUniqueWithoutUsersInput>
    createMany?: Subproject_usersCreateManyUsersInputEnvelope
    set?: Enumerable<Subproject_usersWhereUniqueInput>
    disconnect?: Enumerable<Subproject_usersWhereUniqueInput>
    delete?: Enumerable<Subproject_usersWhereUniqueInput>
    connect?: Enumerable<Subproject_usersWhereUniqueInput>
    update?: Enumerable<Subproject_usersUpdateWithWhereUniqueWithoutUsersInput>
    updateMany?: Enumerable<Subproject_usersUpdateManyWithWhereWithoutUsersInput>
    deleteMany?: Enumerable<Subproject_usersScalarWhereInput>
  }

  export type Ui_optionsUncheckedUpdateOneWithoutUsersNestedInput = {
    create?: XOR<Ui_optionsCreateWithoutUsersInput, Ui_optionsUncheckedCreateWithoutUsersInput>
    connectOrCreate?: Ui_optionsCreateOrConnectWithoutUsersInput
    upsert?: Ui_optionsUpsertWithoutUsersInput
    disconnect?: Ui_optionsWhereInput | boolean
    delete?: Ui_optionsWhereInput | boolean
    connect?: Ui_optionsWhereUniqueInput
    update?: XOR<XOR<Ui_optionsUpdateToOneWithWhereWithoutUsersInput, Ui_optionsUpdateWithoutUsersInput>, Ui_optionsUncheckedUpdateWithoutUsersInput>
  }

  export type User_messagesUncheckedUpdateManyWithoutUsersNestedInput = {
    create?: XOR<Enumerable<User_messagesCreateWithoutUsersInput>, Enumerable<User_messagesUncheckedCreateWithoutUsersInput>>
    connectOrCreate?: Enumerable<User_messagesCreateOrConnectWithoutUsersInput>
    upsert?: Enumerable<User_messagesUpsertWithWhereUniqueWithoutUsersInput>
    createMany?: User_messagesCreateManyUsersInputEnvelope
    set?: Enumerable<User_messagesWhereUniqueInput>
    disconnect?: Enumerable<User_messagesWhereUniqueInput>
    delete?: Enumerable<User_messagesWhereUniqueInput>
    connect?: Enumerable<User_messagesWhereUniqueInput>
    update?: Enumerable<User_messagesUpdateWithWhereUniqueWithoutUsersInput>
    updateMany?: Enumerable<User_messagesUpdateManyWithWhereWithoutUsersInput>
    deleteMany?: Enumerable<User_messagesScalarWhereInput>
  }

  export type Widgets_for_fieldsCreateNestedManyWithoutWidget_typesInput = {
    create?: XOR<Enumerable<Widgets_for_fieldsCreateWithoutWidget_typesInput>, Enumerable<Widgets_for_fieldsUncheckedCreateWithoutWidget_typesInput>>
    connectOrCreate?: Enumerable<Widgets_for_fieldsCreateOrConnectWithoutWidget_typesInput>
    createMany?: Widgets_for_fieldsCreateManyWidget_typesInputEnvelope
    connect?: Enumerable<Widgets_for_fieldsWhereUniqueInput>
  }

  export type Widgets_for_fieldsUncheckedCreateNestedManyWithoutWidget_typesInput = {
    create?: XOR<Enumerable<Widgets_for_fieldsCreateWithoutWidget_typesInput>, Enumerable<Widgets_for_fieldsUncheckedCreateWithoutWidget_typesInput>>
    connectOrCreate?: Enumerable<Widgets_for_fieldsCreateOrConnectWithoutWidget_typesInput>
    createMany?: Widgets_for_fieldsCreateManyWidget_typesInputEnvelope
    connect?: Enumerable<Widgets_for_fieldsWhereUniqueInput>
  }

  export type Widgets_for_fieldsUpdateManyWithoutWidget_typesNestedInput = {
    create?: XOR<Enumerable<Widgets_for_fieldsCreateWithoutWidget_typesInput>, Enumerable<Widgets_for_fieldsUncheckedCreateWithoutWidget_typesInput>>
    connectOrCreate?: Enumerable<Widgets_for_fieldsCreateOrConnectWithoutWidget_typesInput>
    upsert?: Enumerable<Widgets_for_fieldsUpsertWithWhereUniqueWithoutWidget_typesInput>
    createMany?: Widgets_for_fieldsCreateManyWidget_typesInputEnvelope
    set?: Enumerable<Widgets_for_fieldsWhereUniqueInput>
    disconnect?: Enumerable<Widgets_for_fieldsWhereUniqueInput>
    delete?: Enumerable<Widgets_for_fieldsWhereUniqueInput>
    connect?: Enumerable<Widgets_for_fieldsWhereUniqueInput>
    update?: Enumerable<Widgets_for_fieldsUpdateWithWhereUniqueWithoutWidget_typesInput>
    updateMany?: Enumerable<Widgets_for_fieldsUpdateManyWithWhereWithoutWidget_typesInput>
    deleteMany?: Enumerable<Widgets_for_fieldsScalarWhereInput>
  }

  export type Widgets_for_fieldsUncheckedUpdateManyWithoutWidget_typesNestedInput = {
    create?: XOR<Enumerable<Widgets_for_fieldsCreateWithoutWidget_typesInput>, Enumerable<Widgets_for_fieldsUncheckedCreateWithoutWidget_typesInput>>
    connectOrCreate?: Enumerable<Widgets_for_fieldsCreateOrConnectWithoutWidget_typesInput>
    upsert?: Enumerable<Widgets_for_fieldsUpsertWithWhereUniqueWithoutWidget_typesInput>
    createMany?: Widgets_for_fieldsCreateManyWidget_typesInputEnvelope
    set?: Enumerable<Widgets_for_fieldsWhereUniqueInput>
    disconnect?: Enumerable<Widgets_for_fieldsWhereUniqueInput>
    delete?: Enumerable<Widgets_for_fieldsWhereUniqueInput>
    connect?: Enumerable<Widgets_for_fieldsWhereUniqueInput>
    update?: Enumerable<Widgets_for_fieldsUpdateWithWhereUniqueWithoutWidget_typesInput>
    updateMany?: Enumerable<Widgets_for_fieldsUpdateManyWithWhereWithoutWidget_typesInput>
    deleteMany?: Enumerable<Widgets_for_fieldsScalarWhereInput>
  }

  export type Field_typesCreateNestedOneWithoutWidgets_for_fieldsInput = {
    create?: XOR<Field_typesCreateWithoutWidgets_for_fieldsInput, Field_typesUncheckedCreateWithoutWidgets_for_fieldsInput>
    connectOrCreate?: Field_typesCreateOrConnectWithoutWidgets_for_fieldsInput
    connect?: Field_typesWhereUniqueInput
  }

  export type Widget_typesCreateNestedOneWithoutWidgets_for_fieldsInput = {
    create?: XOR<Widget_typesCreateWithoutWidgets_for_fieldsInput, Widget_typesUncheckedCreateWithoutWidgets_for_fieldsInput>
    connectOrCreate?: Widget_typesCreateOrConnectWithoutWidgets_for_fieldsInput
    connect?: Widget_typesWhereUniqueInput
  }

  export type Field_typesUpdateOneWithoutWidgets_for_fieldsNestedInput = {
    create?: XOR<Field_typesCreateWithoutWidgets_for_fieldsInput, Field_typesUncheckedCreateWithoutWidgets_for_fieldsInput>
    connectOrCreate?: Field_typesCreateOrConnectWithoutWidgets_for_fieldsInput
    upsert?: Field_typesUpsertWithoutWidgets_for_fieldsInput
    disconnect?: Field_typesWhereInput | boolean
    delete?: Field_typesWhereInput | boolean
    connect?: Field_typesWhereUniqueInput
    update?: XOR<XOR<Field_typesUpdateToOneWithWhereWithoutWidgets_for_fieldsInput, Field_typesUpdateWithoutWidgets_for_fieldsInput>, Field_typesUncheckedUpdateWithoutWidgets_for_fieldsInput>
  }

  export type Widget_typesUpdateOneWithoutWidgets_for_fieldsNestedInput = {
    create?: XOR<Widget_typesCreateWithoutWidgets_for_fieldsInput, Widget_typesUncheckedCreateWithoutWidgets_for_fieldsInput>
    connectOrCreate?: Widget_typesCreateOrConnectWithoutWidgets_for_fieldsInput
    upsert?: Widget_typesUpsertWithoutWidgets_for_fieldsInput
    disconnect?: Widget_typesWhereInput | boolean
    delete?: Widget_typesWhereInput | boolean
    connect?: Widget_typesWhereUniqueInput
    update?: XOR<XOR<Widget_typesUpdateToOneWithWhereWithoutWidgets_for_fieldsInput, Widget_typesUpdateWithoutWidgets_for_fieldsInput>, Widget_typesUncheckedUpdateWithoutWidgets_for_fieldsInput>
  }

  export type NestedUuidFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: Enumerable<string> | ListStringFieldRefInput<$PrismaModel>
    notIn?: Enumerable<string> | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedUuidFilter<$PrismaModel> | string
  }

  export type NestedUuidNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: Enumerable<string> | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: Enumerable<string> | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedUuidNullableFilter<$PrismaModel> | string | null
  }

  export type NestedStringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: Enumerable<string> | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: Enumerable<string> | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type NestedDateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Enumerable<Date> | Enumerable<string> | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Enumerable<Date> | Enumerable<string> | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type NestedUuidWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: Enumerable<string> | ListStringFieldRefInput<$PrismaModel>
    notIn?: Enumerable<string> | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedUuidWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type NestedIntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: Enumerable<number> | ListIntFieldRefInput<$PrismaModel>
    notIn?: Enumerable<number> | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type NestedStringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: Enumerable<string> | ListStringFieldRefInput<$PrismaModel>
    notIn?: Enumerable<string> | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type NestedUuidNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: Enumerable<string> | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: Enumerable<string> | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedUuidNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type NestedIntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: Enumerable<number> | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: Enumerable<number> | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type NestedStringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: Enumerable<string> | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: Enumerable<string> | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type NestedDateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Enumerable<Date> | Enumerable<string> | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Enumerable<Date> | Enumerable<string> | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type NestedBoolNullableFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableFilter<$PrismaModel> | boolean | null
  }

  export type NestedIntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: Enumerable<number> | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: Enumerable<number> | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type NestedFloatNullableFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: Enumerable<number> | ListFloatFieldRefInput<$PrismaModel> | null
    notIn?: Enumerable<number> | ListFloatFieldRefInput<$PrismaModel> | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableFilter<$PrismaModel> | number | null
  }

  export type NestedBoolNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableWithAggregatesFilter<$PrismaModel> | boolean | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedBoolNullableFilter<$PrismaModel>
    _max?: NestedBoolNullableFilter<$PrismaModel>
  }

  export type NestedEnumgbif_tableNullableFilter<$PrismaModel = never> = {
    equals?: gbif_table | Enumgbif_tableFieldRefInput<$PrismaModel> | null
    in?: Enumerable<gbif_table> | ListEnumgbif_tableFieldRefInput<$PrismaModel> | null
    notIn?: Enumerable<gbif_table> | ListEnumgbif_tableFieldRefInput<$PrismaModel> | null
    not?: NestedEnumgbif_tableNullableFilter<$PrismaModel> | gbif_table | null
  }

  export type NestedEnumgbif_tableNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: gbif_table | Enumgbif_tableFieldRefInput<$PrismaModel> | null
    in?: Enumerable<gbif_table> | ListEnumgbif_tableFieldRefInput<$PrismaModel> | null
    notIn?: Enumerable<gbif_table> | ListEnumgbif_tableFieldRefInput<$PrismaModel> | null
    not?: NestedEnumgbif_tableNullableWithAggregatesFilter<$PrismaModel> | gbif_table | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedEnumgbif_tableNullableFilter<$PrismaModel>
    _max?: NestedEnumgbif_tableNullableFilter<$PrismaModel>
  }
  export type NestedJsonNullableFilter<$PrismaModel = never> = 
    | PatchUndefined<
        Either<Required<NestedJsonNullableFilterBase<$PrismaModel>>, Exclude<keyof Required<NestedJsonNullableFilterBase<$PrismaModel>>, 'path'>>,
        Required<NestedJsonNullableFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<NestedJsonNullableFilterBase<$PrismaModel>>, 'path'>>

  export type NestedJsonNullableFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: Array<string>
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
  }

  export type NestedFloatNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: Enumerable<number> | ListFloatFieldRefInput<$PrismaModel> | null
    notIn?: Enumerable<number> | ListFloatFieldRefInput<$PrismaModel> | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedFloatNullableFilter<$PrismaModel>
    _min?: NestedFloatNullableFilter<$PrismaModel>
    _max?: NestedFloatNullableFilter<$PrismaModel>
  }

  export type NestedEnumproject_typeNullableFilter<$PrismaModel = never> = {
    equals?: project_type | Enumproject_typeFieldRefInput<$PrismaModel> | null
    in?: Enumerable<project_type> | ListEnumproject_typeFieldRefInput<$PrismaModel> | null
    notIn?: Enumerable<project_type> | ListEnumproject_typeFieldRefInput<$PrismaModel> | null
    not?: NestedEnumproject_typeNullableFilter<$PrismaModel> | project_type | null
  }

  export type NestedEnumproject_typeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: project_type | Enumproject_typeFieldRefInput<$PrismaModel> | null
    in?: Enumerable<project_type> | ListEnumproject_typeFieldRefInput<$PrismaModel> | null
    notIn?: Enumerable<project_type> | ListEnumproject_typeFieldRefInput<$PrismaModel> | null
    not?: NestedEnumproject_typeNullableWithAggregatesFilter<$PrismaModel> | project_type | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedEnumproject_typeNullableFilter<$PrismaModel>
    _max?: NestedEnumproject_typeNullableFilter<$PrismaModel>
  }

  export type NestedEnumtaxonomy_typeNullableFilter<$PrismaModel = never> = {
    equals?: taxonomy_type | Enumtaxonomy_typeFieldRefInput<$PrismaModel> | null
    in?: Enumerable<taxonomy_type> | ListEnumtaxonomy_typeFieldRefInput<$PrismaModel> | null
    notIn?: Enumerable<taxonomy_type> | ListEnumtaxonomy_typeFieldRefInput<$PrismaModel> | null
    not?: NestedEnumtaxonomy_typeNullableFilter<$PrismaModel> | taxonomy_type | null
  }

  export type NestedEnumtaxonomy_typeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: taxonomy_type | Enumtaxonomy_typeFieldRefInput<$PrismaModel> | null
    in?: Enumerable<taxonomy_type> | ListEnumtaxonomy_typeFieldRefInput<$PrismaModel> | null
    notIn?: Enumerable<taxonomy_type> | ListEnumtaxonomy_typeFieldRefInput<$PrismaModel> | null
    not?: NestedEnumtaxonomy_typeNullableWithAggregatesFilter<$PrismaModel> | taxonomy_type | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedEnumtaxonomy_typeNullableFilter<$PrismaModel>
    _max?: NestedEnumtaxonomy_typeNullableFilter<$PrismaModel>
  }

  export type NestedEnumtile_layer_type_enumNullableFilter<$PrismaModel = never> = {
    equals?: tile_layer_type_enum | Enumtile_layer_type_enumFieldRefInput<$PrismaModel> | null
    in?: Enumerable<tile_layer_type_enum> | ListEnumtile_layer_type_enumFieldRefInput<$PrismaModel> | null
    notIn?: Enumerable<tile_layer_type_enum> | ListEnumtile_layer_type_enumFieldRefInput<$PrismaModel> | null
    not?: NestedEnumtile_layer_type_enumNullableFilter<$PrismaModel> | tile_layer_type_enum | null
  }

  export type NestedEnumtile_layer_type_enumNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: tile_layer_type_enum | Enumtile_layer_type_enumFieldRefInput<$PrismaModel> | null
    in?: Enumerable<tile_layer_type_enum> | ListEnumtile_layer_type_enumFieldRefInput<$PrismaModel> | null
    notIn?: Enumerable<tile_layer_type_enum> | ListEnumtile_layer_type_enumFieldRefInput<$PrismaModel> | null
    not?: NestedEnumtile_layer_type_enumNullableWithAggregatesFilter<$PrismaModel> | tile_layer_type_enum | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedEnumtile_layer_type_enumNullableFilter<$PrismaModel>
    _max?: NestedEnumtile_layer_type_enumNullableFilter<$PrismaModel>
  }

  export type NestedEnumunit_typeNullableFilter<$PrismaModel = never> = {
    equals?: unit_type | Enumunit_typeFieldRefInput<$PrismaModel> | null
    in?: Enumerable<unit_type> | ListEnumunit_typeFieldRefInput<$PrismaModel> | null
    notIn?: Enumerable<unit_type> | ListEnumunit_typeFieldRefInput<$PrismaModel> | null
    not?: NestedEnumunit_typeNullableFilter<$PrismaModel> | unit_type | null
  }

  export type NestedEnumunit_typeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: unit_type | Enumunit_typeFieldRefInput<$PrismaModel> | null
    in?: Enumerable<unit_type> | ListEnumunit_typeFieldRefInput<$PrismaModel> | null
    notIn?: Enumerable<unit_type> | ListEnumunit_typeFieldRefInput<$PrismaModel> | null
    not?: NestedEnumunit_typeNullableWithAggregatesFilter<$PrismaModel> | unit_type | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedEnumunit_typeNullableFilter<$PrismaModel>
    _max?: NestedEnumunit_typeNullableFilter<$PrismaModel>
  }

  export type UsersCreateWithoutAccountsInput = {
    user_id: string
    email?: string | null
    auth_id?: string | null
    label_replace_by_generated_column?: string | null
    deleted?: boolean | null
    project_users?: Project_usersCreateNestedManyWithoutUsersInput
    subproject_users?: Subproject_usersCreateNestedManyWithoutUsersInput
    ui_options?: Ui_optionsCreateNestedOneWithoutUsersInput
    user_messages?: User_messagesCreateNestedManyWithoutUsersInput
  }

  export type UsersUncheckedCreateWithoutAccountsInput = {
    user_id: string
    email?: string | null
    auth_id?: string | null
    label_replace_by_generated_column?: string | null
    deleted?: boolean | null
    project_users?: Project_usersUncheckedCreateNestedManyWithoutUsersInput
    subproject_users?: Subproject_usersUncheckedCreateNestedManyWithoutUsersInput
    ui_options?: Ui_optionsUncheckedCreateNestedOneWithoutUsersInput
    user_messages?: User_messagesUncheckedCreateNestedManyWithoutUsersInput
  }

  export type UsersCreateOrConnectWithoutAccountsInput = {
    where: UsersWhereUniqueInput
    create: XOR<UsersCreateWithoutAccountsInput, UsersUncheckedCreateWithoutAccountsInput>
  }

  export type Gbif_occurrence_downloadsCreateWithoutAccountsInput = {
    gbif_occurrence_download_id: string
    gbif_table?: gbif_table | null
    filters?: NullableJsonNullValueInput | InputJsonValue
    created_time?: Date | string | null
    download_key?: string | null
    error?: string | null
    inserted_time?: Date | string | null
    inserted_count?: number | null
    attribution?: string | null
    deleted?: boolean | null
    projects?: ProjectsCreateNestedOneWithoutGbif_occurrence_downloadsInput
    subprojects?: SubprojectsCreateNestedOneWithoutGbif_occurrence_downloadsInput
  }

  export type Gbif_occurrence_downloadsUncheckedCreateWithoutAccountsInput = {
    gbif_occurrence_download_id: string
    project_id?: string | null
    subproject_id?: string | null
    gbif_table?: gbif_table | null
    filters?: NullableJsonNullValueInput | InputJsonValue
    created_time?: Date | string | null
    download_key?: string | null
    error?: string | null
    inserted_time?: Date | string | null
    inserted_count?: number | null
    attribution?: string | null
    deleted?: boolean | null
  }

  export type Gbif_occurrence_downloadsCreateOrConnectWithoutAccountsInput = {
    where: Gbif_occurrence_downloadsWhereUniqueInput
    create: XOR<Gbif_occurrence_downloadsCreateWithoutAccountsInput, Gbif_occurrence_downloadsUncheckedCreateWithoutAccountsInput>
  }

  export type Gbif_occurrence_downloadsCreateManyAccountsInputEnvelope = {
    data: Enumerable<Gbif_occurrence_downloadsCreateManyAccountsInput>
    skipDuplicates?: boolean
  }

  export type Gbif_occurrencesCreateWithoutAccountsInput = {
    gbif_occurrence_id: string
    gbif_data?: NullableJsonNullValueInput | InputJsonValue
    label?: string | null
    projects?: ProjectsCreateNestedOneWithoutGbif_occurrencesInput
    subprojects?: SubprojectsCreateNestedOneWithoutGbif_occurrencesInput
  }

  export type Gbif_occurrencesUncheckedCreateWithoutAccountsInput = {
    gbif_occurrence_id: string
    project_id?: string | null
    subproject_id?: string | null
    gbif_data?: NullableJsonNullValueInput | InputJsonValue
    label?: string | null
  }

  export type Gbif_occurrencesCreateOrConnectWithoutAccountsInput = {
    where: Gbif_occurrencesWhereUniqueInput
    create: XOR<Gbif_occurrencesCreateWithoutAccountsInput, Gbif_occurrencesUncheckedCreateWithoutAccountsInput>
  }

  export type Gbif_occurrencesCreateManyAccountsInputEnvelope = {
    data: Enumerable<Gbif_occurrencesCreateManyAccountsInput>
    skipDuplicates?: boolean
  }

  export type Gbif_taxaCreateWithoutAccountsInput = {
    gbif_taxon_id: string
    gbif_data?: NullableJsonNullValueInput | InputJsonValue
    label?: string | null
    projects?: ProjectsCreateNestedOneWithoutGbif_taxaInput
  }

  export type Gbif_taxaUncheckedCreateWithoutAccountsInput = {
    gbif_taxon_id: string
    project_id?: string | null
    gbif_data?: NullableJsonNullValueInput | InputJsonValue
    label?: string | null
  }

  export type Gbif_taxaCreateOrConnectWithoutAccountsInput = {
    where: Gbif_taxaWhereUniqueInput
    create: XOR<Gbif_taxaCreateWithoutAccountsInput, Gbif_taxaUncheckedCreateWithoutAccountsInput>
  }

  export type Gbif_taxaCreateManyAccountsInputEnvelope = {
    data: Enumerable<Gbif_taxaCreateManyAccountsInput>
    skipDuplicates?: boolean
  }

  export type Goal_report_valuesCreateWithoutAccountsInput = {
    goal_report_value_id: string
    value_integer?: number | null
    value_numeric?: number | null
    value_text?: string | null
    label?: string | null
    deleted?: boolean | null
    goal_reports?: Goal_reportsCreateNestedOneWithoutGoal_report_valuesInput
    units?: UnitsCreateNestedOneWithoutGoal_report_valuesInput
  }

  export type Goal_report_valuesUncheckedCreateWithoutAccountsInput = {
    goal_report_value_id: string
    goal_report_id?: string | null
    unit_id?: string | null
    value_integer?: number | null
    value_numeric?: number | null
    value_text?: string | null
    label?: string | null
    deleted?: boolean | null
  }

  export type Goal_report_valuesCreateOrConnectWithoutAccountsInput = {
    where: Goal_report_valuesWhereUniqueInput
    create: XOR<Goal_report_valuesCreateWithoutAccountsInput, Goal_report_valuesUncheckedCreateWithoutAccountsInput>
  }

  export type Goal_report_valuesCreateManyAccountsInputEnvelope = {
    data: Enumerable<Goal_report_valuesCreateManyAccountsInput>
    skipDuplicates?: boolean
  }

  export type Goal_reportsCreateWithoutAccountsInput = {
    goal_report_id: string
    data?: NullableJsonNullValueInput | InputJsonValue
    label?: string | null
    deleted?: boolean | null
    goal_report_values?: Goal_report_valuesCreateNestedManyWithoutGoal_reportsInput
    goals?: GoalsCreateNestedOneWithoutGoal_reportsInput
  }

  export type Goal_reportsUncheckedCreateWithoutAccountsInput = {
    goal_report_id: string
    goal_id?: string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label?: string | null
    deleted?: boolean | null
    goal_report_values?: Goal_report_valuesUncheckedCreateNestedManyWithoutGoal_reportsInput
  }

  export type Goal_reportsCreateOrConnectWithoutAccountsInput = {
    where: Goal_reportsWhereUniqueInput
    create: XOR<Goal_reportsCreateWithoutAccountsInput, Goal_reportsUncheckedCreateWithoutAccountsInput>
  }

  export type Goal_reportsCreateManyAccountsInputEnvelope = {
    data: Enumerable<Goal_reportsCreateManyAccountsInput>
    skipDuplicates?: boolean
  }

  export type GoalsCreateWithoutAccountsInput = {
    goal_id: string
    year?: number | null
    name?: string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label_replace_by_generated_column?: string | null
    deleted?: boolean | null
    goal_reports?: Goal_reportsCreateNestedManyWithoutGoalsInput
    subprojects?: SubprojectsCreateNestedOneWithoutGoalsInput
  }

  export type GoalsUncheckedCreateWithoutAccountsInput = {
    goal_id: string
    subproject_id?: string | null
    year?: number | null
    name?: string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label_replace_by_generated_column?: string | null
    deleted?: boolean | null
    goal_reports?: Goal_reportsUncheckedCreateNestedManyWithoutGoalsInput
  }

  export type GoalsCreateOrConnectWithoutAccountsInput = {
    where: GoalsWhereUniqueInput
    create: XOR<GoalsCreateWithoutAccountsInput, GoalsUncheckedCreateWithoutAccountsInput>
  }

  export type GoalsCreateManyAccountsInputEnvelope = {
    data: Enumerable<GoalsCreateManyAccountsInput>
    skipDuplicates?: boolean
  }

  export type List_valuesCreateWithoutAccountsInput = {
    list_value_id: string
    value?: string | null
    obsolete?: boolean | null
    label_replace_by_generated_column?: string | null
    deleted?: boolean | null
    lists?: ListsCreateNestedOneWithoutList_valuesInput
  }

  export type List_valuesUncheckedCreateWithoutAccountsInput = {
    list_value_id: string
    list_id?: string | null
    value?: string | null
    obsolete?: boolean | null
    label_replace_by_generated_column?: string | null
    deleted?: boolean | null
  }

  export type List_valuesCreateOrConnectWithoutAccountsInput = {
    where: List_valuesWhereUniqueInput
    create: XOR<List_valuesCreateWithoutAccountsInput, List_valuesUncheckedCreateWithoutAccountsInput>
  }

  export type List_valuesCreateManyAccountsInputEnvelope = {
    data: Enumerable<List_valuesCreateManyAccountsInput>
    skipDuplicates?: boolean
  }

  export type ListsCreateWithoutAccountsInput = {
    list_id: string
    name?: string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    obsolete?: boolean | null
    label_replace_by_generated_column?: string | null
    deleted?: boolean | null
    list_values?: List_valuesCreateNestedManyWithoutListsInput
    projects?: ProjectsCreateNestedOneWithoutListsInput
    units?: UnitsCreateNestedManyWithoutListsInput
  }

  export type ListsUncheckedCreateWithoutAccountsInput = {
    list_id: string
    project_id?: string | null
    name?: string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    obsolete?: boolean | null
    label_replace_by_generated_column?: string | null
    deleted?: boolean | null
    list_values?: List_valuesUncheckedCreateNestedManyWithoutListsInput
    units?: UnitsUncheckedCreateNestedManyWithoutListsInput
  }

  export type ListsCreateOrConnectWithoutAccountsInput = {
    where: ListsWhereUniqueInput
    create: XOR<ListsCreateWithoutAccountsInput, ListsUncheckedCreateWithoutAccountsInput>
  }

  export type ListsCreateManyAccountsInputEnvelope = {
    data: Enumerable<ListsCreateManyAccountsInput>
    skipDuplicates?: boolean
  }

  export type Observation_sourcesCreateWithoutAccountsInput = {
    observation_source_id: string
    name?: string | null
    url?: string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label_replace_by_generated_column?: string | null
    deleted?: boolean | null
    projects?: ProjectsCreateNestedOneWithoutObservation_sourcesInput
  }

  export type Observation_sourcesUncheckedCreateWithoutAccountsInput = {
    observation_source_id: string
    project_id?: string | null
    name?: string | null
    url?: string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label_replace_by_generated_column?: string | null
    deleted?: boolean | null
  }

  export type Observation_sourcesCreateOrConnectWithoutAccountsInput = {
    where: Observation_sourcesWhereUniqueInput
    create: XOR<Observation_sourcesCreateWithoutAccountsInput, Observation_sourcesUncheckedCreateWithoutAccountsInput>
  }

  export type Observation_sourcesCreateManyAccountsInputEnvelope = {
    data: Enumerable<Observation_sourcesCreateManyAccountsInput>
    skipDuplicates?: boolean
  }

  export type PersonsCreateWithoutAccountsInput = {
    person_id: string
    email?: string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label_replace_by_generated_column?: string | null
    deleted?: boolean | null
    projects?: ProjectsCreateNestedOneWithoutPersonsInput
  }

  export type PersonsUncheckedCreateWithoutAccountsInput = {
    person_id: string
    project_id?: string | null
    email?: string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label_replace_by_generated_column?: string | null
    deleted?: boolean | null
  }

  export type PersonsCreateOrConnectWithoutAccountsInput = {
    where: PersonsWhereUniqueInput
    create: XOR<PersonsCreateWithoutAccountsInput, PersonsUncheckedCreateWithoutAccountsInput>
  }

  export type PersonsCreateManyAccountsInputEnvelope = {
    data: Enumerable<PersonsCreateManyAccountsInput>
    skipDuplicates?: boolean
  }

  export type Place_levelsCreateWithoutAccountsInput = {
    place_level_id: string
    level?: number | null
    name_singular?: string | null
    name_plural?: string | null
    name_short?: string | null
    reports?: boolean | null
    report_values?: boolean | null
    actions?: boolean | null
    action_values?: boolean | null
    action_reports?: boolean | null
    checks?: boolean | null
    check_values?: boolean | null
    check_taxa?: boolean | null
    observations?: boolean | null
    label_replace_by_generated_column?: string | null
    deleted?: boolean | null
    projects?: ProjectsCreateNestedOneWithoutPlace_levelsInput
  }

  export type Place_levelsUncheckedCreateWithoutAccountsInput = {
    place_level_id: string
    project_id?: string | null
    level?: number | null
    name_singular?: string | null
    name_plural?: string | null
    name_short?: string | null
    reports?: boolean | null
    report_values?: boolean | null
    actions?: boolean | null
    action_values?: boolean | null
    action_reports?: boolean | null
    checks?: boolean | null
    check_values?: boolean | null
    check_taxa?: boolean | null
    observations?: boolean | null
    label_replace_by_generated_column?: string | null
    deleted?: boolean | null
  }

  export type Place_levelsCreateOrConnectWithoutAccountsInput = {
    where: Place_levelsWhereUniqueInput
    create: XOR<Place_levelsCreateWithoutAccountsInput, Place_levelsUncheckedCreateWithoutAccountsInput>
  }

  export type Place_levelsCreateManyAccountsInputEnvelope = {
    data: Enumerable<Place_levelsCreateManyAccountsInput>
    skipDuplicates?: boolean
  }

  export type Project_usersCreateWithoutAccountsInput = {
    project_user_id: string
    role?: string | null
    label?: string | null
    deleted?: boolean | null
    projects?: ProjectsCreateNestedOneWithoutProject_usersInput
    users?: UsersCreateNestedOneWithoutProject_usersInput
  }

  export type Project_usersUncheckedCreateWithoutAccountsInput = {
    project_user_id: string
    project_id?: string | null
    user_id?: string | null
    role?: string | null
    label?: string | null
    deleted?: boolean | null
  }

  export type Project_usersCreateOrConnectWithoutAccountsInput = {
    where: Project_usersWhereUniqueInput
    create: XOR<Project_usersCreateWithoutAccountsInput, Project_usersUncheckedCreateWithoutAccountsInput>
  }

  export type Project_usersCreateManyAccountsInputEnvelope = {
    data: Enumerable<Project_usersCreateManyAccountsInput>
    skipDuplicates?: boolean
  }

  export type ProjectsCreateWithoutAccountsInput = {
    project_id: string
    name?: string | null
    label?: string | null
    type?: project_type | null
    subproject_name_singular?: string | null
    subproject_name_plural?: string | null
    subproject_order_by?: string | null
    places_label_by?: string | null
    places_order_by?: NullableJsonNullValueInput | InputJsonValue
    persons_label_by?: string | null
    persons_order_by?: string | null
    goal_reports_label_by?: string | null
    goal_reports_order_by?: string | null
    values_on_multiple_levels?: string | null
    multiple_action_values_on_same_level?: string | null
    multiple_check_values_on_same_level?: string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    files_offline?: boolean | null
    files_active_projects?: boolean | null
    files_active_subprojects?: boolean | null
    files_active_places?: boolean | null
    files_active_actions?: boolean | null
    files_active_checks?: boolean | null
    deleted?: boolean | null
    gbif_occurrence_downloads?: Gbif_occurrence_downloadsCreateNestedManyWithoutProjectsInput
    gbif_occurrences?: Gbif_occurrencesCreateNestedManyWithoutProjectsInput
    gbif_taxa?: Gbif_taxaCreateNestedManyWithoutProjectsInput
    lists?: ListsCreateNestedManyWithoutProjectsInput
    observation_sources?: Observation_sourcesCreateNestedManyWithoutProjectsInput
    persons?: PersonsCreateNestedManyWithoutProjectsInput
    place_levels?: Place_levelsCreateNestedManyWithoutProjectsInput
    project_users?: Project_usersCreateNestedManyWithoutProjectsInput
    subprojects?: SubprojectsCreateNestedManyWithoutProjectsInput
    taxonomies?: TaxonomiesCreateNestedManyWithoutProjectsInput
    tile_layers?: Tile_layersCreateNestedManyWithoutProjectsInput
    units?: UnitsCreateNestedManyWithoutProjectsInput
  }

  export type ProjectsUncheckedCreateWithoutAccountsInput = {
    project_id: string
    name?: string | null
    label?: string | null
    type?: project_type | null
    subproject_name_singular?: string | null
    subproject_name_plural?: string | null
    subproject_order_by?: string | null
    places_label_by?: string | null
    places_order_by?: NullableJsonNullValueInput | InputJsonValue
    persons_label_by?: string | null
    persons_order_by?: string | null
    goal_reports_label_by?: string | null
    goal_reports_order_by?: string | null
    values_on_multiple_levels?: string | null
    multiple_action_values_on_same_level?: string | null
    multiple_check_values_on_same_level?: string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    files_offline?: boolean | null
    files_active_projects?: boolean | null
    files_active_subprojects?: boolean | null
    files_active_places?: boolean | null
    files_active_actions?: boolean | null
    files_active_checks?: boolean | null
    deleted?: boolean | null
    gbif_occurrence_downloads?: Gbif_occurrence_downloadsUncheckedCreateNestedManyWithoutProjectsInput
    gbif_occurrences?: Gbif_occurrencesUncheckedCreateNestedManyWithoutProjectsInput
    gbif_taxa?: Gbif_taxaUncheckedCreateNestedManyWithoutProjectsInput
    lists?: ListsUncheckedCreateNestedManyWithoutProjectsInput
    observation_sources?: Observation_sourcesUncheckedCreateNestedManyWithoutProjectsInput
    persons?: PersonsUncheckedCreateNestedManyWithoutProjectsInput
    place_levels?: Place_levelsUncheckedCreateNestedManyWithoutProjectsInput
    project_users?: Project_usersUncheckedCreateNestedManyWithoutProjectsInput
    subprojects?: SubprojectsUncheckedCreateNestedManyWithoutProjectsInput
    taxonomies?: TaxonomiesUncheckedCreateNestedManyWithoutProjectsInput
    tile_layers?: Tile_layersUncheckedCreateNestedManyWithoutProjectsInput
    units?: UnitsUncheckedCreateNestedManyWithoutProjectsInput
  }

  export type ProjectsCreateOrConnectWithoutAccountsInput = {
    where: ProjectsWhereUniqueInput
    create: XOR<ProjectsCreateWithoutAccountsInput, ProjectsUncheckedCreateWithoutAccountsInput>
  }

  export type ProjectsCreateManyAccountsInputEnvelope = {
    data: Enumerable<ProjectsCreateManyAccountsInput>
    skipDuplicates?: boolean
  }

  export type Subproject_taxaCreateWithoutAccountsInput = {
    subproject_taxon_id: string
    label?: string | null
    deleted?: boolean | null
    subprojects?: SubprojectsCreateNestedOneWithoutSubproject_taxaInput
    taxa?: TaxaCreateNestedOneWithoutSubproject_taxaInput
  }

  export type Subproject_taxaUncheckedCreateWithoutAccountsInput = {
    subproject_taxon_id: string
    subproject_id?: string | null
    taxon_id?: string | null
    label?: string | null
    deleted?: boolean | null
  }

  export type Subproject_taxaCreateOrConnectWithoutAccountsInput = {
    where: Subproject_taxaWhereUniqueInput
    create: XOR<Subproject_taxaCreateWithoutAccountsInput, Subproject_taxaUncheckedCreateWithoutAccountsInput>
  }

  export type Subproject_taxaCreateManyAccountsInputEnvelope = {
    data: Enumerable<Subproject_taxaCreateManyAccountsInput>
    skipDuplicates?: boolean
  }

  export type Subproject_usersCreateWithoutAccountsInput = {
    subproject_user_id: string
    role?: string | null
    label?: string | null
    deleted?: boolean | null
    subprojects?: SubprojectsCreateNestedOneWithoutSubproject_usersInput
    users?: UsersCreateNestedOneWithoutSubproject_usersInput
  }

  export type Subproject_usersUncheckedCreateWithoutAccountsInput = {
    subproject_user_id: string
    subproject_id?: string | null
    user_id?: string | null
    role?: string | null
    label?: string | null
    deleted?: boolean | null
  }

  export type Subproject_usersCreateOrConnectWithoutAccountsInput = {
    where: Subproject_usersWhereUniqueInput
    create: XOR<Subproject_usersCreateWithoutAccountsInput, Subproject_usersUncheckedCreateWithoutAccountsInput>
  }

  export type Subproject_usersCreateManyAccountsInputEnvelope = {
    data: Enumerable<Subproject_usersCreateManyAccountsInput>
    skipDuplicates?: boolean
  }

  export type SubprojectsCreateWithoutAccountsInput = {
    subproject_id: string
    name?: string | null
    label_replace_by_generated_column?: string | null
    start_year?: number | null
    end_year?: number | null
    data?: NullableJsonNullValueInput | InputJsonValue
    deleted?: boolean | null
    gbif_occurrence_downloads?: Gbif_occurrence_downloadsCreateNestedManyWithoutSubprojectsInput
    gbif_occurrences?: Gbif_occurrencesCreateNestedManyWithoutSubprojectsInput
    goals?: GoalsCreateNestedManyWithoutSubprojectsInput
    subproject_taxa?: Subproject_taxaCreateNestedManyWithoutSubprojectsInput
    subproject_users?: Subproject_usersCreateNestedManyWithoutSubprojectsInput
    projects?: ProjectsCreateNestedOneWithoutSubprojectsInput
  }

  export type SubprojectsUncheckedCreateWithoutAccountsInput = {
    subproject_id: string
    project_id?: string | null
    name?: string | null
    label_replace_by_generated_column?: string | null
    start_year?: number | null
    end_year?: number | null
    data?: NullableJsonNullValueInput | InputJsonValue
    deleted?: boolean | null
    gbif_occurrence_downloads?: Gbif_occurrence_downloadsUncheckedCreateNestedManyWithoutSubprojectsInput
    gbif_occurrences?: Gbif_occurrencesUncheckedCreateNestedManyWithoutSubprojectsInput
    goals?: GoalsUncheckedCreateNestedManyWithoutSubprojectsInput
    subproject_taxa?: Subproject_taxaUncheckedCreateNestedManyWithoutSubprojectsInput
    subproject_users?: Subproject_usersUncheckedCreateNestedManyWithoutSubprojectsInput
  }

  export type SubprojectsCreateOrConnectWithoutAccountsInput = {
    where: SubprojectsWhereUniqueInput
    create: XOR<SubprojectsCreateWithoutAccountsInput, SubprojectsUncheckedCreateWithoutAccountsInput>
  }

  export type SubprojectsCreateManyAccountsInputEnvelope = {
    data: Enumerable<SubprojectsCreateManyAccountsInput>
    skipDuplicates?: boolean
  }

  export type TaxaCreateWithoutAccountsInput = {
    taxon_id: string
    name?: string | null
    id_in_source?: string | null
    url?: string | null
    label?: string | null
    deleted?: boolean | null
    subproject_taxa?: Subproject_taxaCreateNestedManyWithoutTaxaInput
    taxonomies?: TaxonomiesCreateNestedOneWithoutTaxaInput
  }

  export type TaxaUncheckedCreateWithoutAccountsInput = {
    taxon_id: string
    taxonomy_id?: string | null
    name?: string | null
    id_in_source?: string | null
    url?: string | null
    label?: string | null
    deleted?: boolean | null
    subproject_taxa?: Subproject_taxaUncheckedCreateNestedManyWithoutTaxaInput
  }

  export type TaxaCreateOrConnectWithoutAccountsInput = {
    where: TaxaWhereUniqueInput
    create: XOR<TaxaCreateWithoutAccountsInput, TaxaUncheckedCreateWithoutAccountsInput>
  }

  export type TaxaCreateManyAccountsInputEnvelope = {
    data: Enumerable<TaxaCreateManyAccountsInput>
    skipDuplicates?: boolean
  }

  export type TaxonomiesCreateWithoutAccountsInput = {
    taxonomy_id: string
    type?: taxonomy_type | null
    name?: string | null
    url?: string | null
    obsolete?: boolean | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label_replace_by_generated_column?: string | null
    deleted?: boolean | null
    taxa?: TaxaCreateNestedManyWithoutTaxonomiesInput
    projects?: ProjectsCreateNestedOneWithoutTaxonomiesInput
  }

  export type TaxonomiesUncheckedCreateWithoutAccountsInput = {
    taxonomy_id: string
    project_id?: string | null
    type?: taxonomy_type | null
    name?: string | null
    url?: string | null
    obsolete?: boolean | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label_replace_by_generated_column?: string | null
    deleted?: boolean | null
    taxa?: TaxaUncheckedCreateNestedManyWithoutTaxonomiesInput
  }

  export type TaxonomiesCreateOrConnectWithoutAccountsInput = {
    where: TaxonomiesWhereUniqueInput
    create: XOR<TaxonomiesCreateWithoutAccountsInput, TaxonomiesUncheckedCreateWithoutAccountsInput>
  }

  export type TaxonomiesCreateManyAccountsInputEnvelope = {
    data: Enumerable<TaxonomiesCreateManyAccountsInput>
    skipDuplicates?: boolean
  }

  export type Tile_layersCreateWithoutAccountsInput = {
    tile_layer_id: string
    label?: string | null
    sort?: number | null
    active?: boolean | null
    type?: tile_layer_type_enum | null
    wmts_url_template?: string | null
    wmts_subdomains?: NullableJsonNullValueInput | InputJsonValue
    wms_base_url?: string | null
    wms_format?: NullableJsonNullValueInput | InputJsonValue
    wms_layer?: NullableJsonNullValueInput | InputJsonValue
    wms_parameters?: NullableJsonNullValueInput | InputJsonValue
    wms_styles?: NullableJsonNullValueInput | InputJsonValue
    wms_transparent?: boolean | null
    wms_version?: string | null
    wms_info_format?: NullableJsonNullValueInput | InputJsonValue
    wms_legend?: NullableJsonNullValueInput | InputJsonValue
    max_zoom?: number | null
    min_zoom?: number | null
    opacity_percent?: number | null
    grayscale?: boolean | null
    local_data_size?: number | null
    local_data_bounds?: NullableJsonNullValueInput | InputJsonValue
    deleted?: boolean | null
    projects: ProjectsCreateNestedOneWithoutTile_layersInput
  }

  export type Tile_layersUncheckedCreateWithoutAccountsInput = {
    tile_layer_id: string
    project_id: string
    label?: string | null
    sort?: number | null
    active?: boolean | null
    type?: tile_layer_type_enum | null
    wmts_url_template?: string | null
    wmts_subdomains?: NullableJsonNullValueInput | InputJsonValue
    wms_base_url?: string | null
    wms_format?: NullableJsonNullValueInput | InputJsonValue
    wms_layer?: NullableJsonNullValueInput | InputJsonValue
    wms_parameters?: NullableJsonNullValueInput | InputJsonValue
    wms_styles?: NullableJsonNullValueInput | InputJsonValue
    wms_transparent?: boolean | null
    wms_version?: string | null
    wms_info_format?: NullableJsonNullValueInput | InputJsonValue
    wms_legend?: NullableJsonNullValueInput | InputJsonValue
    max_zoom?: number | null
    min_zoom?: number | null
    opacity_percent?: number | null
    grayscale?: boolean | null
    local_data_size?: number | null
    local_data_bounds?: NullableJsonNullValueInput | InputJsonValue
    deleted?: boolean | null
  }

  export type Tile_layersCreateOrConnectWithoutAccountsInput = {
    where: Tile_layersWhereUniqueInput
    create: XOR<Tile_layersCreateWithoutAccountsInput, Tile_layersUncheckedCreateWithoutAccountsInput>
  }

  export type Tile_layersCreateManyAccountsInputEnvelope = {
    data: Enumerable<Tile_layersCreateManyAccountsInput>
    skipDuplicates?: boolean
  }

  export type Ui_optionsCreateWithoutAccountsInput = {
    designing?: boolean | null
    breadcrumbs_overflowing?: boolean | null
    navs_overflowing?: boolean | null
    tabs?: NullableJsonNullValueInput | InputJsonValue
    show_map?: boolean | null
    map_bounds?: NullableJsonNullValueInput | InputJsonValue
    local_map_show?: NullableJsonNullValueInput | InputJsonValue
    tile_layer_sorter?: string | null
    vector_layer_sorter?: string | null
    editing_place_geometry?: string | null
    editing_check_geometry?: string | null
    editing_action_geometry?: string | null
    label?: string | null
    users: UsersCreateNestedOneWithoutUi_optionsInput
  }

  export type Ui_optionsUncheckedCreateWithoutAccountsInput = {
    user_id: string
    designing?: boolean | null
    breadcrumbs_overflowing?: boolean | null
    navs_overflowing?: boolean | null
    tabs?: NullableJsonNullValueInput | InputJsonValue
    show_map?: boolean | null
    map_bounds?: NullableJsonNullValueInput | InputJsonValue
    local_map_show?: NullableJsonNullValueInput | InputJsonValue
    tile_layer_sorter?: string | null
    vector_layer_sorter?: string | null
    editing_place_geometry?: string | null
    editing_check_geometry?: string | null
    editing_action_geometry?: string | null
    label?: string | null
  }

  export type Ui_optionsCreateOrConnectWithoutAccountsInput = {
    where: Ui_optionsWhereUniqueInput
    create: XOR<Ui_optionsCreateWithoutAccountsInput, Ui_optionsUncheckedCreateWithoutAccountsInput>
  }

  export type Ui_optionsCreateManyAccountsInputEnvelope = {
    data: Enumerable<Ui_optionsCreateManyAccountsInput>
    skipDuplicates?: boolean
  }

  export type UnitsCreateWithoutAccountsInput = {
    unit_id: string
    use_for_action_values?: boolean | null
    use_for_action_report_values?: boolean | null
    use_for_check_values?: boolean | null
    use_for_place_report_values?: boolean | null
    use_for_goal_report_values?: boolean | null
    use_for_subproject_taxa?: boolean | null
    use_for_check_taxa?: boolean | null
    name?: string | null
    summable?: boolean | null
    sort?: number | null
    type?: unit_type | null
    label_replace_by_generated_column?: string | null
    deleted?: boolean | null
    goal_report_values?: Goal_report_valuesCreateNestedManyWithoutUnitsInput
    lists?: ListsCreateNestedOneWithoutUnitsInput
    projects?: ProjectsCreateNestedOneWithoutUnitsInput
  }

  export type UnitsUncheckedCreateWithoutAccountsInput = {
    unit_id: string
    project_id?: string | null
    use_for_action_values?: boolean | null
    use_for_action_report_values?: boolean | null
    use_for_check_values?: boolean | null
    use_for_place_report_values?: boolean | null
    use_for_goal_report_values?: boolean | null
    use_for_subproject_taxa?: boolean | null
    use_for_check_taxa?: boolean | null
    name?: string | null
    summable?: boolean | null
    sort?: number | null
    type?: unit_type | null
    list_id?: string | null
    label_replace_by_generated_column?: string | null
    deleted?: boolean | null
    goal_report_values?: Goal_report_valuesUncheckedCreateNestedManyWithoutUnitsInput
  }

  export type UnitsCreateOrConnectWithoutAccountsInput = {
    where: UnitsWhereUniqueInput
    create: XOR<UnitsCreateWithoutAccountsInput, UnitsUncheckedCreateWithoutAccountsInput>
  }

  export type UnitsCreateManyAccountsInputEnvelope = {
    data: Enumerable<UnitsCreateManyAccountsInput>
    skipDuplicates?: boolean
  }

  export type User_messagesCreateWithoutAccountsInput = {
    user_message_id: string
    label_replace_by_generated_column?: string | null
    read?: boolean | null
    messages?: MessagesCreateNestedOneWithoutUser_messagesInput
    users?: UsersCreateNestedOneWithoutUser_messagesInput
  }

  export type User_messagesUncheckedCreateWithoutAccountsInput = {
    user_message_id: string
    user_id?: string | null
    message_id?: string | null
    label_replace_by_generated_column?: string | null
    read?: boolean | null
  }

  export type User_messagesCreateOrConnectWithoutAccountsInput = {
    where: User_messagesWhereUniqueInput
    create: XOR<User_messagesCreateWithoutAccountsInput, User_messagesUncheckedCreateWithoutAccountsInput>
  }

  export type User_messagesCreateManyAccountsInputEnvelope = {
    data: Enumerable<User_messagesCreateManyAccountsInput>
    skipDuplicates?: boolean
  }

  export type UsersUpsertWithoutAccountsInput = {
    update: XOR<UsersUpdateWithoutAccountsInput, UsersUncheckedUpdateWithoutAccountsInput>
    create: XOR<UsersCreateWithoutAccountsInput, UsersUncheckedCreateWithoutAccountsInput>
    where?: UsersWhereInput
  }

  export type UsersUpdateToOneWithWhereWithoutAccountsInput = {
    where?: UsersWhereInput
    data: XOR<UsersUpdateWithoutAccountsInput, UsersUncheckedUpdateWithoutAccountsInput>
  }

  export type UsersUpdateWithoutAccountsInput = {
    user_id?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    auth_id?: NullableStringFieldUpdateOperationsInput | string | null
    label_replace_by_generated_column?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    project_users?: Project_usersUpdateManyWithoutUsersNestedInput
    subproject_users?: Subproject_usersUpdateManyWithoutUsersNestedInput
    ui_options?: Ui_optionsUpdateOneWithoutUsersNestedInput
    user_messages?: User_messagesUpdateManyWithoutUsersNestedInput
  }

  export type UsersUncheckedUpdateWithoutAccountsInput = {
    user_id?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    auth_id?: NullableStringFieldUpdateOperationsInput | string | null
    label_replace_by_generated_column?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    project_users?: Project_usersUncheckedUpdateManyWithoutUsersNestedInput
    subproject_users?: Subproject_usersUncheckedUpdateManyWithoutUsersNestedInput
    ui_options?: Ui_optionsUncheckedUpdateOneWithoutUsersNestedInput
    user_messages?: User_messagesUncheckedUpdateManyWithoutUsersNestedInput
  }

  export type Gbif_occurrence_downloadsUpsertWithWhereUniqueWithoutAccountsInput = {
    where: Gbif_occurrence_downloadsWhereUniqueInput
    update: XOR<Gbif_occurrence_downloadsUpdateWithoutAccountsInput, Gbif_occurrence_downloadsUncheckedUpdateWithoutAccountsInput>
    create: XOR<Gbif_occurrence_downloadsCreateWithoutAccountsInput, Gbif_occurrence_downloadsUncheckedCreateWithoutAccountsInput>
  }

  export type Gbif_occurrence_downloadsUpdateWithWhereUniqueWithoutAccountsInput = {
    where: Gbif_occurrence_downloadsWhereUniqueInput
    data: XOR<Gbif_occurrence_downloadsUpdateWithoutAccountsInput, Gbif_occurrence_downloadsUncheckedUpdateWithoutAccountsInput>
  }

  export type Gbif_occurrence_downloadsUpdateManyWithWhereWithoutAccountsInput = {
    where: Gbif_occurrence_downloadsScalarWhereInput
    data: XOR<Gbif_occurrence_downloadsUpdateManyMutationInput, Gbif_occurrence_downloadsUncheckedUpdateManyWithoutAccountsInput>
  }

  export type Gbif_occurrence_downloadsScalarWhereInput = {
    AND?: Enumerable<Gbif_occurrence_downloadsScalarWhereInput>
    OR?: Enumerable<Gbif_occurrence_downloadsScalarWhereInput>
    NOT?: Enumerable<Gbif_occurrence_downloadsScalarWhereInput>
    gbif_occurrence_download_id?: UuidFilter<"Gbif_occurrence_downloads"> | string
    account_id?: UuidNullableFilter<"Gbif_occurrence_downloads"> | string | null
    project_id?: UuidNullableFilter<"Gbif_occurrence_downloads"> | string | null
    subproject_id?: UuidNullableFilter<"Gbif_occurrence_downloads"> | string | null
    gbif_table?: Enumgbif_tableNullableFilter<"Gbif_occurrence_downloads"> | gbif_table | null
    filters?: JsonNullableFilter<"Gbif_occurrence_downloads">
    created_time?: DateTimeNullableFilter<"Gbif_occurrence_downloads"> | Date | string | null
    download_key?: StringNullableFilter<"Gbif_occurrence_downloads"> | string | null
    error?: StringNullableFilter<"Gbif_occurrence_downloads"> | string | null
    inserted_time?: DateTimeNullableFilter<"Gbif_occurrence_downloads"> | Date | string | null
    inserted_count?: IntNullableFilter<"Gbif_occurrence_downloads"> | number | null
    attribution?: StringNullableFilter<"Gbif_occurrence_downloads"> | string | null
    deleted?: BoolNullableFilter<"Gbif_occurrence_downloads"> | boolean | null
  }

  export type Gbif_occurrencesUpsertWithWhereUniqueWithoutAccountsInput = {
    where: Gbif_occurrencesWhereUniqueInput
    update: XOR<Gbif_occurrencesUpdateWithoutAccountsInput, Gbif_occurrencesUncheckedUpdateWithoutAccountsInput>
    create: XOR<Gbif_occurrencesCreateWithoutAccountsInput, Gbif_occurrencesUncheckedCreateWithoutAccountsInput>
  }

  export type Gbif_occurrencesUpdateWithWhereUniqueWithoutAccountsInput = {
    where: Gbif_occurrencesWhereUniqueInput
    data: XOR<Gbif_occurrencesUpdateWithoutAccountsInput, Gbif_occurrencesUncheckedUpdateWithoutAccountsInput>
  }

  export type Gbif_occurrencesUpdateManyWithWhereWithoutAccountsInput = {
    where: Gbif_occurrencesScalarWhereInput
    data: XOR<Gbif_occurrencesUpdateManyMutationInput, Gbif_occurrencesUncheckedUpdateManyWithoutAccountsInput>
  }

  export type Gbif_occurrencesScalarWhereInput = {
    AND?: Enumerable<Gbif_occurrencesScalarWhereInput>
    OR?: Enumerable<Gbif_occurrencesScalarWhereInput>
    NOT?: Enumerable<Gbif_occurrencesScalarWhereInput>
    gbif_occurrence_id?: UuidFilter<"Gbif_occurrences"> | string
    account_id?: UuidNullableFilter<"Gbif_occurrences"> | string | null
    project_id?: UuidNullableFilter<"Gbif_occurrences"> | string | null
    subproject_id?: UuidNullableFilter<"Gbif_occurrences"> | string | null
    gbif_data?: JsonNullableFilter<"Gbif_occurrences">
    label?: StringNullableFilter<"Gbif_occurrences"> | string | null
  }

  export type Gbif_taxaUpsertWithWhereUniqueWithoutAccountsInput = {
    where: Gbif_taxaWhereUniqueInput
    update: XOR<Gbif_taxaUpdateWithoutAccountsInput, Gbif_taxaUncheckedUpdateWithoutAccountsInput>
    create: XOR<Gbif_taxaCreateWithoutAccountsInput, Gbif_taxaUncheckedCreateWithoutAccountsInput>
  }

  export type Gbif_taxaUpdateWithWhereUniqueWithoutAccountsInput = {
    where: Gbif_taxaWhereUniqueInput
    data: XOR<Gbif_taxaUpdateWithoutAccountsInput, Gbif_taxaUncheckedUpdateWithoutAccountsInput>
  }

  export type Gbif_taxaUpdateManyWithWhereWithoutAccountsInput = {
    where: Gbif_taxaScalarWhereInput
    data: XOR<Gbif_taxaUpdateManyMutationInput, Gbif_taxaUncheckedUpdateManyWithoutAccountsInput>
  }

  export type Gbif_taxaScalarWhereInput = {
    AND?: Enumerable<Gbif_taxaScalarWhereInput>
    OR?: Enumerable<Gbif_taxaScalarWhereInput>
    NOT?: Enumerable<Gbif_taxaScalarWhereInput>
    gbif_taxon_id?: UuidFilter<"Gbif_taxa"> | string
    account_id?: UuidNullableFilter<"Gbif_taxa"> | string | null
    project_id?: UuidNullableFilter<"Gbif_taxa"> | string | null
    gbif_data?: JsonNullableFilter<"Gbif_taxa">
    label?: StringNullableFilter<"Gbif_taxa"> | string | null
  }

  export type Goal_report_valuesUpsertWithWhereUniqueWithoutAccountsInput = {
    where: Goal_report_valuesWhereUniqueInput
    update: XOR<Goal_report_valuesUpdateWithoutAccountsInput, Goal_report_valuesUncheckedUpdateWithoutAccountsInput>
    create: XOR<Goal_report_valuesCreateWithoutAccountsInput, Goal_report_valuesUncheckedCreateWithoutAccountsInput>
  }

  export type Goal_report_valuesUpdateWithWhereUniqueWithoutAccountsInput = {
    where: Goal_report_valuesWhereUniqueInput
    data: XOR<Goal_report_valuesUpdateWithoutAccountsInput, Goal_report_valuesUncheckedUpdateWithoutAccountsInput>
  }

  export type Goal_report_valuesUpdateManyWithWhereWithoutAccountsInput = {
    where: Goal_report_valuesScalarWhereInput
    data: XOR<Goal_report_valuesUpdateManyMutationInput, Goal_report_valuesUncheckedUpdateManyWithoutAccountsInput>
  }

  export type Goal_report_valuesScalarWhereInput = {
    AND?: Enumerable<Goal_report_valuesScalarWhereInput>
    OR?: Enumerable<Goal_report_valuesScalarWhereInput>
    NOT?: Enumerable<Goal_report_valuesScalarWhereInput>
    goal_report_value_id?: UuidFilter<"Goal_report_values"> | string
    account_id?: UuidNullableFilter<"Goal_report_values"> | string | null
    goal_report_id?: UuidNullableFilter<"Goal_report_values"> | string | null
    unit_id?: UuidNullableFilter<"Goal_report_values"> | string | null
    value_integer?: IntNullableFilter<"Goal_report_values"> | number | null
    value_numeric?: FloatNullableFilter<"Goal_report_values"> | number | null
    value_text?: StringNullableFilter<"Goal_report_values"> | string | null
    label?: StringNullableFilter<"Goal_report_values"> | string | null
    deleted?: BoolNullableFilter<"Goal_report_values"> | boolean | null
  }

  export type Goal_reportsUpsertWithWhereUniqueWithoutAccountsInput = {
    where: Goal_reportsWhereUniqueInput
    update: XOR<Goal_reportsUpdateWithoutAccountsInput, Goal_reportsUncheckedUpdateWithoutAccountsInput>
    create: XOR<Goal_reportsCreateWithoutAccountsInput, Goal_reportsUncheckedCreateWithoutAccountsInput>
  }

  export type Goal_reportsUpdateWithWhereUniqueWithoutAccountsInput = {
    where: Goal_reportsWhereUniqueInput
    data: XOR<Goal_reportsUpdateWithoutAccountsInput, Goal_reportsUncheckedUpdateWithoutAccountsInput>
  }

  export type Goal_reportsUpdateManyWithWhereWithoutAccountsInput = {
    where: Goal_reportsScalarWhereInput
    data: XOR<Goal_reportsUpdateManyMutationInput, Goal_reportsUncheckedUpdateManyWithoutAccountsInput>
  }

  export type Goal_reportsScalarWhereInput = {
    AND?: Enumerable<Goal_reportsScalarWhereInput>
    OR?: Enumerable<Goal_reportsScalarWhereInput>
    NOT?: Enumerable<Goal_reportsScalarWhereInput>
    goal_report_id?: UuidFilter<"Goal_reports"> | string
    account_id?: UuidNullableFilter<"Goal_reports"> | string | null
    goal_id?: UuidNullableFilter<"Goal_reports"> | string | null
    data?: JsonNullableFilter<"Goal_reports">
    label?: StringNullableFilter<"Goal_reports"> | string | null
    deleted?: BoolNullableFilter<"Goal_reports"> | boolean | null
  }

  export type GoalsUpsertWithWhereUniqueWithoutAccountsInput = {
    where: GoalsWhereUniqueInput
    update: XOR<GoalsUpdateWithoutAccountsInput, GoalsUncheckedUpdateWithoutAccountsInput>
    create: XOR<GoalsCreateWithoutAccountsInput, GoalsUncheckedCreateWithoutAccountsInput>
  }

  export type GoalsUpdateWithWhereUniqueWithoutAccountsInput = {
    where: GoalsWhereUniqueInput
    data: XOR<GoalsUpdateWithoutAccountsInput, GoalsUncheckedUpdateWithoutAccountsInput>
  }

  export type GoalsUpdateManyWithWhereWithoutAccountsInput = {
    where: GoalsScalarWhereInput
    data: XOR<GoalsUpdateManyMutationInput, GoalsUncheckedUpdateManyWithoutAccountsInput>
  }

  export type GoalsScalarWhereInput = {
    AND?: Enumerable<GoalsScalarWhereInput>
    OR?: Enumerable<GoalsScalarWhereInput>
    NOT?: Enumerable<GoalsScalarWhereInput>
    goal_id?: UuidFilter<"Goals"> | string
    account_id?: UuidNullableFilter<"Goals"> | string | null
    subproject_id?: UuidNullableFilter<"Goals"> | string | null
    year?: IntNullableFilter<"Goals"> | number | null
    name?: StringNullableFilter<"Goals"> | string | null
    data?: JsonNullableFilter<"Goals">
    label_replace_by_generated_column?: StringNullableFilter<"Goals"> | string | null
    deleted?: BoolNullableFilter<"Goals"> | boolean | null
  }

  export type List_valuesUpsertWithWhereUniqueWithoutAccountsInput = {
    where: List_valuesWhereUniqueInput
    update: XOR<List_valuesUpdateWithoutAccountsInput, List_valuesUncheckedUpdateWithoutAccountsInput>
    create: XOR<List_valuesCreateWithoutAccountsInput, List_valuesUncheckedCreateWithoutAccountsInput>
  }

  export type List_valuesUpdateWithWhereUniqueWithoutAccountsInput = {
    where: List_valuesWhereUniqueInput
    data: XOR<List_valuesUpdateWithoutAccountsInput, List_valuesUncheckedUpdateWithoutAccountsInput>
  }

  export type List_valuesUpdateManyWithWhereWithoutAccountsInput = {
    where: List_valuesScalarWhereInput
    data: XOR<List_valuesUpdateManyMutationInput, List_valuesUncheckedUpdateManyWithoutAccountsInput>
  }

  export type List_valuesScalarWhereInput = {
    AND?: Enumerable<List_valuesScalarWhereInput>
    OR?: Enumerable<List_valuesScalarWhereInput>
    NOT?: Enumerable<List_valuesScalarWhereInput>
    list_value_id?: UuidFilter<"List_values"> | string
    account_id?: UuidNullableFilter<"List_values"> | string | null
    list_id?: UuidNullableFilter<"List_values"> | string | null
    value?: StringNullableFilter<"List_values"> | string | null
    obsolete?: BoolNullableFilter<"List_values"> | boolean | null
    label_replace_by_generated_column?: StringNullableFilter<"List_values"> | string | null
    deleted?: BoolNullableFilter<"List_values"> | boolean | null
  }

  export type ListsUpsertWithWhereUniqueWithoutAccountsInput = {
    where: ListsWhereUniqueInput
    update: XOR<ListsUpdateWithoutAccountsInput, ListsUncheckedUpdateWithoutAccountsInput>
    create: XOR<ListsCreateWithoutAccountsInput, ListsUncheckedCreateWithoutAccountsInput>
  }

  export type ListsUpdateWithWhereUniqueWithoutAccountsInput = {
    where: ListsWhereUniqueInput
    data: XOR<ListsUpdateWithoutAccountsInput, ListsUncheckedUpdateWithoutAccountsInput>
  }

  export type ListsUpdateManyWithWhereWithoutAccountsInput = {
    where: ListsScalarWhereInput
    data: XOR<ListsUpdateManyMutationInput, ListsUncheckedUpdateManyWithoutAccountsInput>
  }

  export type ListsScalarWhereInput = {
    AND?: Enumerable<ListsScalarWhereInput>
    OR?: Enumerable<ListsScalarWhereInput>
    NOT?: Enumerable<ListsScalarWhereInput>
    list_id?: UuidFilter<"Lists"> | string
    account_id?: UuidNullableFilter<"Lists"> | string | null
    project_id?: UuidNullableFilter<"Lists"> | string | null
    name?: StringNullableFilter<"Lists"> | string | null
    data?: JsonNullableFilter<"Lists">
    obsolete?: BoolNullableFilter<"Lists"> | boolean | null
    label_replace_by_generated_column?: StringNullableFilter<"Lists"> | string | null
    deleted?: BoolNullableFilter<"Lists"> | boolean | null
  }

  export type Observation_sourcesUpsertWithWhereUniqueWithoutAccountsInput = {
    where: Observation_sourcesWhereUniqueInput
    update: XOR<Observation_sourcesUpdateWithoutAccountsInput, Observation_sourcesUncheckedUpdateWithoutAccountsInput>
    create: XOR<Observation_sourcesCreateWithoutAccountsInput, Observation_sourcesUncheckedCreateWithoutAccountsInput>
  }

  export type Observation_sourcesUpdateWithWhereUniqueWithoutAccountsInput = {
    where: Observation_sourcesWhereUniqueInput
    data: XOR<Observation_sourcesUpdateWithoutAccountsInput, Observation_sourcesUncheckedUpdateWithoutAccountsInput>
  }

  export type Observation_sourcesUpdateManyWithWhereWithoutAccountsInput = {
    where: Observation_sourcesScalarWhereInput
    data: XOR<Observation_sourcesUpdateManyMutationInput, Observation_sourcesUncheckedUpdateManyWithoutAccountsInput>
  }

  export type Observation_sourcesScalarWhereInput = {
    AND?: Enumerable<Observation_sourcesScalarWhereInput>
    OR?: Enumerable<Observation_sourcesScalarWhereInput>
    NOT?: Enumerable<Observation_sourcesScalarWhereInput>
    observation_source_id?: UuidFilter<"Observation_sources"> | string
    account_id?: UuidNullableFilter<"Observation_sources"> | string | null
    project_id?: UuidNullableFilter<"Observation_sources"> | string | null
    name?: StringNullableFilter<"Observation_sources"> | string | null
    url?: StringNullableFilter<"Observation_sources"> | string | null
    data?: JsonNullableFilter<"Observation_sources">
    label_replace_by_generated_column?: StringNullableFilter<"Observation_sources"> | string | null
    deleted?: BoolNullableFilter<"Observation_sources"> | boolean | null
  }

  export type PersonsUpsertWithWhereUniqueWithoutAccountsInput = {
    where: PersonsWhereUniqueInput
    update: XOR<PersonsUpdateWithoutAccountsInput, PersonsUncheckedUpdateWithoutAccountsInput>
    create: XOR<PersonsCreateWithoutAccountsInput, PersonsUncheckedCreateWithoutAccountsInput>
  }

  export type PersonsUpdateWithWhereUniqueWithoutAccountsInput = {
    where: PersonsWhereUniqueInput
    data: XOR<PersonsUpdateWithoutAccountsInput, PersonsUncheckedUpdateWithoutAccountsInput>
  }

  export type PersonsUpdateManyWithWhereWithoutAccountsInput = {
    where: PersonsScalarWhereInput
    data: XOR<PersonsUpdateManyMutationInput, PersonsUncheckedUpdateManyWithoutAccountsInput>
  }

  export type PersonsScalarWhereInput = {
    AND?: Enumerable<PersonsScalarWhereInput>
    OR?: Enumerable<PersonsScalarWhereInput>
    NOT?: Enumerable<PersonsScalarWhereInput>
    person_id?: UuidFilter<"Persons"> | string
    project_id?: UuidNullableFilter<"Persons"> | string | null
    account_id?: UuidNullableFilter<"Persons"> | string | null
    email?: StringNullableFilter<"Persons"> | string | null
    data?: JsonNullableFilter<"Persons">
    label_replace_by_generated_column?: StringNullableFilter<"Persons"> | string | null
    deleted?: BoolNullableFilter<"Persons"> | boolean | null
  }

  export type Place_levelsUpsertWithWhereUniqueWithoutAccountsInput = {
    where: Place_levelsWhereUniqueInput
    update: XOR<Place_levelsUpdateWithoutAccountsInput, Place_levelsUncheckedUpdateWithoutAccountsInput>
    create: XOR<Place_levelsCreateWithoutAccountsInput, Place_levelsUncheckedCreateWithoutAccountsInput>
  }

  export type Place_levelsUpdateWithWhereUniqueWithoutAccountsInput = {
    where: Place_levelsWhereUniqueInput
    data: XOR<Place_levelsUpdateWithoutAccountsInput, Place_levelsUncheckedUpdateWithoutAccountsInput>
  }

  export type Place_levelsUpdateManyWithWhereWithoutAccountsInput = {
    where: Place_levelsScalarWhereInput
    data: XOR<Place_levelsUpdateManyMutationInput, Place_levelsUncheckedUpdateManyWithoutAccountsInput>
  }

  export type Place_levelsScalarWhereInput = {
    AND?: Enumerable<Place_levelsScalarWhereInput>
    OR?: Enumerable<Place_levelsScalarWhereInput>
    NOT?: Enumerable<Place_levelsScalarWhereInput>
    place_level_id?: UuidFilter<"Place_levels"> | string
    account_id?: UuidNullableFilter<"Place_levels"> | string | null
    project_id?: UuidNullableFilter<"Place_levels"> | string | null
    level?: IntNullableFilter<"Place_levels"> | number | null
    name_singular?: StringNullableFilter<"Place_levels"> | string | null
    name_plural?: StringNullableFilter<"Place_levels"> | string | null
    name_short?: StringNullableFilter<"Place_levels"> | string | null
    reports?: BoolNullableFilter<"Place_levels"> | boolean | null
    report_values?: BoolNullableFilter<"Place_levels"> | boolean | null
    actions?: BoolNullableFilter<"Place_levels"> | boolean | null
    action_values?: BoolNullableFilter<"Place_levels"> | boolean | null
    action_reports?: BoolNullableFilter<"Place_levels"> | boolean | null
    checks?: BoolNullableFilter<"Place_levels"> | boolean | null
    check_values?: BoolNullableFilter<"Place_levels"> | boolean | null
    check_taxa?: BoolNullableFilter<"Place_levels"> | boolean | null
    observations?: BoolNullableFilter<"Place_levels"> | boolean | null
    label_replace_by_generated_column?: StringNullableFilter<"Place_levels"> | string | null
    deleted?: BoolNullableFilter<"Place_levels"> | boolean | null
  }

  export type Project_usersUpsertWithWhereUniqueWithoutAccountsInput = {
    where: Project_usersWhereUniqueInput
    update: XOR<Project_usersUpdateWithoutAccountsInput, Project_usersUncheckedUpdateWithoutAccountsInput>
    create: XOR<Project_usersCreateWithoutAccountsInput, Project_usersUncheckedCreateWithoutAccountsInput>
  }

  export type Project_usersUpdateWithWhereUniqueWithoutAccountsInput = {
    where: Project_usersWhereUniqueInput
    data: XOR<Project_usersUpdateWithoutAccountsInput, Project_usersUncheckedUpdateWithoutAccountsInput>
  }

  export type Project_usersUpdateManyWithWhereWithoutAccountsInput = {
    where: Project_usersScalarWhereInput
    data: XOR<Project_usersUpdateManyMutationInput, Project_usersUncheckedUpdateManyWithoutAccountsInput>
  }

  export type Project_usersScalarWhereInput = {
    AND?: Enumerable<Project_usersScalarWhereInput>
    OR?: Enumerable<Project_usersScalarWhereInput>
    NOT?: Enumerable<Project_usersScalarWhereInput>
    project_user_id?: UuidFilter<"Project_users"> | string
    account_id?: UuidNullableFilter<"Project_users"> | string | null
    project_id?: UuidNullableFilter<"Project_users"> | string | null
    user_id?: UuidNullableFilter<"Project_users"> | string | null
    role?: StringNullableFilter<"Project_users"> | string | null
    label?: StringNullableFilter<"Project_users"> | string | null
    deleted?: BoolNullableFilter<"Project_users"> | boolean | null
  }

  export type ProjectsUpsertWithWhereUniqueWithoutAccountsInput = {
    where: ProjectsWhereUniqueInput
    update: XOR<ProjectsUpdateWithoutAccountsInput, ProjectsUncheckedUpdateWithoutAccountsInput>
    create: XOR<ProjectsCreateWithoutAccountsInput, ProjectsUncheckedCreateWithoutAccountsInput>
  }

  export type ProjectsUpdateWithWhereUniqueWithoutAccountsInput = {
    where: ProjectsWhereUniqueInput
    data: XOR<ProjectsUpdateWithoutAccountsInput, ProjectsUncheckedUpdateWithoutAccountsInput>
  }

  export type ProjectsUpdateManyWithWhereWithoutAccountsInput = {
    where: ProjectsScalarWhereInput
    data: XOR<ProjectsUpdateManyMutationInput, ProjectsUncheckedUpdateManyWithoutAccountsInput>
  }

  export type ProjectsScalarWhereInput = {
    AND?: Enumerable<ProjectsScalarWhereInput>
    OR?: Enumerable<ProjectsScalarWhereInput>
    NOT?: Enumerable<ProjectsScalarWhereInput>
    project_id?: UuidFilter<"Projects"> | string
    account_id?: UuidNullableFilter<"Projects"> | string | null
    name?: StringNullableFilter<"Projects"> | string | null
    label?: StringNullableFilter<"Projects"> | string | null
    type?: Enumproject_typeNullableFilter<"Projects"> | project_type | null
    subproject_name_singular?: StringNullableFilter<"Projects"> | string | null
    subproject_name_plural?: StringNullableFilter<"Projects"> | string | null
    subproject_order_by?: StringNullableFilter<"Projects"> | string | null
    places_label_by?: StringNullableFilter<"Projects"> | string | null
    places_order_by?: JsonNullableFilter<"Projects">
    persons_label_by?: StringNullableFilter<"Projects"> | string | null
    persons_order_by?: StringNullableFilter<"Projects"> | string | null
    goal_reports_label_by?: StringNullableFilter<"Projects"> | string | null
    goal_reports_order_by?: StringNullableFilter<"Projects"> | string | null
    values_on_multiple_levels?: StringNullableFilter<"Projects"> | string | null
    multiple_action_values_on_same_level?: StringNullableFilter<"Projects"> | string | null
    multiple_check_values_on_same_level?: StringNullableFilter<"Projects"> | string | null
    data?: JsonNullableFilter<"Projects">
    files_offline?: BoolNullableFilter<"Projects"> | boolean | null
    files_active_projects?: BoolNullableFilter<"Projects"> | boolean | null
    files_active_subprojects?: BoolNullableFilter<"Projects"> | boolean | null
    files_active_places?: BoolNullableFilter<"Projects"> | boolean | null
    files_active_actions?: BoolNullableFilter<"Projects"> | boolean | null
    files_active_checks?: BoolNullableFilter<"Projects"> | boolean | null
    deleted?: BoolNullableFilter<"Projects"> | boolean | null
  }

  export type Subproject_taxaUpsertWithWhereUniqueWithoutAccountsInput = {
    where: Subproject_taxaWhereUniqueInput
    update: XOR<Subproject_taxaUpdateWithoutAccountsInput, Subproject_taxaUncheckedUpdateWithoutAccountsInput>
    create: XOR<Subproject_taxaCreateWithoutAccountsInput, Subproject_taxaUncheckedCreateWithoutAccountsInput>
  }

  export type Subproject_taxaUpdateWithWhereUniqueWithoutAccountsInput = {
    where: Subproject_taxaWhereUniqueInput
    data: XOR<Subproject_taxaUpdateWithoutAccountsInput, Subproject_taxaUncheckedUpdateWithoutAccountsInput>
  }

  export type Subproject_taxaUpdateManyWithWhereWithoutAccountsInput = {
    where: Subproject_taxaScalarWhereInput
    data: XOR<Subproject_taxaUpdateManyMutationInput, Subproject_taxaUncheckedUpdateManyWithoutAccountsInput>
  }

  export type Subproject_taxaScalarWhereInput = {
    AND?: Enumerable<Subproject_taxaScalarWhereInput>
    OR?: Enumerable<Subproject_taxaScalarWhereInput>
    NOT?: Enumerable<Subproject_taxaScalarWhereInput>
    subproject_taxon_id?: UuidFilter<"Subproject_taxa"> | string
    account_id?: UuidNullableFilter<"Subproject_taxa"> | string | null
    subproject_id?: UuidNullableFilter<"Subproject_taxa"> | string | null
    taxon_id?: UuidNullableFilter<"Subproject_taxa"> | string | null
    label?: StringNullableFilter<"Subproject_taxa"> | string | null
    deleted?: BoolNullableFilter<"Subproject_taxa"> | boolean | null
  }

  export type Subproject_usersUpsertWithWhereUniqueWithoutAccountsInput = {
    where: Subproject_usersWhereUniqueInput
    update: XOR<Subproject_usersUpdateWithoutAccountsInput, Subproject_usersUncheckedUpdateWithoutAccountsInput>
    create: XOR<Subproject_usersCreateWithoutAccountsInput, Subproject_usersUncheckedCreateWithoutAccountsInput>
  }

  export type Subproject_usersUpdateWithWhereUniqueWithoutAccountsInput = {
    where: Subproject_usersWhereUniqueInput
    data: XOR<Subproject_usersUpdateWithoutAccountsInput, Subproject_usersUncheckedUpdateWithoutAccountsInput>
  }

  export type Subproject_usersUpdateManyWithWhereWithoutAccountsInput = {
    where: Subproject_usersScalarWhereInput
    data: XOR<Subproject_usersUpdateManyMutationInput, Subproject_usersUncheckedUpdateManyWithoutAccountsInput>
  }

  export type Subproject_usersScalarWhereInput = {
    AND?: Enumerable<Subproject_usersScalarWhereInput>
    OR?: Enumerable<Subproject_usersScalarWhereInput>
    NOT?: Enumerable<Subproject_usersScalarWhereInput>
    subproject_user_id?: UuidFilter<"Subproject_users"> | string
    account_id?: UuidNullableFilter<"Subproject_users"> | string | null
    subproject_id?: UuidNullableFilter<"Subproject_users"> | string | null
    user_id?: UuidNullableFilter<"Subproject_users"> | string | null
    role?: StringNullableFilter<"Subproject_users"> | string | null
    label?: StringNullableFilter<"Subproject_users"> | string | null
    deleted?: BoolNullableFilter<"Subproject_users"> | boolean | null
  }

  export type SubprojectsUpsertWithWhereUniqueWithoutAccountsInput = {
    where: SubprojectsWhereUniqueInput
    update: XOR<SubprojectsUpdateWithoutAccountsInput, SubprojectsUncheckedUpdateWithoutAccountsInput>
    create: XOR<SubprojectsCreateWithoutAccountsInput, SubprojectsUncheckedCreateWithoutAccountsInput>
  }

  export type SubprojectsUpdateWithWhereUniqueWithoutAccountsInput = {
    where: SubprojectsWhereUniqueInput
    data: XOR<SubprojectsUpdateWithoutAccountsInput, SubprojectsUncheckedUpdateWithoutAccountsInput>
  }

  export type SubprojectsUpdateManyWithWhereWithoutAccountsInput = {
    where: SubprojectsScalarWhereInput
    data: XOR<SubprojectsUpdateManyMutationInput, SubprojectsUncheckedUpdateManyWithoutAccountsInput>
  }

  export type SubprojectsScalarWhereInput = {
    AND?: Enumerable<SubprojectsScalarWhereInput>
    OR?: Enumerable<SubprojectsScalarWhereInput>
    NOT?: Enumerable<SubprojectsScalarWhereInput>
    subproject_id?: UuidFilter<"Subprojects"> | string
    account_id?: UuidNullableFilter<"Subprojects"> | string | null
    project_id?: UuidNullableFilter<"Subprojects"> | string | null
    name?: StringNullableFilter<"Subprojects"> | string | null
    label_replace_by_generated_column?: StringNullableFilter<"Subprojects"> | string | null
    start_year?: IntNullableFilter<"Subprojects"> | number | null
    end_year?: IntNullableFilter<"Subprojects"> | number | null
    data?: JsonNullableFilter<"Subprojects">
    deleted?: BoolNullableFilter<"Subprojects"> | boolean | null
  }

  export type TaxaUpsertWithWhereUniqueWithoutAccountsInput = {
    where: TaxaWhereUniqueInput
    update: XOR<TaxaUpdateWithoutAccountsInput, TaxaUncheckedUpdateWithoutAccountsInput>
    create: XOR<TaxaCreateWithoutAccountsInput, TaxaUncheckedCreateWithoutAccountsInput>
  }

  export type TaxaUpdateWithWhereUniqueWithoutAccountsInput = {
    where: TaxaWhereUniqueInput
    data: XOR<TaxaUpdateWithoutAccountsInput, TaxaUncheckedUpdateWithoutAccountsInput>
  }

  export type TaxaUpdateManyWithWhereWithoutAccountsInput = {
    where: TaxaScalarWhereInput
    data: XOR<TaxaUpdateManyMutationInput, TaxaUncheckedUpdateManyWithoutAccountsInput>
  }

  export type TaxaScalarWhereInput = {
    AND?: Enumerable<TaxaScalarWhereInput>
    OR?: Enumerable<TaxaScalarWhereInput>
    NOT?: Enumerable<TaxaScalarWhereInput>
    taxon_id?: UuidFilter<"Taxa"> | string
    account_id?: UuidNullableFilter<"Taxa"> | string | null
    taxonomy_id?: UuidNullableFilter<"Taxa"> | string | null
    name?: StringNullableFilter<"Taxa"> | string | null
    id_in_source?: StringNullableFilter<"Taxa"> | string | null
    url?: StringNullableFilter<"Taxa"> | string | null
    label?: StringNullableFilter<"Taxa"> | string | null
    deleted?: BoolNullableFilter<"Taxa"> | boolean | null
  }

  export type TaxonomiesUpsertWithWhereUniqueWithoutAccountsInput = {
    where: TaxonomiesWhereUniqueInput
    update: XOR<TaxonomiesUpdateWithoutAccountsInput, TaxonomiesUncheckedUpdateWithoutAccountsInput>
    create: XOR<TaxonomiesCreateWithoutAccountsInput, TaxonomiesUncheckedCreateWithoutAccountsInput>
  }

  export type TaxonomiesUpdateWithWhereUniqueWithoutAccountsInput = {
    where: TaxonomiesWhereUniqueInput
    data: XOR<TaxonomiesUpdateWithoutAccountsInput, TaxonomiesUncheckedUpdateWithoutAccountsInput>
  }

  export type TaxonomiesUpdateManyWithWhereWithoutAccountsInput = {
    where: TaxonomiesScalarWhereInput
    data: XOR<TaxonomiesUpdateManyMutationInput, TaxonomiesUncheckedUpdateManyWithoutAccountsInput>
  }

  export type TaxonomiesScalarWhereInput = {
    AND?: Enumerable<TaxonomiesScalarWhereInput>
    OR?: Enumerable<TaxonomiesScalarWhereInput>
    NOT?: Enumerable<TaxonomiesScalarWhereInput>
    taxonomy_id?: UuidFilter<"Taxonomies"> | string
    account_id?: UuidNullableFilter<"Taxonomies"> | string | null
    project_id?: UuidNullableFilter<"Taxonomies"> | string | null
    type?: Enumtaxonomy_typeNullableFilter<"Taxonomies"> | taxonomy_type | null
    name?: StringNullableFilter<"Taxonomies"> | string | null
    url?: StringNullableFilter<"Taxonomies"> | string | null
    obsolete?: BoolNullableFilter<"Taxonomies"> | boolean | null
    data?: JsonNullableFilter<"Taxonomies">
    label_replace_by_generated_column?: StringNullableFilter<"Taxonomies"> | string | null
    deleted?: BoolNullableFilter<"Taxonomies"> | boolean | null
  }

  export type Tile_layersUpsertWithWhereUniqueWithoutAccountsInput = {
    where: Tile_layersWhereUniqueInput
    update: XOR<Tile_layersUpdateWithoutAccountsInput, Tile_layersUncheckedUpdateWithoutAccountsInput>
    create: XOR<Tile_layersCreateWithoutAccountsInput, Tile_layersUncheckedCreateWithoutAccountsInput>
  }

  export type Tile_layersUpdateWithWhereUniqueWithoutAccountsInput = {
    where: Tile_layersWhereUniqueInput
    data: XOR<Tile_layersUpdateWithoutAccountsInput, Tile_layersUncheckedUpdateWithoutAccountsInput>
  }

  export type Tile_layersUpdateManyWithWhereWithoutAccountsInput = {
    where: Tile_layersScalarWhereInput
    data: XOR<Tile_layersUpdateManyMutationInput, Tile_layersUncheckedUpdateManyWithoutAccountsInput>
  }

  export type Tile_layersScalarWhereInput = {
    AND?: Enumerable<Tile_layersScalarWhereInput>
    OR?: Enumerable<Tile_layersScalarWhereInput>
    NOT?: Enumerable<Tile_layersScalarWhereInput>
    tile_layer_id?: UuidFilter<"Tile_layers"> | string
    account_id?: UuidNullableFilter<"Tile_layers"> | string | null
    project_id?: UuidFilter<"Tile_layers"> | string
    label?: StringNullableFilter<"Tile_layers"> | string | null
    sort?: IntNullableFilter<"Tile_layers"> | number | null
    active?: BoolNullableFilter<"Tile_layers"> | boolean | null
    type?: Enumtile_layer_type_enumNullableFilter<"Tile_layers"> | tile_layer_type_enum | null
    wmts_url_template?: StringNullableFilter<"Tile_layers"> | string | null
    wmts_subdomains?: JsonNullableFilter<"Tile_layers">
    wms_base_url?: StringNullableFilter<"Tile_layers"> | string | null
    wms_format?: JsonNullableFilter<"Tile_layers">
    wms_layer?: JsonNullableFilter<"Tile_layers">
    wms_parameters?: JsonNullableFilter<"Tile_layers">
    wms_styles?: JsonNullableFilter<"Tile_layers">
    wms_transparent?: BoolNullableFilter<"Tile_layers"> | boolean | null
    wms_version?: StringNullableFilter<"Tile_layers"> | string | null
    wms_info_format?: JsonNullableFilter<"Tile_layers">
    wms_legend?: JsonNullableFilter<"Tile_layers">
    max_zoom?: IntNullableFilter<"Tile_layers"> | number | null
    min_zoom?: IntNullableFilter<"Tile_layers"> | number | null
    opacity_percent?: IntNullableFilter<"Tile_layers"> | number | null
    grayscale?: BoolNullableFilter<"Tile_layers"> | boolean | null
    local_data_size?: IntNullableFilter<"Tile_layers"> | number | null
    local_data_bounds?: JsonNullableFilter<"Tile_layers">
    deleted?: BoolNullableFilter<"Tile_layers"> | boolean | null
  }

  export type Ui_optionsUpsertWithWhereUniqueWithoutAccountsInput = {
    where: Ui_optionsWhereUniqueInput
    update: XOR<Ui_optionsUpdateWithoutAccountsInput, Ui_optionsUncheckedUpdateWithoutAccountsInput>
    create: XOR<Ui_optionsCreateWithoutAccountsInput, Ui_optionsUncheckedCreateWithoutAccountsInput>
  }

  export type Ui_optionsUpdateWithWhereUniqueWithoutAccountsInput = {
    where: Ui_optionsWhereUniqueInput
    data: XOR<Ui_optionsUpdateWithoutAccountsInput, Ui_optionsUncheckedUpdateWithoutAccountsInput>
  }

  export type Ui_optionsUpdateManyWithWhereWithoutAccountsInput = {
    where: Ui_optionsScalarWhereInput
    data: XOR<Ui_optionsUpdateManyMutationInput, Ui_optionsUncheckedUpdateManyWithoutAccountsInput>
  }

  export type Ui_optionsScalarWhereInput = {
    AND?: Enumerable<Ui_optionsScalarWhereInput>
    OR?: Enumerable<Ui_optionsScalarWhereInput>
    NOT?: Enumerable<Ui_optionsScalarWhereInput>
    user_id?: UuidFilter<"Ui_options"> | string
    account_id?: UuidNullableFilter<"Ui_options"> | string | null
    designing?: BoolNullableFilter<"Ui_options"> | boolean | null
    breadcrumbs_overflowing?: BoolNullableFilter<"Ui_options"> | boolean | null
    navs_overflowing?: BoolNullableFilter<"Ui_options"> | boolean | null
    tabs?: JsonNullableFilter<"Ui_options">
    show_map?: BoolNullableFilter<"Ui_options"> | boolean | null
    map_bounds?: JsonNullableFilter<"Ui_options">
    local_map_show?: JsonNullableFilter<"Ui_options">
    tile_layer_sorter?: StringNullableFilter<"Ui_options"> | string | null
    vector_layer_sorter?: StringNullableFilter<"Ui_options"> | string | null
    editing_place_geometry?: UuidNullableFilter<"Ui_options"> | string | null
    editing_check_geometry?: UuidNullableFilter<"Ui_options"> | string | null
    editing_action_geometry?: UuidNullableFilter<"Ui_options"> | string | null
    label?: StringNullableFilter<"Ui_options"> | string | null
  }

  export type UnitsUpsertWithWhereUniqueWithoutAccountsInput = {
    where: UnitsWhereUniqueInput
    update: XOR<UnitsUpdateWithoutAccountsInput, UnitsUncheckedUpdateWithoutAccountsInput>
    create: XOR<UnitsCreateWithoutAccountsInput, UnitsUncheckedCreateWithoutAccountsInput>
  }

  export type UnitsUpdateWithWhereUniqueWithoutAccountsInput = {
    where: UnitsWhereUniqueInput
    data: XOR<UnitsUpdateWithoutAccountsInput, UnitsUncheckedUpdateWithoutAccountsInput>
  }

  export type UnitsUpdateManyWithWhereWithoutAccountsInput = {
    where: UnitsScalarWhereInput
    data: XOR<UnitsUpdateManyMutationInput, UnitsUncheckedUpdateManyWithoutAccountsInput>
  }

  export type UnitsScalarWhereInput = {
    AND?: Enumerable<UnitsScalarWhereInput>
    OR?: Enumerable<UnitsScalarWhereInput>
    NOT?: Enumerable<UnitsScalarWhereInput>
    unit_id?: UuidFilter<"Units"> | string
    account_id?: UuidNullableFilter<"Units"> | string | null
    project_id?: UuidNullableFilter<"Units"> | string | null
    use_for_action_values?: BoolNullableFilter<"Units"> | boolean | null
    use_for_action_report_values?: BoolNullableFilter<"Units"> | boolean | null
    use_for_check_values?: BoolNullableFilter<"Units"> | boolean | null
    use_for_place_report_values?: BoolNullableFilter<"Units"> | boolean | null
    use_for_goal_report_values?: BoolNullableFilter<"Units"> | boolean | null
    use_for_subproject_taxa?: BoolNullableFilter<"Units"> | boolean | null
    use_for_check_taxa?: BoolNullableFilter<"Units"> | boolean | null
    name?: StringNullableFilter<"Units"> | string | null
    summable?: BoolNullableFilter<"Units"> | boolean | null
    sort?: IntNullableFilter<"Units"> | number | null
    type?: Enumunit_typeNullableFilter<"Units"> | unit_type | null
    list_id?: UuidNullableFilter<"Units"> | string | null
    label_replace_by_generated_column?: StringNullableFilter<"Units"> | string | null
    deleted?: BoolNullableFilter<"Units"> | boolean | null
  }

  export type User_messagesUpsertWithWhereUniqueWithoutAccountsInput = {
    where: User_messagesWhereUniqueInput
    update: XOR<User_messagesUpdateWithoutAccountsInput, User_messagesUncheckedUpdateWithoutAccountsInput>
    create: XOR<User_messagesCreateWithoutAccountsInput, User_messagesUncheckedCreateWithoutAccountsInput>
  }

  export type User_messagesUpdateWithWhereUniqueWithoutAccountsInput = {
    where: User_messagesWhereUniqueInput
    data: XOR<User_messagesUpdateWithoutAccountsInput, User_messagesUncheckedUpdateWithoutAccountsInput>
  }

  export type User_messagesUpdateManyWithWhereWithoutAccountsInput = {
    where: User_messagesScalarWhereInput
    data: XOR<User_messagesUpdateManyMutationInput, User_messagesUncheckedUpdateManyWithoutAccountsInput>
  }

  export type User_messagesScalarWhereInput = {
    AND?: Enumerable<User_messagesScalarWhereInput>
    OR?: Enumerable<User_messagesScalarWhereInput>
    NOT?: Enumerable<User_messagesScalarWhereInput>
    user_message_id?: UuidFilter<"User_messages"> | string
    account_id?: UuidNullableFilter<"User_messages"> | string | null
    user_id?: UuidNullableFilter<"User_messages"> | string | null
    message_id?: UuidNullableFilter<"User_messages"> | string | null
    label_replace_by_generated_column?: StringNullableFilter<"User_messages"> | string | null
    read?: BoolNullableFilter<"User_messages"> | boolean | null
  }

  export type Widgets_for_fieldsCreateWithoutField_typesInput = {
    widget_for_field_id: string
    label?: string | null
    deleted?: boolean | null
    widget_types?: Widget_typesCreateNestedOneWithoutWidgets_for_fieldsInput
  }

  export type Widgets_for_fieldsUncheckedCreateWithoutField_typesInput = {
    widget_for_field_id: string
    widget_type_id?: string | null
    label?: string | null
    deleted?: boolean | null
  }

  export type Widgets_for_fieldsCreateOrConnectWithoutField_typesInput = {
    where: Widgets_for_fieldsWhereUniqueInput
    create: XOR<Widgets_for_fieldsCreateWithoutField_typesInput, Widgets_for_fieldsUncheckedCreateWithoutField_typesInput>
  }

  export type Widgets_for_fieldsCreateManyField_typesInputEnvelope = {
    data: Enumerable<Widgets_for_fieldsCreateManyField_typesInput>
    skipDuplicates?: boolean
  }

  export type Widgets_for_fieldsUpsertWithWhereUniqueWithoutField_typesInput = {
    where: Widgets_for_fieldsWhereUniqueInput
    update: XOR<Widgets_for_fieldsUpdateWithoutField_typesInput, Widgets_for_fieldsUncheckedUpdateWithoutField_typesInput>
    create: XOR<Widgets_for_fieldsCreateWithoutField_typesInput, Widgets_for_fieldsUncheckedCreateWithoutField_typesInput>
  }

  export type Widgets_for_fieldsUpdateWithWhereUniqueWithoutField_typesInput = {
    where: Widgets_for_fieldsWhereUniqueInput
    data: XOR<Widgets_for_fieldsUpdateWithoutField_typesInput, Widgets_for_fieldsUncheckedUpdateWithoutField_typesInput>
  }

  export type Widgets_for_fieldsUpdateManyWithWhereWithoutField_typesInput = {
    where: Widgets_for_fieldsScalarWhereInput
    data: XOR<Widgets_for_fieldsUpdateManyMutationInput, Widgets_for_fieldsUncheckedUpdateManyWithoutField_typesInput>
  }

  export type Widgets_for_fieldsScalarWhereInput = {
    AND?: Enumerable<Widgets_for_fieldsScalarWhereInput>
    OR?: Enumerable<Widgets_for_fieldsScalarWhereInput>
    NOT?: Enumerable<Widgets_for_fieldsScalarWhereInput>
    widget_for_field_id?: UuidFilter<"Widgets_for_fields"> | string
    field_type_id?: UuidNullableFilter<"Widgets_for_fields"> | string | null
    widget_type_id?: UuidNullableFilter<"Widgets_for_fields"> | string | null
    label?: StringNullableFilter<"Widgets_for_fields"> | string | null
    deleted?: BoolNullableFilter<"Widgets_for_fields"> | boolean | null
  }

  export type AccountsCreateWithoutGbif_occurrence_downloadsInput = {
    account_id: string
    type?: string | null
    period_start?: Date | string | null
    period_end?: Date | string | null
    projects_label_by?: string | null
    label?: string | null
    users?: UsersCreateNestedOneWithoutAccountsInput
    gbif_occurrences?: Gbif_occurrencesCreateNestedManyWithoutAccountsInput
    gbif_taxa?: Gbif_taxaCreateNestedManyWithoutAccountsInput
    goal_report_values?: Goal_report_valuesCreateNestedManyWithoutAccountsInput
    goal_reports?: Goal_reportsCreateNestedManyWithoutAccountsInput
    goals?: GoalsCreateNestedManyWithoutAccountsInput
    list_values?: List_valuesCreateNestedManyWithoutAccountsInput
    lists?: ListsCreateNestedManyWithoutAccountsInput
    observation_sources?: Observation_sourcesCreateNestedManyWithoutAccountsInput
    persons?: PersonsCreateNestedManyWithoutAccountsInput
    place_levels?: Place_levelsCreateNestedManyWithoutAccountsInput
    project_users?: Project_usersCreateNestedManyWithoutAccountsInput
    projects?: ProjectsCreateNestedManyWithoutAccountsInput
    subproject_taxa?: Subproject_taxaCreateNestedManyWithoutAccountsInput
    subproject_users?: Subproject_usersCreateNestedManyWithoutAccountsInput
    subprojects?: SubprojectsCreateNestedManyWithoutAccountsInput
    taxa?: TaxaCreateNestedManyWithoutAccountsInput
    taxonomies?: TaxonomiesCreateNestedManyWithoutAccountsInput
    tile_layers?: Tile_layersCreateNestedManyWithoutAccountsInput
    ui_options?: Ui_optionsCreateNestedManyWithoutAccountsInput
    units?: UnitsCreateNestedManyWithoutAccountsInput
    user_messages?: User_messagesCreateNestedManyWithoutAccountsInput
  }

  export type AccountsUncheckedCreateWithoutGbif_occurrence_downloadsInput = {
    account_id: string
    user_id?: string | null
    type?: string | null
    period_start?: Date | string | null
    period_end?: Date | string | null
    projects_label_by?: string | null
    label?: string | null
    gbif_occurrences?: Gbif_occurrencesUncheckedCreateNestedManyWithoutAccountsInput
    gbif_taxa?: Gbif_taxaUncheckedCreateNestedManyWithoutAccountsInput
    goal_report_values?: Goal_report_valuesUncheckedCreateNestedManyWithoutAccountsInput
    goal_reports?: Goal_reportsUncheckedCreateNestedManyWithoutAccountsInput
    goals?: GoalsUncheckedCreateNestedManyWithoutAccountsInput
    list_values?: List_valuesUncheckedCreateNestedManyWithoutAccountsInput
    lists?: ListsUncheckedCreateNestedManyWithoutAccountsInput
    observation_sources?: Observation_sourcesUncheckedCreateNestedManyWithoutAccountsInput
    persons?: PersonsUncheckedCreateNestedManyWithoutAccountsInput
    place_levels?: Place_levelsUncheckedCreateNestedManyWithoutAccountsInput
    project_users?: Project_usersUncheckedCreateNestedManyWithoutAccountsInput
    projects?: ProjectsUncheckedCreateNestedManyWithoutAccountsInput
    subproject_taxa?: Subproject_taxaUncheckedCreateNestedManyWithoutAccountsInput
    subproject_users?: Subproject_usersUncheckedCreateNestedManyWithoutAccountsInput
    subprojects?: SubprojectsUncheckedCreateNestedManyWithoutAccountsInput
    taxa?: TaxaUncheckedCreateNestedManyWithoutAccountsInput
    taxonomies?: TaxonomiesUncheckedCreateNestedManyWithoutAccountsInput
    tile_layers?: Tile_layersUncheckedCreateNestedManyWithoutAccountsInput
    ui_options?: Ui_optionsUncheckedCreateNestedManyWithoutAccountsInput
    units?: UnitsUncheckedCreateNestedManyWithoutAccountsInput
    user_messages?: User_messagesUncheckedCreateNestedManyWithoutAccountsInput
  }

  export type AccountsCreateOrConnectWithoutGbif_occurrence_downloadsInput = {
    where: AccountsWhereUniqueInput
    create: XOR<AccountsCreateWithoutGbif_occurrence_downloadsInput, AccountsUncheckedCreateWithoutGbif_occurrence_downloadsInput>
  }

  export type ProjectsCreateWithoutGbif_occurrence_downloadsInput = {
    project_id: string
    name?: string | null
    label?: string | null
    type?: project_type | null
    subproject_name_singular?: string | null
    subproject_name_plural?: string | null
    subproject_order_by?: string | null
    places_label_by?: string | null
    places_order_by?: NullableJsonNullValueInput | InputJsonValue
    persons_label_by?: string | null
    persons_order_by?: string | null
    goal_reports_label_by?: string | null
    goal_reports_order_by?: string | null
    values_on_multiple_levels?: string | null
    multiple_action_values_on_same_level?: string | null
    multiple_check_values_on_same_level?: string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    files_offline?: boolean | null
    files_active_projects?: boolean | null
    files_active_subprojects?: boolean | null
    files_active_places?: boolean | null
    files_active_actions?: boolean | null
    files_active_checks?: boolean | null
    deleted?: boolean | null
    gbif_occurrences?: Gbif_occurrencesCreateNestedManyWithoutProjectsInput
    gbif_taxa?: Gbif_taxaCreateNestedManyWithoutProjectsInput
    lists?: ListsCreateNestedManyWithoutProjectsInput
    observation_sources?: Observation_sourcesCreateNestedManyWithoutProjectsInput
    persons?: PersonsCreateNestedManyWithoutProjectsInput
    place_levels?: Place_levelsCreateNestedManyWithoutProjectsInput
    project_users?: Project_usersCreateNestedManyWithoutProjectsInput
    accounts?: AccountsCreateNestedOneWithoutProjectsInput
    subprojects?: SubprojectsCreateNestedManyWithoutProjectsInput
    taxonomies?: TaxonomiesCreateNestedManyWithoutProjectsInput
    tile_layers?: Tile_layersCreateNestedManyWithoutProjectsInput
    units?: UnitsCreateNestedManyWithoutProjectsInput
  }

  export type ProjectsUncheckedCreateWithoutGbif_occurrence_downloadsInput = {
    project_id: string
    account_id?: string | null
    name?: string | null
    label?: string | null
    type?: project_type | null
    subproject_name_singular?: string | null
    subproject_name_plural?: string | null
    subproject_order_by?: string | null
    places_label_by?: string | null
    places_order_by?: NullableJsonNullValueInput | InputJsonValue
    persons_label_by?: string | null
    persons_order_by?: string | null
    goal_reports_label_by?: string | null
    goal_reports_order_by?: string | null
    values_on_multiple_levels?: string | null
    multiple_action_values_on_same_level?: string | null
    multiple_check_values_on_same_level?: string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    files_offline?: boolean | null
    files_active_projects?: boolean | null
    files_active_subprojects?: boolean | null
    files_active_places?: boolean | null
    files_active_actions?: boolean | null
    files_active_checks?: boolean | null
    deleted?: boolean | null
    gbif_occurrences?: Gbif_occurrencesUncheckedCreateNestedManyWithoutProjectsInput
    gbif_taxa?: Gbif_taxaUncheckedCreateNestedManyWithoutProjectsInput
    lists?: ListsUncheckedCreateNestedManyWithoutProjectsInput
    observation_sources?: Observation_sourcesUncheckedCreateNestedManyWithoutProjectsInput
    persons?: PersonsUncheckedCreateNestedManyWithoutProjectsInput
    place_levels?: Place_levelsUncheckedCreateNestedManyWithoutProjectsInput
    project_users?: Project_usersUncheckedCreateNestedManyWithoutProjectsInput
    subprojects?: SubprojectsUncheckedCreateNestedManyWithoutProjectsInput
    taxonomies?: TaxonomiesUncheckedCreateNestedManyWithoutProjectsInput
    tile_layers?: Tile_layersUncheckedCreateNestedManyWithoutProjectsInput
    units?: UnitsUncheckedCreateNestedManyWithoutProjectsInput
  }

  export type ProjectsCreateOrConnectWithoutGbif_occurrence_downloadsInput = {
    where: ProjectsWhereUniqueInput
    create: XOR<ProjectsCreateWithoutGbif_occurrence_downloadsInput, ProjectsUncheckedCreateWithoutGbif_occurrence_downloadsInput>
  }

  export type SubprojectsCreateWithoutGbif_occurrence_downloadsInput = {
    subproject_id: string
    name?: string | null
    label_replace_by_generated_column?: string | null
    start_year?: number | null
    end_year?: number | null
    data?: NullableJsonNullValueInput | InputJsonValue
    deleted?: boolean | null
    gbif_occurrences?: Gbif_occurrencesCreateNestedManyWithoutSubprojectsInput
    goals?: GoalsCreateNestedManyWithoutSubprojectsInput
    subproject_taxa?: Subproject_taxaCreateNestedManyWithoutSubprojectsInput
    subproject_users?: Subproject_usersCreateNestedManyWithoutSubprojectsInput
    accounts?: AccountsCreateNestedOneWithoutSubprojectsInput
    projects?: ProjectsCreateNestedOneWithoutSubprojectsInput
  }

  export type SubprojectsUncheckedCreateWithoutGbif_occurrence_downloadsInput = {
    subproject_id: string
    account_id?: string | null
    project_id?: string | null
    name?: string | null
    label_replace_by_generated_column?: string | null
    start_year?: number | null
    end_year?: number | null
    data?: NullableJsonNullValueInput | InputJsonValue
    deleted?: boolean | null
    gbif_occurrences?: Gbif_occurrencesUncheckedCreateNestedManyWithoutSubprojectsInput
    goals?: GoalsUncheckedCreateNestedManyWithoutSubprojectsInput
    subproject_taxa?: Subproject_taxaUncheckedCreateNestedManyWithoutSubprojectsInput
    subproject_users?: Subproject_usersUncheckedCreateNestedManyWithoutSubprojectsInput
  }

  export type SubprojectsCreateOrConnectWithoutGbif_occurrence_downloadsInput = {
    where: SubprojectsWhereUniqueInput
    create: XOR<SubprojectsCreateWithoutGbif_occurrence_downloadsInput, SubprojectsUncheckedCreateWithoutGbif_occurrence_downloadsInput>
  }

  export type AccountsUpsertWithoutGbif_occurrence_downloadsInput = {
    update: XOR<AccountsUpdateWithoutGbif_occurrence_downloadsInput, AccountsUncheckedUpdateWithoutGbif_occurrence_downloadsInput>
    create: XOR<AccountsCreateWithoutGbif_occurrence_downloadsInput, AccountsUncheckedCreateWithoutGbif_occurrence_downloadsInput>
    where?: AccountsWhereInput
  }

  export type AccountsUpdateToOneWithWhereWithoutGbif_occurrence_downloadsInput = {
    where?: AccountsWhereInput
    data: XOR<AccountsUpdateWithoutGbif_occurrence_downloadsInput, AccountsUncheckedUpdateWithoutGbif_occurrence_downloadsInput>
  }

  export type AccountsUpdateWithoutGbif_occurrence_downloadsInput = {
    account_id?: StringFieldUpdateOperationsInput | string
    type?: NullableStringFieldUpdateOperationsInput | string | null
    period_start?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    period_end?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    projects_label_by?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    users?: UsersUpdateOneWithoutAccountsNestedInput
    gbif_occurrences?: Gbif_occurrencesUpdateManyWithoutAccountsNestedInput
    gbif_taxa?: Gbif_taxaUpdateManyWithoutAccountsNestedInput
    goal_report_values?: Goal_report_valuesUpdateManyWithoutAccountsNestedInput
    goal_reports?: Goal_reportsUpdateManyWithoutAccountsNestedInput
    goals?: GoalsUpdateManyWithoutAccountsNestedInput
    list_values?: List_valuesUpdateManyWithoutAccountsNestedInput
    lists?: ListsUpdateManyWithoutAccountsNestedInput
    observation_sources?: Observation_sourcesUpdateManyWithoutAccountsNestedInput
    persons?: PersonsUpdateManyWithoutAccountsNestedInput
    place_levels?: Place_levelsUpdateManyWithoutAccountsNestedInput
    project_users?: Project_usersUpdateManyWithoutAccountsNestedInput
    projects?: ProjectsUpdateManyWithoutAccountsNestedInput
    subproject_taxa?: Subproject_taxaUpdateManyWithoutAccountsNestedInput
    subproject_users?: Subproject_usersUpdateManyWithoutAccountsNestedInput
    subprojects?: SubprojectsUpdateManyWithoutAccountsNestedInput
    taxa?: TaxaUpdateManyWithoutAccountsNestedInput
    taxonomies?: TaxonomiesUpdateManyWithoutAccountsNestedInput
    tile_layers?: Tile_layersUpdateManyWithoutAccountsNestedInput
    ui_options?: Ui_optionsUpdateManyWithoutAccountsNestedInput
    units?: UnitsUpdateManyWithoutAccountsNestedInput
    user_messages?: User_messagesUpdateManyWithoutAccountsNestedInput
  }

  export type AccountsUncheckedUpdateWithoutGbif_occurrence_downloadsInput = {
    account_id?: StringFieldUpdateOperationsInput | string
    user_id?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    period_start?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    period_end?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    projects_label_by?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    gbif_occurrences?: Gbif_occurrencesUncheckedUpdateManyWithoutAccountsNestedInput
    gbif_taxa?: Gbif_taxaUncheckedUpdateManyWithoutAccountsNestedInput
    goal_report_values?: Goal_report_valuesUncheckedUpdateManyWithoutAccountsNestedInput
    goal_reports?: Goal_reportsUncheckedUpdateManyWithoutAccountsNestedInput
    goals?: GoalsUncheckedUpdateManyWithoutAccountsNestedInput
    list_values?: List_valuesUncheckedUpdateManyWithoutAccountsNestedInput
    lists?: ListsUncheckedUpdateManyWithoutAccountsNestedInput
    observation_sources?: Observation_sourcesUncheckedUpdateManyWithoutAccountsNestedInput
    persons?: PersonsUncheckedUpdateManyWithoutAccountsNestedInput
    place_levels?: Place_levelsUncheckedUpdateManyWithoutAccountsNestedInput
    project_users?: Project_usersUncheckedUpdateManyWithoutAccountsNestedInput
    projects?: ProjectsUncheckedUpdateManyWithoutAccountsNestedInput
    subproject_taxa?: Subproject_taxaUncheckedUpdateManyWithoutAccountsNestedInput
    subproject_users?: Subproject_usersUncheckedUpdateManyWithoutAccountsNestedInput
    subprojects?: SubprojectsUncheckedUpdateManyWithoutAccountsNestedInput
    taxa?: TaxaUncheckedUpdateManyWithoutAccountsNestedInput
    taxonomies?: TaxonomiesUncheckedUpdateManyWithoutAccountsNestedInput
    tile_layers?: Tile_layersUncheckedUpdateManyWithoutAccountsNestedInput
    ui_options?: Ui_optionsUncheckedUpdateManyWithoutAccountsNestedInput
    units?: UnitsUncheckedUpdateManyWithoutAccountsNestedInput
    user_messages?: User_messagesUncheckedUpdateManyWithoutAccountsNestedInput
  }

  export type ProjectsUpsertWithoutGbif_occurrence_downloadsInput = {
    update: XOR<ProjectsUpdateWithoutGbif_occurrence_downloadsInput, ProjectsUncheckedUpdateWithoutGbif_occurrence_downloadsInput>
    create: XOR<ProjectsCreateWithoutGbif_occurrence_downloadsInput, ProjectsUncheckedCreateWithoutGbif_occurrence_downloadsInput>
    where?: ProjectsWhereInput
  }

  export type ProjectsUpdateToOneWithWhereWithoutGbif_occurrence_downloadsInput = {
    where?: ProjectsWhereInput
    data: XOR<ProjectsUpdateWithoutGbif_occurrence_downloadsInput, ProjectsUncheckedUpdateWithoutGbif_occurrence_downloadsInput>
  }

  export type ProjectsUpdateWithoutGbif_occurrence_downloadsInput = {
    project_id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableEnumproject_typeFieldUpdateOperationsInput | project_type | null
    subproject_name_singular?: NullableStringFieldUpdateOperationsInput | string | null
    subproject_name_plural?: NullableStringFieldUpdateOperationsInput | string | null
    subproject_order_by?: NullableStringFieldUpdateOperationsInput | string | null
    places_label_by?: NullableStringFieldUpdateOperationsInput | string | null
    places_order_by?: NullableJsonNullValueInput | InputJsonValue
    persons_label_by?: NullableStringFieldUpdateOperationsInput | string | null
    persons_order_by?: NullableStringFieldUpdateOperationsInput | string | null
    goal_reports_label_by?: NullableStringFieldUpdateOperationsInput | string | null
    goal_reports_order_by?: NullableStringFieldUpdateOperationsInput | string | null
    values_on_multiple_levels?: NullableStringFieldUpdateOperationsInput | string | null
    multiple_action_values_on_same_level?: NullableStringFieldUpdateOperationsInput | string | null
    multiple_check_values_on_same_level?: NullableStringFieldUpdateOperationsInput | string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    files_offline?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_projects?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_subprojects?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_places?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_actions?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_checks?: NullableBoolFieldUpdateOperationsInput | boolean | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    gbif_occurrences?: Gbif_occurrencesUpdateManyWithoutProjectsNestedInput
    gbif_taxa?: Gbif_taxaUpdateManyWithoutProjectsNestedInput
    lists?: ListsUpdateManyWithoutProjectsNestedInput
    observation_sources?: Observation_sourcesUpdateManyWithoutProjectsNestedInput
    persons?: PersonsUpdateManyWithoutProjectsNestedInput
    place_levels?: Place_levelsUpdateManyWithoutProjectsNestedInput
    project_users?: Project_usersUpdateManyWithoutProjectsNestedInput
    accounts?: AccountsUpdateOneWithoutProjectsNestedInput
    subprojects?: SubprojectsUpdateManyWithoutProjectsNestedInput
    taxonomies?: TaxonomiesUpdateManyWithoutProjectsNestedInput
    tile_layers?: Tile_layersUpdateManyWithoutProjectsNestedInput
    units?: UnitsUpdateManyWithoutProjectsNestedInput
  }

  export type ProjectsUncheckedUpdateWithoutGbif_occurrence_downloadsInput = {
    project_id?: StringFieldUpdateOperationsInput | string
    account_id?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableEnumproject_typeFieldUpdateOperationsInput | project_type | null
    subproject_name_singular?: NullableStringFieldUpdateOperationsInput | string | null
    subproject_name_plural?: NullableStringFieldUpdateOperationsInput | string | null
    subproject_order_by?: NullableStringFieldUpdateOperationsInput | string | null
    places_label_by?: NullableStringFieldUpdateOperationsInput | string | null
    places_order_by?: NullableJsonNullValueInput | InputJsonValue
    persons_label_by?: NullableStringFieldUpdateOperationsInput | string | null
    persons_order_by?: NullableStringFieldUpdateOperationsInput | string | null
    goal_reports_label_by?: NullableStringFieldUpdateOperationsInput | string | null
    goal_reports_order_by?: NullableStringFieldUpdateOperationsInput | string | null
    values_on_multiple_levels?: NullableStringFieldUpdateOperationsInput | string | null
    multiple_action_values_on_same_level?: NullableStringFieldUpdateOperationsInput | string | null
    multiple_check_values_on_same_level?: NullableStringFieldUpdateOperationsInput | string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    files_offline?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_projects?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_subprojects?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_places?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_actions?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_checks?: NullableBoolFieldUpdateOperationsInput | boolean | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    gbif_occurrences?: Gbif_occurrencesUncheckedUpdateManyWithoutProjectsNestedInput
    gbif_taxa?: Gbif_taxaUncheckedUpdateManyWithoutProjectsNestedInput
    lists?: ListsUncheckedUpdateManyWithoutProjectsNestedInput
    observation_sources?: Observation_sourcesUncheckedUpdateManyWithoutProjectsNestedInput
    persons?: PersonsUncheckedUpdateManyWithoutProjectsNestedInput
    place_levels?: Place_levelsUncheckedUpdateManyWithoutProjectsNestedInput
    project_users?: Project_usersUncheckedUpdateManyWithoutProjectsNestedInput
    subprojects?: SubprojectsUncheckedUpdateManyWithoutProjectsNestedInput
    taxonomies?: TaxonomiesUncheckedUpdateManyWithoutProjectsNestedInput
    tile_layers?: Tile_layersUncheckedUpdateManyWithoutProjectsNestedInput
    units?: UnitsUncheckedUpdateManyWithoutProjectsNestedInput
  }

  export type SubprojectsUpsertWithoutGbif_occurrence_downloadsInput = {
    update: XOR<SubprojectsUpdateWithoutGbif_occurrence_downloadsInput, SubprojectsUncheckedUpdateWithoutGbif_occurrence_downloadsInput>
    create: XOR<SubprojectsCreateWithoutGbif_occurrence_downloadsInput, SubprojectsUncheckedCreateWithoutGbif_occurrence_downloadsInput>
    where?: SubprojectsWhereInput
  }

  export type SubprojectsUpdateToOneWithWhereWithoutGbif_occurrence_downloadsInput = {
    where?: SubprojectsWhereInput
    data: XOR<SubprojectsUpdateWithoutGbif_occurrence_downloadsInput, SubprojectsUncheckedUpdateWithoutGbif_occurrence_downloadsInput>
  }

  export type SubprojectsUpdateWithoutGbif_occurrence_downloadsInput = {
    subproject_id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    label_replace_by_generated_column?: NullableStringFieldUpdateOperationsInput | string | null
    start_year?: NullableIntFieldUpdateOperationsInput | number | null
    end_year?: NullableIntFieldUpdateOperationsInput | number | null
    data?: NullableJsonNullValueInput | InputJsonValue
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    gbif_occurrences?: Gbif_occurrencesUpdateManyWithoutSubprojectsNestedInput
    goals?: GoalsUpdateManyWithoutSubprojectsNestedInput
    subproject_taxa?: Subproject_taxaUpdateManyWithoutSubprojectsNestedInput
    subproject_users?: Subproject_usersUpdateManyWithoutSubprojectsNestedInput
    accounts?: AccountsUpdateOneWithoutSubprojectsNestedInput
    projects?: ProjectsUpdateOneWithoutSubprojectsNestedInput
  }

  export type SubprojectsUncheckedUpdateWithoutGbif_occurrence_downloadsInput = {
    subproject_id?: StringFieldUpdateOperationsInput | string
    account_id?: NullableStringFieldUpdateOperationsInput | string | null
    project_id?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    label_replace_by_generated_column?: NullableStringFieldUpdateOperationsInput | string | null
    start_year?: NullableIntFieldUpdateOperationsInput | number | null
    end_year?: NullableIntFieldUpdateOperationsInput | number | null
    data?: NullableJsonNullValueInput | InputJsonValue
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    gbif_occurrences?: Gbif_occurrencesUncheckedUpdateManyWithoutSubprojectsNestedInput
    goals?: GoalsUncheckedUpdateManyWithoutSubprojectsNestedInput
    subproject_taxa?: Subproject_taxaUncheckedUpdateManyWithoutSubprojectsNestedInput
    subproject_users?: Subproject_usersUncheckedUpdateManyWithoutSubprojectsNestedInput
  }

  export type AccountsCreateWithoutGbif_occurrencesInput = {
    account_id: string
    type?: string | null
    period_start?: Date | string | null
    period_end?: Date | string | null
    projects_label_by?: string | null
    label?: string | null
    users?: UsersCreateNestedOneWithoutAccountsInput
    gbif_occurrence_downloads?: Gbif_occurrence_downloadsCreateNestedManyWithoutAccountsInput
    gbif_taxa?: Gbif_taxaCreateNestedManyWithoutAccountsInput
    goal_report_values?: Goal_report_valuesCreateNestedManyWithoutAccountsInput
    goal_reports?: Goal_reportsCreateNestedManyWithoutAccountsInput
    goals?: GoalsCreateNestedManyWithoutAccountsInput
    list_values?: List_valuesCreateNestedManyWithoutAccountsInput
    lists?: ListsCreateNestedManyWithoutAccountsInput
    observation_sources?: Observation_sourcesCreateNestedManyWithoutAccountsInput
    persons?: PersonsCreateNestedManyWithoutAccountsInput
    place_levels?: Place_levelsCreateNestedManyWithoutAccountsInput
    project_users?: Project_usersCreateNestedManyWithoutAccountsInput
    projects?: ProjectsCreateNestedManyWithoutAccountsInput
    subproject_taxa?: Subproject_taxaCreateNestedManyWithoutAccountsInput
    subproject_users?: Subproject_usersCreateNestedManyWithoutAccountsInput
    subprojects?: SubprojectsCreateNestedManyWithoutAccountsInput
    taxa?: TaxaCreateNestedManyWithoutAccountsInput
    taxonomies?: TaxonomiesCreateNestedManyWithoutAccountsInput
    tile_layers?: Tile_layersCreateNestedManyWithoutAccountsInput
    ui_options?: Ui_optionsCreateNestedManyWithoutAccountsInput
    units?: UnitsCreateNestedManyWithoutAccountsInput
    user_messages?: User_messagesCreateNestedManyWithoutAccountsInput
  }

  export type AccountsUncheckedCreateWithoutGbif_occurrencesInput = {
    account_id: string
    user_id?: string | null
    type?: string | null
    period_start?: Date | string | null
    period_end?: Date | string | null
    projects_label_by?: string | null
    label?: string | null
    gbif_occurrence_downloads?: Gbif_occurrence_downloadsUncheckedCreateNestedManyWithoutAccountsInput
    gbif_taxa?: Gbif_taxaUncheckedCreateNestedManyWithoutAccountsInput
    goal_report_values?: Goal_report_valuesUncheckedCreateNestedManyWithoutAccountsInput
    goal_reports?: Goal_reportsUncheckedCreateNestedManyWithoutAccountsInput
    goals?: GoalsUncheckedCreateNestedManyWithoutAccountsInput
    list_values?: List_valuesUncheckedCreateNestedManyWithoutAccountsInput
    lists?: ListsUncheckedCreateNestedManyWithoutAccountsInput
    observation_sources?: Observation_sourcesUncheckedCreateNestedManyWithoutAccountsInput
    persons?: PersonsUncheckedCreateNestedManyWithoutAccountsInput
    place_levels?: Place_levelsUncheckedCreateNestedManyWithoutAccountsInput
    project_users?: Project_usersUncheckedCreateNestedManyWithoutAccountsInput
    projects?: ProjectsUncheckedCreateNestedManyWithoutAccountsInput
    subproject_taxa?: Subproject_taxaUncheckedCreateNestedManyWithoutAccountsInput
    subproject_users?: Subproject_usersUncheckedCreateNestedManyWithoutAccountsInput
    subprojects?: SubprojectsUncheckedCreateNestedManyWithoutAccountsInput
    taxa?: TaxaUncheckedCreateNestedManyWithoutAccountsInput
    taxonomies?: TaxonomiesUncheckedCreateNestedManyWithoutAccountsInput
    tile_layers?: Tile_layersUncheckedCreateNestedManyWithoutAccountsInput
    ui_options?: Ui_optionsUncheckedCreateNestedManyWithoutAccountsInput
    units?: UnitsUncheckedCreateNestedManyWithoutAccountsInput
    user_messages?: User_messagesUncheckedCreateNestedManyWithoutAccountsInput
  }

  export type AccountsCreateOrConnectWithoutGbif_occurrencesInput = {
    where: AccountsWhereUniqueInput
    create: XOR<AccountsCreateWithoutGbif_occurrencesInput, AccountsUncheckedCreateWithoutGbif_occurrencesInput>
  }

  export type ProjectsCreateWithoutGbif_occurrencesInput = {
    project_id: string
    name?: string | null
    label?: string | null
    type?: project_type | null
    subproject_name_singular?: string | null
    subproject_name_plural?: string | null
    subproject_order_by?: string | null
    places_label_by?: string | null
    places_order_by?: NullableJsonNullValueInput | InputJsonValue
    persons_label_by?: string | null
    persons_order_by?: string | null
    goal_reports_label_by?: string | null
    goal_reports_order_by?: string | null
    values_on_multiple_levels?: string | null
    multiple_action_values_on_same_level?: string | null
    multiple_check_values_on_same_level?: string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    files_offline?: boolean | null
    files_active_projects?: boolean | null
    files_active_subprojects?: boolean | null
    files_active_places?: boolean | null
    files_active_actions?: boolean | null
    files_active_checks?: boolean | null
    deleted?: boolean | null
    gbif_occurrence_downloads?: Gbif_occurrence_downloadsCreateNestedManyWithoutProjectsInput
    gbif_taxa?: Gbif_taxaCreateNestedManyWithoutProjectsInput
    lists?: ListsCreateNestedManyWithoutProjectsInput
    observation_sources?: Observation_sourcesCreateNestedManyWithoutProjectsInput
    persons?: PersonsCreateNestedManyWithoutProjectsInput
    place_levels?: Place_levelsCreateNestedManyWithoutProjectsInput
    project_users?: Project_usersCreateNestedManyWithoutProjectsInput
    accounts?: AccountsCreateNestedOneWithoutProjectsInput
    subprojects?: SubprojectsCreateNestedManyWithoutProjectsInput
    taxonomies?: TaxonomiesCreateNestedManyWithoutProjectsInput
    tile_layers?: Tile_layersCreateNestedManyWithoutProjectsInput
    units?: UnitsCreateNestedManyWithoutProjectsInput
  }

  export type ProjectsUncheckedCreateWithoutGbif_occurrencesInput = {
    project_id: string
    account_id?: string | null
    name?: string | null
    label?: string | null
    type?: project_type | null
    subproject_name_singular?: string | null
    subproject_name_plural?: string | null
    subproject_order_by?: string | null
    places_label_by?: string | null
    places_order_by?: NullableJsonNullValueInput | InputJsonValue
    persons_label_by?: string | null
    persons_order_by?: string | null
    goal_reports_label_by?: string | null
    goal_reports_order_by?: string | null
    values_on_multiple_levels?: string | null
    multiple_action_values_on_same_level?: string | null
    multiple_check_values_on_same_level?: string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    files_offline?: boolean | null
    files_active_projects?: boolean | null
    files_active_subprojects?: boolean | null
    files_active_places?: boolean | null
    files_active_actions?: boolean | null
    files_active_checks?: boolean | null
    deleted?: boolean | null
    gbif_occurrence_downloads?: Gbif_occurrence_downloadsUncheckedCreateNestedManyWithoutProjectsInput
    gbif_taxa?: Gbif_taxaUncheckedCreateNestedManyWithoutProjectsInput
    lists?: ListsUncheckedCreateNestedManyWithoutProjectsInput
    observation_sources?: Observation_sourcesUncheckedCreateNestedManyWithoutProjectsInput
    persons?: PersonsUncheckedCreateNestedManyWithoutProjectsInput
    place_levels?: Place_levelsUncheckedCreateNestedManyWithoutProjectsInput
    project_users?: Project_usersUncheckedCreateNestedManyWithoutProjectsInput
    subprojects?: SubprojectsUncheckedCreateNestedManyWithoutProjectsInput
    taxonomies?: TaxonomiesUncheckedCreateNestedManyWithoutProjectsInput
    tile_layers?: Tile_layersUncheckedCreateNestedManyWithoutProjectsInput
    units?: UnitsUncheckedCreateNestedManyWithoutProjectsInput
  }

  export type ProjectsCreateOrConnectWithoutGbif_occurrencesInput = {
    where: ProjectsWhereUniqueInput
    create: XOR<ProjectsCreateWithoutGbif_occurrencesInput, ProjectsUncheckedCreateWithoutGbif_occurrencesInput>
  }

  export type SubprojectsCreateWithoutGbif_occurrencesInput = {
    subproject_id: string
    name?: string | null
    label_replace_by_generated_column?: string | null
    start_year?: number | null
    end_year?: number | null
    data?: NullableJsonNullValueInput | InputJsonValue
    deleted?: boolean | null
    gbif_occurrence_downloads?: Gbif_occurrence_downloadsCreateNestedManyWithoutSubprojectsInput
    goals?: GoalsCreateNestedManyWithoutSubprojectsInput
    subproject_taxa?: Subproject_taxaCreateNestedManyWithoutSubprojectsInput
    subproject_users?: Subproject_usersCreateNestedManyWithoutSubprojectsInput
    accounts?: AccountsCreateNestedOneWithoutSubprojectsInput
    projects?: ProjectsCreateNestedOneWithoutSubprojectsInput
  }

  export type SubprojectsUncheckedCreateWithoutGbif_occurrencesInput = {
    subproject_id: string
    account_id?: string | null
    project_id?: string | null
    name?: string | null
    label_replace_by_generated_column?: string | null
    start_year?: number | null
    end_year?: number | null
    data?: NullableJsonNullValueInput | InputJsonValue
    deleted?: boolean | null
    gbif_occurrence_downloads?: Gbif_occurrence_downloadsUncheckedCreateNestedManyWithoutSubprojectsInput
    goals?: GoalsUncheckedCreateNestedManyWithoutSubprojectsInput
    subproject_taxa?: Subproject_taxaUncheckedCreateNestedManyWithoutSubprojectsInput
    subproject_users?: Subproject_usersUncheckedCreateNestedManyWithoutSubprojectsInput
  }

  export type SubprojectsCreateOrConnectWithoutGbif_occurrencesInput = {
    where: SubprojectsWhereUniqueInput
    create: XOR<SubprojectsCreateWithoutGbif_occurrencesInput, SubprojectsUncheckedCreateWithoutGbif_occurrencesInput>
  }

  export type AccountsUpsertWithoutGbif_occurrencesInput = {
    update: XOR<AccountsUpdateWithoutGbif_occurrencesInput, AccountsUncheckedUpdateWithoutGbif_occurrencesInput>
    create: XOR<AccountsCreateWithoutGbif_occurrencesInput, AccountsUncheckedCreateWithoutGbif_occurrencesInput>
    where?: AccountsWhereInput
  }

  export type AccountsUpdateToOneWithWhereWithoutGbif_occurrencesInput = {
    where?: AccountsWhereInput
    data: XOR<AccountsUpdateWithoutGbif_occurrencesInput, AccountsUncheckedUpdateWithoutGbif_occurrencesInput>
  }

  export type AccountsUpdateWithoutGbif_occurrencesInput = {
    account_id?: StringFieldUpdateOperationsInput | string
    type?: NullableStringFieldUpdateOperationsInput | string | null
    period_start?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    period_end?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    projects_label_by?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    users?: UsersUpdateOneWithoutAccountsNestedInput
    gbif_occurrence_downloads?: Gbif_occurrence_downloadsUpdateManyWithoutAccountsNestedInput
    gbif_taxa?: Gbif_taxaUpdateManyWithoutAccountsNestedInput
    goal_report_values?: Goal_report_valuesUpdateManyWithoutAccountsNestedInput
    goal_reports?: Goal_reportsUpdateManyWithoutAccountsNestedInput
    goals?: GoalsUpdateManyWithoutAccountsNestedInput
    list_values?: List_valuesUpdateManyWithoutAccountsNestedInput
    lists?: ListsUpdateManyWithoutAccountsNestedInput
    observation_sources?: Observation_sourcesUpdateManyWithoutAccountsNestedInput
    persons?: PersonsUpdateManyWithoutAccountsNestedInput
    place_levels?: Place_levelsUpdateManyWithoutAccountsNestedInput
    project_users?: Project_usersUpdateManyWithoutAccountsNestedInput
    projects?: ProjectsUpdateManyWithoutAccountsNestedInput
    subproject_taxa?: Subproject_taxaUpdateManyWithoutAccountsNestedInput
    subproject_users?: Subproject_usersUpdateManyWithoutAccountsNestedInput
    subprojects?: SubprojectsUpdateManyWithoutAccountsNestedInput
    taxa?: TaxaUpdateManyWithoutAccountsNestedInput
    taxonomies?: TaxonomiesUpdateManyWithoutAccountsNestedInput
    tile_layers?: Tile_layersUpdateManyWithoutAccountsNestedInput
    ui_options?: Ui_optionsUpdateManyWithoutAccountsNestedInput
    units?: UnitsUpdateManyWithoutAccountsNestedInput
    user_messages?: User_messagesUpdateManyWithoutAccountsNestedInput
  }

  export type AccountsUncheckedUpdateWithoutGbif_occurrencesInput = {
    account_id?: StringFieldUpdateOperationsInput | string
    user_id?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    period_start?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    period_end?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    projects_label_by?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    gbif_occurrence_downloads?: Gbif_occurrence_downloadsUncheckedUpdateManyWithoutAccountsNestedInput
    gbif_taxa?: Gbif_taxaUncheckedUpdateManyWithoutAccountsNestedInput
    goal_report_values?: Goal_report_valuesUncheckedUpdateManyWithoutAccountsNestedInput
    goal_reports?: Goal_reportsUncheckedUpdateManyWithoutAccountsNestedInput
    goals?: GoalsUncheckedUpdateManyWithoutAccountsNestedInput
    list_values?: List_valuesUncheckedUpdateManyWithoutAccountsNestedInput
    lists?: ListsUncheckedUpdateManyWithoutAccountsNestedInput
    observation_sources?: Observation_sourcesUncheckedUpdateManyWithoutAccountsNestedInput
    persons?: PersonsUncheckedUpdateManyWithoutAccountsNestedInput
    place_levels?: Place_levelsUncheckedUpdateManyWithoutAccountsNestedInput
    project_users?: Project_usersUncheckedUpdateManyWithoutAccountsNestedInput
    projects?: ProjectsUncheckedUpdateManyWithoutAccountsNestedInput
    subproject_taxa?: Subproject_taxaUncheckedUpdateManyWithoutAccountsNestedInput
    subproject_users?: Subproject_usersUncheckedUpdateManyWithoutAccountsNestedInput
    subprojects?: SubprojectsUncheckedUpdateManyWithoutAccountsNestedInput
    taxa?: TaxaUncheckedUpdateManyWithoutAccountsNestedInput
    taxonomies?: TaxonomiesUncheckedUpdateManyWithoutAccountsNestedInput
    tile_layers?: Tile_layersUncheckedUpdateManyWithoutAccountsNestedInput
    ui_options?: Ui_optionsUncheckedUpdateManyWithoutAccountsNestedInput
    units?: UnitsUncheckedUpdateManyWithoutAccountsNestedInput
    user_messages?: User_messagesUncheckedUpdateManyWithoutAccountsNestedInput
  }

  export type ProjectsUpsertWithoutGbif_occurrencesInput = {
    update: XOR<ProjectsUpdateWithoutGbif_occurrencesInput, ProjectsUncheckedUpdateWithoutGbif_occurrencesInput>
    create: XOR<ProjectsCreateWithoutGbif_occurrencesInput, ProjectsUncheckedCreateWithoutGbif_occurrencesInput>
    where?: ProjectsWhereInput
  }

  export type ProjectsUpdateToOneWithWhereWithoutGbif_occurrencesInput = {
    where?: ProjectsWhereInput
    data: XOR<ProjectsUpdateWithoutGbif_occurrencesInput, ProjectsUncheckedUpdateWithoutGbif_occurrencesInput>
  }

  export type ProjectsUpdateWithoutGbif_occurrencesInput = {
    project_id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableEnumproject_typeFieldUpdateOperationsInput | project_type | null
    subproject_name_singular?: NullableStringFieldUpdateOperationsInput | string | null
    subproject_name_plural?: NullableStringFieldUpdateOperationsInput | string | null
    subproject_order_by?: NullableStringFieldUpdateOperationsInput | string | null
    places_label_by?: NullableStringFieldUpdateOperationsInput | string | null
    places_order_by?: NullableJsonNullValueInput | InputJsonValue
    persons_label_by?: NullableStringFieldUpdateOperationsInput | string | null
    persons_order_by?: NullableStringFieldUpdateOperationsInput | string | null
    goal_reports_label_by?: NullableStringFieldUpdateOperationsInput | string | null
    goal_reports_order_by?: NullableStringFieldUpdateOperationsInput | string | null
    values_on_multiple_levels?: NullableStringFieldUpdateOperationsInput | string | null
    multiple_action_values_on_same_level?: NullableStringFieldUpdateOperationsInput | string | null
    multiple_check_values_on_same_level?: NullableStringFieldUpdateOperationsInput | string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    files_offline?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_projects?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_subprojects?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_places?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_actions?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_checks?: NullableBoolFieldUpdateOperationsInput | boolean | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    gbif_occurrence_downloads?: Gbif_occurrence_downloadsUpdateManyWithoutProjectsNestedInput
    gbif_taxa?: Gbif_taxaUpdateManyWithoutProjectsNestedInput
    lists?: ListsUpdateManyWithoutProjectsNestedInput
    observation_sources?: Observation_sourcesUpdateManyWithoutProjectsNestedInput
    persons?: PersonsUpdateManyWithoutProjectsNestedInput
    place_levels?: Place_levelsUpdateManyWithoutProjectsNestedInput
    project_users?: Project_usersUpdateManyWithoutProjectsNestedInput
    accounts?: AccountsUpdateOneWithoutProjectsNestedInput
    subprojects?: SubprojectsUpdateManyWithoutProjectsNestedInput
    taxonomies?: TaxonomiesUpdateManyWithoutProjectsNestedInput
    tile_layers?: Tile_layersUpdateManyWithoutProjectsNestedInput
    units?: UnitsUpdateManyWithoutProjectsNestedInput
  }

  export type ProjectsUncheckedUpdateWithoutGbif_occurrencesInput = {
    project_id?: StringFieldUpdateOperationsInput | string
    account_id?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableEnumproject_typeFieldUpdateOperationsInput | project_type | null
    subproject_name_singular?: NullableStringFieldUpdateOperationsInput | string | null
    subproject_name_plural?: NullableStringFieldUpdateOperationsInput | string | null
    subproject_order_by?: NullableStringFieldUpdateOperationsInput | string | null
    places_label_by?: NullableStringFieldUpdateOperationsInput | string | null
    places_order_by?: NullableJsonNullValueInput | InputJsonValue
    persons_label_by?: NullableStringFieldUpdateOperationsInput | string | null
    persons_order_by?: NullableStringFieldUpdateOperationsInput | string | null
    goal_reports_label_by?: NullableStringFieldUpdateOperationsInput | string | null
    goal_reports_order_by?: NullableStringFieldUpdateOperationsInput | string | null
    values_on_multiple_levels?: NullableStringFieldUpdateOperationsInput | string | null
    multiple_action_values_on_same_level?: NullableStringFieldUpdateOperationsInput | string | null
    multiple_check_values_on_same_level?: NullableStringFieldUpdateOperationsInput | string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    files_offline?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_projects?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_subprojects?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_places?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_actions?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_checks?: NullableBoolFieldUpdateOperationsInput | boolean | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    gbif_occurrence_downloads?: Gbif_occurrence_downloadsUncheckedUpdateManyWithoutProjectsNestedInput
    gbif_taxa?: Gbif_taxaUncheckedUpdateManyWithoutProjectsNestedInput
    lists?: ListsUncheckedUpdateManyWithoutProjectsNestedInput
    observation_sources?: Observation_sourcesUncheckedUpdateManyWithoutProjectsNestedInput
    persons?: PersonsUncheckedUpdateManyWithoutProjectsNestedInput
    place_levels?: Place_levelsUncheckedUpdateManyWithoutProjectsNestedInput
    project_users?: Project_usersUncheckedUpdateManyWithoutProjectsNestedInput
    subprojects?: SubprojectsUncheckedUpdateManyWithoutProjectsNestedInput
    taxonomies?: TaxonomiesUncheckedUpdateManyWithoutProjectsNestedInput
    tile_layers?: Tile_layersUncheckedUpdateManyWithoutProjectsNestedInput
    units?: UnitsUncheckedUpdateManyWithoutProjectsNestedInput
  }

  export type SubprojectsUpsertWithoutGbif_occurrencesInput = {
    update: XOR<SubprojectsUpdateWithoutGbif_occurrencesInput, SubprojectsUncheckedUpdateWithoutGbif_occurrencesInput>
    create: XOR<SubprojectsCreateWithoutGbif_occurrencesInput, SubprojectsUncheckedCreateWithoutGbif_occurrencesInput>
    where?: SubprojectsWhereInput
  }

  export type SubprojectsUpdateToOneWithWhereWithoutGbif_occurrencesInput = {
    where?: SubprojectsWhereInput
    data: XOR<SubprojectsUpdateWithoutGbif_occurrencesInput, SubprojectsUncheckedUpdateWithoutGbif_occurrencesInput>
  }

  export type SubprojectsUpdateWithoutGbif_occurrencesInput = {
    subproject_id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    label_replace_by_generated_column?: NullableStringFieldUpdateOperationsInput | string | null
    start_year?: NullableIntFieldUpdateOperationsInput | number | null
    end_year?: NullableIntFieldUpdateOperationsInput | number | null
    data?: NullableJsonNullValueInput | InputJsonValue
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    gbif_occurrence_downloads?: Gbif_occurrence_downloadsUpdateManyWithoutSubprojectsNestedInput
    goals?: GoalsUpdateManyWithoutSubprojectsNestedInput
    subproject_taxa?: Subproject_taxaUpdateManyWithoutSubprojectsNestedInput
    subproject_users?: Subproject_usersUpdateManyWithoutSubprojectsNestedInput
    accounts?: AccountsUpdateOneWithoutSubprojectsNestedInput
    projects?: ProjectsUpdateOneWithoutSubprojectsNestedInput
  }

  export type SubprojectsUncheckedUpdateWithoutGbif_occurrencesInput = {
    subproject_id?: StringFieldUpdateOperationsInput | string
    account_id?: NullableStringFieldUpdateOperationsInput | string | null
    project_id?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    label_replace_by_generated_column?: NullableStringFieldUpdateOperationsInput | string | null
    start_year?: NullableIntFieldUpdateOperationsInput | number | null
    end_year?: NullableIntFieldUpdateOperationsInput | number | null
    data?: NullableJsonNullValueInput | InputJsonValue
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    gbif_occurrence_downloads?: Gbif_occurrence_downloadsUncheckedUpdateManyWithoutSubprojectsNestedInput
    goals?: GoalsUncheckedUpdateManyWithoutSubprojectsNestedInput
    subproject_taxa?: Subproject_taxaUncheckedUpdateManyWithoutSubprojectsNestedInput
    subproject_users?: Subproject_usersUncheckedUpdateManyWithoutSubprojectsNestedInput
  }

  export type AccountsCreateWithoutGbif_taxaInput = {
    account_id: string
    type?: string | null
    period_start?: Date | string | null
    period_end?: Date | string | null
    projects_label_by?: string | null
    label?: string | null
    users?: UsersCreateNestedOneWithoutAccountsInput
    gbif_occurrence_downloads?: Gbif_occurrence_downloadsCreateNestedManyWithoutAccountsInput
    gbif_occurrences?: Gbif_occurrencesCreateNestedManyWithoutAccountsInput
    goal_report_values?: Goal_report_valuesCreateNestedManyWithoutAccountsInput
    goal_reports?: Goal_reportsCreateNestedManyWithoutAccountsInput
    goals?: GoalsCreateNestedManyWithoutAccountsInput
    list_values?: List_valuesCreateNestedManyWithoutAccountsInput
    lists?: ListsCreateNestedManyWithoutAccountsInput
    observation_sources?: Observation_sourcesCreateNestedManyWithoutAccountsInput
    persons?: PersonsCreateNestedManyWithoutAccountsInput
    place_levels?: Place_levelsCreateNestedManyWithoutAccountsInput
    project_users?: Project_usersCreateNestedManyWithoutAccountsInput
    projects?: ProjectsCreateNestedManyWithoutAccountsInput
    subproject_taxa?: Subproject_taxaCreateNestedManyWithoutAccountsInput
    subproject_users?: Subproject_usersCreateNestedManyWithoutAccountsInput
    subprojects?: SubprojectsCreateNestedManyWithoutAccountsInput
    taxa?: TaxaCreateNestedManyWithoutAccountsInput
    taxonomies?: TaxonomiesCreateNestedManyWithoutAccountsInput
    tile_layers?: Tile_layersCreateNestedManyWithoutAccountsInput
    ui_options?: Ui_optionsCreateNestedManyWithoutAccountsInput
    units?: UnitsCreateNestedManyWithoutAccountsInput
    user_messages?: User_messagesCreateNestedManyWithoutAccountsInput
  }

  export type AccountsUncheckedCreateWithoutGbif_taxaInput = {
    account_id: string
    user_id?: string | null
    type?: string | null
    period_start?: Date | string | null
    period_end?: Date | string | null
    projects_label_by?: string | null
    label?: string | null
    gbif_occurrence_downloads?: Gbif_occurrence_downloadsUncheckedCreateNestedManyWithoutAccountsInput
    gbif_occurrences?: Gbif_occurrencesUncheckedCreateNestedManyWithoutAccountsInput
    goal_report_values?: Goal_report_valuesUncheckedCreateNestedManyWithoutAccountsInput
    goal_reports?: Goal_reportsUncheckedCreateNestedManyWithoutAccountsInput
    goals?: GoalsUncheckedCreateNestedManyWithoutAccountsInput
    list_values?: List_valuesUncheckedCreateNestedManyWithoutAccountsInput
    lists?: ListsUncheckedCreateNestedManyWithoutAccountsInput
    observation_sources?: Observation_sourcesUncheckedCreateNestedManyWithoutAccountsInput
    persons?: PersonsUncheckedCreateNestedManyWithoutAccountsInput
    place_levels?: Place_levelsUncheckedCreateNestedManyWithoutAccountsInput
    project_users?: Project_usersUncheckedCreateNestedManyWithoutAccountsInput
    projects?: ProjectsUncheckedCreateNestedManyWithoutAccountsInput
    subproject_taxa?: Subproject_taxaUncheckedCreateNestedManyWithoutAccountsInput
    subproject_users?: Subproject_usersUncheckedCreateNestedManyWithoutAccountsInput
    subprojects?: SubprojectsUncheckedCreateNestedManyWithoutAccountsInput
    taxa?: TaxaUncheckedCreateNestedManyWithoutAccountsInput
    taxonomies?: TaxonomiesUncheckedCreateNestedManyWithoutAccountsInput
    tile_layers?: Tile_layersUncheckedCreateNestedManyWithoutAccountsInput
    ui_options?: Ui_optionsUncheckedCreateNestedManyWithoutAccountsInput
    units?: UnitsUncheckedCreateNestedManyWithoutAccountsInput
    user_messages?: User_messagesUncheckedCreateNestedManyWithoutAccountsInput
  }

  export type AccountsCreateOrConnectWithoutGbif_taxaInput = {
    where: AccountsWhereUniqueInput
    create: XOR<AccountsCreateWithoutGbif_taxaInput, AccountsUncheckedCreateWithoutGbif_taxaInput>
  }

  export type ProjectsCreateWithoutGbif_taxaInput = {
    project_id: string
    name?: string | null
    label?: string | null
    type?: project_type | null
    subproject_name_singular?: string | null
    subproject_name_plural?: string | null
    subproject_order_by?: string | null
    places_label_by?: string | null
    places_order_by?: NullableJsonNullValueInput | InputJsonValue
    persons_label_by?: string | null
    persons_order_by?: string | null
    goal_reports_label_by?: string | null
    goal_reports_order_by?: string | null
    values_on_multiple_levels?: string | null
    multiple_action_values_on_same_level?: string | null
    multiple_check_values_on_same_level?: string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    files_offline?: boolean | null
    files_active_projects?: boolean | null
    files_active_subprojects?: boolean | null
    files_active_places?: boolean | null
    files_active_actions?: boolean | null
    files_active_checks?: boolean | null
    deleted?: boolean | null
    gbif_occurrence_downloads?: Gbif_occurrence_downloadsCreateNestedManyWithoutProjectsInput
    gbif_occurrences?: Gbif_occurrencesCreateNestedManyWithoutProjectsInput
    lists?: ListsCreateNestedManyWithoutProjectsInput
    observation_sources?: Observation_sourcesCreateNestedManyWithoutProjectsInput
    persons?: PersonsCreateNestedManyWithoutProjectsInput
    place_levels?: Place_levelsCreateNestedManyWithoutProjectsInput
    project_users?: Project_usersCreateNestedManyWithoutProjectsInput
    accounts?: AccountsCreateNestedOneWithoutProjectsInput
    subprojects?: SubprojectsCreateNestedManyWithoutProjectsInput
    taxonomies?: TaxonomiesCreateNestedManyWithoutProjectsInput
    tile_layers?: Tile_layersCreateNestedManyWithoutProjectsInput
    units?: UnitsCreateNestedManyWithoutProjectsInput
  }

  export type ProjectsUncheckedCreateWithoutGbif_taxaInput = {
    project_id: string
    account_id?: string | null
    name?: string | null
    label?: string | null
    type?: project_type | null
    subproject_name_singular?: string | null
    subproject_name_plural?: string | null
    subproject_order_by?: string | null
    places_label_by?: string | null
    places_order_by?: NullableJsonNullValueInput | InputJsonValue
    persons_label_by?: string | null
    persons_order_by?: string | null
    goal_reports_label_by?: string | null
    goal_reports_order_by?: string | null
    values_on_multiple_levels?: string | null
    multiple_action_values_on_same_level?: string | null
    multiple_check_values_on_same_level?: string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    files_offline?: boolean | null
    files_active_projects?: boolean | null
    files_active_subprojects?: boolean | null
    files_active_places?: boolean | null
    files_active_actions?: boolean | null
    files_active_checks?: boolean | null
    deleted?: boolean | null
    gbif_occurrence_downloads?: Gbif_occurrence_downloadsUncheckedCreateNestedManyWithoutProjectsInput
    gbif_occurrences?: Gbif_occurrencesUncheckedCreateNestedManyWithoutProjectsInput
    lists?: ListsUncheckedCreateNestedManyWithoutProjectsInput
    observation_sources?: Observation_sourcesUncheckedCreateNestedManyWithoutProjectsInput
    persons?: PersonsUncheckedCreateNestedManyWithoutProjectsInput
    place_levels?: Place_levelsUncheckedCreateNestedManyWithoutProjectsInput
    project_users?: Project_usersUncheckedCreateNestedManyWithoutProjectsInput
    subprojects?: SubprojectsUncheckedCreateNestedManyWithoutProjectsInput
    taxonomies?: TaxonomiesUncheckedCreateNestedManyWithoutProjectsInput
    tile_layers?: Tile_layersUncheckedCreateNestedManyWithoutProjectsInput
    units?: UnitsUncheckedCreateNestedManyWithoutProjectsInput
  }

  export type ProjectsCreateOrConnectWithoutGbif_taxaInput = {
    where: ProjectsWhereUniqueInput
    create: XOR<ProjectsCreateWithoutGbif_taxaInput, ProjectsUncheckedCreateWithoutGbif_taxaInput>
  }

  export type AccountsUpsertWithoutGbif_taxaInput = {
    update: XOR<AccountsUpdateWithoutGbif_taxaInput, AccountsUncheckedUpdateWithoutGbif_taxaInput>
    create: XOR<AccountsCreateWithoutGbif_taxaInput, AccountsUncheckedCreateWithoutGbif_taxaInput>
    where?: AccountsWhereInput
  }

  export type AccountsUpdateToOneWithWhereWithoutGbif_taxaInput = {
    where?: AccountsWhereInput
    data: XOR<AccountsUpdateWithoutGbif_taxaInput, AccountsUncheckedUpdateWithoutGbif_taxaInput>
  }

  export type AccountsUpdateWithoutGbif_taxaInput = {
    account_id?: StringFieldUpdateOperationsInput | string
    type?: NullableStringFieldUpdateOperationsInput | string | null
    period_start?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    period_end?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    projects_label_by?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    users?: UsersUpdateOneWithoutAccountsNestedInput
    gbif_occurrence_downloads?: Gbif_occurrence_downloadsUpdateManyWithoutAccountsNestedInput
    gbif_occurrences?: Gbif_occurrencesUpdateManyWithoutAccountsNestedInput
    goal_report_values?: Goal_report_valuesUpdateManyWithoutAccountsNestedInput
    goal_reports?: Goal_reportsUpdateManyWithoutAccountsNestedInput
    goals?: GoalsUpdateManyWithoutAccountsNestedInput
    list_values?: List_valuesUpdateManyWithoutAccountsNestedInput
    lists?: ListsUpdateManyWithoutAccountsNestedInput
    observation_sources?: Observation_sourcesUpdateManyWithoutAccountsNestedInput
    persons?: PersonsUpdateManyWithoutAccountsNestedInput
    place_levels?: Place_levelsUpdateManyWithoutAccountsNestedInput
    project_users?: Project_usersUpdateManyWithoutAccountsNestedInput
    projects?: ProjectsUpdateManyWithoutAccountsNestedInput
    subproject_taxa?: Subproject_taxaUpdateManyWithoutAccountsNestedInput
    subproject_users?: Subproject_usersUpdateManyWithoutAccountsNestedInput
    subprojects?: SubprojectsUpdateManyWithoutAccountsNestedInput
    taxa?: TaxaUpdateManyWithoutAccountsNestedInput
    taxonomies?: TaxonomiesUpdateManyWithoutAccountsNestedInput
    tile_layers?: Tile_layersUpdateManyWithoutAccountsNestedInput
    ui_options?: Ui_optionsUpdateManyWithoutAccountsNestedInput
    units?: UnitsUpdateManyWithoutAccountsNestedInput
    user_messages?: User_messagesUpdateManyWithoutAccountsNestedInput
  }

  export type AccountsUncheckedUpdateWithoutGbif_taxaInput = {
    account_id?: StringFieldUpdateOperationsInput | string
    user_id?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    period_start?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    period_end?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    projects_label_by?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    gbif_occurrence_downloads?: Gbif_occurrence_downloadsUncheckedUpdateManyWithoutAccountsNestedInput
    gbif_occurrences?: Gbif_occurrencesUncheckedUpdateManyWithoutAccountsNestedInput
    goal_report_values?: Goal_report_valuesUncheckedUpdateManyWithoutAccountsNestedInput
    goal_reports?: Goal_reportsUncheckedUpdateManyWithoutAccountsNestedInput
    goals?: GoalsUncheckedUpdateManyWithoutAccountsNestedInput
    list_values?: List_valuesUncheckedUpdateManyWithoutAccountsNestedInput
    lists?: ListsUncheckedUpdateManyWithoutAccountsNestedInput
    observation_sources?: Observation_sourcesUncheckedUpdateManyWithoutAccountsNestedInput
    persons?: PersonsUncheckedUpdateManyWithoutAccountsNestedInput
    place_levels?: Place_levelsUncheckedUpdateManyWithoutAccountsNestedInput
    project_users?: Project_usersUncheckedUpdateManyWithoutAccountsNestedInput
    projects?: ProjectsUncheckedUpdateManyWithoutAccountsNestedInput
    subproject_taxa?: Subproject_taxaUncheckedUpdateManyWithoutAccountsNestedInput
    subproject_users?: Subproject_usersUncheckedUpdateManyWithoutAccountsNestedInput
    subprojects?: SubprojectsUncheckedUpdateManyWithoutAccountsNestedInput
    taxa?: TaxaUncheckedUpdateManyWithoutAccountsNestedInput
    taxonomies?: TaxonomiesUncheckedUpdateManyWithoutAccountsNestedInput
    tile_layers?: Tile_layersUncheckedUpdateManyWithoutAccountsNestedInput
    ui_options?: Ui_optionsUncheckedUpdateManyWithoutAccountsNestedInput
    units?: UnitsUncheckedUpdateManyWithoutAccountsNestedInput
    user_messages?: User_messagesUncheckedUpdateManyWithoutAccountsNestedInput
  }

  export type ProjectsUpsertWithoutGbif_taxaInput = {
    update: XOR<ProjectsUpdateWithoutGbif_taxaInput, ProjectsUncheckedUpdateWithoutGbif_taxaInput>
    create: XOR<ProjectsCreateWithoutGbif_taxaInput, ProjectsUncheckedCreateWithoutGbif_taxaInput>
    where?: ProjectsWhereInput
  }

  export type ProjectsUpdateToOneWithWhereWithoutGbif_taxaInput = {
    where?: ProjectsWhereInput
    data: XOR<ProjectsUpdateWithoutGbif_taxaInput, ProjectsUncheckedUpdateWithoutGbif_taxaInput>
  }

  export type ProjectsUpdateWithoutGbif_taxaInput = {
    project_id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableEnumproject_typeFieldUpdateOperationsInput | project_type | null
    subproject_name_singular?: NullableStringFieldUpdateOperationsInput | string | null
    subproject_name_plural?: NullableStringFieldUpdateOperationsInput | string | null
    subproject_order_by?: NullableStringFieldUpdateOperationsInput | string | null
    places_label_by?: NullableStringFieldUpdateOperationsInput | string | null
    places_order_by?: NullableJsonNullValueInput | InputJsonValue
    persons_label_by?: NullableStringFieldUpdateOperationsInput | string | null
    persons_order_by?: NullableStringFieldUpdateOperationsInput | string | null
    goal_reports_label_by?: NullableStringFieldUpdateOperationsInput | string | null
    goal_reports_order_by?: NullableStringFieldUpdateOperationsInput | string | null
    values_on_multiple_levels?: NullableStringFieldUpdateOperationsInput | string | null
    multiple_action_values_on_same_level?: NullableStringFieldUpdateOperationsInput | string | null
    multiple_check_values_on_same_level?: NullableStringFieldUpdateOperationsInput | string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    files_offline?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_projects?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_subprojects?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_places?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_actions?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_checks?: NullableBoolFieldUpdateOperationsInput | boolean | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    gbif_occurrence_downloads?: Gbif_occurrence_downloadsUpdateManyWithoutProjectsNestedInput
    gbif_occurrences?: Gbif_occurrencesUpdateManyWithoutProjectsNestedInput
    lists?: ListsUpdateManyWithoutProjectsNestedInput
    observation_sources?: Observation_sourcesUpdateManyWithoutProjectsNestedInput
    persons?: PersonsUpdateManyWithoutProjectsNestedInput
    place_levels?: Place_levelsUpdateManyWithoutProjectsNestedInput
    project_users?: Project_usersUpdateManyWithoutProjectsNestedInput
    accounts?: AccountsUpdateOneWithoutProjectsNestedInput
    subprojects?: SubprojectsUpdateManyWithoutProjectsNestedInput
    taxonomies?: TaxonomiesUpdateManyWithoutProjectsNestedInput
    tile_layers?: Tile_layersUpdateManyWithoutProjectsNestedInput
    units?: UnitsUpdateManyWithoutProjectsNestedInput
  }

  export type ProjectsUncheckedUpdateWithoutGbif_taxaInput = {
    project_id?: StringFieldUpdateOperationsInput | string
    account_id?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableEnumproject_typeFieldUpdateOperationsInput | project_type | null
    subproject_name_singular?: NullableStringFieldUpdateOperationsInput | string | null
    subproject_name_plural?: NullableStringFieldUpdateOperationsInput | string | null
    subproject_order_by?: NullableStringFieldUpdateOperationsInput | string | null
    places_label_by?: NullableStringFieldUpdateOperationsInput | string | null
    places_order_by?: NullableJsonNullValueInput | InputJsonValue
    persons_label_by?: NullableStringFieldUpdateOperationsInput | string | null
    persons_order_by?: NullableStringFieldUpdateOperationsInput | string | null
    goal_reports_label_by?: NullableStringFieldUpdateOperationsInput | string | null
    goal_reports_order_by?: NullableStringFieldUpdateOperationsInput | string | null
    values_on_multiple_levels?: NullableStringFieldUpdateOperationsInput | string | null
    multiple_action_values_on_same_level?: NullableStringFieldUpdateOperationsInput | string | null
    multiple_check_values_on_same_level?: NullableStringFieldUpdateOperationsInput | string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    files_offline?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_projects?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_subprojects?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_places?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_actions?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_checks?: NullableBoolFieldUpdateOperationsInput | boolean | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    gbif_occurrence_downloads?: Gbif_occurrence_downloadsUncheckedUpdateManyWithoutProjectsNestedInput
    gbif_occurrences?: Gbif_occurrencesUncheckedUpdateManyWithoutProjectsNestedInput
    lists?: ListsUncheckedUpdateManyWithoutProjectsNestedInput
    observation_sources?: Observation_sourcesUncheckedUpdateManyWithoutProjectsNestedInput
    persons?: PersonsUncheckedUpdateManyWithoutProjectsNestedInput
    place_levels?: Place_levelsUncheckedUpdateManyWithoutProjectsNestedInput
    project_users?: Project_usersUncheckedUpdateManyWithoutProjectsNestedInput
    subprojects?: SubprojectsUncheckedUpdateManyWithoutProjectsNestedInput
    taxonomies?: TaxonomiesUncheckedUpdateManyWithoutProjectsNestedInput
    tile_layers?: Tile_layersUncheckedUpdateManyWithoutProjectsNestedInput
    units?: UnitsUncheckedUpdateManyWithoutProjectsNestedInput
  }

  export type AccountsCreateWithoutGoal_report_valuesInput = {
    account_id: string
    type?: string | null
    period_start?: Date | string | null
    period_end?: Date | string | null
    projects_label_by?: string | null
    label?: string | null
    users?: UsersCreateNestedOneWithoutAccountsInput
    gbif_occurrence_downloads?: Gbif_occurrence_downloadsCreateNestedManyWithoutAccountsInput
    gbif_occurrences?: Gbif_occurrencesCreateNestedManyWithoutAccountsInput
    gbif_taxa?: Gbif_taxaCreateNestedManyWithoutAccountsInput
    goal_reports?: Goal_reportsCreateNestedManyWithoutAccountsInput
    goals?: GoalsCreateNestedManyWithoutAccountsInput
    list_values?: List_valuesCreateNestedManyWithoutAccountsInput
    lists?: ListsCreateNestedManyWithoutAccountsInput
    observation_sources?: Observation_sourcesCreateNestedManyWithoutAccountsInput
    persons?: PersonsCreateNestedManyWithoutAccountsInput
    place_levels?: Place_levelsCreateNestedManyWithoutAccountsInput
    project_users?: Project_usersCreateNestedManyWithoutAccountsInput
    projects?: ProjectsCreateNestedManyWithoutAccountsInput
    subproject_taxa?: Subproject_taxaCreateNestedManyWithoutAccountsInput
    subproject_users?: Subproject_usersCreateNestedManyWithoutAccountsInput
    subprojects?: SubprojectsCreateNestedManyWithoutAccountsInput
    taxa?: TaxaCreateNestedManyWithoutAccountsInput
    taxonomies?: TaxonomiesCreateNestedManyWithoutAccountsInput
    tile_layers?: Tile_layersCreateNestedManyWithoutAccountsInput
    ui_options?: Ui_optionsCreateNestedManyWithoutAccountsInput
    units?: UnitsCreateNestedManyWithoutAccountsInput
    user_messages?: User_messagesCreateNestedManyWithoutAccountsInput
  }

  export type AccountsUncheckedCreateWithoutGoal_report_valuesInput = {
    account_id: string
    user_id?: string | null
    type?: string | null
    period_start?: Date | string | null
    period_end?: Date | string | null
    projects_label_by?: string | null
    label?: string | null
    gbif_occurrence_downloads?: Gbif_occurrence_downloadsUncheckedCreateNestedManyWithoutAccountsInput
    gbif_occurrences?: Gbif_occurrencesUncheckedCreateNestedManyWithoutAccountsInput
    gbif_taxa?: Gbif_taxaUncheckedCreateNestedManyWithoutAccountsInput
    goal_reports?: Goal_reportsUncheckedCreateNestedManyWithoutAccountsInput
    goals?: GoalsUncheckedCreateNestedManyWithoutAccountsInput
    list_values?: List_valuesUncheckedCreateNestedManyWithoutAccountsInput
    lists?: ListsUncheckedCreateNestedManyWithoutAccountsInput
    observation_sources?: Observation_sourcesUncheckedCreateNestedManyWithoutAccountsInput
    persons?: PersonsUncheckedCreateNestedManyWithoutAccountsInput
    place_levels?: Place_levelsUncheckedCreateNestedManyWithoutAccountsInput
    project_users?: Project_usersUncheckedCreateNestedManyWithoutAccountsInput
    projects?: ProjectsUncheckedCreateNestedManyWithoutAccountsInput
    subproject_taxa?: Subproject_taxaUncheckedCreateNestedManyWithoutAccountsInput
    subproject_users?: Subproject_usersUncheckedCreateNestedManyWithoutAccountsInput
    subprojects?: SubprojectsUncheckedCreateNestedManyWithoutAccountsInput
    taxa?: TaxaUncheckedCreateNestedManyWithoutAccountsInput
    taxonomies?: TaxonomiesUncheckedCreateNestedManyWithoutAccountsInput
    tile_layers?: Tile_layersUncheckedCreateNestedManyWithoutAccountsInput
    ui_options?: Ui_optionsUncheckedCreateNestedManyWithoutAccountsInput
    units?: UnitsUncheckedCreateNestedManyWithoutAccountsInput
    user_messages?: User_messagesUncheckedCreateNestedManyWithoutAccountsInput
  }

  export type AccountsCreateOrConnectWithoutGoal_report_valuesInput = {
    where: AccountsWhereUniqueInput
    create: XOR<AccountsCreateWithoutGoal_report_valuesInput, AccountsUncheckedCreateWithoutGoal_report_valuesInput>
  }

  export type Goal_reportsCreateWithoutGoal_report_valuesInput = {
    goal_report_id: string
    data?: NullableJsonNullValueInput | InputJsonValue
    label?: string | null
    deleted?: boolean | null
    accounts?: AccountsCreateNestedOneWithoutGoal_reportsInput
    goals?: GoalsCreateNestedOneWithoutGoal_reportsInput
  }

  export type Goal_reportsUncheckedCreateWithoutGoal_report_valuesInput = {
    goal_report_id: string
    account_id?: string | null
    goal_id?: string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label?: string | null
    deleted?: boolean | null
  }

  export type Goal_reportsCreateOrConnectWithoutGoal_report_valuesInput = {
    where: Goal_reportsWhereUniqueInput
    create: XOR<Goal_reportsCreateWithoutGoal_report_valuesInput, Goal_reportsUncheckedCreateWithoutGoal_report_valuesInput>
  }

  export type UnitsCreateWithoutGoal_report_valuesInput = {
    unit_id: string
    use_for_action_values?: boolean | null
    use_for_action_report_values?: boolean | null
    use_for_check_values?: boolean | null
    use_for_place_report_values?: boolean | null
    use_for_goal_report_values?: boolean | null
    use_for_subproject_taxa?: boolean | null
    use_for_check_taxa?: boolean | null
    name?: string | null
    summable?: boolean | null
    sort?: number | null
    type?: unit_type | null
    label_replace_by_generated_column?: string | null
    deleted?: boolean | null
    accounts?: AccountsCreateNestedOneWithoutUnitsInput
    lists?: ListsCreateNestedOneWithoutUnitsInput
    projects?: ProjectsCreateNestedOneWithoutUnitsInput
  }

  export type UnitsUncheckedCreateWithoutGoal_report_valuesInput = {
    unit_id: string
    account_id?: string | null
    project_id?: string | null
    use_for_action_values?: boolean | null
    use_for_action_report_values?: boolean | null
    use_for_check_values?: boolean | null
    use_for_place_report_values?: boolean | null
    use_for_goal_report_values?: boolean | null
    use_for_subproject_taxa?: boolean | null
    use_for_check_taxa?: boolean | null
    name?: string | null
    summable?: boolean | null
    sort?: number | null
    type?: unit_type | null
    list_id?: string | null
    label_replace_by_generated_column?: string | null
    deleted?: boolean | null
  }

  export type UnitsCreateOrConnectWithoutGoal_report_valuesInput = {
    where: UnitsWhereUniqueInput
    create: XOR<UnitsCreateWithoutGoal_report_valuesInput, UnitsUncheckedCreateWithoutGoal_report_valuesInput>
  }

  export type AccountsUpsertWithoutGoal_report_valuesInput = {
    update: XOR<AccountsUpdateWithoutGoal_report_valuesInput, AccountsUncheckedUpdateWithoutGoal_report_valuesInput>
    create: XOR<AccountsCreateWithoutGoal_report_valuesInput, AccountsUncheckedCreateWithoutGoal_report_valuesInput>
    where?: AccountsWhereInput
  }

  export type AccountsUpdateToOneWithWhereWithoutGoal_report_valuesInput = {
    where?: AccountsWhereInput
    data: XOR<AccountsUpdateWithoutGoal_report_valuesInput, AccountsUncheckedUpdateWithoutGoal_report_valuesInput>
  }

  export type AccountsUpdateWithoutGoal_report_valuesInput = {
    account_id?: StringFieldUpdateOperationsInput | string
    type?: NullableStringFieldUpdateOperationsInput | string | null
    period_start?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    period_end?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    projects_label_by?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    users?: UsersUpdateOneWithoutAccountsNestedInput
    gbif_occurrence_downloads?: Gbif_occurrence_downloadsUpdateManyWithoutAccountsNestedInput
    gbif_occurrences?: Gbif_occurrencesUpdateManyWithoutAccountsNestedInput
    gbif_taxa?: Gbif_taxaUpdateManyWithoutAccountsNestedInput
    goal_reports?: Goal_reportsUpdateManyWithoutAccountsNestedInput
    goals?: GoalsUpdateManyWithoutAccountsNestedInput
    list_values?: List_valuesUpdateManyWithoutAccountsNestedInput
    lists?: ListsUpdateManyWithoutAccountsNestedInput
    observation_sources?: Observation_sourcesUpdateManyWithoutAccountsNestedInput
    persons?: PersonsUpdateManyWithoutAccountsNestedInput
    place_levels?: Place_levelsUpdateManyWithoutAccountsNestedInput
    project_users?: Project_usersUpdateManyWithoutAccountsNestedInput
    projects?: ProjectsUpdateManyWithoutAccountsNestedInput
    subproject_taxa?: Subproject_taxaUpdateManyWithoutAccountsNestedInput
    subproject_users?: Subproject_usersUpdateManyWithoutAccountsNestedInput
    subprojects?: SubprojectsUpdateManyWithoutAccountsNestedInput
    taxa?: TaxaUpdateManyWithoutAccountsNestedInput
    taxonomies?: TaxonomiesUpdateManyWithoutAccountsNestedInput
    tile_layers?: Tile_layersUpdateManyWithoutAccountsNestedInput
    ui_options?: Ui_optionsUpdateManyWithoutAccountsNestedInput
    units?: UnitsUpdateManyWithoutAccountsNestedInput
    user_messages?: User_messagesUpdateManyWithoutAccountsNestedInput
  }

  export type AccountsUncheckedUpdateWithoutGoal_report_valuesInput = {
    account_id?: StringFieldUpdateOperationsInput | string
    user_id?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    period_start?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    period_end?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    projects_label_by?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    gbif_occurrence_downloads?: Gbif_occurrence_downloadsUncheckedUpdateManyWithoutAccountsNestedInput
    gbif_occurrences?: Gbif_occurrencesUncheckedUpdateManyWithoutAccountsNestedInput
    gbif_taxa?: Gbif_taxaUncheckedUpdateManyWithoutAccountsNestedInput
    goal_reports?: Goal_reportsUncheckedUpdateManyWithoutAccountsNestedInput
    goals?: GoalsUncheckedUpdateManyWithoutAccountsNestedInput
    list_values?: List_valuesUncheckedUpdateManyWithoutAccountsNestedInput
    lists?: ListsUncheckedUpdateManyWithoutAccountsNestedInput
    observation_sources?: Observation_sourcesUncheckedUpdateManyWithoutAccountsNestedInput
    persons?: PersonsUncheckedUpdateManyWithoutAccountsNestedInput
    place_levels?: Place_levelsUncheckedUpdateManyWithoutAccountsNestedInput
    project_users?: Project_usersUncheckedUpdateManyWithoutAccountsNestedInput
    projects?: ProjectsUncheckedUpdateManyWithoutAccountsNestedInput
    subproject_taxa?: Subproject_taxaUncheckedUpdateManyWithoutAccountsNestedInput
    subproject_users?: Subproject_usersUncheckedUpdateManyWithoutAccountsNestedInput
    subprojects?: SubprojectsUncheckedUpdateManyWithoutAccountsNestedInput
    taxa?: TaxaUncheckedUpdateManyWithoutAccountsNestedInput
    taxonomies?: TaxonomiesUncheckedUpdateManyWithoutAccountsNestedInput
    tile_layers?: Tile_layersUncheckedUpdateManyWithoutAccountsNestedInput
    ui_options?: Ui_optionsUncheckedUpdateManyWithoutAccountsNestedInput
    units?: UnitsUncheckedUpdateManyWithoutAccountsNestedInput
    user_messages?: User_messagesUncheckedUpdateManyWithoutAccountsNestedInput
  }

  export type Goal_reportsUpsertWithoutGoal_report_valuesInput = {
    update: XOR<Goal_reportsUpdateWithoutGoal_report_valuesInput, Goal_reportsUncheckedUpdateWithoutGoal_report_valuesInput>
    create: XOR<Goal_reportsCreateWithoutGoal_report_valuesInput, Goal_reportsUncheckedCreateWithoutGoal_report_valuesInput>
    where?: Goal_reportsWhereInput
  }

  export type Goal_reportsUpdateToOneWithWhereWithoutGoal_report_valuesInput = {
    where?: Goal_reportsWhereInput
    data: XOR<Goal_reportsUpdateWithoutGoal_report_valuesInput, Goal_reportsUncheckedUpdateWithoutGoal_report_valuesInput>
  }

  export type Goal_reportsUpdateWithoutGoal_report_valuesInput = {
    goal_report_id?: StringFieldUpdateOperationsInput | string
    data?: NullableJsonNullValueInput | InputJsonValue
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    accounts?: AccountsUpdateOneWithoutGoal_reportsNestedInput
    goals?: GoalsUpdateOneWithoutGoal_reportsNestedInput
  }

  export type Goal_reportsUncheckedUpdateWithoutGoal_report_valuesInput = {
    goal_report_id?: StringFieldUpdateOperationsInput | string
    account_id?: NullableStringFieldUpdateOperationsInput | string | null
    goal_id?: NullableStringFieldUpdateOperationsInput | string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type UnitsUpsertWithoutGoal_report_valuesInput = {
    update: XOR<UnitsUpdateWithoutGoal_report_valuesInput, UnitsUncheckedUpdateWithoutGoal_report_valuesInput>
    create: XOR<UnitsCreateWithoutGoal_report_valuesInput, UnitsUncheckedCreateWithoutGoal_report_valuesInput>
    where?: UnitsWhereInput
  }

  export type UnitsUpdateToOneWithWhereWithoutGoal_report_valuesInput = {
    where?: UnitsWhereInput
    data: XOR<UnitsUpdateWithoutGoal_report_valuesInput, UnitsUncheckedUpdateWithoutGoal_report_valuesInput>
  }

  export type UnitsUpdateWithoutGoal_report_valuesInput = {
    unit_id?: StringFieldUpdateOperationsInput | string
    use_for_action_values?: NullableBoolFieldUpdateOperationsInput | boolean | null
    use_for_action_report_values?: NullableBoolFieldUpdateOperationsInput | boolean | null
    use_for_check_values?: NullableBoolFieldUpdateOperationsInput | boolean | null
    use_for_place_report_values?: NullableBoolFieldUpdateOperationsInput | boolean | null
    use_for_goal_report_values?: NullableBoolFieldUpdateOperationsInput | boolean | null
    use_for_subproject_taxa?: NullableBoolFieldUpdateOperationsInput | boolean | null
    use_for_check_taxa?: NullableBoolFieldUpdateOperationsInput | boolean | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    summable?: NullableBoolFieldUpdateOperationsInput | boolean | null
    sort?: NullableIntFieldUpdateOperationsInput | number | null
    type?: NullableEnumunit_typeFieldUpdateOperationsInput | unit_type | null
    label_replace_by_generated_column?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    accounts?: AccountsUpdateOneWithoutUnitsNestedInput
    lists?: ListsUpdateOneWithoutUnitsNestedInput
    projects?: ProjectsUpdateOneWithoutUnitsNestedInput
  }

  export type UnitsUncheckedUpdateWithoutGoal_report_valuesInput = {
    unit_id?: StringFieldUpdateOperationsInput | string
    account_id?: NullableStringFieldUpdateOperationsInput | string | null
    project_id?: NullableStringFieldUpdateOperationsInput | string | null
    use_for_action_values?: NullableBoolFieldUpdateOperationsInput | boolean | null
    use_for_action_report_values?: NullableBoolFieldUpdateOperationsInput | boolean | null
    use_for_check_values?: NullableBoolFieldUpdateOperationsInput | boolean | null
    use_for_place_report_values?: NullableBoolFieldUpdateOperationsInput | boolean | null
    use_for_goal_report_values?: NullableBoolFieldUpdateOperationsInput | boolean | null
    use_for_subproject_taxa?: NullableBoolFieldUpdateOperationsInput | boolean | null
    use_for_check_taxa?: NullableBoolFieldUpdateOperationsInput | boolean | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    summable?: NullableBoolFieldUpdateOperationsInput | boolean | null
    sort?: NullableIntFieldUpdateOperationsInput | number | null
    type?: NullableEnumunit_typeFieldUpdateOperationsInput | unit_type | null
    list_id?: NullableStringFieldUpdateOperationsInput | string | null
    label_replace_by_generated_column?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type Goal_report_valuesCreateWithoutGoal_reportsInput = {
    goal_report_value_id: string
    value_integer?: number | null
    value_numeric?: number | null
    value_text?: string | null
    label?: string | null
    deleted?: boolean | null
    accounts?: AccountsCreateNestedOneWithoutGoal_report_valuesInput
    units?: UnitsCreateNestedOneWithoutGoal_report_valuesInput
  }

  export type Goal_report_valuesUncheckedCreateWithoutGoal_reportsInput = {
    goal_report_value_id: string
    account_id?: string | null
    unit_id?: string | null
    value_integer?: number | null
    value_numeric?: number | null
    value_text?: string | null
    label?: string | null
    deleted?: boolean | null
  }

  export type Goal_report_valuesCreateOrConnectWithoutGoal_reportsInput = {
    where: Goal_report_valuesWhereUniqueInput
    create: XOR<Goal_report_valuesCreateWithoutGoal_reportsInput, Goal_report_valuesUncheckedCreateWithoutGoal_reportsInput>
  }

  export type Goal_report_valuesCreateManyGoal_reportsInputEnvelope = {
    data: Enumerable<Goal_report_valuesCreateManyGoal_reportsInput>
    skipDuplicates?: boolean
  }

  export type AccountsCreateWithoutGoal_reportsInput = {
    account_id: string
    type?: string | null
    period_start?: Date | string | null
    period_end?: Date | string | null
    projects_label_by?: string | null
    label?: string | null
    users?: UsersCreateNestedOneWithoutAccountsInput
    gbif_occurrence_downloads?: Gbif_occurrence_downloadsCreateNestedManyWithoutAccountsInput
    gbif_occurrences?: Gbif_occurrencesCreateNestedManyWithoutAccountsInput
    gbif_taxa?: Gbif_taxaCreateNestedManyWithoutAccountsInput
    goal_report_values?: Goal_report_valuesCreateNestedManyWithoutAccountsInput
    goals?: GoalsCreateNestedManyWithoutAccountsInput
    list_values?: List_valuesCreateNestedManyWithoutAccountsInput
    lists?: ListsCreateNestedManyWithoutAccountsInput
    observation_sources?: Observation_sourcesCreateNestedManyWithoutAccountsInput
    persons?: PersonsCreateNestedManyWithoutAccountsInput
    place_levels?: Place_levelsCreateNestedManyWithoutAccountsInput
    project_users?: Project_usersCreateNestedManyWithoutAccountsInput
    projects?: ProjectsCreateNestedManyWithoutAccountsInput
    subproject_taxa?: Subproject_taxaCreateNestedManyWithoutAccountsInput
    subproject_users?: Subproject_usersCreateNestedManyWithoutAccountsInput
    subprojects?: SubprojectsCreateNestedManyWithoutAccountsInput
    taxa?: TaxaCreateNestedManyWithoutAccountsInput
    taxonomies?: TaxonomiesCreateNestedManyWithoutAccountsInput
    tile_layers?: Tile_layersCreateNestedManyWithoutAccountsInput
    ui_options?: Ui_optionsCreateNestedManyWithoutAccountsInput
    units?: UnitsCreateNestedManyWithoutAccountsInput
    user_messages?: User_messagesCreateNestedManyWithoutAccountsInput
  }

  export type AccountsUncheckedCreateWithoutGoal_reportsInput = {
    account_id: string
    user_id?: string | null
    type?: string | null
    period_start?: Date | string | null
    period_end?: Date | string | null
    projects_label_by?: string | null
    label?: string | null
    gbif_occurrence_downloads?: Gbif_occurrence_downloadsUncheckedCreateNestedManyWithoutAccountsInput
    gbif_occurrences?: Gbif_occurrencesUncheckedCreateNestedManyWithoutAccountsInput
    gbif_taxa?: Gbif_taxaUncheckedCreateNestedManyWithoutAccountsInput
    goal_report_values?: Goal_report_valuesUncheckedCreateNestedManyWithoutAccountsInput
    goals?: GoalsUncheckedCreateNestedManyWithoutAccountsInput
    list_values?: List_valuesUncheckedCreateNestedManyWithoutAccountsInput
    lists?: ListsUncheckedCreateNestedManyWithoutAccountsInput
    observation_sources?: Observation_sourcesUncheckedCreateNestedManyWithoutAccountsInput
    persons?: PersonsUncheckedCreateNestedManyWithoutAccountsInput
    place_levels?: Place_levelsUncheckedCreateNestedManyWithoutAccountsInput
    project_users?: Project_usersUncheckedCreateNestedManyWithoutAccountsInput
    projects?: ProjectsUncheckedCreateNestedManyWithoutAccountsInput
    subproject_taxa?: Subproject_taxaUncheckedCreateNestedManyWithoutAccountsInput
    subproject_users?: Subproject_usersUncheckedCreateNestedManyWithoutAccountsInput
    subprojects?: SubprojectsUncheckedCreateNestedManyWithoutAccountsInput
    taxa?: TaxaUncheckedCreateNestedManyWithoutAccountsInput
    taxonomies?: TaxonomiesUncheckedCreateNestedManyWithoutAccountsInput
    tile_layers?: Tile_layersUncheckedCreateNestedManyWithoutAccountsInput
    ui_options?: Ui_optionsUncheckedCreateNestedManyWithoutAccountsInput
    units?: UnitsUncheckedCreateNestedManyWithoutAccountsInput
    user_messages?: User_messagesUncheckedCreateNestedManyWithoutAccountsInput
  }

  export type AccountsCreateOrConnectWithoutGoal_reportsInput = {
    where: AccountsWhereUniqueInput
    create: XOR<AccountsCreateWithoutGoal_reportsInput, AccountsUncheckedCreateWithoutGoal_reportsInput>
  }

  export type GoalsCreateWithoutGoal_reportsInput = {
    goal_id: string
    year?: number | null
    name?: string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label_replace_by_generated_column?: string | null
    deleted?: boolean | null
    accounts?: AccountsCreateNestedOneWithoutGoalsInput
    subprojects?: SubprojectsCreateNestedOneWithoutGoalsInput
  }

  export type GoalsUncheckedCreateWithoutGoal_reportsInput = {
    goal_id: string
    account_id?: string | null
    subproject_id?: string | null
    year?: number | null
    name?: string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label_replace_by_generated_column?: string | null
    deleted?: boolean | null
  }

  export type GoalsCreateOrConnectWithoutGoal_reportsInput = {
    where: GoalsWhereUniqueInput
    create: XOR<GoalsCreateWithoutGoal_reportsInput, GoalsUncheckedCreateWithoutGoal_reportsInput>
  }

  export type Goal_report_valuesUpsertWithWhereUniqueWithoutGoal_reportsInput = {
    where: Goal_report_valuesWhereUniqueInput
    update: XOR<Goal_report_valuesUpdateWithoutGoal_reportsInput, Goal_report_valuesUncheckedUpdateWithoutGoal_reportsInput>
    create: XOR<Goal_report_valuesCreateWithoutGoal_reportsInput, Goal_report_valuesUncheckedCreateWithoutGoal_reportsInput>
  }

  export type Goal_report_valuesUpdateWithWhereUniqueWithoutGoal_reportsInput = {
    where: Goal_report_valuesWhereUniqueInput
    data: XOR<Goal_report_valuesUpdateWithoutGoal_reportsInput, Goal_report_valuesUncheckedUpdateWithoutGoal_reportsInput>
  }

  export type Goal_report_valuesUpdateManyWithWhereWithoutGoal_reportsInput = {
    where: Goal_report_valuesScalarWhereInput
    data: XOR<Goal_report_valuesUpdateManyMutationInput, Goal_report_valuesUncheckedUpdateManyWithoutGoal_reportsInput>
  }

  export type AccountsUpsertWithoutGoal_reportsInput = {
    update: XOR<AccountsUpdateWithoutGoal_reportsInput, AccountsUncheckedUpdateWithoutGoal_reportsInput>
    create: XOR<AccountsCreateWithoutGoal_reportsInput, AccountsUncheckedCreateWithoutGoal_reportsInput>
    where?: AccountsWhereInput
  }

  export type AccountsUpdateToOneWithWhereWithoutGoal_reportsInput = {
    where?: AccountsWhereInput
    data: XOR<AccountsUpdateWithoutGoal_reportsInput, AccountsUncheckedUpdateWithoutGoal_reportsInput>
  }

  export type AccountsUpdateWithoutGoal_reportsInput = {
    account_id?: StringFieldUpdateOperationsInput | string
    type?: NullableStringFieldUpdateOperationsInput | string | null
    period_start?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    period_end?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    projects_label_by?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    users?: UsersUpdateOneWithoutAccountsNestedInput
    gbif_occurrence_downloads?: Gbif_occurrence_downloadsUpdateManyWithoutAccountsNestedInput
    gbif_occurrences?: Gbif_occurrencesUpdateManyWithoutAccountsNestedInput
    gbif_taxa?: Gbif_taxaUpdateManyWithoutAccountsNestedInput
    goal_report_values?: Goal_report_valuesUpdateManyWithoutAccountsNestedInput
    goals?: GoalsUpdateManyWithoutAccountsNestedInput
    list_values?: List_valuesUpdateManyWithoutAccountsNestedInput
    lists?: ListsUpdateManyWithoutAccountsNestedInput
    observation_sources?: Observation_sourcesUpdateManyWithoutAccountsNestedInput
    persons?: PersonsUpdateManyWithoutAccountsNestedInput
    place_levels?: Place_levelsUpdateManyWithoutAccountsNestedInput
    project_users?: Project_usersUpdateManyWithoutAccountsNestedInput
    projects?: ProjectsUpdateManyWithoutAccountsNestedInput
    subproject_taxa?: Subproject_taxaUpdateManyWithoutAccountsNestedInput
    subproject_users?: Subproject_usersUpdateManyWithoutAccountsNestedInput
    subprojects?: SubprojectsUpdateManyWithoutAccountsNestedInput
    taxa?: TaxaUpdateManyWithoutAccountsNestedInput
    taxonomies?: TaxonomiesUpdateManyWithoutAccountsNestedInput
    tile_layers?: Tile_layersUpdateManyWithoutAccountsNestedInput
    ui_options?: Ui_optionsUpdateManyWithoutAccountsNestedInput
    units?: UnitsUpdateManyWithoutAccountsNestedInput
    user_messages?: User_messagesUpdateManyWithoutAccountsNestedInput
  }

  export type AccountsUncheckedUpdateWithoutGoal_reportsInput = {
    account_id?: StringFieldUpdateOperationsInput | string
    user_id?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    period_start?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    period_end?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    projects_label_by?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    gbif_occurrence_downloads?: Gbif_occurrence_downloadsUncheckedUpdateManyWithoutAccountsNestedInput
    gbif_occurrences?: Gbif_occurrencesUncheckedUpdateManyWithoutAccountsNestedInput
    gbif_taxa?: Gbif_taxaUncheckedUpdateManyWithoutAccountsNestedInput
    goal_report_values?: Goal_report_valuesUncheckedUpdateManyWithoutAccountsNestedInput
    goals?: GoalsUncheckedUpdateManyWithoutAccountsNestedInput
    list_values?: List_valuesUncheckedUpdateManyWithoutAccountsNestedInput
    lists?: ListsUncheckedUpdateManyWithoutAccountsNestedInput
    observation_sources?: Observation_sourcesUncheckedUpdateManyWithoutAccountsNestedInput
    persons?: PersonsUncheckedUpdateManyWithoutAccountsNestedInput
    place_levels?: Place_levelsUncheckedUpdateManyWithoutAccountsNestedInput
    project_users?: Project_usersUncheckedUpdateManyWithoutAccountsNestedInput
    projects?: ProjectsUncheckedUpdateManyWithoutAccountsNestedInput
    subproject_taxa?: Subproject_taxaUncheckedUpdateManyWithoutAccountsNestedInput
    subproject_users?: Subproject_usersUncheckedUpdateManyWithoutAccountsNestedInput
    subprojects?: SubprojectsUncheckedUpdateManyWithoutAccountsNestedInput
    taxa?: TaxaUncheckedUpdateManyWithoutAccountsNestedInput
    taxonomies?: TaxonomiesUncheckedUpdateManyWithoutAccountsNestedInput
    tile_layers?: Tile_layersUncheckedUpdateManyWithoutAccountsNestedInput
    ui_options?: Ui_optionsUncheckedUpdateManyWithoutAccountsNestedInput
    units?: UnitsUncheckedUpdateManyWithoutAccountsNestedInput
    user_messages?: User_messagesUncheckedUpdateManyWithoutAccountsNestedInput
  }

  export type GoalsUpsertWithoutGoal_reportsInput = {
    update: XOR<GoalsUpdateWithoutGoal_reportsInput, GoalsUncheckedUpdateWithoutGoal_reportsInput>
    create: XOR<GoalsCreateWithoutGoal_reportsInput, GoalsUncheckedCreateWithoutGoal_reportsInput>
    where?: GoalsWhereInput
  }

  export type GoalsUpdateToOneWithWhereWithoutGoal_reportsInput = {
    where?: GoalsWhereInput
    data: XOR<GoalsUpdateWithoutGoal_reportsInput, GoalsUncheckedUpdateWithoutGoal_reportsInput>
  }

  export type GoalsUpdateWithoutGoal_reportsInput = {
    goal_id?: StringFieldUpdateOperationsInput | string
    year?: NullableIntFieldUpdateOperationsInput | number | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label_replace_by_generated_column?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    accounts?: AccountsUpdateOneWithoutGoalsNestedInput
    subprojects?: SubprojectsUpdateOneWithoutGoalsNestedInput
  }

  export type GoalsUncheckedUpdateWithoutGoal_reportsInput = {
    goal_id?: StringFieldUpdateOperationsInput | string
    account_id?: NullableStringFieldUpdateOperationsInput | string | null
    subproject_id?: NullableStringFieldUpdateOperationsInput | string | null
    year?: NullableIntFieldUpdateOperationsInput | number | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label_replace_by_generated_column?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type Goal_reportsCreateWithoutGoalsInput = {
    goal_report_id: string
    data?: NullableJsonNullValueInput | InputJsonValue
    label?: string | null
    deleted?: boolean | null
    goal_report_values?: Goal_report_valuesCreateNestedManyWithoutGoal_reportsInput
    accounts?: AccountsCreateNestedOneWithoutGoal_reportsInput
  }

  export type Goal_reportsUncheckedCreateWithoutGoalsInput = {
    goal_report_id: string
    account_id?: string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label?: string | null
    deleted?: boolean | null
    goal_report_values?: Goal_report_valuesUncheckedCreateNestedManyWithoutGoal_reportsInput
  }

  export type Goal_reportsCreateOrConnectWithoutGoalsInput = {
    where: Goal_reportsWhereUniqueInput
    create: XOR<Goal_reportsCreateWithoutGoalsInput, Goal_reportsUncheckedCreateWithoutGoalsInput>
  }

  export type Goal_reportsCreateManyGoalsInputEnvelope = {
    data: Enumerable<Goal_reportsCreateManyGoalsInput>
    skipDuplicates?: boolean
  }

  export type AccountsCreateWithoutGoalsInput = {
    account_id: string
    type?: string | null
    period_start?: Date | string | null
    period_end?: Date | string | null
    projects_label_by?: string | null
    label?: string | null
    users?: UsersCreateNestedOneWithoutAccountsInput
    gbif_occurrence_downloads?: Gbif_occurrence_downloadsCreateNestedManyWithoutAccountsInput
    gbif_occurrences?: Gbif_occurrencesCreateNestedManyWithoutAccountsInput
    gbif_taxa?: Gbif_taxaCreateNestedManyWithoutAccountsInput
    goal_report_values?: Goal_report_valuesCreateNestedManyWithoutAccountsInput
    goal_reports?: Goal_reportsCreateNestedManyWithoutAccountsInput
    list_values?: List_valuesCreateNestedManyWithoutAccountsInput
    lists?: ListsCreateNestedManyWithoutAccountsInput
    observation_sources?: Observation_sourcesCreateNestedManyWithoutAccountsInput
    persons?: PersonsCreateNestedManyWithoutAccountsInput
    place_levels?: Place_levelsCreateNestedManyWithoutAccountsInput
    project_users?: Project_usersCreateNestedManyWithoutAccountsInput
    projects?: ProjectsCreateNestedManyWithoutAccountsInput
    subproject_taxa?: Subproject_taxaCreateNestedManyWithoutAccountsInput
    subproject_users?: Subproject_usersCreateNestedManyWithoutAccountsInput
    subprojects?: SubprojectsCreateNestedManyWithoutAccountsInput
    taxa?: TaxaCreateNestedManyWithoutAccountsInput
    taxonomies?: TaxonomiesCreateNestedManyWithoutAccountsInput
    tile_layers?: Tile_layersCreateNestedManyWithoutAccountsInput
    ui_options?: Ui_optionsCreateNestedManyWithoutAccountsInput
    units?: UnitsCreateNestedManyWithoutAccountsInput
    user_messages?: User_messagesCreateNestedManyWithoutAccountsInput
  }

  export type AccountsUncheckedCreateWithoutGoalsInput = {
    account_id: string
    user_id?: string | null
    type?: string | null
    period_start?: Date | string | null
    period_end?: Date | string | null
    projects_label_by?: string | null
    label?: string | null
    gbif_occurrence_downloads?: Gbif_occurrence_downloadsUncheckedCreateNestedManyWithoutAccountsInput
    gbif_occurrences?: Gbif_occurrencesUncheckedCreateNestedManyWithoutAccountsInput
    gbif_taxa?: Gbif_taxaUncheckedCreateNestedManyWithoutAccountsInput
    goal_report_values?: Goal_report_valuesUncheckedCreateNestedManyWithoutAccountsInput
    goal_reports?: Goal_reportsUncheckedCreateNestedManyWithoutAccountsInput
    list_values?: List_valuesUncheckedCreateNestedManyWithoutAccountsInput
    lists?: ListsUncheckedCreateNestedManyWithoutAccountsInput
    observation_sources?: Observation_sourcesUncheckedCreateNestedManyWithoutAccountsInput
    persons?: PersonsUncheckedCreateNestedManyWithoutAccountsInput
    place_levels?: Place_levelsUncheckedCreateNestedManyWithoutAccountsInput
    project_users?: Project_usersUncheckedCreateNestedManyWithoutAccountsInput
    projects?: ProjectsUncheckedCreateNestedManyWithoutAccountsInput
    subproject_taxa?: Subproject_taxaUncheckedCreateNestedManyWithoutAccountsInput
    subproject_users?: Subproject_usersUncheckedCreateNestedManyWithoutAccountsInput
    subprojects?: SubprojectsUncheckedCreateNestedManyWithoutAccountsInput
    taxa?: TaxaUncheckedCreateNestedManyWithoutAccountsInput
    taxonomies?: TaxonomiesUncheckedCreateNestedManyWithoutAccountsInput
    tile_layers?: Tile_layersUncheckedCreateNestedManyWithoutAccountsInput
    ui_options?: Ui_optionsUncheckedCreateNestedManyWithoutAccountsInput
    units?: UnitsUncheckedCreateNestedManyWithoutAccountsInput
    user_messages?: User_messagesUncheckedCreateNestedManyWithoutAccountsInput
  }

  export type AccountsCreateOrConnectWithoutGoalsInput = {
    where: AccountsWhereUniqueInput
    create: XOR<AccountsCreateWithoutGoalsInput, AccountsUncheckedCreateWithoutGoalsInput>
  }

  export type SubprojectsCreateWithoutGoalsInput = {
    subproject_id: string
    name?: string | null
    label_replace_by_generated_column?: string | null
    start_year?: number | null
    end_year?: number | null
    data?: NullableJsonNullValueInput | InputJsonValue
    deleted?: boolean | null
    gbif_occurrence_downloads?: Gbif_occurrence_downloadsCreateNestedManyWithoutSubprojectsInput
    gbif_occurrences?: Gbif_occurrencesCreateNestedManyWithoutSubprojectsInput
    subproject_taxa?: Subproject_taxaCreateNestedManyWithoutSubprojectsInput
    subproject_users?: Subproject_usersCreateNestedManyWithoutSubprojectsInput
    accounts?: AccountsCreateNestedOneWithoutSubprojectsInput
    projects?: ProjectsCreateNestedOneWithoutSubprojectsInput
  }

  export type SubprojectsUncheckedCreateWithoutGoalsInput = {
    subproject_id: string
    account_id?: string | null
    project_id?: string | null
    name?: string | null
    label_replace_by_generated_column?: string | null
    start_year?: number | null
    end_year?: number | null
    data?: NullableJsonNullValueInput | InputJsonValue
    deleted?: boolean | null
    gbif_occurrence_downloads?: Gbif_occurrence_downloadsUncheckedCreateNestedManyWithoutSubprojectsInput
    gbif_occurrences?: Gbif_occurrencesUncheckedCreateNestedManyWithoutSubprojectsInput
    subproject_taxa?: Subproject_taxaUncheckedCreateNestedManyWithoutSubprojectsInput
    subproject_users?: Subproject_usersUncheckedCreateNestedManyWithoutSubprojectsInput
  }

  export type SubprojectsCreateOrConnectWithoutGoalsInput = {
    where: SubprojectsWhereUniqueInput
    create: XOR<SubprojectsCreateWithoutGoalsInput, SubprojectsUncheckedCreateWithoutGoalsInput>
  }

  export type Goal_reportsUpsertWithWhereUniqueWithoutGoalsInput = {
    where: Goal_reportsWhereUniqueInput
    update: XOR<Goal_reportsUpdateWithoutGoalsInput, Goal_reportsUncheckedUpdateWithoutGoalsInput>
    create: XOR<Goal_reportsCreateWithoutGoalsInput, Goal_reportsUncheckedCreateWithoutGoalsInput>
  }

  export type Goal_reportsUpdateWithWhereUniqueWithoutGoalsInput = {
    where: Goal_reportsWhereUniqueInput
    data: XOR<Goal_reportsUpdateWithoutGoalsInput, Goal_reportsUncheckedUpdateWithoutGoalsInput>
  }

  export type Goal_reportsUpdateManyWithWhereWithoutGoalsInput = {
    where: Goal_reportsScalarWhereInput
    data: XOR<Goal_reportsUpdateManyMutationInput, Goal_reportsUncheckedUpdateManyWithoutGoalsInput>
  }

  export type AccountsUpsertWithoutGoalsInput = {
    update: XOR<AccountsUpdateWithoutGoalsInput, AccountsUncheckedUpdateWithoutGoalsInput>
    create: XOR<AccountsCreateWithoutGoalsInput, AccountsUncheckedCreateWithoutGoalsInput>
    where?: AccountsWhereInput
  }

  export type AccountsUpdateToOneWithWhereWithoutGoalsInput = {
    where?: AccountsWhereInput
    data: XOR<AccountsUpdateWithoutGoalsInput, AccountsUncheckedUpdateWithoutGoalsInput>
  }

  export type AccountsUpdateWithoutGoalsInput = {
    account_id?: StringFieldUpdateOperationsInput | string
    type?: NullableStringFieldUpdateOperationsInput | string | null
    period_start?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    period_end?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    projects_label_by?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    users?: UsersUpdateOneWithoutAccountsNestedInput
    gbif_occurrence_downloads?: Gbif_occurrence_downloadsUpdateManyWithoutAccountsNestedInput
    gbif_occurrences?: Gbif_occurrencesUpdateManyWithoutAccountsNestedInput
    gbif_taxa?: Gbif_taxaUpdateManyWithoutAccountsNestedInput
    goal_report_values?: Goal_report_valuesUpdateManyWithoutAccountsNestedInput
    goal_reports?: Goal_reportsUpdateManyWithoutAccountsNestedInput
    list_values?: List_valuesUpdateManyWithoutAccountsNestedInput
    lists?: ListsUpdateManyWithoutAccountsNestedInput
    observation_sources?: Observation_sourcesUpdateManyWithoutAccountsNestedInput
    persons?: PersonsUpdateManyWithoutAccountsNestedInput
    place_levels?: Place_levelsUpdateManyWithoutAccountsNestedInput
    project_users?: Project_usersUpdateManyWithoutAccountsNestedInput
    projects?: ProjectsUpdateManyWithoutAccountsNestedInput
    subproject_taxa?: Subproject_taxaUpdateManyWithoutAccountsNestedInput
    subproject_users?: Subproject_usersUpdateManyWithoutAccountsNestedInput
    subprojects?: SubprojectsUpdateManyWithoutAccountsNestedInput
    taxa?: TaxaUpdateManyWithoutAccountsNestedInput
    taxonomies?: TaxonomiesUpdateManyWithoutAccountsNestedInput
    tile_layers?: Tile_layersUpdateManyWithoutAccountsNestedInput
    ui_options?: Ui_optionsUpdateManyWithoutAccountsNestedInput
    units?: UnitsUpdateManyWithoutAccountsNestedInput
    user_messages?: User_messagesUpdateManyWithoutAccountsNestedInput
  }

  export type AccountsUncheckedUpdateWithoutGoalsInput = {
    account_id?: StringFieldUpdateOperationsInput | string
    user_id?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    period_start?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    period_end?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    projects_label_by?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    gbif_occurrence_downloads?: Gbif_occurrence_downloadsUncheckedUpdateManyWithoutAccountsNestedInput
    gbif_occurrences?: Gbif_occurrencesUncheckedUpdateManyWithoutAccountsNestedInput
    gbif_taxa?: Gbif_taxaUncheckedUpdateManyWithoutAccountsNestedInput
    goal_report_values?: Goal_report_valuesUncheckedUpdateManyWithoutAccountsNestedInput
    goal_reports?: Goal_reportsUncheckedUpdateManyWithoutAccountsNestedInput
    list_values?: List_valuesUncheckedUpdateManyWithoutAccountsNestedInput
    lists?: ListsUncheckedUpdateManyWithoutAccountsNestedInput
    observation_sources?: Observation_sourcesUncheckedUpdateManyWithoutAccountsNestedInput
    persons?: PersonsUncheckedUpdateManyWithoutAccountsNestedInput
    place_levels?: Place_levelsUncheckedUpdateManyWithoutAccountsNestedInput
    project_users?: Project_usersUncheckedUpdateManyWithoutAccountsNestedInput
    projects?: ProjectsUncheckedUpdateManyWithoutAccountsNestedInput
    subproject_taxa?: Subproject_taxaUncheckedUpdateManyWithoutAccountsNestedInput
    subproject_users?: Subproject_usersUncheckedUpdateManyWithoutAccountsNestedInput
    subprojects?: SubprojectsUncheckedUpdateManyWithoutAccountsNestedInput
    taxa?: TaxaUncheckedUpdateManyWithoutAccountsNestedInput
    taxonomies?: TaxonomiesUncheckedUpdateManyWithoutAccountsNestedInput
    tile_layers?: Tile_layersUncheckedUpdateManyWithoutAccountsNestedInput
    ui_options?: Ui_optionsUncheckedUpdateManyWithoutAccountsNestedInput
    units?: UnitsUncheckedUpdateManyWithoutAccountsNestedInput
    user_messages?: User_messagesUncheckedUpdateManyWithoutAccountsNestedInput
  }

  export type SubprojectsUpsertWithoutGoalsInput = {
    update: XOR<SubprojectsUpdateWithoutGoalsInput, SubprojectsUncheckedUpdateWithoutGoalsInput>
    create: XOR<SubprojectsCreateWithoutGoalsInput, SubprojectsUncheckedCreateWithoutGoalsInput>
    where?: SubprojectsWhereInput
  }

  export type SubprojectsUpdateToOneWithWhereWithoutGoalsInput = {
    where?: SubprojectsWhereInput
    data: XOR<SubprojectsUpdateWithoutGoalsInput, SubprojectsUncheckedUpdateWithoutGoalsInput>
  }

  export type SubprojectsUpdateWithoutGoalsInput = {
    subproject_id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    label_replace_by_generated_column?: NullableStringFieldUpdateOperationsInput | string | null
    start_year?: NullableIntFieldUpdateOperationsInput | number | null
    end_year?: NullableIntFieldUpdateOperationsInput | number | null
    data?: NullableJsonNullValueInput | InputJsonValue
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    gbif_occurrence_downloads?: Gbif_occurrence_downloadsUpdateManyWithoutSubprojectsNestedInput
    gbif_occurrences?: Gbif_occurrencesUpdateManyWithoutSubprojectsNestedInput
    subproject_taxa?: Subproject_taxaUpdateManyWithoutSubprojectsNestedInput
    subproject_users?: Subproject_usersUpdateManyWithoutSubprojectsNestedInput
    accounts?: AccountsUpdateOneWithoutSubprojectsNestedInput
    projects?: ProjectsUpdateOneWithoutSubprojectsNestedInput
  }

  export type SubprojectsUncheckedUpdateWithoutGoalsInput = {
    subproject_id?: StringFieldUpdateOperationsInput | string
    account_id?: NullableStringFieldUpdateOperationsInput | string | null
    project_id?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    label_replace_by_generated_column?: NullableStringFieldUpdateOperationsInput | string | null
    start_year?: NullableIntFieldUpdateOperationsInput | number | null
    end_year?: NullableIntFieldUpdateOperationsInput | number | null
    data?: NullableJsonNullValueInput | InputJsonValue
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    gbif_occurrence_downloads?: Gbif_occurrence_downloadsUncheckedUpdateManyWithoutSubprojectsNestedInput
    gbif_occurrences?: Gbif_occurrencesUncheckedUpdateManyWithoutSubprojectsNestedInput
    subproject_taxa?: Subproject_taxaUncheckedUpdateManyWithoutSubprojectsNestedInput
    subproject_users?: Subproject_usersUncheckedUpdateManyWithoutSubprojectsNestedInput
  }

  export type AccountsCreateWithoutList_valuesInput = {
    account_id: string
    type?: string | null
    period_start?: Date | string | null
    period_end?: Date | string | null
    projects_label_by?: string | null
    label?: string | null
    users?: UsersCreateNestedOneWithoutAccountsInput
    gbif_occurrence_downloads?: Gbif_occurrence_downloadsCreateNestedManyWithoutAccountsInput
    gbif_occurrences?: Gbif_occurrencesCreateNestedManyWithoutAccountsInput
    gbif_taxa?: Gbif_taxaCreateNestedManyWithoutAccountsInput
    goal_report_values?: Goal_report_valuesCreateNestedManyWithoutAccountsInput
    goal_reports?: Goal_reportsCreateNestedManyWithoutAccountsInput
    goals?: GoalsCreateNestedManyWithoutAccountsInput
    lists?: ListsCreateNestedManyWithoutAccountsInput
    observation_sources?: Observation_sourcesCreateNestedManyWithoutAccountsInput
    persons?: PersonsCreateNestedManyWithoutAccountsInput
    place_levels?: Place_levelsCreateNestedManyWithoutAccountsInput
    project_users?: Project_usersCreateNestedManyWithoutAccountsInput
    projects?: ProjectsCreateNestedManyWithoutAccountsInput
    subproject_taxa?: Subproject_taxaCreateNestedManyWithoutAccountsInput
    subproject_users?: Subproject_usersCreateNestedManyWithoutAccountsInput
    subprojects?: SubprojectsCreateNestedManyWithoutAccountsInput
    taxa?: TaxaCreateNestedManyWithoutAccountsInput
    taxonomies?: TaxonomiesCreateNestedManyWithoutAccountsInput
    tile_layers?: Tile_layersCreateNestedManyWithoutAccountsInput
    ui_options?: Ui_optionsCreateNestedManyWithoutAccountsInput
    units?: UnitsCreateNestedManyWithoutAccountsInput
    user_messages?: User_messagesCreateNestedManyWithoutAccountsInput
  }

  export type AccountsUncheckedCreateWithoutList_valuesInput = {
    account_id: string
    user_id?: string | null
    type?: string | null
    period_start?: Date | string | null
    period_end?: Date | string | null
    projects_label_by?: string | null
    label?: string | null
    gbif_occurrence_downloads?: Gbif_occurrence_downloadsUncheckedCreateNestedManyWithoutAccountsInput
    gbif_occurrences?: Gbif_occurrencesUncheckedCreateNestedManyWithoutAccountsInput
    gbif_taxa?: Gbif_taxaUncheckedCreateNestedManyWithoutAccountsInput
    goal_report_values?: Goal_report_valuesUncheckedCreateNestedManyWithoutAccountsInput
    goal_reports?: Goal_reportsUncheckedCreateNestedManyWithoutAccountsInput
    goals?: GoalsUncheckedCreateNestedManyWithoutAccountsInput
    lists?: ListsUncheckedCreateNestedManyWithoutAccountsInput
    observation_sources?: Observation_sourcesUncheckedCreateNestedManyWithoutAccountsInput
    persons?: PersonsUncheckedCreateNestedManyWithoutAccountsInput
    place_levels?: Place_levelsUncheckedCreateNestedManyWithoutAccountsInput
    project_users?: Project_usersUncheckedCreateNestedManyWithoutAccountsInput
    projects?: ProjectsUncheckedCreateNestedManyWithoutAccountsInput
    subproject_taxa?: Subproject_taxaUncheckedCreateNestedManyWithoutAccountsInput
    subproject_users?: Subproject_usersUncheckedCreateNestedManyWithoutAccountsInput
    subprojects?: SubprojectsUncheckedCreateNestedManyWithoutAccountsInput
    taxa?: TaxaUncheckedCreateNestedManyWithoutAccountsInput
    taxonomies?: TaxonomiesUncheckedCreateNestedManyWithoutAccountsInput
    tile_layers?: Tile_layersUncheckedCreateNestedManyWithoutAccountsInput
    ui_options?: Ui_optionsUncheckedCreateNestedManyWithoutAccountsInput
    units?: UnitsUncheckedCreateNestedManyWithoutAccountsInput
    user_messages?: User_messagesUncheckedCreateNestedManyWithoutAccountsInput
  }

  export type AccountsCreateOrConnectWithoutList_valuesInput = {
    where: AccountsWhereUniqueInput
    create: XOR<AccountsCreateWithoutList_valuesInput, AccountsUncheckedCreateWithoutList_valuesInput>
  }

  export type ListsCreateWithoutList_valuesInput = {
    list_id: string
    name?: string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    obsolete?: boolean | null
    label_replace_by_generated_column?: string | null
    deleted?: boolean | null
    accounts?: AccountsCreateNestedOneWithoutListsInput
    projects?: ProjectsCreateNestedOneWithoutListsInput
    units?: UnitsCreateNestedManyWithoutListsInput
  }

  export type ListsUncheckedCreateWithoutList_valuesInput = {
    list_id: string
    account_id?: string | null
    project_id?: string | null
    name?: string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    obsolete?: boolean | null
    label_replace_by_generated_column?: string | null
    deleted?: boolean | null
    units?: UnitsUncheckedCreateNestedManyWithoutListsInput
  }

  export type ListsCreateOrConnectWithoutList_valuesInput = {
    where: ListsWhereUniqueInput
    create: XOR<ListsCreateWithoutList_valuesInput, ListsUncheckedCreateWithoutList_valuesInput>
  }

  export type AccountsUpsertWithoutList_valuesInput = {
    update: XOR<AccountsUpdateWithoutList_valuesInput, AccountsUncheckedUpdateWithoutList_valuesInput>
    create: XOR<AccountsCreateWithoutList_valuesInput, AccountsUncheckedCreateWithoutList_valuesInput>
    where?: AccountsWhereInput
  }

  export type AccountsUpdateToOneWithWhereWithoutList_valuesInput = {
    where?: AccountsWhereInput
    data: XOR<AccountsUpdateWithoutList_valuesInput, AccountsUncheckedUpdateWithoutList_valuesInput>
  }

  export type AccountsUpdateWithoutList_valuesInput = {
    account_id?: StringFieldUpdateOperationsInput | string
    type?: NullableStringFieldUpdateOperationsInput | string | null
    period_start?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    period_end?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    projects_label_by?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    users?: UsersUpdateOneWithoutAccountsNestedInput
    gbif_occurrence_downloads?: Gbif_occurrence_downloadsUpdateManyWithoutAccountsNestedInput
    gbif_occurrences?: Gbif_occurrencesUpdateManyWithoutAccountsNestedInput
    gbif_taxa?: Gbif_taxaUpdateManyWithoutAccountsNestedInput
    goal_report_values?: Goal_report_valuesUpdateManyWithoutAccountsNestedInput
    goal_reports?: Goal_reportsUpdateManyWithoutAccountsNestedInput
    goals?: GoalsUpdateManyWithoutAccountsNestedInput
    lists?: ListsUpdateManyWithoutAccountsNestedInput
    observation_sources?: Observation_sourcesUpdateManyWithoutAccountsNestedInput
    persons?: PersonsUpdateManyWithoutAccountsNestedInput
    place_levels?: Place_levelsUpdateManyWithoutAccountsNestedInput
    project_users?: Project_usersUpdateManyWithoutAccountsNestedInput
    projects?: ProjectsUpdateManyWithoutAccountsNestedInput
    subproject_taxa?: Subproject_taxaUpdateManyWithoutAccountsNestedInput
    subproject_users?: Subproject_usersUpdateManyWithoutAccountsNestedInput
    subprojects?: SubprojectsUpdateManyWithoutAccountsNestedInput
    taxa?: TaxaUpdateManyWithoutAccountsNestedInput
    taxonomies?: TaxonomiesUpdateManyWithoutAccountsNestedInput
    tile_layers?: Tile_layersUpdateManyWithoutAccountsNestedInput
    ui_options?: Ui_optionsUpdateManyWithoutAccountsNestedInput
    units?: UnitsUpdateManyWithoutAccountsNestedInput
    user_messages?: User_messagesUpdateManyWithoutAccountsNestedInput
  }

  export type AccountsUncheckedUpdateWithoutList_valuesInput = {
    account_id?: StringFieldUpdateOperationsInput | string
    user_id?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    period_start?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    period_end?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    projects_label_by?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    gbif_occurrence_downloads?: Gbif_occurrence_downloadsUncheckedUpdateManyWithoutAccountsNestedInput
    gbif_occurrences?: Gbif_occurrencesUncheckedUpdateManyWithoutAccountsNestedInput
    gbif_taxa?: Gbif_taxaUncheckedUpdateManyWithoutAccountsNestedInput
    goal_report_values?: Goal_report_valuesUncheckedUpdateManyWithoutAccountsNestedInput
    goal_reports?: Goal_reportsUncheckedUpdateManyWithoutAccountsNestedInput
    goals?: GoalsUncheckedUpdateManyWithoutAccountsNestedInput
    lists?: ListsUncheckedUpdateManyWithoutAccountsNestedInput
    observation_sources?: Observation_sourcesUncheckedUpdateManyWithoutAccountsNestedInput
    persons?: PersonsUncheckedUpdateManyWithoutAccountsNestedInput
    place_levels?: Place_levelsUncheckedUpdateManyWithoutAccountsNestedInput
    project_users?: Project_usersUncheckedUpdateManyWithoutAccountsNestedInput
    projects?: ProjectsUncheckedUpdateManyWithoutAccountsNestedInput
    subproject_taxa?: Subproject_taxaUncheckedUpdateManyWithoutAccountsNestedInput
    subproject_users?: Subproject_usersUncheckedUpdateManyWithoutAccountsNestedInput
    subprojects?: SubprojectsUncheckedUpdateManyWithoutAccountsNestedInput
    taxa?: TaxaUncheckedUpdateManyWithoutAccountsNestedInput
    taxonomies?: TaxonomiesUncheckedUpdateManyWithoutAccountsNestedInput
    tile_layers?: Tile_layersUncheckedUpdateManyWithoutAccountsNestedInput
    ui_options?: Ui_optionsUncheckedUpdateManyWithoutAccountsNestedInput
    units?: UnitsUncheckedUpdateManyWithoutAccountsNestedInput
    user_messages?: User_messagesUncheckedUpdateManyWithoutAccountsNestedInput
  }

  export type ListsUpsertWithoutList_valuesInput = {
    update: XOR<ListsUpdateWithoutList_valuesInput, ListsUncheckedUpdateWithoutList_valuesInput>
    create: XOR<ListsCreateWithoutList_valuesInput, ListsUncheckedCreateWithoutList_valuesInput>
    where?: ListsWhereInput
  }

  export type ListsUpdateToOneWithWhereWithoutList_valuesInput = {
    where?: ListsWhereInput
    data: XOR<ListsUpdateWithoutList_valuesInput, ListsUncheckedUpdateWithoutList_valuesInput>
  }

  export type ListsUpdateWithoutList_valuesInput = {
    list_id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    obsolete?: NullableBoolFieldUpdateOperationsInput | boolean | null
    label_replace_by_generated_column?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    accounts?: AccountsUpdateOneWithoutListsNestedInput
    projects?: ProjectsUpdateOneWithoutListsNestedInput
    units?: UnitsUpdateManyWithoutListsNestedInput
  }

  export type ListsUncheckedUpdateWithoutList_valuesInput = {
    list_id?: StringFieldUpdateOperationsInput | string
    account_id?: NullableStringFieldUpdateOperationsInput | string | null
    project_id?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    obsolete?: NullableBoolFieldUpdateOperationsInput | boolean | null
    label_replace_by_generated_column?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    units?: UnitsUncheckedUpdateManyWithoutListsNestedInput
  }

  export type List_valuesCreateWithoutListsInput = {
    list_value_id: string
    value?: string | null
    obsolete?: boolean | null
    label_replace_by_generated_column?: string | null
    deleted?: boolean | null
    accounts?: AccountsCreateNestedOneWithoutList_valuesInput
  }

  export type List_valuesUncheckedCreateWithoutListsInput = {
    list_value_id: string
    account_id?: string | null
    value?: string | null
    obsolete?: boolean | null
    label_replace_by_generated_column?: string | null
    deleted?: boolean | null
  }

  export type List_valuesCreateOrConnectWithoutListsInput = {
    where: List_valuesWhereUniqueInput
    create: XOR<List_valuesCreateWithoutListsInput, List_valuesUncheckedCreateWithoutListsInput>
  }

  export type List_valuesCreateManyListsInputEnvelope = {
    data: Enumerable<List_valuesCreateManyListsInput>
    skipDuplicates?: boolean
  }

  export type AccountsCreateWithoutListsInput = {
    account_id: string
    type?: string | null
    period_start?: Date | string | null
    period_end?: Date | string | null
    projects_label_by?: string | null
    label?: string | null
    users?: UsersCreateNestedOneWithoutAccountsInput
    gbif_occurrence_downloads?: Gbif_occurrence_downloadsCreateNestedManyWithoutAccountsInput
    gbif_occurrences?: Gbif_occurrencesCreateNestedManyWithoutAccountsInput
    gbif_taxa?: Gbif_taxaCreateNestedManyWithoutAccountsInput
    goal_report_values?: Goal_report_valuesCreateNestedManyWithoutAccountsInput
    goal_reports?: Goal_reportsCreateNestedManyWithoutAccountsInput
    goals?: GoalsCreateNestedManyWithoutAccountsInput
    list_values?: List_valuesCreateNestedManyWithoutAccountsInput
    observation_sources?: Observation_sourcesCreateNestedManyWithoutAccountsInput
    persons?: PersonsCreateNestedManyWithoutAccountsInput
    place_levels?: Place_levelsCreateNestedManyWithoutAccountsInput
    project_users?: Project_usersCreateNestedManyWithoutAccountsInput
    projects?: ProjectsCreateNestedManyWithoutAccountsInput
    subproject_taxa?: Subproject_taxaCreateNestedManyWithoutAccountsInput
    subproject_users?: Subproject_usersCreateNestedManyWithoutAccountsInput
    subprojects?: SubprojectsCreateNestedManyWithoutAccountsInput
    taxa?: TaxaCreateNestedManyWithoutAccountsInput
    taxonomies?: TaxonomiesCreateNestedManyWithoutAccountsInput
    tile_layers?: Tile_layersCreateNestedManyWithoutAccountsInput
    ui_options?: Ui_optionsCreateNestedManyWithoutAccountsInput
    units?: UnitsCreateNestedManyWithoutAccountsInput
    user_messages?: User_messagesCreateNestedManyWithoutAccountsInput
  }

  export type AccountsUncheckedCreateWithoutListsInput = {
    account_id: string
    user_id?: string | null
    type?: string | null
    period_start?: Date | string | null
    period_end?: Date | string | null
    projects_label_by?: string | null
    label?: string | null
    gbif_occurrence_downloads?: Gbif_occurrence_downloadsUncheckedCreateNestedManyWithoutAccountsInput
    gbif_occurrences?: Gbif_occurrencesUncheckedCreateNestedManyWithoutAccountsInput
    gbif_taxa?: Gbif_taxaUncheckedCreateNestedManyWithoutAccountsInput
    goal_report_values?: Goal_report_valuesUncheckedCreateNestedManyWithoutAccountsInput
    goal_reports?: Goal_reportsUncheckedCreateNestedManyWithoutAccountsInput
    goals?: GoalsUncheckedCreateNestedManyWithoutAccountsInput
    list_values?: List_valuesUncheckedCreateNestedManyWithoutAccountsInput
    observation_sources?: Observation_sourcesUncheckedCreateNestedManyWithoutAccountsInput
    persons?: PersonsUncheckedCreateNestedManyWithoutAccountsInput
    place_levels?: Place_levelsUncheckedCreateNestedManyWithoutAccountsInput
    project_users?: Project_usersUncheckedCreateNestedManyWithoutAccountsInput
    projects?: ProjectsUncheckedCreateNestedManyWithoutAccountsInput
    subproject_taxa?: Subproject_taxaUncheckedCreateNestedManyWithoutAccountsInput
    subproject_users?: Subproject_usersUncheckedCreateNestedManyWithoutAccountsInput
    subprojects?: SubprojectsUncheckedCreateNestedManyWithoutAccountsInput
    taxa?: TaxaUncheckedCreateNestedManyWithoutAccountsInput
    taxonomies?: TaxonomiesUncheckedCreateNestedManyWithoutAccountsInput
    tile_layers?: Tile_layersUncheckedCreateNestedManyWithoutAccountsInput
    ui_options?: Ui_optionsUncheckedCreateNestedManyWithoutAccountsInput
    units?: UnitsUncheckedCreateNestedManyWithoutAccountsInput
    user_messages?: User_messagesUncheckedCreateNestedManyWithoutAccountsInput
  }

  export type AccountsCreateOrConnectWithoutListsInput = {
    where: AccountsWhereUniqueInput
    create: XOR<AccountsCreateWithoutListsInput, AccountsUncheckedCreateWithoutListsInput>
  }

  export type ProjectsCreateWithoutListsInput = {
    project_id: string
    name?: string | null
    label?: string | null
    type?: project_type | null
    subproject_name_singular?: string | null
    subproject_name_plural?: string | null
    subproject_order_by?: string | null
    places_label_by?: string | null
    places_order_by?: NullableJsonNullValueInput | InputJsonValue
    persons_label_by?: string | null
    persons_order_by?: string | null
    goal_reports_label_by?: string | null
    goal_reports_order_by?: string | null
    values_on_multiple_levels?: string | null
    multiple_action_values_on_same_level?: string | null
    multiple_check_values_on_same_level?: string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    files_offline?: boolean | null
    files_active_projects?: boolean | null
    files_active_subprojects?: boolean | null
    files_active_places?: boolean | null
    files_active_actions?: boolean | null
    files_active_checks?: boolean | null
    deleted?: boolean | null
    gbif_occurrence_downloads?: Gbif_occurrence_downloadsCreateNestedManyWithoutProjectsInput
    gbif_occurrences?: Gbif_occurrencesCreateNestedManyWithoutProjectsInput
    gbif_taxa?: Gbif_taxaCreateNestedManyWithoutProjectsInput
    observation_sources?: Observation_sourcesCreateNestedManyWithoutProjectsInput
    persons?: PersonsCreateNestedManyWithoutProjectsInput
    place_levels?: Place_levelsCreateNestedManyWithoutProjectsInput
    project_users?: Project_usersCreateNestedManyWithoutProjectsInput
    accounts?: AccountsCreateNestedOneWithoutProjectsInput
    subprojects?: SubprojectsCreateNestedManyWithoutProjectsInput
    taxonomies?: TaxonomiesCreateNestedManyWithoutProjectsInput
    tile_layers?: Tile_layersCreateNestedManyWithoutProjectsInput
    units?: UnitsCreateNestedManyWithoutProjectsInput
  }

  export type ProjectsUncheckedCreateWithoutListsInput = {
    project_id: string
    account_id?: string | null
    name?: string | null
    label?: string | null
    type?: project_type | null
    subproject_name_singular?: string | null
    subproject_name_plural?: string | null
    subproject_order_by?: string | null
    places_label_by?: string | null
    places_order_by?: NullableJsonNullValueInput | InputJsonValue
    persons_label_by?: string | null
    persons_order_by?: string | null
    goal_reports_label_by?: string | null
    goal_reports_order_by?: string | null
    values_on_multiple_levels?: string | null
    multiple_action_values_on_same_level?: string | null
    multiple_check_values_on_same_level?: string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    files_offline?: boolean | null
    files_active_projects?: boolean | null
    files_active_subprojects?: boolean | null
    files_active_places?: boolean | null
    files_active_actions?: boolean | null
    files_active_checks?: boolean | null
    deleted?: boolean | null
    gbif_occurrence_downloads?: Gbif_occurrence_downloadsUncheckedCreateNestedManyWithoutProjectsInput
    gbif_occurrences?: Gbif_occurrencesUncheckedCreateNestedManyWithoutProjectsInput
    gbif_taxa?: Gbif_taxaUncheckedCreateNestedManyWithoutProjectsInput
    observation_sources?: Observation_sourcesUncheckedCreateNestedManyWithoutProjectsInput
    persons?: PersonsUncheckedCreateNestedManyWithoutProjectsInput
    place_levels?: Place_levelsUncheckedCreateNestedManyWithoutProjectsInput
    project_users?: Project_usersUncheckedCreateNestedManyWithoutProjectsInput
    subprojects?: SubprojectsUncheckedCreateNestedManyWithoutProjectsInput
    taxonomies?: TaxonomiesUncheckedCreateNestedManyWithoutProjectsInput
    tile_layers?: Tile_layersUncheckedCreateNestedManyWithoutProjectsInput
    units?: UnitsUncheckedCreateNestedManyWithoutProjectsInput
  }

  export type ProjectsCreateOrConnectWithoutListsInput = {
    where: ProjectsWhereUniqueInput
    create: XOR<ProjectsCreateWithoutListsInput, ProjectsUncheckedCreateWithoutListsInput>
  }

  export type UnitsCreateWithoutListsInput = {
    unit_id: string
    use_for_action_values?: boolean | null
    use_for_action_report_values?: boolean | null
    use_for_check_values?: boolean | null
    use_for_place_report_values?: boolean | null
    use_for_goal_report_values?: boolean | null
    use_for_subproject_taxa?: boolean | null
    use_for_check_taxa?: boolean | null
    name?: string | null
    summable?: boolean | null
    sort?: number | null
    type?: unit_type | null
    label_replace_by_generated_column?: string | null
    deleted?: boolean | null
    goal_report_values?: Goal_report_valuesCreateNestedManyWithoutUnitsInput
    accounts?: AccountsCreateNestedOneWithoutUnitsInput
    projects?: ProjectsCreateNestedOneWithoutUnitsInput
  }

  export type UnitsUncheckedCreateWithoutListsInput = {
    unit_id: string
    account_id?: string | null
    project_id?: string | null
    use_for_action_values?: boolean | null
    use_for_action_report_values?: boolean | null
    use_for_check_values?: boolean | null
    use_for_place_report_values?: boolean | null
    use_for_goal_report_values?: boolean | null
    use_for_subproject_taxa?: boolean | null
    use_for_check_taxa?: boolean | null
    name?: string | null
    summable?: boolean | null
    sort?: number | null
    type?: unit_type | null
    label_replace_by_generated_column?: string | null
    deleted?: boolean | null
    goal_report_values?: Goal_report_valuesUncheckedCreateNestedManyWithoutUnitsInput
  }

  export type UnitsCreateOrConnectWithoutListsInput = {
    where: UnitsWhereUniqueInput
    create: XOR<UnitsCreateWithoutListsInput, UnitsUncheckedCreateWithoutListsInput>
  }

  export type UnitsCreateManyListsInputEnvelope = {
    data: Enumerable<UnitsCreateManyListsInput>
    skipDuplicates?: boolean
  }

  export type List_valuesUpsertWithWhereUniqueWithoutListsInput = {
    where: List_valuesWhereUniqueInput
    update: XOR<List_valuesUpdateWithoutListsInput, List_valuesUncheckedUpdateWithoutListsInput>
    create: XOR<List_valuesCreateWithoutListsInput, List_valuesUncheckedCreateWithoutListsInput>
  }

  export type List_valuesUpdateWithWhereUniqueWithoutListsInput = {
    where: List_valuesWhereUniqueInput
    data: XOR<List_valuesUpdateWithoutListsInput, List_valuesUncheckedUpdateWithoutListsInput>
  }

  export type List_valuesUpdateManyWithWhereWithoutListsInput = {
    where: List_valuesScalarWhereInput
    data: XOR<List_valuesUpdateManyMutationInput, List_valuesUncheckedUpdateManyWithoutListsInput>
  }

  export type AccountsUpsertWithoutListsInput = {
    update: XOR<AccountsUpdateWithoutListsInput, AccountsUncheckedUpdateWithoutListsInput>
    create: XOR<AccountsCreateWithoutListsInput, AccountsUncheckedCreateWithoutListsInput>
    where?: AccountsWhereInput
  }

  export type AccountsUpdateToOneWithWhereWithoutListsInput = {
    where?: AccountsWhereInput
    data: XOR<AccountsUpdateWithoutListsInput, AccountsUncheckedUpdateWithoutListsInput>
  }

  export type AccountsUpdateWithoutListsInput = {
    account_id?: StringFieldUpdateOperationsInput | string
    type?: NullableStringFieldUpdateOperationsInput | string | null
    period_start?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    period_end?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    projects_label_by?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    users?: UsersUpdateOneWithoutAccountsNestedInput
    gbif_occurrence_downloads?: Gbif_occurrence_downloadsUpdateManyWithoutAccountsNestedInput
    gbif_occurrences?: Gbif_occurrencesUpdateManyWithoutAccountsNestedInput
    gbif_taxa?: Gbif_taxaUpdateManyWithoutAccountsNestedInput
    goal_report_values?: Goal_report_valuesUpdateManyWithoutAccountsNestedInput
    goal_reports?: Goal_reportsUpdateManyWithoutAccountsNestedInput
    goals?: GoalsUpdateManyWithoutAccountsNestedInput
    list_values?: List_valuesUpdateManyWithoutAccountsNestedInput
    observation_sources?: Observation_sourcesUpdateManyWithoutAccountsNestedInput
    persons?: PersonsUpdateManyWithoutAccountsNestedInput
    place_levels?: Place_levelsUpdateManyWithoutAccountsNestedInput
    project_users?: Project_usersUpdateManyWithoutAccountsNestedInput
    projects?: ProjectsUpdateManyWithoutAccountsNestedInput
    subproject_taxa?: Subproject_taxaUpdateManyWithoutAccountsNestedInput
    subproject_users?: Subproject_usersUpdateManyWithoutAccountsNestedInput
    subprojects?: SubprojectsUpdateManyWithoutAccountsNestedInput
    taxa?: TaxaUpdateManyWithoutAccountsNestedInput
    taxonomies?: TaxonomiesUpdateManyWithoutAccountsNestedInput
    tile_layers?: Tile_layersUpdateManyWithoutAccountsNestedInput
    ui_options?: Ui_optionsUpdateManyWithoutAccountsNestedInput
    units?: UnitsUpdateManyWithoutAccountsNestedInput
    user_messages?: User_messagesUpdateManyWithoutAccountsNestedInput
  }

  export type AccountsUncheckedUpdateWithoutListsInput = {
    account_id?: StringFieldUpdateOperationsInput | string
    user_id?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    period_start?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    period_end?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    projects_label_by?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    gbif_occurrence_downloads?: Gbif_occurrence_downloadsUncheckedUpdateManyWithoutAccountsNestedInput
    gbif_occurrences?: Gbif_occurrencesUncheckedUpdateManyWithoutAccountsNestedInput
    gbif_taxa?: Gbif_taxaUncheckedUpdateManyWithoutAccountsNestedInput
    goal_report_values?: Goal_report_valuesUncheckedUpdateManyWithoutAccountsNestedInput
    goal_reports?: Goal_reportsUncheckedUpdateManyWithoutAccountsNestedInput
    goals?: GoalsUncheckedUpdateManyWithoutAccountsNestedInput
    list_values?: List_valuesUncheckedUpdateManyWithoutAccountsNestedInput
    observation_sources?: Observation_sourcesUncheckedUpdateManyWithoutAccountsNestedInput
    persons?: PersonsUncheckedUpdateManyWithoutAccountsNestedInput
    place_levels?: Place_levelsUncheckedUpdateManyWithoutAccountsNestedInput
    project_users?: Project_usersUncheckedUpdateManyWithoutAccountsNestedInput
    projects?: ProjectsUncheckedUpdateManyWithoutAccountsNestedInput
    subproject_taxa?: Subproject_taxaUncheckedUpdateManyWithoutAccountsNestedInput
    subproject_users?: Subproject_usersUncheckedUpdateManyWithoutAccountsNestedInput
    subprojects?: SubprojectsUncheckedUpdateManyWithoutAccountsNestedInput
    taxa?: TaxaUncheckedUpdateManyWithoutAccountsNestedInput
    taxonomies?: TaxonomiesUncheckedUpdateManyWithoutAccountsNestedInput
    tile_layers?: Tile_layersUncheckedUpdateManyWithoutAccountsNestedInput
    ui_options?: Ui_optionsUncheckedUpdateManyWithoutAccountsNestedInput
    units?: UnitsUncheckedUpdateManyWithoutAccountsNestedInput
    user_messages?: User_messagesUncheckedUpdateManyWithoutAccountsNestedInput
  }

  export type ProjectsUpsertWithoutListsInput = {
    update: XOR<ProjectsUpdateWithoutListsInput, ProjectsUncheckedUpdateWithoutListsInput>
    create: XOR<ProjectsCreateWithoutListsInput, ProjectsUncheckedCreateWithoutListsInput>
    where?: ProjectsWhereInput
  }

  export type ProjectsUpdateToOneWithWhereWithoutListsInput = {
    where?: ProjectsWhereInput
    data: XOR<ProjectsUpdateWithoutListsInput, ProjectsUncheckedUpdateWithoutListsInput>
  }

  export type ProjectsUpdateWithoutListsInput = {
    project_id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableEnumproject_typeFieldUpdateOperationsInput | project_type | null
    subproject_name_singular?: NullableStringFieldUpdateOperationsInput | string | null
    subproject_name_plural?: NullableStringFieldUpdateOperationsInput | string | null
    subproject_order_by?: NullableStringFieldUpdateOperationsInput | string | null
    places_label_by?: NullableStringFieldUpdateOperationsInput | string | null
    places_order_by?: NullableJsonNullValueInput | InputJsonValue
    persons_label_by?: NullableStringFieldUpdateOperationsInput | string | null
    persons_order_by?: NullableStringFieldUpdateOperationsInput | string | null
    goal_reports_label_by?: NullableStringFieldUpdateOperationsInput | string | null
    goal_reports_order_by?: NullableStringFieldUpdateOperationsInput | string | null
    values_on_multiple_levels?: NullableStringFieldUpdateOperationsInput | string | null
    multiple_action_values_on_same_level?: NullableStringFieldUpdateOperationsInput | string | null
    multiple_check_values_on_same_level?: NullableStringFieldUpdateOperationsInput | string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    files_offline?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_projects?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_subprojects?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_places?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_actions?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_checks?: NullableBoolFieldUpdateOperationsInput | boolean | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    gbif_occurrence_downloads?: Gbif_occurrence_downloadsUpdateManyWithoutProjectsNestedInput
    gbif_occurrences?: Gbif_occurrencesUpdateManyWithoutProjectsNestedInput
    gbif_taxa?: Gbif_taxaUpdateManyWithoutProjectsNestedInput
    observation_sources?: Observation_sourcesUpdateManyWithoutProjectsNestedInput
    persons?: PersonsUpdateManyWithoutProjectsNestedInput
    place_levels?: Place_levelsUpdateManyWithoutProjectsNestedInput
    project_users?: Project_usersUpdateManyWithoutProjectsNestedInput
    accounts?: AccountsUpdateOneWithoutProjectsNestedInput
    subprojects?: SubprojectsUpdateManyWithoutProjectsNestedInput
    taxonomies?: TaxonomiesUpdateManyWithoutProjectsNestedInput
    tile_layers?: Tile_layersUpdateManyWithoutProjectsNestedInput
    units?: UnitsUpdateManyWithoutProjectsNestedInput
  }

  export type ProjectsUncheckedUpdateWithoutListsInput = {
    project_id?: StringFieldUpdateOperationsInput | string
    account_id?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableEnumproject_typeFieldUpdateOperationsInput | project_type | null
    subproject_name_singular?: NullableStringFieldUpdateOperationsInput | string | null
    subproject_name_plural?: NullableStringFieldUpdateOperationsInput | string | null
    subproject_order_by?: NullableStringFieldUpdateOperationsInput | string | null
    places_label_by?: NullableStringFieldUpdateOperationsInput | string | null
    places_order_by?: NullableJsonNullValueInput | InputJsonValue
    persons_label_by?: NullableStringFieldUpdateOperationsInput | string | null
    persons_order_by?: NullableStringFieldUpdateOperationsInput | string | null
    goal_reports_label_by?: NullableStringFieldUpdateOperationsInput | string | null
    goal_reports_order_by?: NullableStringFieldUpdateOperationsInput | string | null
    values_on_multiple_levels?: NullableStringFieldUpdateOperationsInput | string | null
    multiple_action_values_on_same_level?: NullableStringFieldUpdateOperationsInput | string | null
    multiple_check_values_on_same_level?: NullableStringFieldUpdateOperationsInput | string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    files_offline?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_projects?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_subprojects?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_places?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_actions?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_checks?: NullableBoolFieldUpdateOperationsInput | boolean | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    gbif_occurrence_downloads?: Gbif_occurrence_downloadsUncheckedUpdateManyWithoutProjectsNestedInput
    gbif_occurrences?: Gbif_occurrencesUncheckedUpdateManyWithoutProjectsNestedInput
    gbif_taxa?: Gbif_taxaUncheckedUpdateManyWithoutProjectsNestedInput
    observation_sources?: Observation_sourcesUncheckedUpdateManyWithoutProjectsNestedInput
    persons?: PersonsUncheckedUpdateManyWithoutProjectsNestedInput
    place_levels?: Place_levelsUncheckedUpdateManyWithoutProjectsNestedInput
    project_users?: Project_usersUncheckedUpdateManyWithoutProjectsNestedInput
    subprojects?: SubprojectsUncheckedUpdateManyWithoutProjectsNestedInput
    taxonomies?: TaxonomiesUncheckedUpdateManyWithoutProjectsNestedInput
    tile_layers?: Tile_layersUncheckedUpdateManyWithoutProjectsNestedInput
    units?: UnitsUncheckedUpdateManyWithoutProjectsNestedInput
  }

  export type UnitsUpsertWithWhereUniqueWithoutListsInput = {
    where: UnitsWhereUniqueInput
    update: XOR<UnitsUpdateWithoutListsInput, UnitsUncheckedUpdateWithoutListsInput>
    create: XOR<UnitsCreateWithoutListsInput, UnitsUncheckedCreateWithoutListsInput>
  }

  export type UnitsUpdateWithWhereUniqueWithoutListsInput = {
    where: UnitsWhereUniqueInput
    data: XOR<UnitsUpdateWithoutListsInput, UnitsUncheckedUpdateWithoutListsInput>
  }

  export type UnitsUpdateManyWithWhereWithoutListsInput = {
    where: UnitsScalarWhereInput
    data: XOR<UnitsUpdateManyMutationInput, UnitsUncheckedUpdateManyWithoutListsInput>
  }

  export type User_messagesCreateWithoutMessagesInput = {
    user_message_id: string
    label_replace_by_generated_column?: string | null
    read?: boolean | null
    accounts?: AccountsCreateNestedOneWithoutUser_messagesInput
    users?: UsersCreateNestedOneWithoutUser_messagesInput
  }

  export type User_messagesUncheckedCreateWithoutMessagesInput = {
    user_message_id: string
    account_id?: string | null
    user_id?: string | null
    label_replace_by_generated_column?: string | null
    read?: boolean | null
  }

  export type User_messagesCreateOrConnectWithoutMessagesInput = {
    where: User_messagesWhereUniqueInput
    create: XOR<User_messagesCreateWithoutMessagesInput, User_messagesUncheckedCreateWithoutMessagesInput>
  }

  export type User_messagesCreateManyMessagesInputEnvelope = {
    data: Enumerable<User_messagesCreateManyMessagesInput>
    skipDuplicates?: boolean
  }

  export type User_messagesUpsertWithWhereUniqueWithoutMessagesInput = {
    where: User_messagesWhereUniqueInput
    update: XOR<User_messagesUpdateWithoutMessagesInput, User_messagesUncheckedUpdateWithoutMessagesInput>
    create: XOR<User_messagesCreateWithoutMessagesInput, User_messagesUncheckedCreateWithoutMessagesInput>
  }

  export type User_messagesUpdateWithWhereUniqueWithoutMessagesInput = {
    where: User_messagesWhereUniqueInput
    data: XOR<User_messagesUpdateWithoutMessagesInput, User_messagesUncheckedUpdateWithoutMessagesInput>
  }

  export type User_messagesUpdateManyWithWhereWithoutMessagesInput = {
    where: User_messagesScalarWhereInput
    data: XOR<User_messagesUpdateManyMutationInput, User_messagesUncheckedUpdateManyWithoutMessagesInput>
  }

  export type AccountsCreateWithoutObservation_sourcesInput = {
    account_id: string
    type?: string | null
    period_start?: Date | string | null
    period_end?: Date | string | null
    projects_label_by?: string | null
    label?: string | null
    users?: UsersCreateNestedOneWithoutAccountsInput
    gbif_occurrence_downloads?: Gbif_occurrence_downloadsCreateNestedManyWithoutAccountsInput
    gbif_occurrences?: Gbif_occurrencesCreateNestedManyWithoutAccountsInput
    gbif_taxa?: Gbif_taxaCreateNestedManyWithoutAccountsInput
    goal_report_values?: Goal_report_valuesCreateNestedManyWithoutAccountsInput
    goal_reports?: Goal_reportsCreateNestedManyWithoutAccountsInput
    goals?: GoalsCreateNestedManyWithoutAccountsInput
    list_values?: List_valuesCreateNestedManyWithoutAccountsInput
    lists?: ListsCreateNestedManyWithoutAccountsInput
    persons?: PersonsCreateNestedManyWithoutAccountsInput
    place_levels?: Place_levelsCreateNestedManyWithoutAccountsInput
    project_users?: Project_usersCreateNestedManyWithoutAccountsInput
    projects?: ProjectsCreateNestedManyWithoutAccountsInput
    subproject_taxa?: Subproject_taxaCreateNestedManyWithoutAccountsInput
    subproject_users?: Subproject_usersCreateNestedManyWithoutAccountsInput
    subprojects?: SubprojectsCreateNestedManyWithoutAccountsInput
    taxa?: TaxaCreateNestedManyWithoutAccountsInput
    taxonomies?: TaxonomiesCreateNestedManyWithoutAccountsInput
    tile_layers?: Tile_layersCreateNestedManyWithoutAccountsInput
    ui_options?: Ui_optionsCreateNestedManyWithoutAccountsInput
    units?: UnitsCreateNestedManyWithoutAccountsInput
    user_messages?: User_messagesCreateNestedManyWithoutAccountsInput
  }

  export type AccountsUncheckedCreateWithoutObservation_sourcesInput = {
    account_id: string
    user_id?: string | null
    type?: string | null
    period_start?: Date | string | null
    period_end?: Date | string | null
    projects_label_by?: string | null
    label?: string | null
    gbif_occurrence_downloads?: Gbif_occurrence_downloadsUncheckedCreateNestedManyWithoutAccountsInput
    gbif_occurrences?: Gbif_occurrencesUncheckedCreateNestedManyWithoutAccountsInput
    gbif_taxa?: Gbif_taxaUncheckedCreateNestedManyWithoutAccountsInput
    goal_report_values?: Goal_report_valuesUncheckedCreateNestedManyWithoutAccountsInput
    goal_reports?: Goal_reportsUncheckedCreateNestedManyWithoutAccountsInput
    goals?: GoalsUncheckedCreateNestedManyWithoutAccountsInput
    list_values?: List_valuesUncheckedCreateNestedManyWithoutAccountsInput
    lists?: ListsUncheckedCreateNestedManyWithoutAccountsInput
    persons?: PersonsUncheckedCreateNestedManyWithoutAccountsInput
    place_levels?: Place_levelsUncheckedCreateNestedManyWithoutAccountsInput
    project_users?: Project_usersUncheckedCreateNestedManyWithoutAccountsInput
    projects?: ProjectsUncheckedCreateNestedManyWithoutAccountsInput
    subproject_taxa?: Subproject_taxaUncheckedCreateNestedManyWithoutAccountsInput
    subproject_users?: Subproject_usersUncheckedCreateNestedManyWithoutAccountsInput
    subprojects?: SubprojectsUncheckedCreateNestedManyWithoutAccountsInput
    taxa?: TaxaUncheckedCreateNestedManyWithoutAccountsInput
    taxonomies?: TaxonomiesUncheckedCreateNestedManyWithoutAccountsInput
    tile_layers?: Tile_layersUncheckedCreateNestedManyWithoutAccountsInput
    ui_options?: Ui_optionsUncheckedCreateNestedManyWithoutAccountsInput
    units?: UnitsUncheckedCreateNestedManyWithoutAccountsInput
    user_messages?: User_messagesUncheckedCreateNestedManyWithoutAccountsInput
  }

  export type AccountsCreateOrConnectWithoutObservation_sourcesInput = {
    where: AccountsWhereUniqueInput
    create: XOR<AccountsCreateWithoutObservation_sourcesInput, AccountsUncheckedCreateWithoutObservation_sourcesInput>
  }

  export type ProjectsCreateWithoutObservation_sourcesInput = {
    project_id: string
    name?: string | null
    label?: string | null
    type?: project_type | null
    subproject_name_singular?: string | null
    subproject_name_plural?: string | null
    subproject_order_by?: string | null
    places_label_by?: string | null
    places_order_by?: NullableJsonNullValueInput | InputJsonValue
    persons_label_by?: string | null
    persons_order_by?: string | null
    goal_reports_label_by?: string | null
    goal_reports_order_by?: string | null
    values_on_multiple_levels?: string | null
    multiple_action_values_on_same_level?: string | null
    multiple_check_values_on_same_level?: string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    files_offline?: boolean | null
    files_active_projects?: boolean | null
    files_active_subprojects?: boolean | null
    files_active_places?: boolean | null
    files_active_actions?: boolean | null
    files_active_checks?: boolean | null
    deleted?: boolean | null
    gbif_occurrence_downloads?: Gbif_occurrence_downloadsCreateNestedManyWithoutProjectsInput
    gbif_occurrences?: Gbif_occurrencesCreateNestedManyWithoutProjectsInput
    gbif_taxa?: Gbif_taxaCreateNestedManyWithoutProjectsInput
    lists?: ListsCreateNestedManyWithoutProjectsInput
    persons?: PersonsCreateNestedManyWithoutProjectsInput
    place_levels?: Place_levelsCreateNestedManyWithoutProjectsInput
    project_users?: Project_usersCreateNestedManyWithoutProjectsInput
    accounts?: AccountsCreateNestedOneWithoutProjectsInput
    subprojects?: SubprojectsCreateNestedManyWithoutProjectsInput
    taxonomies?: TaxonomiesCreateNestedManyWithoutProjectsInput
    tile_layers?: Tile_layersCreateNestedManyWithoutProjectsInput
    units?: UnitsCreateNestedManyWithoutProjectsInput
  }

  export type ProjectsUncheckedCreateWithoutObservation_sourcesInput = {
    project_id: string
    account_id?: string | null
    name?: string | null
    label?: string | null
    type?: project_type | null
    subproject_name_singular?: string | null
    subproject_name_plural?: string | null
    subproject_order_by?: string | null
    places_label_by?: string | null
    places_order_by?: NullableJsonNullValueInput | InputJsonValue
    persons_label_by?: string | null
    persons_order_by?: string | null
    goal_reports_label_by?: string | null
    goal_reports_order_by?: string | null
    values_on_multiple_levels?: string | null
    multiple_action_values_on_same_level?: string | null
    multiple_check_values_on_same_level?: string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    files_offline?: boolean | null
    files_active_projects?: boolean | null
    files_active_subprojects?: boolean | null
    files_active_places?: boolean | null
    files_active_actions?: boolean | null
    files_active_checks?: boolean | null
    deleted?: boolean | null
    gbif_occurrence_downloads?: Gbif_occurrence_downloadsUncheckedCreateNestedManyWithoutProjectsInput
    gbif_occurrences?: Gbif_occurrencesUncheckedCreateNestedManyWithoutProjectsInput
    gbif_taxa?: Gbif_taxaUncheckedCreateNestedManyWithoutProjectsInput
    lists?: ListsUncheckedCreateNestedManyWithoutProjectsInput
    persons?: PersonsUncheckedCreateNestedManyWithoutProjectsInput
    place_levels?: Place_levelsUncheckedCreateNestedManyWithoutProjectsInput
    project_users?: Project_usersUncheckedCreateNestedManyWithoutProjectsInput
    subprojects?: SubprojectsUncheckedCreateNestedManyWithoutProjectsInput
    taxonomies?: TaxonomiesUncheckedCreateNestedManyWithoutProjectsInput
    tile_layers?: Tile_layersUncheckedCreateNestedManyWithoutProjectsInput
    units?: UnitsUncheckedCreateNestedManyWithoutProjectsInput
  }

  export type ProjectsCreateOrConnectWithoutObservation_sourcesInput = {
    where: ProjectsWhereUniqueInput
    create: XOR<ProjectsCreateWithoutObservation_sourcesInput, ProjectsUncheckedCreateWithoutObservation_sourcesInput>
  }

  export type AccountsUpsertWithoutObservation_sourcesInput = {
    update: XOR<AccountsUpdateWithoutObservation_sourcesInput, AccountsUncheckedUpdateWithoutObservation_sourcesInput>
    create: XOR<AccountsCreateWithoutObservation_sourcesInput, AccountsUncheckedCreateWithoutObservation_sourcesInput>
    where?: AccountsWhereInput
  }

  export type AccountsUpdateToOneWithWhereWithoutObservation_sourcesInput = {
    where?: AccountsWhereInput
    data: XOR<AccountsUpdateWithoutObservation_sourcesInput, AccountsUncheckedUpdateWithoutObservation_sourcesInput>
  }

  export type AccountsUpdateWithoutObservation_sourcesInput = {
    account_id?: StringFieldUpdateOperationsInput | string
    type?: NullableStringFieldUpdateOperationsInput | string | null
    period_start?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    period_end?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    projects_label_by?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    users?: UsersUpdateOneWithoutAccountsNestedInput
    gbif_occurrence_downloads?: Gbif_occurrence_downloadsUpdateManyWithoutAccountsNestedInput
    gbif_occurrences?: Gbif_occurrencesUpdateManyWithoutAccountsNestedInput
    gbif_taxa?: Gbif_taxaUpdateManyWithoutAccountsNestedInput
    goal_report_values?: Goal_report_valuesUpdateManyWithoutAccountsNestedInput
    goal_reports?: Goal_reportsUpdateManyWithoutAccountsNestedInput
    goals?: GoalsUpdateManyWithoutAccountsNestedInput
    list_values?: List_valuesUpdateManyWithoutAccountsNestedInput
    lists?: ListsUpdateManyWithoutAccountsNestedInput
    persons?: PersonsUpdateManyWithoutAccountsNestedInput
    place_levels?: Place_levelsUpdateManyWithoutAccountsNestedInput
    project_users?: Project_usersUpdateManyWithoutAccountsNestedInput
    projects?: ProjectsUpdateManyWithoutAccountsNestedInput
    subproject_taxa?: Subproject_taxaUpdateManyWithoutAccountsNestedInput
    subproject_users?: Subproject_usersUpdateManyWithoutAccountsNestedInput
    subprojects?: SubprojectsUpdateManyWithoutAccountsNestedInput
    taxa?: TaxaUpdateManyWithoutAccountsNestedInput
    taxonomies?: TaxonomiesUpdateManyWithoutAccountsNestedInput
    tile_layers?: Tile_layersUpdateManyWithoutAccountsNestedInput
    ui_options?: Ui_optionsUpdateManyWithoutAccountsNestedInput
    units?: UnitsUpdateManyWithoutAccountsNestedInput
    user_messages?: User_messagesUpdateManyWithoutAccountsNestedInput
  }

  export type AccountsUncheckedUpdateWithoutObservation_sourcesInput = {
    account_id?: StringFieldUpdateOperationsInput | string
    user_id?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    period_start?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    period_end?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    projects_label_by?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    gbif_occurrence_downloads?: Gbif_occurrence_downloadsUncheckedUpdateManyWithoutAccountsNestedInput
    gbif_occurrences?: Gbif_occurrencesUncheckedUpdateManyWithoutAccountsNestedInput
    gbif_taxa?: Gbif_taxaUncheckedUpdateManyWithoutAccountsNestedInput
    goal_report_values?: Goal_report_valuesUncheckedUpdateManyWithoutAccountsNestedInput
    goal_reports?: Goal_reportsUncheckedUpdateManyWithoutAccountsNestedInput
    goals?: GoalsUncheckedUpdateManyWithoutAccountsNestedInput
    list_values?: List_valuesUncheckedUpdateManyWithoutAccountsNestedInput
    lists?: ListsUncheckedUpdateManyWithoutAccountsNestedInput
    persons?: PersonsUncheckedUpdateManyWithoutAccountsNestedInput
    place_levels?: Place_levelsUncheckedUpdateManyWithoutAccountsNestedInput
    project_users?: Project_usersUncheckedUpdateManyWithoutAccountsNestedInput
    projects?: ProjectsUncheckedUpdateManyWithoutAccountsNestedInput
    subproject_taxa?: Subproject_taxaUncheckedUpdateManyWithoutAccountsNestedInput
    subproject_users?: Subproject_usersUncheckedUpdateManyWithoutAccountsNestedInput
    subprojects?: SubprojectsUncheckedUpdateManyWithoutAccountsNestedInput
    taxa?: TaxaUncheckedUpdateManyWithoutAccountsNestedInput
    taxonomies?: TaxonomiesUncheckedUpdateManyWithoutAccountsNestedInput
    tile_layers?: Tile_layersUncheckedUpdateManyWithoutAccountsNestedInput
    ui_options?: Ui_optionsUncheckedUpdateManyWithoutAccountsNestedInput
    units?: UnitsUncheckedUpdateManyWithoutAccountsNestedInput
    user_messages?: User_messagesUncheckedUpdateManyWithoutAccountsNestedInput
  }

  export type ProjectsUpsertWithoutObservation_sourcesInput = {
    update: XOR<ProjectsUpdateWithoutObservation_sourcesInput, ProjectsUncheckedUpdateWithoutObservation_sourcesInput>
    create: XOR<ProjectsCreateWithoutObservation_sourcesInput, ProjectsUncheckedCreateWithoutObservation_sourcesInput>
    where?: ProjectsWhereInput
  }

  export type ProjectsUpdateToOneWithWhereWithoutObservation_sourcesInput = {
    where?: ProjectsWhereInput
    data: XOR<ProjectsUpdateWithoutObservation_sourcesInput, ProjectsUncheckedUpdateWithoutObservation_sourcesInput>
  }

  export type ProjectsUpdateWithoutObservation_sourcesInput = {
    project_id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableEnumproject_typeFieldUpdateOperationsInput | project_type | null
    subproject_name_singular?: NullableStringFieldUpdateOperationsInput | string | null
    subproject_name_plural?: NullableStringFieldUpdateOperationsInput | string | null
    subproject_order_by?: NullableStringFieldUpdateOperationsInput | string | null
    places_label_by?: NullableStringFieldUpdateOperationsInput | string | null
    places_order_by?: NullableJsonNullValueInput | InputJsonValue
    persons_label_by?: NullableStringFieldUpdateOperationsInput | string | null
    persons_order_by?: NullableStringFieldUpdateOperationsInput | string | null
    goal_reports_label_by?: NullableStringFieldUpdateOperationsInput | string | null
    goal_reports_order_by?: NullableStringFieldUpdateOperationsInput | string | null
    values_on_multiple_levels?: NullableStringFieldUpdateOperationsInput | string | null
    multiple_action_values_on_same_level?: NullableStringFieldUpdateOperationsInput | string | null
    multiple_check_values_on_same_level?: NullableStringFieldUpdateOperationsInput | string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    files_offline?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_projects?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_subprojects?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_places?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_actions?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_checks?: NullableBoolFieldUpdateOperationsInput | boolean | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    gbif_occurrence_downloads?: Gbif_occurrence_downloadsUpdateManyWithoutProjectsNestedInput
    gbif_occurrences?: Gbif_occurrencesUpdateManyWithoutProjectsNestedInput
    gbif_taxa?: Gbif_taxaUpdateManyWithoutProjectsNestedInput
    lists?: ListsUpdateManyWithoutProjectsNestedInput
    persons?: PersonsUpdateManyWithoutProjectsNestedInput
    place_levels?: Place_levelsUpdateManyWithoutProjectsNestedInput
    project_users?: Project_usersUpdateManyWithoutProjectsNestedInput
    accounts?: AccountsUpdateOneWithoutProjectsNestedInput
    subprojects?: SubprojectsUpdateManyWithoutProjectsNestedInput
    taxonomies?: TaxonomiesUpdateManyWithoutProjectsNestedInput
    tile_layers?: Tile_layersUpdateManyWithoutProjectsNestedInput
    units?: UnitsUpdateManyWithoutProjectsNestedInput
  }

  export type ProjectsUncheckedUpdateWithoutObservation_sourcesInput = {
    project_id?: StringFieldUpdateOperationsInput | string
    account_id?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableEnumproject_typeFieldUpdateOperationsInput | project_type | null
    subproject_name_singular?: NullableStringFieldUpdateOperationsInput | string | null
    subproject_name_plural?: NullableStringFieldUpdateOperationsInput | string | null
    subproject_order_by?: NullableStringFieldUpdateOperationsInput | string | null
    places_label_by?: NullableStringFieldUpdateOperationsInput | string | null
    places_order_by?: NullableJsonNullValueInput | InputJsonValue
    persons_label_by?: NullableStringFieldUpdateOperationsInput | string | null
    persons_order_by?: NullableStringFieldUpdateOperationsInput | string | null
    goal_reports_label_by?: NullableStringFieldUpdateOperationsInput | string | null
    goal_reports_order_by?: NullableStringFieldUpdateOperationsInput | string | null
    values_on_multiple_levels?: NullableStringFieldUpdateOperationsInput | string | null
    multiple_action_values_on_same_level?: NullableStringFieldUpdateOperationsInput | string | null
    multiple_check_values_on_same_level?: NullableStringFieldUpdateOperationsInput | string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    files_offline?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_projects?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_subprojects?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_places?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_actions?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_checks?: NullableBoolFieldUpdateOperationsInput | boolean | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    gbif_occurrence_downloads?: Gbif_occurrence_downloadsUncheckedUpdateManyWithoutProjectsNestedInput
    gbif_occurrences?: Gbif_occurrencesUncheckedUpdateManyWithoutProjectsNestedInput
    gbif_taxa?: Gbif_taxaUncheckedUpdateManyWithoutProjectsNestedInput
    lists?: ListsUncheckedUpdateManyWithoutProjectsNestedInput
    persons?: PersonsUncheckedUpdateManyWithoutProjectsNestedInput
    place_levels?: Place_levelsUncheckedUpdateManyWithoutProjectsNestedInput
    project_users?: Project_usersUncheckedUpdateManyWithoutProjectsNestedInput
    subprojects?: SubprojectsUncheckedUpdateManyWithoutProjectsNestedInput
    taxonomies?: TaxonomiesUncheckedUpdateManyWithoutProjectsNestedInput
    tile_layers?: Tile_layersUncheckedUpdateManyWithoutProjectsNestedInput
    units?: UnitsUncheckedUpdateManyWithoutProjectsNestedInput
  }

  export type AccountsCreateWithoutPersonsInput = {
    account_id: string
    type?: string | null
    period_start?: Date | string | null
    period_end?: Date | string | null
    projects_label_by?: string | null
    label?: string | null
    users?: UsersCreateNestedOneWithoutAccountsInput
    gbif_occurrence_downloads?: Gbif_occurrence_downloadsCreateNestedManyWithoutAccountsInput
    gbif_occurrences?: Gbif_occurrencesCreateNestedManyWithoutAccountsInput
    gbif_taxa?: Gbif_taxaCreateNestedManyWithoutAccountsInput
    goal_report_values?: Goal_report_valuesCreateNestedManyWithoutAccountsInput
    goal_reports?: Goal_reportsCreateNestedManyWithoutAccountsInput
    goals?: GoalsCreateNestedManyWithoutAccountsInput
    list_values?: List_valuesCreateNestedManyWithoutAccountsInput
    lists?: ListsCreateNestedManyWithoutAccountsInput
    observation_sources?: Observation_sourcesCreateNestedManyWithoutAccountsInput
    place_levels?: Place_levelsCreateNestedManyWithoutAccountsInput
    project_users?: Project_usersCreateNestedManyWithoutAccountsInput
    projects?: ProjectsCreateNestedManyWithoutAccountsInput
    subproject_taxa?: Subproject_taxaCreateNestedManyWithoutAccountsInput
    subproject_users?: Subproject_usersCreateNestedManyWithoutAccountsInput
    subprojects?: SubprojectsCreateNestedManyWithoutAccountsInput
    taxa?: TaxaCreateNestedManyWithoutAccountsInput
    taxonomies?: TaxonomiesCreateNestedManyWithoutAccountsInput
    tile_layers?: Tile_layersCreateNestedManyWithoutAccountsInput
    ui_options?: Ui_optionsCreateNestedManyWithoutAccountsInput
    units?: UnitsCreateNestedManyWithoutAccountsInput
    user_messages?: User_messagesCreateNestedManyWithoutAccountsInput
  }

  export type AccountsUncheckedCreateWithoutPersonsInput = {
    account_id: string
    user_id?: string | null
    type?: string | null
    period_start?: Date | string | null
    period_end?: Date | string | null
    projects_label_by?: string | null
    label?: string | null
    gbif_occurrence_downloads?: Gbif_occurrence_downloadsUncheckedCreateNestedManyWithoutAccountsInput
    gbif_occurrences?: Gbif_occurrencesUncheckedCreateNestedManyWithoutAccountsInput
    gbif_taxa?: Gbif_taxaUncheckedCreateNestedManyWithoutAccountsInput
    goal_report_values?: Goal_report_valuesUncheckedCreateNestedManyWithoutAccountsInput
    goal_reports?: Goal_reportsUncheckedCreateNestedManyWithoutAccountsInput
    goals?: GoalsUncheckedCreateNestedManyWithoutAccountsInput
    list_values?: List_valuesUncheckedCreateNestedManyWithoutAccountsInput
    lists?: ListsUncheckedCreateNestedManyWithoutAccountsInput
    observation_sources?: Observation_sourcesUncheckedCreateNestedManyWithoutAccountsInput
    place_levels?: Place_levelsUncheckedCreateNestedManyWithoutAccountsInput
    project_users?: Project_usersUncheckedCreateNestedManyWithoutAccountsInput
    projects?: ProjectsUncheckedCreateNestedManyWithoutAccountsInput
    subproject_taxa?: Subproject_taxaUncheckedCreateNestedManyWithoutAccountsInput
    subproject_users?: Subproject_usersUncheckedCreateNestedManyWithoutAccountsInput
    subprojects?: SubprojectsUncheckedCreateNestedManyWithoutAccountsInput
    taxa?: TaxaUncheckedCreateNestedManyWithoutAccountsInput
    taxonomies?: TaxonomiesUncheckedCreateNestedManyWithoutAccountsInput
    tile_layers?: Tile_layersUncheckedCreateNestedManyWithoutAccountsInput
    ui_options?: Ui_optionsUncheckedCreateNestedManyWithoutAccountsInput
    units?: UnitsUncheckedCreateNestedManyWithoutAccountsInput
    user_messages?: User_messagesUncheckedCreateNestedManyWithoutAccountsInput
  }

  export type AccountsCreateOrConnectWithoutPersonsInput = {
    where: AccountsWhereUniqueInput
    create: XOR<AccountsCreateWithoutPersonsInput, AccountsUncheckedCreateWithoutPersonsInput>
  }

  export type ProjectsCreateWithoutPersonsInput = {
    project_id: string
    name?: string | null
    label?: string | null
    type?: project_type | null
    subproject_name_singular?: string | null
    subproject_name_plural?: string | null
    subproject_order_by?: string | null
    places_label_by?: string | null
    places_order_by?: NullableJsonNullValueInput | InputJsonValue
    persons_label_by?: string | null
    persons_order_by?: string | null
    goal_reports_label_by?: string | null
    goal_reports_order_by?: string | null
    values_on_multiple_levels?: string | null
    multiple_action_values_on_same_level?: string | null
    multiple_check_values_on_same_level?: string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    files_offline?: boolean | null
    files_active_projects?: boolean | null
    files_active_subprojects?: boolean | null
    files_active_places?: boolean | null
    files_active_actions?: boolean | null
    files_active_checks?: boolean | null
    deleted?: boolean | null
    gbif_occurrence_downloads?: Gbif_occurrence_downloadsCreateNestedManyWithoutProjectsInput
    gbif_occurrences?: Gbif_occurrencesCreateNestedManyWithoutProjectsInput
    gbif_taxa?: Gbif_taxaCreateNestedManyWithoutProjectsInput
    lists?: ListsCreateNestedManyWithoutProjectsInput
    observation_sources?: Observation_sourcesCreateNestedManyWithoutProjectsInput
    place_levels?: Place_levelsCreateNestedManyWithoutProjectsInput
    project_users?: Project_usersCreateNestedManyWithoutProjectsInput
    accounts?: AccountsCreateNestedOneWithoutProjectsInput
    subprojects?: SubprojectsCreateNestedManyWithoutProjectsInput
    taxonomies?: TaxonomiesCreateNestedManyWithoutProjectsInput
    tile_layers?: Tile_layersCreateNestedManyWithoutProjectsInput
    units?: UnitsCreateNestedManyWithoutProjectsInput
  }

  export type ProjectsUncheckedCreateWithoutPersonsInput = {
    project_id: string
    account_id?: string | null
    name?: string | null
    label?: string | null
    type?: project_type | null
    subproject_name_singular?: string | null
    subproject_name_plural?: string | null
    subproject_order_by?: string | null
    places_label_by?: string | null
    places_order_by?: NullableJsonNullValueInput | InputJsonValue
    persons_label_by?: string | null
    persons_order_by?: string | null
    goal_reports_label_by?: string | null
    goal_reports_order_by?: string | null
    values_on_multiple_levels?: string | null
    multiple_action_values_on_same_level?: string | null
    multiple_check_values_on_same_level?: string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    files_offline?: boolean | null
    files_active_projects?: boolean | null
    files_active_subprojects?: boolean | null
    files_active_places?: boolean | null
    files_active_actions?: boolean | null
    files_active_checks?: boolean | null
    deleted?: boolean | null
    gbif_occurrence_downloads?: Gbif_occurrence_downloadsUncheckedCreateNestedManyWithoutProjectsInput
    gbif_occurrences?: Gbif_occurrencesUncheckedCreateNestedManyWithoutProjectsInput
    gbif_taxa?: Gbif_taxaUncheckedCreateNestedManyWithoutProjectsInput
    lists?: ListsUncheckedCreateNestedManyWithoutProjectsInput
    observation_sources?: Observation_sourcesUncheckedCreateNestedManyWithoutProjectsInput
    place_levels?: Place_levelsUncheckedCreateNestedManyWithoutProjectsInput
    project_users?: Project_usersUncheckedCreateNestedManyWithoutProjectsInput
    subprojects?: SubprojectsUncheckedCreateNestedManyWithoutProjectsInput
    taxonomies?: TaxonomiesUncheckedCreateNestedManyWithoutProjectsInput
    tile_layers?: Tile_layersUncheckedCreateNestedManyWithoutProjectsInput
    units?: UnitsUncheckedCreateNestedManyWithoutProjectsInput
  }

  export type ProjectsCreateOrConnectWithoutPersonsInput = {
    where: ProjectsWhereUniqueInput
    create: XOR<ProjectsCreateWithoutPersonsInput, ProjectsUncheckedCreateWithoutPersonsInput>
  }

  export type AccountsUpsertWithoutPersonsInput = {
    update: XOR<AccountsUpdateWithoutPersonsInput, AccountsUncheckedUpdateWithoutPersonsInput>
    create: XOR<AccountsCreateWithoutPersonsInput, AccountsUncheckedCreateWithoutPersonsInput>
    where?: AccountsWhereInput
  }

  export type AccountsUpdateToOneWithWhereWithoutPersonsInput = {
    where?: AccountsWhereInput
    data: XOR<AccountsUpdateWithoutPersonsInput, AccountsUncheckedUpdateWithoutPersonsInput>
  }

  export type AccountsUpdateWithoutPersonsInput = {
    account_id?: StringFieldUpdateOperationsInput | string
    type?: NullableStringFieldUpdateOperationsInput | string | null
    period_start?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    period_end?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    projects_label_by?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    users?: UsersUpdateOneWithoutAccountsNestedInput
    gbif_occurrence_downloads?: Gbif_occurrence_downloadsUpdateManyWithoutAccountsNestedInput
    gbif_occurrences?: Gbif_occurrencesUpdateManyWithoutAccountsNestedInput
    gbif_taxa?: Gbif_taxaUpdateManyWithoutAccountsNestedInput
    goal_report_values?: Goal_report_valuesUpdateManyWithoutAccountsNestedInput
    goal_reports?: Goal_reportsUpdateManyWithoutAccountsNestedInput
    goals?: GoalsUpdateManyWithoutAccountsNestedInput
    list_values?: List_valuesUpdateManyWithoutAccountsNestedInput
    lists?: ListsUpdateManyWithoutAccountsNestedInput
    observation_sources?: Observation_sourcesUpdateManyWithoutAccountsNestedInput
    place_levels?: Place_levelsUpdateManyWithoutAccountsNestedInput
    project_users?: Project_usersUpdateManyWithoutAccountsNestedInput
    projects?: ProjectsUpdateManyWithoutAccountsNestedInput
    subproject_taxa?: Subproject_taxaUpdateManyWithoutAccountsNestedInput
    subproject_users?: Subproject_usersUpdateManyWithoutAccountsNestedInput
    subprojects?: SubprojectsUpdateManyWithoutAccountsNestedInput
    taxa?: TaxaUpdateManyWithoutAccountsNestedInput
    taxonomies?: TaxonomiesUpdateManyWithoutAccountsNestedInput
    tile_layers?: Tile_layersUpdateManyWithoutAccountsNestedInput
    ui_options?: Ui_optionsUpdateManyWithoutAccountsNestedInput
    units?: UnitsUpdateManyWithoutAccountsNestedInput
    user_messages?: User_messagesUpdateManyWithoutAccountsNestedInput
  }

  export type AccountsUncheckedUpdateWithoutPersonsInput = {
    account_id?: StringFieldUpdateOperationsInput | string
    user_id?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    period_start?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    period_end?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    projects_label_by?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    gbif_occurrence_downloads?: Gbif_occurrence_downloadsUncheckedUpdateManyWithoutAccountsNestedInput
    gbif_occurrences?: Gbif_occurrencesUncheckedUpdateManyWithoutAccountsNestedInput
    gbif_taxa?: Gbif_taxaUncheckedUpdateManyWithoutAccountsNestedInput
    goal_report_values?: Goal_report_valuesUncheckedUpdateManyWithoutAccountsNestedInput
    goal_reports?: Goal_reportsUncheckedUpdateManyWithoutAccountsNestedInput
    goals?: GoalsUncheckedUpdateManyWithoutAccountsNestedInput
    list_values?: List_valuesUncheckedUpdateManyWithoutAccountsNestedInput
    lists?: ListsUncheckedUpdateManyWithoutAccountsNestedInput
    observation_sources?: Observation_sourcesUncheckedUpdateManyWithoutAccountsNestedInput
    place_levels?: Place_levelsUncheckedUpdateManyWithoutAccountsNestedInput
    project_users?: Project_usersUncheckedUpdateManyWithoutAccountsNestedInput
    projects?: ProjectsUncheckedUpdateManyWithoutAccountsNestedInput
    subproject_taxa?: Subproject_taxaUncheckedUpdateManyWithoutAccountsNestedInput
    subproject_users?: Subproject_usersUncheckedUpdateManyWithoutAccountsNestedInput
    subprojects?: SubprojectsUncheckedUpdateManyWithoutAccountsNestedInput
    taxa?: TaxaUncheckedUpdateManyWithoutAccountsNestedInput
    taxonomies?: TaxonomiesUncheckedUpdateManyWithoutAccountsNestedInput
    tile_layers?: Tile_layersUncheckedUpdateManyWithoutAccountsNestedInput
    ui_options?: Ui_optionsUncheckedUpdateManyWithoutAccountsNestedInput
    units?: UnitsUncheckedUpdateManyWithoutAccountsNestedInput
    user_messages?: User_messagesUncheckedUpdateManyWithoutAccountsNestedInput
  }

  export type ProjectsUpsertWithoutPersonsInput = {
    update: XOR<ProjectsUpdateWithoutPersonsInput, ProjectsUncheckedUpdateWithoutPersonsInput>
    create: XOR<ProjectsCreateWithoutPersonsInput, ProjectsUncheckedCreateWithoutPersonsInput>
    where?: ProjectsWhereInput
  }

  export type ProjectsUpdateToOneWithWhereWithoutPersonsInput = {
    where?: ProjectsWhereInput
    data: XOR<ProjectsUpdateWithoutPersonsInput, ProjectsUncheckedUpdateWithoutPersonsInput>
  }

  export type ProjectsUpdateWithoutPersonsInput = {
    project_id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableEnumproject_typeFieldUpdateOperationsInput | project_type | null
    subproject_name_singular?: NullableStringFieldUpdateOperationsInput | string | null
    subproject_name_plural?: NullableStringFieldUpdateOperationsInput | string | null
    subproject_order_by?: NullableStringFieldUpdateOperationsInput | string | null
    places_label_by?: NullableStringFieldUpdateOperationsInput | string | null
    places_order_by?: NullableJsonNullValueInput | InputJsonValue
    persons_label_by?: NullableStringFieldUpdateOperationsInput | string | null
    persons_order_by?: NullableStringFieldUpdateOperationsInput | string | null
    goal_reports_label_by?: NullableStringFieldUpdateOperationsInput | string | null
    goal_reports_order_by?: NullableStringFieldUpdateOperationsInput | string | null
    values_on_multiple_levels?: NullableStringFieldUpdateOperationsInput | string | null
    multiple_action_values_on_same_level?: NullableStringFieldUpdateOperationsInput | string | null
    multiple_check_values_on_same_level?: NullableStringFieldUpdateOperationsInput | string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    files_offline?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_projects?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_subprojects?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_places?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_actions?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_checks?: NullableBoolFieldUpdateOperationsInput | boolean | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    gbif_occurrence_downloads?: Gbif_occurrence_downloadsUpdateManyWithoutProjectsNestedInput
    gbif_occurrences?: Gbif_occurrencesUpdateManyWithoutProjectsNestedInput
    gbif_taxa?: Gbif_taxaUpdateManyWithoutProjectsNestedInput
    lists?: ListsUpdateManyWithoutProjectsNestedInput
    observation_sources?: Observation_sourcesUpdateManyWithoutProjectsNestedInput
    place_levels?: Place_levelsUpdateManyWithoutProjectsNestedInput
    project_users?: Project_usersUpdateManyWithoutProjectsNestedInput
    accounts?: AccountsUpdateOneWithoutProjectsNestedInput
    subprojects?: SubprojectsUpdateManyWithoutProjectsNestedInput
    taxonomies?: TaxonomiesUpdateManyWithoutProjectsNestedInput
    tile_layers?: Tile_layersUpdateManyWithoutProjectsNestedInput
    units?: UnitsUpdateManyWithoutProjectsNestedInput
  }

  export type ProjectsUncheckedUpdateWithoutPersonsInput = {
    project_id?: StringFieldUpdateOperationsInput | string
    account_id?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableEnumproject_typeFieldUpdateOperationsInput | project_type | null
    subproject_name_singular?: NullableStringFieldUpdateOperationsInput | string | null
    subproject_name_plural?: NullableStringFieldUpdateOperationsInput | string | null
    subproject_order_by?: NullableStringFieldUpdateOperationsInput | string | null
    places_label_by?: NullableStringFieldUpdateOperationsInput | string | null
    places_order_by?: NullableJsonNullValueInput | InputJsonValue
    persons_label_by?: NullableStringFieldUpdateOperationsInput | string | null
    persons_order_by?: NullableStringFieldUpdateOperationsInput | string | null
    goal_reports_label_by?: NullableStringFieldUpdateOperationsInput | string | null
    goal_reports_order_by?: NullableStringFieldUpdateOperationsInput | string | null
    values_on_multiple_levels?: NullableStringFieldUpdateOperationsInput | string | null
    multiple_action_values_on_same_level?: NullableStringFieldUpdateOperationsInput | string | null
    multiple_check_values_on_same_level?: NullableStringFieldUpdateOperationsInput | string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    files_offline?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_projects?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_subprojects?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_places?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_actions?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_checks?: NullableBoolFieldUpdateOperationsInput | boolean | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    gbif_occurrence_downloads?: Gbif_occurrence_downloadsUncheckedUpdateManyWithoutProjectsNestedInput
    gbif_occurrences?: Gbif_occurrencesUncheckedUpdateManyWithoutProjectsNestedInput
    gbif_taxa?: Gbif_taxaUncheckedUpdateManyWithoutProjectsNestedInput
    lists?: ListsUncheckedUpdateManyWithoutProjectsNestedInput
    observation_sources?: Observation_sourcesUncheckedUpdateManyWithoutProjectsNestedInput
    place_levels?: Place_levelsUncheckedUpdateManyWithoutProjectsNestedInput
    project_users?: Project_usersUncheckedUpdateManyWithoutProjectsNestedInput
    subprojects?: SubprojectsUncheckedUpdateManyWithoutProjectsNestedInput
    taxonomies?: TaxonomiesUncheckedUpdateManyWithoutProjectsNestedInput
    tile_layers?: Tile_layersUncheckedUpdateManyWithoutProjectsNestedInput
    units?: UnitsUncheckedUpdateManyWithoutProjectsNestedInput
  }

  export type AccountsCreateWithoutPlace_levelsInput = {
    account_id: string
    type?: string | null
    period_start?: Date | string | null
    period_end?: Date | string | null
    projects_label_by?: string | null
    label?: string | null
    users?: UsersCreateNestedOneWithoutAccountsInput
    gbif_occurrence_downloads?: Gbif_occurrence_downloadsCreateNestedManyWithoutAccountsInput
    gbif_occurrences?: Gbif_occurrencesCreateNestedManyWithoutAccountsInput
    gbif_taxa?: Gbif_taxaCreateNestedManyWithoutAccountsInput
    goal_report_values?: Goal_report_valuesCreateNestedManyWithoutAccountsInput
    goal_reports?: Goal_reportsCreateNestedManyWithoutAccountsInput
    goals?: GoalsCreateNestedManyWithoutAccountsInput
    list_values?: List_valuesCreateNestedManyWithoutAccountsInput
    lists?: ListsCreateNestedManyWithoutAccountsInput
    observation_sources?: Observation_sourcesCreateNestedManyWithoutAccountsInput
    persons?: PersonsCreateNestedManyWithoutAccountsInput
    project_users?: Project_usersCreateNestedManyWithoutAccountsInput
    projects?: ProjectsCreateNestedManyWithoutAccountsInput
    subproject_taxa?: Subproject_taxaCreateNestedManyWithoutAccountsInput
    subproject_users?: Subproject_usersCreateNestedManyWithoutAccountsInput
    subprojects?: SubprojectsCreateNestedManyWithoutAccountsInput
    taxa?: TaxaCreateNestedManyWithoutAccountsInput
    taxonomies?: TaxonomiesCreateNestedManyWithoutAccountsInput
    tile_layers?: Tile_layersCreateNestedManyWithoutAccountsInput
    ui_options?: Ui_optionsCreateNestedManyWithoutAccountsInput
    units?: UnitsCreateNestedManyWithoutAccountsInput
    user_messages?: User_messagesCreateNestedManyWithoutAccountsInput
  }

  export type AccountsUncheckedCreateWithoutPlace_levelsInput = {
    account_id: string
    user_id?: string | null
    type?: string | null
    period_start?: Date | string | null
    period_end?: Date | string | null
    projects_label_by?: string | null
    label?: string | null
    gbif_occurrence_downloads?: Gbif_occurrence_downloadsUncheckedCreateNestedManyWithoutAccountsInput
    gbif_occurrences?: Gbif_occurrencesUncheckedCreateNestedManyWithoutAccountsInput
    gbif_taxa?: Gbif_taxaUncheckedCreateNestedManyWithoutAccountsInput
    goal_report_values?: Goal_report_valuesUncheckedCreateNestedManyWithoutAccountsInput
    goal_reports?: Goal_reportsUncheckedCreateNestedManyWithoutAccountsInput
    goals?: GoalsUncheckedCreateNestedManyWithoutAccountsInput
    list_values?: List_valuesUncheckedCreateNestedManyWithoutAccountsInput
    lists?: ListsUncheckedCreateNestedManyWithoutAccountsInput
    observation_sources?: Observation_sourcesUncheckedCreateNestedManyWithoutAccountsInput
    persons?: PersonsUncheckedCreateNestedManyWithoutAccountsInput
    project_users?: Project_usersUncheckedCreateNestedManyWithoutAccountsInput
    projects?: ProjectsUncheckedCreateNestedManyWithoutAccountsInput
    subproject_taxa?: Subproject_taxaUncheckedCreateNestedManyWithoutAccountsInput
    subproject_users?: Subproject_usersUncheckedCreateNestedManyWithoutAccountsInput
    subprojects?: SubprojectsUncheckedCreateNestedManyWithoutAccountsInput
    taxa?: TaxaUncheckedCreateNestedManyWithoutAccountsInput
    taxonomies?: TaxonomiesUncheckedCreateNestedManyWithoutAccountsInput
    tile_layers?: Tile_layersUncheckedCreateNestedManyWithoutAccountsInput
    ui_options?: Ui_optionsUncheckedCreateNestedManyWithoutAccountsInput
    units?: UnitsUncheckedCreateNestedManyWithoutAccountsInput
    user_messages?: User_messagesUncheckedCreateNestedManyWithoutAccountsInput
  }

  export type AccountsCreateOrConnectWithoutPlace_levelsInput = {
    where: AccountsWhereUniqueInput
    create: XOR<AccountsCreateWithoutPlace_levelsInput, AccountsUncheckedCreateWithoutPlace_levelsInput>
  }

  export type ProjectsCreateWithoutPlace_levelsInput = {
    project_id: string
    name?: string | null
    label?: string | null
    type?: project_type | null
    subproject_name_singular?: string | null
    subproject_name_plural?: string | null
    subproject_order_by?: string | null
    places_label_by?: string | null
    places_order_by?: NullableJsonNullValueInput | InputJsonValue
    persons_label_by?: string | null
    persons_order_by?: string | null
    goal_reports_label_by?: string | null
    goal_reports_order_by?: string | null
    values_on_multiple_levels?: string | null
    multiple_action_values_on_same_level?: string | null
    multiple_check_values_on_same_level?: string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    files_offline?: boolean | null
    files_active_projects?: boolean | null
    files_active_subprojects?: boolean | null
    files_active_places?: boolean | null
    files_active_actions?: boolean | null
    files_active_checks?: boolean | null
    deleted?: boolean | null
    gbif_occurrence_downloads?: Gbif_occurrence_downloadsCreateNestedManyWithoutProjectsInput
    gbif_occurrences?: Gbif_occurrencesCreateNestedManyWithoutProjectsInput
    gbif_taxa?: Gbif_taxaCreateNestedManyWithoutProjectsInput
    lists?: ListsCreateNestedManyWithoutProjectsInput
    observation_sources?: Observation_sourcesCreateNestedManyWithoutProjectsInput
    persons?: PersonsCreateNestedManyWithoutProjectsInput
    project_users?: Project_usersCreateNestedManyWithoutProjectsInput
    accounts?: AccountsCreateNestedOneWithoutProjectsInput
    subprojects?: SubprojectsCreateNestedManyWithoutProjectsInput
    taxonomies?: TaxonomiesCreateNestedManyWithoutProjectsInput
    tile_layers?: Tile_layersCreateNestedManyWithoutProjectsInput
    units?: UnitsCreateNestedManyWithoutProjectsInput
  }

  export type ProjectsUncheckedCreateWithoutPlace_levelsInput = {
    project_id: string
    account_id?: string | null
    name?: string | null
    label?: string | null
    type?: project_type | null
    subproject_name_singular?: string | null
    subproject_name_plural?: string | null
    subproject_order_by?: string | null
    places_label_by?: string | null
    places_order_by?: NullableJsonNullValueInput | InputJsonValue
    persons_label_by?: string | null
    persons_order_by?: string | null
    goal_reports_label_by?: string | null
    goal_reports_order_by?: string | null
    values_on_multiple_levels?: string | null
    multiple_action_values_on_same_level?: string | null
    multiple_check_values_on_same_level?: string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    files_offline?: boolean | null
    files_active_projects?: boolean | null
    files_active_subprojects?: boolean | null
    files_active_places?: boolean | null
    files_active_actions?: boolean | null
    files_active_checks?: boolean | null
    deleted?: boolean | null
    gbif_occurrence_downloads?: Gbif_occurrence_downloadsUncheckedCreateNestedManyWithoutProjectsInput
    gbif_occurrences?: Gbif_occurrencesUncheckedCreateNestedManyWithoutProjectsInput
    gbif_taxa?: Gbif_taxaUncheckedCreateNestedManyWithoutProjectsInput
    lists?: ListsUncheckedCreateNestedManyWithoutProjectsInput
    observation_sources?: Observation_sourcesUncheckedCreateNestedManyWithoutProjectsInput
    persons?: PersonsUncheckedCreateNestedManyWithoutProjectsInput
    project_users?: Project_usersUncheckedCreateNestedManyWithoutProjectsInput
    subprojects?: SubprojectsUncheckedCreateNestedManyWithoutProjectsInput
    taxonomies?: TaxonomiesUncheckedCreateNestedManyWithoutProjectsInput
    tile_layers?: Tile_layersUncheckedCreateNestedManyWithoutProjectsInput
    units?: UnitsUncheckedCreateNestedManyWithoutProjectsInput
  }

  export type ProjectsCreateOrConnectWithoutPlace_levelsInput = {
    where: ProjectsWhereUniqueInput
    create: XOR<ProjectsCreateWithoutPlace_levelsInput, ProjectsUncheckedCreateWithoutPlace_levelsInput>
  }

  export type AccountsUpsertWithoutPlace_levelsInput = {
    update: XOR<AccountsUpdateWithoutPlace_levelsInput, AccountsUncheckedUpdateWithoutPlace_levelsInput>
    create: XOR<AccountsCreateWithoutPlace_levelsInput, AccountsUncheckedCreateWithoutPlace_levelsInput>
    where?: AccountsWhereInput
  }

  export type AccountsUpdateToOneWithWhereWithoutPlace_levelsInput = {
    where?: AccountsWhereInput
    data: XOR<AccountsUpdateWithoutPlace_levelsInput, AccountsUncheckedUpdateWithoutPlace_levelsInput>
  }

  export type AccountsUpdateWithoutPlace_levelsInput = {
    account_id?: StringFieldUpdateOperationsInput | string
    type?: NullableStringFieldUpdateOperationsInput | string | null
    period_start?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    period_end?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    projects_label_by?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    users?: UsersUpdateOneWithoutAccountsNestedInput
    gbif_occurrence_downloads?: Gbif_occurrence_downloadsUpdateManyWithoutAccountsNestedInput
    gbif_occurrences?: Gbif_occurrencesUpdateManyWithoutAccountsNestedInput
    gbif_taxa?: Gbif_taxaUpdateManyWithoutAccountsNestedInput
    goal_report_values?: Goal_report_valuesUpdateManyWithoutAccountsNestedInput
    goal_reports?: Goal_reportsUpdateManyWithoutAccountsNestedInput
    goals?: GoalsUpdateManyWithoutAccountsNestedInput
    list_values?: List_valuesUpdateManyWithoutAccountsNestedInput
    lists?: ListsUpdateManyWithoutAccountsNestedInput
    observation_sources?: Observation_sourcesUpdateManyWithoutAccountsNestedInput
    persons?: PersonsUpdateManyWithoutAccountsNestedInput
    project_users?: Project_usersUpdateManyWithoutAccountsNestedInput
    projects?: ProjectsUpdateManyWithoutAccountsNestedInput
    subproject_taxa?: Subproject_taxaUpdateManyWithoutAccountsNestedInput
    subproject_users?: Subproject_usersUpdateManyWithoutAccountsNestedInput
    subprojects?: SubprojectsUpdateManyWithoutAccountsNestedInput
    taxa?: TaxaUpdateManyWithoutAccountsNestedInput
    taxonomies?: TaxonomiesUpdateManyWithoutAccountsNestedInput
    tile_layers?: Tile_layersUpdateManyWithoutAccountsNestedInput
    ui_options?: Ui_optionsUpdateManyWithoutAccountsNestedInput
    units?: UnitsUpdateManyWithoutAccountsNestedInput
    user_messages?: User_messagesUpdateManyWithoutAccountsNestedInput
  }

  export type AccountsUncheckedUpdateWithoutPlace_levelsInput = {
    account_id?: StringFieldUpdateOperationsInput | string
    user_id?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    period_start?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    period_end?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    projects_label_by?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    gbif_occurrence_downloads?: Gbif_occurrence_downloadsUncheckedUpdateManyWithoutAccountsNestedInput
    gbif_occurrences?: Gbif_occurrencesUncheckedUpdateManyWithoutAccountsNestedInput
    gbif_taxa?: Gbif_taxaUncheckedUpdateManyWithoutAccountsNestedInput
    goal_report_values?: Goal_report_valuesUncheckedUpdateManyWithoutAccountsNestedInput
    goal_reports?: Goal_reportsUncheckedUpdateManyWithoutAccountsNestedInput
    goals?: GoalsUncheckedUpdateManyWithoutAccountsNestedInput
    list_values?: List_valuesUncheckedUpdateManyWithoutAccountsNestedInput
    lists?: ListsUncheckedUpdateManyWithoutAccountsNestedInput
    observation_sources?: Observation_sourcesUncheckedUpdateManyWithoutAccountsNestedInput
    persons?: PersonsUncheckedUpdateManyWithoutAccountsNestedInput
    project_users?: Project_usersUncheckedUpdateManyWithoutAccountsNestedInput
    projects?: ProjectsUncheckedUpdateManyWithoutAccountsNestedInput
    subproject_taxa?: Subproject_taxaUncheckedUpdateManyWithoutAccountsNestedInput
    subproject_users?: Subproject_usersUncheckedUpdateManyWithoutAccountsNestedInput
    subprojects?: SubprojectsUncheckedUpdateManyWithoutAccountsNestedInput
    taxa?: TaxaUncheckedUpdateManyWithoutAccountsNestedInput
    taxonomies?: TaxonomiesUncheckedUpdateManyWithoutAccountsNestedInput
    tile_layers?: Tile_layersUncheckedUpdateManyWithoutAccountsNestedInput
    ui_options?: Ui_optionsUncheckedUpdateManyWithoutAccountsNestedInput
    units?: UnitsUncheckedUpdateManyWithoutAccountsNestedInput
    user_messages?: User_messagesUncheckedUpdateManyWithoutAccountsNestedInput
  }

  export type ProjectsUpsertWithoutPlace_levelsInput = {
    update: XOR<ProjectsUpdateWithoutPlace_levelsInput, ProjectsUncheckedUpdateWithoutPlace_levelsInput>
    create: XOR<ProjectsCreateWithoutPlace_levelsInput, ProjectsUncheckedCreateWithoutPlace_levelsInput>
    where?: ProjectsWhereInput
  }

  export type ProjectsUpdateToOneWithWhereWithoutPlace_levelsInput = {
    where?: ProjectsWhereInput
    data: XOR<ProjectsUpdateWithoutPlace_levelsInput, ProjectsUncheckedUpdateWithoutPlace_levelsInput>
  }

  export type ProjectsUpdateWithoutPlace_levelsInput = {
    project_id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableEnumproject_typeFieldUpdateOperationsInput | project_type | null
    subproject_name_singular?: NullableStringFieldUpdateOperationsInput | string | null
    subproject_name_plural?: NullableStringFieldUpdateOperationsInput | string | null
    subproject_order_by?: NullableStringFieldUpdateOperationsInput | string | null
    places_label_by?: NullableStringFieldUpdateOperationsInput | string | null
    places_order_by?: NullableJsonNullValueInput | InputJsonValue
    persons_label_by?: NullableStringFieldUpdateOperationsInput | string | null
    persons_order_by?: NullableStringFieldUpdateOperationsInput | string | null
    goal_reports_label_by?: NullableStringFieldUpdateOperationsInput | string | null
    goal_reports_order_by?: NullableStringFieldUpdateOperationsInput | string | null
    values_on_multiple_levels?: NullableStringFieldUpdateOperationsInput | string | null
    multiple_action_values_on_same_level?: NullableStringFieldUpdateOperationsInput | string | null
    multiple_check_values_on_same_level?: NullableStringFieldUpdateOperationsInput | string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    files_offline?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_projects?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_subprojects?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_places?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_actions?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_checks?: NullableBoolFieldUpdateOperationsInput | boolean | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    gbif_occurrence_downloads?: Gbif_occurrence_downloadsUpdateManyWithoutProjectsNestedInput
    gbif_occurrences?: Gbif_occurrencesUpdateManyWithoutProjectsNestedInput
    gbif_taxa?: Gbif_taxaUpdateManyWithoutProjectsNestedInput
    lists?: ListsUpdateManyWithoutProjectsNestedInput
    observation_sources?: Observation_sourcesUpdateManyWithoutProjectsNestedInput
    persons?: PersonsUpdateManyWithoutProjectsNestedInput
    project_users?: Project_usersUpdateManyWithoutProjectsNestedInput
    accounts?: AccountsUpdateOneWithoutProjectsNestedInput
    subprojects?: SubprojectsUpdateManyWithoutProjectsNestedInput
    taxonomies?: TaxonomiesUpdateManyWithoutProjectsNestedInput
    tile_layers?: Tile_layersUpdateManyWithoutProjectsNestedInput
    units?: UnitsUpdateManyWithoutProjectsNestedInput
  }

  export type ProjectsUncheckedUpdateWithoutPlace_levelsInput = {
    project_id?: StringFieldUpdateOperationsInput | string
    account_id?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableEnumproject_typeFieldUpdateOperationsInput | project_type | null
    subproject_name_singular?: NullableStringFieldUpdateOperationsInput | string | null
    subproject_name_plural?: NullableStringFieldUpdateOperationsInput | string | null
    subproject_order_by?: NullableStringFieldUpdateOperationsInput | string | null
    places_label_by?: NullableStringFieldUpdateOperationsInput | string | null
    places_order_by?: NullableJsonNullValueInput | InputJsonValue
    persons_label_by?: NullableStringFieldUpdateOperationsInput | string | null
    persons_order_by?: NullableStringFieldUpdateOperationsInput | string | null
    goal_reports_label_by?: NullableStringFieldUpdateOperationsInput | string | null
    goal_reports_order_by?: NullableStringFieldUpdateOperationsInput | string | null
    values_on_multiple_levels?: NullableStringFieldUpdateOperationsInput | string | null
    multiple_action_values_on_same_level?: NullableStringFieldUpdateOperationsInput | string | null
    multiple_check_values_on_same_level?: NullableStringFieldUpdateOperationsInput | string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    files_offline?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_projects?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_subprojects?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_places?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_actions?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_checks?: NullableBoolFieldUpdateOperationsInput | boolean | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    gbif_occurrence_downloads?: Gbif_occurrence_downloadsUncheckedUpdateManyWithoutProjectsNestedInput
    gbif_occurrences?: Gbif_occurrencesUncheckedUpdateManyWithoutProjectsNestedInput
    gbif_taxa?: Gbif_taxaUncheckedUpdateManyWithoutProjectsNestedInput
    lists?: ListsUncheckedUpdateManyWithoutProjectsNestedInput
    observation_sources?: Observation_sourcesUncheckedUpdateManyWithoutProjectsNestedInput
    persons?: PersonsUncheckedUpdateManyWithoutProjectsNestedInput
    project_users?: Project_usersUncheckedUpdateManyWithoutProjectsNestedInput
    subprojects?: SubprojectsUncheckedUpdateManyWithoutProjectsNestedInput
    taxonomies?: TaxonomiesUncheckedUpdateManyWithoutProjectsNestedInput
    tile_layers?: Tile_layersUncheckedUpdateManyWithoutProjectsNestedInput
    units?: UnitsUncheckedUpdateManyWithoutProjectsNestedInput
  }

  export type AccountsCreateWithoutProject_usersInput = {
    account_id: string
    type?: string | null
    period_start?: Date | string | null
    period_end?: Date | string | null
    projects_label_by?: string | null
    label?: string | null
    users?: UsersCreateNestedOneWithoutAccountsInput
    gbif_occurrence_downloads?: Gbif_occurrence_downloadsCreateNestedManyWithoutAccountsInput
    gbif_occurrences?: Gbif_occurrencesCreateNestedManyWithoutAccountsInput
    gbif_taxa?: Gbif_taxaCreateNestedManyWithoutAccountsInput
    goal_report_values?: Goal_report_valuesCreateNestedManyWithoutAccountsInput
    goal_reports?: Goal_reportsCreateNestedManyWithoutAccountsInput
    goals?: GoalsCreateNestedManyWithoutAccountsInput
    list_values?: List_valuesCreateNestedManyWithoutAccountsInput
    lists?: ListsCreateNestedManyWithoutAccountsInput
    observation_sources?: Observation_sourcesCreateNestedManyWithoutAccountsInput
    persons?: PersonsCreateNestedManyWithoutAccountsInput
    place_levels?: Place_levelsCreateNestedManyWithoutAccountsInput
    projects?: ProjectsCreateNestedManyWithoutAccountsInput
    subproject_taxa?: Subproject_taxaCreateNestedManyWithoutAccountsInput
    subproject_users?: Subproject_usersCreateNestedManyWithoutAccountsInput
    subprojects?: SubprojectsCreateNestedManyWithoutAccountsInput
    taxa?: TaxaCreateNestedManyWithoutAccountsInput
    taxonomies?: TaxonomiesCreateNestedManyWithoutAccountsInput
    tile_layers?: Tile_layersCreateNestedManyWithoutAccountsInput
    ui_options?: Ui_optionsCreateNestedManyWithoutAccountsInput
    units?: UnitsCreateNestedManyWithoutAccountsInput
    user_messages?: User_messagesCreateNestedManyWithoutAccountsInput
  }

  export type AccountsUncheckedCreateWithoutProject_usersInput = {
    account_id: string
    user_id?: string | null
    type?: string | null
    period_start?: Date | string | null
    period_end?: Date | string | null
    projects_label_by?: string | null
    label?: string | null
    gbif_occurrence_downloads?: Gbif_occurrence_downloadsUncheckedCreateNestedManyWithoutAccountsInput
    gbif_occurrences?: Gbif_occurrencesUncheckedCreateNestedManyWithoutAccountsInput
    gbif_taxa?: Gbif_taxaUncheckedCreateNestedManyWithoutAccountsInput
    goal_report_values?: Goal_report_valuesUncheckedCreateNestedManyWithoutAccountsInput
    goal_reports?: Goal_reportsUncheckedCreateNestedManyWithoutAccountsInput
    goals?: GoalsUncheckedCreateNestedManyWithoutAccountsInput
    list_values?: List_valuesUncheckedCreateNestedManyWithoutAccountsInput
    lists?: ListsUncheckedCreateNestedManyWithoutAccountsInput
    observation_sources?: Observation_sourcesUncheckedCreateNestedManyWithoutAccountsInput
    persons?: PersonsUncheckedCreateNestedManyWithoutAccountsInput
    place_levels?: Place_levelsUncheckedCreateNestedManyWithoutAccountsInput
    projects?: ProjectsUncheckedCreateNestedManyWithoutAccountsInput
    subproject_taxa?: Subproject_taxaUncheckedCreateNestedManyWithoutAccountsInput
    subproject_users?: Subproject_usersUncheckedCreateNestedManyWithoutAccountsInput
    subprojects?: SubprojectsUncheckedCreateNestedManyWithoutAccountsInput
    taxa?: TaxaUncheckedCreateNestedManyWithoutAccountsInput
    taxonomies?: TaxonomiesUncheckedCreateNestedManyWithoutAccountsInput
    tile_layers?: Tile_layersUncheckedCreateNestedManyWithoutAccountsInput
    ui_options?: Ui_optionsUncheckedCreateNestedManyWithoutAccountsInput
    units?: UnitsUncheckedCreateNestedManyWithoutAccountsInput
    user_messages?: User_messagesUncheckedCreateNestedManyWithoutAccountsInput
  }

  export type AccountsCreateOrConnectWithoutProject_usersInput = {
    where: AccountsWhereUniqueInput
    create: XOR<AccountsCreateWithoutProject_usersInput, AccountsUncheckedCreateWithoutProject_usersInput>
  }

  export type ProjectsCreateWithoutProject_usersInput = {
    project_id: string
    name?: string | null
    label?: string | null
    type?: project_type | null
    subproject_name_singular?: string | null
    subproject_name_plural?: string | null
    subproject_order_by?: string | null
    places_label_by?: string | null
    places_order_by?: NullableJsonNullValueInput | InputJsonValue
    persons_label_by?: string | null
    persons_order_by?: string | null
    goal_reports_label_by?: string | null
    goal_reports_order_by?: string | null
    values_on_multiple_levels?: string | null
    multiple_action_values_on_same_level?: string | null
    multiple_check_values_on_same_level?: string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    files_offline?: boolean | null
    files_active_projects?: boolean | null
    files_active_subprojects?: boolean | null
    files_active_places?: boolean | null
    files_active_actions?: boolean | null
    files_active_checks?: boolean | null
    deleted?: boolean | null
    gbif_occurrence_downloads?: Gbif_occurrence_downloadsCreateNestedManyWithoutProjectsInput
    gbif_occurrences?: Gbif_occurrencesCreateNestedManyWithoutProjectsInput
    gbif_taxa?: Gbif_taxaCreateNestedManyWithoutProjectsInput
    lists?: ListsCreateNestedManyWithoutProjectsInput
    observation_sources?: Observation_sourcesCreateNestedManyWithoutProjectsInput
    persons?: PersonsCreateNestedManyWithoutProjectsInput
    place_levels?: Place_levelsCreateNestedManyWithoutProjectsInput
    accounts?: AccountsCreateNestedOneWithoutProjectsInput
    subprojects?: SubprojectsCreateNestedManyWithoutProjectsInput
    taxonomies?: TaxonomiesCreateNestedManyWithoutProjectsInput
    tile_layers?: Tile_layersCreateNestedManyWithoutProjectsInput
    units?: UnitsCreateNestedManyWithoutProjectsInput
  }

  export type ProjectsUncheckedCreateWithoutProject_usersInput = {
    project_id: string
    account_id?: string | null
    name?: string | null
    label?: string | null
    type?: project_type | null
    subproject_name_singular?: string | null
    subproject_name_plural?: string | null
    subproject_order_by?: string | null
    places_label_by?: string | null
    places_order_by?: NullableJsonNullValueInput | InputJsonValue
    persons_label_by?: string | null
    persons_order_by?: string | null
    goal_reports_label_by?: string | null
    goal_reports_order_by?: string | null
    values_on_multiple_levels?: string | null
    multiple_action_values_on_same_level?: string | null
    multiple_check_values_on_same_level?: string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    files_offline?: boolean | null
    files_active_projects?: boolean | null
    files_active_subprojects?: boolean | null
    files_active_places?: boolean | null
    files_active_actions?: boolean | null
    files_active_checks?: boolean | null
    deleted?: boolean | null
    gbif_occurrence_downloads?: Gbif_occurrence_downloadsUncheckedCreateNestedManyWithoutProjectsInput
    gbif_occurrences?: Gbif_occurrencesUncheckedCreateNestedManyWithoutProjectsInput
    gbif_taxa?: Gbif_taxaUncheckedCreateNestedManyWithoutProjectsInput
    lists?: ListsUncheckedCreateNestedManyWithoutProjectsInput
    observation_sources?: Observation_sourcesUncheckedCreateNestedManyWithoutProjectsInput
    persons?: PersonsUncheckedCreateNestedManyWithoutProjectsInput
    place_levels?: Place_levelsUncheckedCreateNestedManyWithoutProjectsInput
    subprojects?: SubprojectsUncheckedCreateNestedManyWithoutProjectsInput
    taxonomies?: TaxonomiesUncheckedCreateNestedManyWithoutProjectsInput
    tile_layers?: Tile_layersUncheckedCreateNestedManyWithoutProjectsInput
    units?: UnitsUncheckedCreateNestedManyWithoutProjectsInput
  }

  export type ProjectsCreateOrConnectWithoutProject_usersInput = {
    where: ProjectsWhereUniqueInput
    create: XOR<ProjectsCreateWithoutProject_usersInput, ProjectsUncheckedCreateWithoutProject_usersInput>
  }

  export type UsersCreateWithoutProject_usersInput = {
    user_id: string
    email?: string | null
    auth_id?: string | null
    label_replace_by_generated_column?: string | null
    deleted?: boolean | null
    accounts?: AccountsCreateNestedManyWithoutUsersInput
    subproject_users?: Subproject_usersCreateNestedManyWithoutUsersInput
    ui_options?: Ui_optionsCreateNestedOneWithoutUsersInput
    user_messages?: User_messagesCreateNestedManyWithoutUsersInput
  }

  export type UsersUncheckedCreateWithoutProject_usersInput = {
    user_id: string
    email?: string | null
    auth_id?: string | null
    label_replace_by_generated_column?: string | null
    deleted?: boolean | null
    accounts?: AccountsUncheckedCreateNestedManyWithoutUsersInput
    subproject_users?: Subproject_usersUncheckedCreateNestedManyWithoutUsersInput
    ui_options?: Ui_optionsUncheckedCreateNestedOneWithoutUsersInput
    user_messages?: User_messagesUncheckedCreateNestedManyWithoutUsersInput
  }

  export type UsersCreateOrConnectWithoutProject_usersInput = {
    where: UsersWhereUniqueInput
    create: XOR<UsersCreateWithoutProject_usersInput, UsersUncheckedCreateWithoutProject_usersInput>
  }

  export type AccountsUpsertWithoutProject_usersInput = {
    update: XOR<AccountsUpdateWithoutProject_usersInput, AccountsUncheckedUpdateWithoutProject_usersInput>
    create: XOR<AccountsCreateWithoutProject_usersInput, AccountsUncheckedCreateWithoutProject_usersInput>
    where?: AccountsWhereInput
  }

  export type AccountsUpdateToOneWithWhereWithoutProject_usersInput = {
    where?: AccountsWhereInput
    data: XOR<AccountsUpdateWithoutProject_usersInput, AccountsUncheckedUpdateWithoutProject_usersInput>
  }

  export type AccountsUpdateWithoutProject_usersInput = {
    account_id?: StringFieldUpdateOperationsInput | string
    type?: NullableStringFieldUpdateOperationsInput | string | null
    period_start?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    period_end?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    projects_label_by?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    users?: UsersUpdateOneWithoutAccountsNestedInput
    gbif_occurrence_downloads?: Gbif_occurrence_downloadsUpdateManyWithoutAccountsNestedInput
    gbif_occurrences?: Gbif_occurrencesUpdateManyWithoutAccountsNestedInput
    gbif_taxa?: Gbif_taxaUpdateManyWithoutAccountsNestedInput
    goal_report_values?: Goal_report_valuesUpdateManyWithoutAccountsNestedInput
    goal_reports?: Goal_reportsUpdateManyWithoutAccountsNestedInput
    goals?: GoalsUpdateManyWithoutAccountsNestedInput
    list_values?: List_valuesUpdateManyWithoutAccountsNestedInput
    lists?: ListsUpdateManyWithoutAccountsNestedInput
    observation_sources?: Observation_sourcesUpdateManyWithoutAccountsNestedInput
    persons?: PersonsUpdateManyWithoutAccountsNestedInput
    place_levels?: Place_levelsUpdateManyWithoutAccountsNestedInput
    projects?: ProjectsUpdateManyWithoutAccountsNestedInput
    subproject_taxa?: Subproject_taxaUpdateManyWithoutAccountsNestedInput
    subproject_users?: Subproject_usersUpdateManyWithoutAccountsNestedInput
    subprojects?: SubprojectsUpdateManyWithoutAccountsNestedInput
    taxa?: TaxaUpdateManyWithoutAccountsNestedInput
    taxonomies?: TaxonomiesUpdateManyWithoutAccountsNestedInput
    tile_layers?: Tile_layersUpdateManyWithoutAccountsNestedInput
    ui_options?: Ui_optionsUpdateManyWithoutAccountsNestedInput
    units?: UnitsUpdateManyWithoutAccountsNestedInput
    user_messages?: User_messagesUpdateManyWithoutAccountsNestedInput
  }

  export type AccountsUncheckedUpdateWithoutProject_usersInput = {
    account_id?: StringFieldUpdateOperationsInput | string
    user_id?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    period_start?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    period_end?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    projects_label_by?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    gbif_occurrence_downloads?: Gbif_occurrence_downloadsUncheckedUpdateManyWithoutAccountsNestedInput
    gbif_occurrences?: Gbif_occurrencesUncheckedUpdateManyWithoutAccountsNestedInput
    gbif_taxa?: Gbif_taxaUncheckedUpdateManyWithoutAccountsNestedInput
    goal_report_values?: Goal_report_valuesUncheckedUpdateManyWithoutAccountsNestedInput
    goal_reports?: Goal_reportsUncheckedUpdateManyWithoutAccountsNestedInput
    goals?: GoalsUncheckedUpdateManyWithoutAccountsNestedInput
    list_values?: List_valuesUncheckedUpdateManyWithoutAccountsNestedInput
    lists?: ListsUncheckedUpdateManyWithoutAccountsNestedInput
    observation_sources?: Observation_sourcesUncheckedUpdateManyWithoutAccountsNestedInput
    persons?: PersonsUncheckedUpdateManyWithoutAccountsNestedInput
    place_levels?: Place_levelsUncheckedUpdateManyWithoutAccountsNestedInput
    projects?: ProjectsUncheckedUpdateManyWithoutAccountsNestedInput
    subproject_taxa?: Subproject_taxaUncheckedUpdateManyWithoutAccountsNestedInput
    subproject_users?: Subproject_usersUncheckedUpdateManyWithoutAccountsNestedInput
    subprojects?: SubprojectsUncheckedUpdateManyWithoutAccountsNestedInput
    taxa?: TaxaUncheckedUpdateManyWithoutAccountsNestedInput
    taxonomies?: TaxonomiesUncheckedUpdateManyWithoutAccountsNestedInput
    tile_layers?: Tile_layersUncheckedUpdateManyWithoutAccountsNestedInput
    ui_options?: Ui_optionsUncheckedUpdateManyWithoutAccountsNestedInput
    units?: UnitsUncheckedUpdateManyWithoutAccountsNestedInput
    user_messages?: User_messagesUncheckedUpdateManyWithoutAccountsNestedInput
  }

  export type ProjectsUpsertWithoutProject_usersInput = {
    update: XOR<ProjectsUpdateWithoutProject_usersInput, ProjectsUncheckedUpdateWithoutProject_usersInput>
    create: XOR<ProjectsCreateWithoutProject_usersInput, ProjectsUncheckedCreateWithoutProject_usersInput>
    where?: ProjectsWhereInput
  }

  export type ProjectsUpdateToOneWithWhereWithoutProject_usersInput = {
    where?: ProjectsWhereInput
    data: XOR<ProjectsUpdateWithoutProject_usersInput, ProjectsUncheckedUpdateWithoutProject_usersInput>
  }

  export type ProjectsUpdateWithoutProject_usersInput = {
    project_id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableEnumproject_typeFieldUpdateOperationsInput | project_type | null
    subproject_name_singular?: NullableStringFieldUpdateOperationsInput | string | null
    subproject_name_plural?: NullableStringFieldUpdateOperationsInput | string | null
    subproject_order_by?: NullableStringFieldUpdateOperationsInput | string | null
    places_label_by?: NullableStringFieldUpdateOperationsInput | string | null
    places_order_by?: NullableJsonNullValueInput | InputJsonValue
    persons_label_by?: NullableStringFieldUpdateOperationsInput | string | null
    persons_order_by?: NullableStringFieldUpdateOperationsInput | string | null
    goal_reports_label_by?: NullableStringFieldUpdateOperationsInput | string | null
    goal_reports_order_by?: NullableStringFieldUpdateOperationsInput | string | null
    values_on_multiple_levels?: NullableStringFieldUpdateOperationsInput | string | null
    multiple_action_values_on_same_level?: NullableStringFieldUpdateOperationsInput | string | null
    multiple_check_values_on_same_level?: NullableStringFieldUpdateOperationsInput | string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    files_offline?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_projects?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_subprojects?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_places?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_actions?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_checks?: NullableBoolFieldUpdateOperationsInput | boolean | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    gbif_occurrence_downloads?: Gbif_occurrence_downloadsUpdateManyWithoutProjectsNestedInput
    gbif_occurrences?: Gbif_occurrencesUpdateManyWithoutProjectsNestedInput
    gbif_taxa?: Gbif_taxaUpdateManyWithoutProjectsNestedInput
    lists?: ListsUpdateManyWithoutProjectsNestedInput
    observation_sources?: Observation_sourcesUpdateManyWithoutProjectsNestedInput
    persons?: PersonsUpdateManyWithoutProjectsNestedInput
    place_levels?: Place_levelsUpdateManyWithoutProjectsNestedInput
    accounts?: AccountsUpdateOneWithoutProjectsNestedInput
    subprojects?: SubprojectsUpdateManyWithoutProjectsNestedInput
    taxonomies?: TaxonomiesUpdateManyWithoutProjectsNestedInput
    tile_layers?: Tile_layersUpdateManyWithoutProjectsNestedInput
    units?: UnitsUpdateManyWithoutProjectsNestedInput
  }

  export type ProjectsUncheckedUpdateWithoutProject_usersInput = {
    project_id?: StringFieldUpdateOperationsInput | string
    account_id?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableEnumproject_typeFieldUpdateOperationsInput | project_type | null
    subproject_name_singular?: NullableStringFieldUpdateOperationsInput | string | null
    subproject_name_plural?: NullableStringFieldUpdateOperationsInput | string | null
    subproject_order_by?: NullableStringFieldUpdateOperationsInput | string | null
    places_label_by?: NullableStringFieldUpdateOperationsInput | string | null
    places_order_by?: NullableJsonNullValueInput | InputJsonValue
    persons_label_by?: NullableStringFieldUpdateOperationsInput | string | null
    persons_order_by?: NullableStringFieldUpdateOperationsInput | string | null
    goal_reports_label_by?: NullableStringFieldUpdateOperationsInput | string | null
    goal_reports_order_by?: NullableStringFieldUpdateOperationsInput | string | null
    values_on_multiple_levels?: NullableStringFieldUpdateOperationsInput | string | null
    multiple_action_values_on_same_level?: NullableStringFieldUpdateOperationsInput | string | null
    multiple_check_values_on_same_level?: NullableStringFieldUpdateOperationsInput | string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    files_offline?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_projects?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_subprojects?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_places?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_actions?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_checks?: NullableBoolFieldUpdateOperationsInput | boolean | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    gbif_occurrence_downloads?: Gbif_occurrence_downloadsUncheckedUpdateManyWithoutProjectsNestedInput
    gbif_occurrences?: Gbif_occurrencesUncheckedUpdateManyWithoutProjectsNestedInput
    gbif_taxa?: Gbif_taxaUncheckedUpdateManyWithoutProjectsNestedInput
    lists?: ListsUncheckedUpdateManyWithoutProjectsNestedInput
    observation_sources?: Observation_sourcesUncheckedUpdateManyWithoutProjectsNestedInput
    persons?: PersonsUncheckedUpdateManyWithoutProjectsNestedInput
    place_levels?: Place_levelsUncheckedUpdateManyWithoutProjectsNestedInput
    subprojects?: SubprojectsUncheckedUpdateManyWithoutProjectsNestedInput
    taxonomies?: TaxonomiesUncheckedUpdateManyWithoutProjectsNestedInput
    tile_layers?: Tile_layersUncheckedUpdateManyWithoutProjectsNestedInput
    units?: UnitsUncheckedUpdateManyWithoutProjectsNestedInput
  }

  export type UsersUpsertWithoutProject_usersInput = {
    update: XOR<UsersUpdateWithoutProject_usersInput, UsersUncheckedUpdateWithoutProject_usersInput>
    create: XOR<UsersCreateWithoutProject_usersInput, UsersUncheckedCreateWithoutProject_usersInput>
    where?: UsersWhereInput
  }

  export type UsersUpdateToOneWithWhereWithoutProject_usersInput = {
    where?: UsersWhereInput
    data: XOR<UsersUpdateWithoutProject_usersInput, UsersUncheckedUpdateWithoutProject_usersInput>
  }

  export type UsersUpdateWithoutProject_usersInput = {
    user_id?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    auth_id?: NullableStringFieldUpdateOperationsInput | string | null
    label_replace_by_generated_column?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    accounts?: AccountsUpdateManyWithoutUsersNestedInput
    subproject_users?: Subproject_usersUpdateManyWithoutUsersNestedInput
    ui_options?: Ui_optionsUpdateOneWithoutUsersNestedInput
    user_messages?: User_messagesUpdateManyWithoutUsersNestedInput
  }

  export type UsersUncheckedUpdateWithoutProject_usersInput = {
    user_id?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    auth_id?: NullableStringFieldUpdateOperationsInput | string | null
    label_replace_by_generated_column?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    accounts?: AccountsUncheckedUpdateManyWithoutUsersNestedInput
    subproject_users?: Subproject_usersUncheckedUpdateManyWithoutUsersNestedInput
    ui_options?: Ui_optionsUncheckedUpdateOneWithoutUsersNestedInput
    user_messages?: User_messagesUncheckedUpdateManyWithoutUsersNestedInput
  }

  export type Gbif_occurrence_downloadsCreateWithoutProjectsInput = {
    gbif_occurrence_download_id: string
    gbif_table?: gbif_table | null
    filters?: NullableJsonNullValueInput | InputJsonValue
    created_time?: Date | string | null
    download_key?: string | null
    error?: string | null
    inserted_time?: Date | string | null
    inserted_count?: number | null
    attribution?: string | null
    deleted?: boolean | null
    accounts?: AccountsCreateNestedOneWithoutGbif_occurrence_downloadsInput
    subprojects?: SubprojectsCreateNestedOneWithoutGbif_occurrence_downloadsInput
  }

  export type Gbif_occurrence_downloadsUncheckedCreateWithoutProjectsInput = {
    gbif_occurrence_download_id: string
    account_id?: string | null
    subproject_id?: string | null
    gbif_table?: gbif_table | null
    filters?: NullableJsonNullValueInput | InputJsonValue
    created_time?: Date | string | null
    download_key?: string | null
    error?: string | null
    inserted_time?: Date | string | null
    inserted_count?: number | null
    attribution?: string | null
    deleted?: boolean | null
  }

  export type Gbif_occurrence_downloadsCreateOrConnectWithoutProjectsInput = {
    where: Gbif_occurrence_downloadsWhereUniqueInput
    create: XOR<Gbif_occurrence_downloadsCreateWithoutProjectsInput, Gbif_occurrence_downloadsUncheckedCreateWithoutProjectsInput>
  }

  export type Gbif_occurrence_downloadsCreateManyProjectsInputEnvelope = {
    data: Enumerable<Gbif_occurrence_downloadsCreateManyProjectsInput>
    skipDuplicates?: boolean
  }

  export type Gbif_occurrencesCreateWithoutProjectsInput = {
    gbif_occurrence_id: string
    gbif_data?: NullableJsonNullValueInput | InputJsonValue
    label?: string | null
    accounts?: AccountsCreateNestedOneWithoutGbif_occurrencesInput
    subprojects?: SubprojectsCreateNestedOneWithoutGbif_occurrencesInput
  }

  export type Gbif_occurrencesUncheckedCreateWithoutProjectsInput = {
    gbif_occurrence_id: string
    account_id?: string | null
    subproject_id?: string | null
    gbif_data?: NullableJsonNullValueInput | InputJsonValue
    label?: string | null
  }

  export type Gbif_occurrencesCreateOrConnectWithoutProjectsInput = {
    where: Gbif_occurrencesWhereUniqueInput
    create: XOR<Gbif_occurrencesCreateWithoutProjectsInput, Gbif_occurrencesUncheckedCreateWithoutProjectsInput>
  }

  export type Gbif_occurrencesCreateManyProjectsInputEnvelope = {
    data: Enumerable<Gbif_occurrencesCreateManyProjectsInput>
    skipDuplicates?: boolean
  }

  export type Gbif_taxaCreateWithoutProjectsInput = {
    gbif_taxon_id: string
    gbif_data?: NullableJsonNullValueInput | InputJsonValue
    label?: string | null
    accounts?: AccountsCreateNestedOneWithoutGbif_taxaInput
  }

  export type Gbif_taxaUncheckedCreateWithoutProjectsInput = {
    gbif_taxon_id: string
    account_id?: string | null
    gbif_data?: NullableJsonNullValueInput | InputJsonValue
    label?: string | null
  }

  export type Gbif_taxaCreateOrConnectWithoutProjectsInput = {
    where: Gbif_taxaWhereUniqueInput
    create: XOR<Gbif_taxaCreateWithoutProjectsInput, Gbif_taxaUncheckedCreateWithoutProjectsInput>
  }

  export type Gbif_taxaCreateManyProjectsInputEnvelope = {
    data: Enumerable<Gbif_taxaCreateManyProjectsInput>
    skipDuplicates?: boolean
  }

  export type ListsCreateWithoutProjectsInput = {
    list_id: string
    name?: string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    obsolete?: boolean | null
    label_replace_by_generated_column?: string | null
    deleted?: boolean | null
    list_values?: List_valuesCreateNestedManyWithoutListsInput
    accounts?: AccountsCreateNestedOneWithoutListsInput
    units?: UnitsCreateNestedManyWithoutListsInput
  }

  export type ListsUncheckedCreateWithoutProjectsInput = {
    list_id: string
    account_id?: string | null
    name?: string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    obsolete?: boolean | null
    label_replace_by_generated_column?: string | null
    deleted?: boolean | null
    list_values?: List_valuesUncheckedCreateNestedManyWithoutListsInput
    units?: UnitsUncheckedCreateNestedManyWithoutListsInput
  }

  export type ListsCreateOrConnectWithoutProjectsInput = {
    where: ListsWhereUniqueInput
    create: XOR<ListsCreateWithoutProjectsInput, ListsUncheckedCreateWithoutProjectsInput>
  }

  export type ListsCreateManyProjectsInputEnvelope = {
    data: Enumerable<ListsCreateManyProjectsInput>
    skipDuplicates?: boolean
  }

  export type Observation_sourcesCreateWithoutProjectsInput = {
    observation_source_id: string
    name?: string | null
    url?: string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label_replace_by_generated_column?: string | null
    deleted?: boolean | null
    accounts?: AccountsCreateNestedOneWithoutObservation_sourcesInput
  }

  export type Observation_sourcesUncheckedCreateWithoutProjectsInput = {
    observation_source_id: string
    account_id?: string | null
    name?: string | null
    url?: string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label_replace_by_generated_column?: string | null
    deleted?: boolean | null
  }

  export type Observation_sourcesCreateOrConnectWithoutProjectsInput = {
    where: Observation_sourcesWhereUniqueInput
    create: XOR<Observation_sourcesCreateWithoutProjectsInput, Observation_sourcesUncheckedCreateWithoutProjectsInput>
  }

  export type Observation_sourcesCreateManyProjectsInputEnvelope = {
    data: Enumerable<Observation_sourcesCreateManyProjectsInput>
    skipDuplicates?: boolean
  }

  export type PersonsCreateWithoutProjectsInput = {
    person_id: string
    email?: string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label_replace_by_generated_column?: string | null
    deleted?: boolean | null
    accounts?: AccountsCreateNestedOneWithoutPersonsInput
  }

  export type PersonsUncheckedCreateWithoutProjectsInput = {
    person_id: string
    account_id?: string | null
    email?: string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label_replace_by_generated_column?: string | null
    deleted?: boolean | null
  }

  export type PersonsCreateOrConnectWithoutProjectsInput = {
    where: PersonsWhereUniqueInput
    create: XOR<PersonsCreateWithoutProjectsInput, PersonsUncheckedCreateWithoutProjectsInput>
  }

  export type PersonsCreateManyProjectsInputEnvelope = {
    data: Enumerable<PersonsCreateManyProjectsInput>
    skipDuplicates?: boolean
  }

  export type Place_levelsCreateWithoutProjectsInput = {
    place_level_id: string
    level?: number | null
    name_singular?: string | null
    name_plural?: string | null
    name_short?: string | null
    reports?: boolean | null
    report_values?: boolean | null
    actions?: boolean | null
    action_values?: boolean | null
    action_reports?: boolean | null
    checks?: boolean | null
    check_values?: boolean | null
    check_taxa?: boolean | null
    observations?: boolean | null
    label_replace_by_generated_column?: string | null
    deleted?: boolean | null
    accounts?: AccountsCreateNestedOneWithoutPlace_levelsInput
  }

  export type Place_levelsUncheckedCreateWithoutProjectsInput = {
    place_level_id: string
    account_id?: string | null
    level?: number | null
    name_singular?: string | null
    name_plural?: string | null
    name_short?: string | null
    reports?: boolean | null
    report_values?: boolean | null
    actions?: boolean | null
    action_values?: boolean | null
    action_reports?: boolean | null
    checks?: boolean | null
    check_values?: boolean | null
    check_taxa?: boolean | null
    observations?: boolean | null
    label_replace_by_generated_column?: string | null
    deleted?: boolean | null
  }

  export type Place_levelsCreateOrConnectWithoutProjectsInput = {
    where: Place_levelsWhereUniqueInput
    create: XOR<Place_levelsCreateWithoutProjectsInput, Place_levelsUncheckedCreateWithoutProjectsInput>
  }

  export type Place_levelsCreateManyProjectsInputEnvelope = {
    data: Enumerable<Place_levelsCreateManyProjectsInput>
    skipDuplicates?: boolean
  }

  export type Project_usersCreateWithoutProjectsInput = {
    project_user_id: string
    role?: string | null
    label?: string | null
    deleted?: boolean | null
    accounts?: AccountsCreateNestedOneWithoutProject_usersInput
    users?: UsersCreateNestedOneWithoutProject_usersInput
  }

  export type Project_usersUncheckedCreateWithoutProjectsInput = {
    project_user_id: string
    account_id?: string | null
    user_id?: string | null
    role?: string | null
    label?: string | null
    deleted?: boolean | null
  }

  export type Project_usersCreateOrConnectWithoutProjectsInput = {
    where: Project_usersWhereUniqueInput
    create: XOR<Project_usersCreateWithoutProjectsInput, Project_usersUncheckedCreateWithoutProjectsInput>
  }

  export type Project_usersCreateManyProjectsInputEnvelope = {
    data: Enumerable<Project_usersCreateManyProjectsInput>
    skipDuplicates?: boolean
  }

  export type AccountsCreateWithoutProjectsInput = {
    account_id: string
    type?: string | null
    period_start?: Date | string | null
    period_end?: Date | string | null
    projects_label_by?: string | null
    label?: string | null
    users?: UsersCreateNestedOneWithoutAccountsInput
    gbif_occurrence_downloads?: Gbif_occurrence_downloadsCreateNestedManyWithoutAccountsInput
    gbif_occurrences?: Gbif_occurrencesCreateNestedManyWithoutAccountsInput
    gbif_taxa?: Gbif_taxaCreateNestedManyWithoutAccountsInput
    goal_report_values?: Goal_report_valuesCreateNestedManyWithoutAccountsInput
    goal_reports?: Goal_reportsCreateNestedManyWithoutAccountsInput
    goals?: GoalsCreateNestedManyWithoutAccountsInput
    list_values?: List_valuesCreateNestedManyWithoutAccountsInput
    lists?: ListsCreateNestedManyWithoutAccountsInput
    observation_sources?: Observation_sourcesCreateNestedManyWithoutAccountsInput
    persons?: PersonsCreateNestedManyWithoutAccountsInput
    place_levels?: Place_levelsCreateNestedManyWithoutAccountsInput
    project_users?: Project_usersCreateNestedManyWithoutAccountsInput
    subproject_taxa?: Subproject_taxaCreateNestedManyWithoutAccountsInput
    subproject_users?: Subproject_usersCreateNestedManyWithoutAccountsInput
    subprojects?: SubprojectsCreateNestedManyWithoutAccountsInput
    taxa?: TaxaCreateNestedManyWithoutAccountsInput
    taxonomies?: TaxonomiesCreateNestedManyWithoutAccountsInput
    tile_layers?: Tile_layersCreateNestedManyWithoutAccountsInput
    ui_options?: Ui_optionsCreateNestedManyWithoutAccountsInput
    units?: UnitsCreateNestedManyWithoutAccountsInput
    user_messages?: User_messagesCreateNestedManyWithoutAccountsInput
  }

  export type AccountsUncheckedCreateWithoutProjectsInput = {
    account_id: string
    user_id?: string | null
    type?: string | null
    period_start?: Date | string | null
    period_end?: Date | string | null
    projects_label_by?: string | null
    label?: string | null
    gbif_occurrence_downloads?: Gbif_occurrence_downloadsUncheckedCreateNestedManyWithoutAccountsInput
    gbif_occurrences?: Gbif_occurrencesUncheckedCreateNestedManyWithoutAccountsInput
    gbif_taxa?: Gbif_taxaUncheckedCreateNestedManyWithoutAccountsInput
    goal_report_values?: Goal_report_valuesUncheckedCreateNestedManyWithoutAccountsInput
    goal_reports?: Goal_reportsUncheckedCreateNestedManyWithoutAccountsInput
    goals?: GoalsUncheckedCreateNestedManyWithoutAccountsInput
    list_values?: List_valuesUncheckedCreateNestedManyWithoutAccountsInput
    lists?: ListsUncheckedCreateNestedManyWithoutAccountsInput
    observation_sources?: Observation_sourcesUncheckedCreateNestedManyWithoutAccountsInput
    persons?: PersonsUncheckedCreateNestedManyWithoutAccountsInput
    place_levels?: Place_levelsUncheckedCreateNestedManyWithoutAccountsInput
    project_users?: Project_usersUncheckedCreateNestedManyWithoutAccountsInput
    subproject_taxa?: Subproject_taxaUncheckedCreateNestedManyWithoutAccountsInput
    subproject_users?: Subproject_usersUncheckedCreateNestedManyWithoutAccountsInput
    subprojects?: SubprojectsUncheckedCreateNestedManyWithoutAccountsInput
    taxa?: TaxaUncheckedCreateNestedManyWithoutAccountsInput
    taxonomies?: TaxonomiesUncheckedCreateNestedManyWithoutAccountsInput
    tile_layers?: Tile_layersUncheckedCreateNestedManyWithoutAccountsInput
    ui_options?: Ui_optionsUncheckedCreateNestedManyWithoutAccountsInput
    units?: UnitsUncheckedCreateNestedManyWithoutAccountsInput
    user_messages?: User_messagesUncheckedCreateNestedManyWithoutAccountsInput
  }

  export type AccountsCreateOrConnectWithoutProjectsInput = {
    where: AccountsWhereUniqueInput
    create: XOR<AccountsCreateWithoutProjectsInput, AccountsUncheckedCreateWithoutProjectsInput>
  }

  export type SubprojectsCreateWithoutProjectsInput = {
    subproject_id: string
    name?: string | null
    label_replace_by_generated_column?: string | null
    start_year?: number | null
    end_year?: number | null
    data?: NullableJsonNullValueInput | InputJsonValue
    deleted?: boolean | null
    gbif_occurrence_downloads?: Gbif_occurrence_downloadsCreateNestedManyWithoutSubprojectsInput
    gbif_occurrences?: Gbif_occurrencesCreateNestedManyWithoutSubprojectsInput
    goals?: GoalsCreateNestedManyWithoutSubprojectsInput
    subproject_taxa?: Subproject_taxaCreateNestedManyWithoutSubprojectsInput
    subproject_users?: Subproject_usersCreateNestedManyWithoutSubprojectsInput
    accounts?: AccountsCreateNestedOneWithoutSubprojectsInput
  }

  export type SubprojectsUncheckedCreateWithoutProjectsInput = {
    subproject_id: string
    account_id?: string | null
    name?: string | null
    label_replace_by_generated_column?: string | null
    start_year?: number | null
    end_year?: number | null
    data?: NullableJsonNullValueInput | InputJsonValue
    deleted?: boolean | null
    gbif_occurrence_downloads?: Gbif_occurrence_downloadsUncheckedCreateNestedManyWithoutSubprojectsInput
    gbif_occurrences?: Gbif_occurrencesUncheckedCreateNestedManyWithoutSubprojectsInput
    goals?: GoalsUncheckedCreateNestedManyWithoutSubprojectsInput
    subproject_taxa?: Subproject_taxaUncheckedCreateNestedManyWithoutSubprojectsInput
    subproject_users?: Subproject_usersUncheckedCreateNestedManyWithoutSubprojectsInput
  }

  export type SubprojectsCreateOrConnectWithoutProjectsInput = {
    where: SubprojectsWhereUniqueInput
    create: XOR<SubprojectsCreateWithoutProjectsInput, SubprojectsUncheckedCreateWithoutProjectsInput>
  }

  export type SubprojectsCreateManyProjectsInputEnvelope = {
    data: Enumerable<SubprojectsCreateManyProjectsInput>
    skipDuplicates?: boolean
  }

  export type TaxonomiesCreateWithoutProjectsInput = {
    taxonomy_id: string
    type?: taxonomy_type | null
    name?: string | null
    url?: string | null
    obsolete?: boolean | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label_replace_by_generated_column?: string | null
    deleted?: boolean | null
    taxa?: TaxaCreateNestedManyWithoutTaxonomiesInput
    accounts?: AccountsCreateNestedOneWithoutTaxonomiesInput
  }

  export type TaxonomiesUncheckedCreateWithoutProjectsInput = {
    taxonomy_id: string
    account_id?: string | null
    type?: taxonomy_type | null
    name?: string | null
    url?: string | null
    obsolete?: boolean | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label_replace_by_generated_column?: string | null
    deleted?: boolean | null
    taxa?: TaxaUncheckedCreateNestedManyWithoutTaxonomiesInput
  }

  export type TaxonomiesCreateOrConnectWithoutProjectsInput = {
    where: TaxonomiesWhereUniqueInput
    create: XOR<TaxonomiesCreateWithoutProjectsInput, TaxonomiesUncheckedCreateWithoutProjectsInput>
  }

  export type TaxonomiesCreateManyProjectsInputEnvelope = {
    data: Enumerable<TaxonomiesCreateManyProjectsInput>
    skipDuplicates?: boolean
  }

  export type Tile_layersCreateWithoutProjectsInput = {
    tile_layer_id: string
    label?: string | null
    sort?: number | null
    active?: boolean | null
    type?: tile_layer_type_enum | null
    wmts_url_template?: string | null
    wmts_subdomains?: NullableJsonNullValueInput | InputJsonValue
    wms_base_url?: string | null
    wms_format?: NullableJsonNullValueInput | InputJsonValue
    wms_layer?: NullableJsonNullValueInput | InputJsonValue
    wms_parameters?: NullableJsonNullValueInput | InputJsonValue
    wms_styles?: NullableJsonNullValueInput | InputJsonValue
    wms_transparent?: boolean | null
    wms_version?: string | null
    wms_info_format?: NullableJsonNullValueInput | InputJsonValue
    wms_legend?: NullableJsonNullValueInput | InputJsonValue
    max_zoom?: number | null
    min_zoom?: number | null
    opacity_percent?: number | null
    grayscale?: boolean | null
    local_data_size?: number | null
    local_data_bounds?: NullableJsonNullValueInput | InputJsonValue
    deleted?: boolean | null
    accounts?: AccountsCreateNestedOneWithoutTile_layersInput
  }

  export type Tile_layersUncheckedCreateWithoutProjectsInput = {
    tile_layer_id: string
    account_id?: string | null
    label?: string | null
    sort?: number | null
    active?: boolean | null
    type?: tile_layer_type_enum | null
    wmts_url_template?: string | null
    wmts_subdomains?: NullableJsonNullValueInput | InputJsonValue
    wms_base_url?: string | null
    wms_format?: NullableJsonNullValueInput | InputJsonValue
    wms_layer?: NullableJsonNullValueInput | InputJsonValue
    wms_parameters?: NullableJsonNullValueInput | InputJsonValue
    wms_styles?: NullableJsonNullValueInput | InputJsonValue
    wms_transparent?: boolean | null
    wms_version?: string | null
    wms_info_format?: NullableJsonNullValueInput | InputJsonValue
    wms_legend?: NullableJsonNullValueInput | InputJsonValue
    max_zoom?: number | null
    min_zoom?: number | null
    opacity_percent?: number | null
    grayscale?: boolean | null
    local_data_size?: number | null
    local_data_bounds?: NullableJsonNullValueInput | InputJsonValue
    deleted?: boolean | null
  }

  export type Tile_layersCreateOrConnectWithoutProjectsInput = {
    where: Tile_layersWhereUniqueInput
    create: XOR<Tile_layersCreateWithoutProjectsInput, Tile_layersUncheckedCreateWithoutProjectsInput>
  }

  export type Tile_layersCreateManyProjectsInputEnvelope = {
    data: Enumerable<Tile_layersCreateManyProjectsInput>
    skipDuplicates?: boolean
  }

  export type UnitsCreateWithoutProjectsInput = {
    unit_id: string
    use_for_action_values?: boolean | null
    use_for_action_report_values?: boolean | null
    use_for_check_values?: boolean | null
    use_for_place_report_values?: boolean | null
    use_for_goal_report_values?: boolean | null
    use_for_subproject_taxa?: boolean | null
    use_for_check_taxa?: boolean | null
    name?: string | null
    summable?: boolean | null
    sort?: number | null
    type?: unit_type | null
    label_replace_by_generated_column?: string | null
    deleted?: boolean | null
    goal_report_values?: Goal_report_valuesCreateNestedManyWithoutUnitsInput
    accounts?: AccountsCreateNestedOneWithoutUnitsInput
    lists?: ListsCreateNestedOneWithoutUnitsInput
  }

  export type UnitsUncheckedCreateWithoutProjectsInput = {
    unit_id: string
    account_id?: string | null
    use_for_action_values?: boolean | null
    use_for_action_report_values?: boolean | null
    use_for_check_values?: boolean | null
    use_for_place_report_values?: boolean | null
    use_for_goal_report_values?: boolean | null
    use_for_subproject_taxa?: boolean | null
    use_for_check_taxa?: boolean | null
    name?: string | null
    summable?: boolean | null
    sort?: number | null
    type?: unit_type | null
    list_id?: string | null
    label_replace_by_generated_column?: string | null
    deleted?: boolean | null
    goal_report_values?: Goal_report_valuesUncheckedCreateNestedManyWithoutUnitsInput
  }

  export type UnitsCreateOrConnectWithoutProjectsInput = {
    where: UnitsWhereUniqueInput
    create: XOR<UnitsCreateWithoutProjectsInput, UnitsUncheckedCreateWithoutProjectsInput>
  }

  export type UnitsCreateManyProjectsInputEnvelope = {
    data: Enumerable<UnitsCreateManyProjectsInput>
    skipDuplicates?: boolean
  }

  export type Gbif_occurrence_downloadsUpsertWithWhereUniqueWithoutProjectsInput = {
    where: Gbif_occurrence_downloadsWhereUniqueInput
    update: XOR<Gbif_occurrence_downloadsUpdateWithoutProjectsInput, Gbif_occurrence_downloadsUncheckedUpdateWithoutProjectsInput>
    create: XOR<Gbif_occurrence_downloadsCreateWithoutProjectsInput, Gbif_occurrence_downloadsUncheckedCreateWithoutProjectsInput>
  }

  export type Gbif_occurrence_downloadsUpdateWithWhereUniqueWithoutProjectsInput = {
    where: Gbif_occurrence_downloadsWhereUniqueInput
    data: XOR<Gbif_occurrence_downloadsUpdateWithoutProjectsInput, Gbif_occurrence_downloadsUncheckedUpdateWithoutProjectsInput>
  }

  export type Gbif_occurrence_downloadsUpdateManyWithWhereWithoutProjectsInput = {
    where: Gbif_occurrence_downloadsScalarWhereInput
    data: XOR<Gbif_occurrence_downloadsUpdateManyMutationInput, Gbif_occurrence_downloadsUncheckedUpdateManyWithoutProjectsInput>
  }

  export type Gbif_occurrencesUpsertWithWhereUniqueWithoutProjectsInput = {
    where: Gbif_occurrencesWhereUniqueInput
    update: XOR<Gbif_occurrencesUpdateWithoutProjectsInput, Gbif_occurrencesUncheckedUpdateWithoutProjectsInput>
    create: XOR<Gbif_occurrencesCreateWithoutProjectsInput, Gbif_occurrencesUncheckedCreateWithoutProjectsInput>
  }

  export type Gbif_occurrencesUpdateWithWhereUniqueWithoutProjectsInput = {
    where: Gbif_occurrencesWhereUniqueInput
    data: XOR<Gbif_occurrencesUpdateWithoutProjectsInput, Gbif_occurrencesUncheckedUpdateWithoutProjectsInput>
  }

  export type Gbif_occurrencesUpdateManyWithWhereWithoutProjectsInput = {
    where: Gbif_occurrencesScalarWhereInput
    data: XOR<Gbif_occurrencesUpdateManyMutationInput, Gbif_occurrencesUncheckedUpdateManyWithoutProjectsInput>
  }

  export type Gbif_taxaUpsertWithWhereUniqueWithoutProjectsInput = {
    where: Gbif_taxaWhereUniqueInput
    update: XOR<Gbif_taxaUpdateWithoutProjectsInput, Gbif_taxaUncheckedUpdateWithoutProjectsInput>
    create: XOR<Gbif_taxaCreateWithoutProjectsInput, Gbif_taxaUncheckedCreateWithoutProjectsInput>
  }

  export type Gbif_taxaUpdateWithWhereUniqueWithoutProjectsInput = {
    where: Gbif_taxaWhereUniqueInput
    data: XOR<Gbif_taxaUpdateWithoutProjectsInput, Gbif_taxaUncheckedUpdateWithoutProjectsInput>
  }

  export type Gbif_taxaUpdateManyWithWhereWithoutProjectsInput = {
    where: Gbif_taxaScalarWhereInput
    data: XOR<Gbif_taxaUpdateManyMutationInput, Gbif_taxaUncheckedUpdateManyWithoutProjectsInput>
  }

  export type ListsUpsertWithWhereUniqueWithoutProjectsInput = {
    where: ListsWhereUniqueInput
    update: XOR<ListsUpdateWithoutProjectsInput, ListsUncheckedUpdateWithoutProjectsInput>
    create: XOR<ListsCreateWithoutProjectsInput, ListsUncheckedCreateWithoutProjectsInput>
  }

  export type ListsUpdateWithWhereUniqueWithoutProjectsInput = {
    where: ListsWhereUniqueInput
    data: XOR<ListsUpdateWithoutProjectsInput, ListsUncheckedUpdateWithoutProjectsInput>
  }

  export type ListsUpdateManyWithWhereWithoutProjectsInput = {
    where: ListsScalarWhereInput
    data: XOR<ListsUpdateManyMutationInput, ListsUncheckedUpdateManyWithoutProjectsInput>
  }

  export type Observation_sourcesUpsertWithWhereUniqueWithoutProjectsInput = {
    where: Observation_sourcesWhereUniqueInput
    update: XOR<Observation_sourcesUpdateWithoutProjectsInput, Observation_sourcesUncheckedUpdateWithoutProjectsInput>
    create: XOR<Observation_sourcesCreateWithoutProjectsInput, Observation_sourcesUncheckedCreateWithoutProjectsInput>
  }

  export type Observation_sourcesUpdateWithWhereUniqueWithoutProjectsInput = {
    where: Observation_sourcesWhereUniqueInput
    data: XOR<Observation_sourcesUpdateWithoutProjectsInput, Observation_sourcesUncheckedUpdateWithoutProjectsInput>
  }

  export type Observation_sourcesUpdateManyWithWhereWithoutProjectsInput = {
    where: Observation_sourcesScalarWhereInput
    data: XOR<Observation_sourcesUpdateManyMutationInput, Observation_sourcesUncheckedUpdateManyWithoutProjectsInput>
  }

  export type PersonsUpsertWithWhereUniqueWithoutProjectsInput = {
    where: PersonsWhereUniqueInput
    update: XOR<PersonsUpdateWithoutProjectsInput, PersonsUncheckedUpdateWithoutProjectsInput>
    create: XOR<PersonsCreateWithoutProjectsInput, PersonsUncheckedCreateWithoutProjectsInput>
  }

  export type PersonsUpdateWithWhereUniqueWithoutProjectsInput = {
    where: PersonsWhereUniqueInput
    data: XOR<PersonsUpdateWithoutProjectsInput, PersonsUncheckedUpdateWithoutProjectsInput>
  }

  export type PersonsUpdateManyWithWhereWithoutProjectsInput = {
    where: PersonsScalarWhereInput
    data: XOR<PersonsUpdateManyMutationInput, PersonsUncheckedUpdateManyWithoutProjectsInput>
  }

  export type Place_levelsUpsertWithWhereUniqueWithoutProjectsInput = {
    where: Place_levelsWhereUniqueInput
    update: XOR<Place_levelsUpdateWithoutProjectsInput, Place_levelsUncheckedUpdateWithoutProjectsInput>
    create: XOR<Place_levelsCreateWithoutProjectsInput, Place_levelsUncheckedCreateWithoutProjectsInput>
  }

  export type Place_levelsUpdateWithWhereUniqueWithoutProjectsInput = {
    where: Place_levelsWhereUniqueInput
    data: XOR<Place_levelsUpdateWithoutProjectsInput, Place_levelsUncheckedUpdateWithoutProjectsInput>
  }

  export type Place_levelsUpdateManyWithWhereWithoutProjectsInput = {
    where: Place_levelsScalarWhereInput
    data: XOR<Place_levelsUpdateManyMutationInput, Place_levelsUncheckedUpdateManyWithoutProjectsInput>
  }

  export type Project_usersUpsertWithWhereUniqueWithoutProjectsInput = {
    where: Project_usersWhereUniqueInput
    update: XOR<Project_usersUpdateWithoutProjectsInput, Project_usersUncheckedUpdateWithoutProjectsInput>
    create: XOR<Project_usersCreateWithoutProjectsInput, Project_usersUncheckedCreateWithoutProjectsInput>
  }

  export type Project_usersUpdateWithWhereUniqueWithoutProjectsInput = {
    where: Project_usersWhereUniqueInput
    data: XOR<Project_usersUpdateWithoutProjectsInput, Project_usersUncheckedUpdateWithoutProjectsInput>
  }

  export type Project_usersUpdateManyWithWhereWithoutProjectsInput = {
    where: Project_usersScalarWhereInput
    data: XOR<Project_usersUpdateManyMutationInput, Project_usersUncheckedUpdateManyWithoutProjectsInput>
  }

  export type AccountsUpsertWithoutProjectsInput = {
    update: XOR<AccountsUpdateWithoutProjectsInput, AccountsUncheckedUpdateWithoutProjectsInput>
    create: XOR<AccountsCreateWithoutProjectsInput, AccountsUncheckedCreateWithoutProjectsInput>
    where?: AccountsWhereInput
  }

  export type AccountsUpdateToOneWithWhereWithoutProjectsInput = {
    where?: AccountsWhereInput
    data: XOR<AccountsUpdateWithoutProjectsInput, AccountsUncheckedUpdateWithoutProjectsInput>
  }

  export type AccountsUpdateWithoutProjectsInput = {
    account_id?: StringFieldUpdateOperationsInput | string
    type?: NullableStringFieldUpdateOperationsInput | string | null
    period_start?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    period_end?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    projects_label_by?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    users?: UsersUpdateOneWithoutAccountsNestedInput
    gbif_occurrence_downloads?: Gbif_occurrence_downloadsUpdateManyWithoutAccountsNestedInput
    gbif_occurrences?: Gbif_occurrencesUpdateManyWithoutAccountsNestedInput
    gbif_taxa?: Gbif_taxaUpdateManyWithoutAccountsNestedInput
    goal_report_values?: Goal_report_valuesUpdateManyWithoutAccountsNestedInput
    goal_reports?: Goal_reportsUpdateManyWithoutAccountsNestedInput
    goals?: GoalsUpdateManyWithoutAccountsNestedInput
    list_values?: List_valuesUpdateManyWithoutAccountsNestedInput
    lists?: ListsUpdateManyWithoutAccountsNestedInput
    observation_sources?: Observation_sourcesUpdateManyWithoutAccountsNestedInput
    persons?: PersonsUpdateManyWithoutAccountsNestedInput
    place_levels?: Place_levelsUpdateManyWithoutAccountsNestedInput
    project_users?: Project_usersUpdateManyWithoutAccountsNestedInput
    subproject_taxa?: Subproject_taxaUpdateManyWithoutAccountsNestedInput
    subproject_users?: Subproject_usersUpdateManyWithoutAccountsNestedInput
    subprojects?: SubprojectsUpdateManyWithoutAccountsNestedInput
    taxa?: TaxaUpdateManyWithoutAccountsNestedInput
    taxonomies?: TaxonomiesUpdateManyWithoutAccountsNestedInput
    tile_layers?: Tile_layersUpdateManyWithoutAccountsNestedInput
    ui_options?: Ui_optionsUpdateManyWithoutAccountsNestedInput
    units?: UnitsUpdateManyWithoutAccountsNestedInput
    user_messages?: User_messagesUpdateManyWithoutAccountsNestedInput
  }

  export type AccountsUncheckedUpdateWithoutProjectsInput = {
    account_id?: StringFieldUpdateOperationsInput | string
    user_id?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    period_start?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    period_end?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    projects_label_by?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    gbif_occurrence_downloads?: Gbif_occurrence_downloadsUncheckedUpdateManyWithoutAccountsNestedInput
    gbif_occurrences?: Gbif_occurrencesUncheckedUpdateManyWithoutAccountsNestedInput
    gbif_taxa?: Gbif_taxaUncheckedUpdateManyWithoutAccountsNestedInput
    goal_report_values?: Goal_report_valuesUncheckedUpdateManyWithoutAccountsNestedInput
    goal_reports?: Goal_reportsUncheckedUpdateManyWithoutAccountsNestedInput
    goals?: GoalsUncheckedUpdateManyWithoutAccountsNestedInput
    list_values?: List_valuesUncheckedUpdateManyWithoutAccountsNestedInput
    lists?: ListsUncheckedUpdateManyWithoutAccountsNestedInput
    observation_sources?: Observation_sourcesUncheckedUpdateManyWithoutAccountsNestedInput
    persons?: PersonsUncheckedUpdateManyWithoutAccountsNestedInput
    place_levels?: Place_levelsUncheckedUpdateManyWithoutAccountsNestedInput
    project_users?: Project_usersUncheckedUpdateManyWithoutAccountsNestedInput
    subproject_taxa?: Subproject_taxaUncheckedUpdateManyWithoutAccountsNestedInput
    subproject_users?: Subproject_usersUncheckedUpdateManyWithoutAccountsNestedInput
    subprojects?: SubprojectsUncheckedUpdateManyWithoutAccountsNestedInput
    taxa?: TaxaUncheckedUpdateManyWithoutAccountsNestedInput
    taxonomies?: TaxonomiesUncheckedUpdateManyWithoutAccountsNestedInput
    tile_layers?: Tile_layersUncheckedUpdateManyWithoutAccountsNestedInput
    ui_options?: Ui_optionsUncheckedUpdateManyWithoutAccountsNestedInput
    units?: UnitsUncheckedUpdateManyWithoutAccountsNestedInput
    user_messages?: User_messagesUncheckedUpdateManyWithoutAccountsNestedInput
  }

  export type SubprojectsUpsertWithWhereUniqueWithoutProjectsInput = {
    where: SubprojectsWhereUniqueInput
    update: XOR<SubprojectsUpdateWithoutProjectsInput, SubprojectsUncheckedUpdateWithoutProjectsInput>
    create: XOR<SubprojectsCreateWithoutProjectsInput, SubprojectsUncheckedCreateWithoutProjectsInput>
  }

  export type SubprojectsUpdateWithWhereUniqueWithoutProjectsInput = {
    where: SubprojectsWhereUniqueInput
    data: XOR<SubprojectsUpdateWithoutProjectsInput, SubprojectsUncheckedUpdateWithoutProjectsInput>
  }

  export type SubprojectsUpdateManyWithWhereWithoutProjectsInput = {
    where: SubprojectsScalarWhereInput
    data: XOR<SubprojectsUpdateManyMutationInput, SubprojectsUncheckedUpdateManyWithoutProjectsInput>
  }

  export type TaxonomiesUpsertWithWhereUniqueWithoutProjectsInput = {
    where: TaxonomiesWhereUniqueInput
    update: XOR<TaxonomiesUpdateWithoutProjectsInput, TaxonomiesUncheckedUpdateWithoutProjectsInput>
    create: XOR<TaxonomiesCreateWithoutProjectsInput, TaxonomiesUncheckedCreateWithoutProjectsInput>
  }

  export type TaxonomiesUpdateWithWhereUniqueWithoutProjectsInput = {
    where: TaxonomiesWhereUniqueInput
    data: XOR<TaxonomiesUpdateWithoutProjectsInput, TaxonomiesUncheckedUpdateWithoutProjectsInput>
  }

  export type TaxonomiesUpdateManyWithWhereWithoutProjectsInput = {
    where: TaxonomiesScalarWhereInput
    data: XOR<TaxonomiesUpdateManyMutationInput, TaxonomiesUncheckedUpdateManyWithoutProjectsInput>
  }

  export type Tile_layersUpsertWithWhereUniqueWithoutProjectsInput = {
    where: Tile_layersWhereUniqueInput
    update: XOR<Tile_layersUpdateWithoutProjectsInput, Tile_layersUncheckedUpdateWithoutProjectsInput>
    create: XOR<Tile_layersCreateWithoutProjectsInput, Tile_layersUncheckedCreateWithoutProjectsInput>
  }

  export type Tile_layersUpdateWithWhereUniqueWithoutProjectsInput = {
    where: Tile_layersWhereUniqueInput
    data: XOR<Tile_layersUpdateWithoutProjectsInput, Tile_layersUncheckedUpdateWithoutProjectsInput>
  }

  export type Tile_layersUpdateManyWithWhereWithoutProjectsInput = {
    where: Tile_layersScalarWhereInput
    data: XOR<Tile_layersUpdateManyMutationInput, Tile_layersUncheckedUpdateManyWithoutProjectsInput>
  }

  export type UnitsUpsertWithWhereUniqueWithoutProjectsInput = {
    where: UnitsWhereUniqueInput
    update: XOR<UnitsUpdateWithoutProjectsInput, UnitsUncheckedUpdateWithoutProjectsInput>
    create: XOR<UnitsCreateWithoutProjectsInput, UnitsUncheckedCreateWithoutProjectsInput>
  }

  export type UnitsUpdateWithWhereUniqueWithoutProjectsInput = {
    where: UnitsWhereUniqueInput
    data: XOR<UnitsUpdateWithoutProjectsInput, UnitsUncheckedUpdateWithoutProjectsInput>
  }

  export type UnitsUpdateManyWithWhereWithoutProjectsInput = {
    where: UnitsScalarWhereInput
    data: XOR<UnitsUpdateManyMutationInput, UnitsUncheckedUpdateManyWithoutProjectsInput>
  }

  export type AccountsCreateWithoutSubproject_taxaInput = {
    account_id: string
    type?: string | null
    period_start?: Date | string | null
    period_end?: Date | string | null
    projects_label_by?: string | null
    label?: string | null
    users?: UsersCreateNestedOneWithoutAccountsInput
    gbif_occurrence_downloads?: Gbif_occurrence_downloadsCreateNestedManyWithoutAccountsInput
    gbif_occurrences?: Gbif_occurrencesCreateNestedManyWithoutAccountsInput
    gbif_taxa?: Gbif_taxaCreateNestedManyWithoutAccountsInput
    goal_report_values?: Goal_report_valuesCreateNestedManyWithoutAccountsInput
    goal_reports?: Goal_reportsCreateNestedManyWithoutAccountsInput
    goals?: GoalsCreateNestedManyWithoutAccountsInput
    list_values?: List_valuesCreateNestedManyWithoutAccountsInput
    lists?: ListsCreateNestedManyWithoutAccountsInput
    observation_sources?: Observation_sourcesCreateNestedManyWithoutAccountsInput
    persons?: PersonsCreateNestedManyWithoutAccountsInput
    place_levels?: Place_levelsCreateNestedManyWithoutAccountsInput
    project_users?: Project_usersCreateNestedManyWithoutAccountsInput
    projects?: ProjectsCreateNestedManyWithoutAccountsInput
    subproject_users?: Subproject_usersCreateNestedManyWithoutAccountsInput
    subprojects?: SubprojectsCreateNestedManyWithoutAccountsInput
    taxa?: TaxaCreateNestedManyWithoutAccountsInput
    taxonomies?: TaxonomiesCreateNestedManyWithoutAccountsInput
    tile_layers?: Tile_layersCreateNestedManyWithoutAccountsInput
    ui_options?: Ui_optionsCreateNestedManyWithoutAccountsInput
    units?: UnitsCreateNestedManyWithoutAccountsInput
    user_messages?: User_messagesCreateNestedManyWithoutAccountsInput
  }

  export type AccountsUncheckedCreateWithoutSubproject_taxaInput = {
    account_id: string
    user_id?: string | null
    type?: string | null
    period_start?: Date | string | null
    period_end?: Date | string | null
    projects_label_by?: string | null
    label?: string | null
    gbif_occurrence_downloads?: Gbif_occurrence_downloadsUncheckedCreateNestedManyWithoutAccountsInput
    gbif_occurrences?: Gbif_occurrencesUncheckedCreateNestedManyWithoutAccountsInput
    gbif_taxa?: Gbif_taxaUncheckedCreateNestedManyWithoutAccountsInput
    goal_report_values?: Goal_report_valuesUncheckedCreateNestedManyWithoutAccountsInput
    goal_reports?: Goal_reportsUncheckedCreateNestedManyWithoutAccountsInput
    goals?: GoalsUncheckedCreateNestedManyWithoutAccountsInput
    list_values?: List_valuesUncheckedCreateNestedManyWithoutAccountsInput
    lists?: ListsUncheckedCreateNestedManyWithoutAccountsInput
    observation_sources?: Observation_sourcesUncheckedCreateNestedManyWithoutAccountsInput
    persons?: PersonsUncheckedCreateNestedManyWithoutAccountsInput
    place_levels?: Place_levelsUncheckedCreateNestedManyWithoutAccountsInput
    project_users?: Project_usersUncheckedCreateNestedManyWithoutAccountsInput
    projects?: ProjectsUncheckedCreateNestedManyWithoutAccountsInput
    subproject_users?: Subproject_usersUncheckedCreateNestedManyWithoutAccountsInput
    subprojects?: SubprojectsUncheckedCreateNestedManyWithoutAccountsInput
    taxa?: TaxaUncheckedCreateNestedManyWithoutAccountsInput
    taxonomies?: TaxonomiesUncheckedCreateNestedManyWithoutAccountsInput
    tile_layers?: Tile_layersUncheckedCreateNestedManyWithoutAccountsInput
    ui_options?: Ui_optionsUncheckedCreateNestedManyWithoutAccountsInput
    units?: UnitsUncheckedCreateNestedManyWithoutAccountsInput
    user_messages?: User_messagesUncheckedCreateNestedManyWithoutAccountsInput
  }

  export type AccountsCreateOrConnectWithoutSubproject_taxaInput = {
    where: AccountsWhereUniqueInput
    create: XOR<AccountsCreateWithoutSubproject_taxaInput, AccountsUncheckedCreateWithoutSubproject_taxaInput>
  }

  export type SubprojectsCreateWithoutSubproject_taxaInput = {
    subproject_id: string
    name?: string | null
    label_replace_by_generated_column?: string | null
    start_year?: number | null
    end_year?: number | null
    data?: NullableJsonNullValueInput | InputJsonValue
    deleted?: boolean | null
    gbif_occurrence_downloads?: Gbif_occurrence_downloadsCreateNestedManyWithoutSubprojectsInput
    gbif_occurrences?: Gbif_occurrencesCreateNestedManyWithoutSubprojectsInput
    goals?: GoalsCreateNestedManyWithoutSubprojectsInput
    subproject_users?: Subproject_usersCreateNestedManyWithoutSubprojectsInput
    accounts?: AccountsCreateNestedOneWithoutSubprojectsInput
    projects?: ProjectsCreateNestedOneWithoutSubprojectsInput
  }

  export type SubprojectsUncheckedCreateWithoutSubproject_taxaInput = {
    subproject_id: string
    account_id?: string | null
    project_id?: string | null
    name?: string | null
    label_replace_by_generated_column?: string | null
    start_year?: number | null
    end_year?: number | null
    data?: NullableJsonNullValueInput | InputJsonValue
    deleted?: boolean | null
    gbif_occurrence_downloads?: Gbif_occurrence_downloadsUncheckedCreateNestedManyWithoutSubprojectsInput
    gbif_occurrences?: Gbif_occurrencesUncheckedCreateNestedManyWithoutSubprojectsInput
    goals?: GoalsUncheckedCreateNestedManyWithoutSubprojectsInput
    subproject_users?: Subproject_usersUncheckedCreateNestedManyWithoutSubprojectsInput
  }

  export type SubprojectsCreateOrConnectWithoutSubproject_taxaInput = {
    where: SubprojectsWhereUniqueInput
    create: XOR<SubprojectsCreateWithoutSubproject_taxaInput, SubprojectsUncheckedCreateWithoutSubproject_taxaInput>
  }

  export type TaxaCreateWithoutSubproject_taxaInput = {
    taxon_id: string
    name?: string | null
    id_in_source?: string | null
    url?: string | null
    label?: string | null
    deleted?: boolean | null
    accounts?: AccountsCreateNestedOneWithoutTaxaInput
    taxonomies?: TaxonomiesCreateNestedOneWithoutTaxaInput
  }

  export type TaxaUncheckedCreateWithoutSubproject_taxaInput = {
    taxon_id: string
    account_id?: string | null
    taxonomy_id?: string | null
    name?: string | null
    id_in_source?: string | null
    url?: string | null
    label?: string | null
    deleted?: boolean | null
  }

  export type TaxaCreateOrConnectWithoutSubproject_taxaInput = {
    where: TaxaWhereUniqueInput
    create: XOR<TaxaCreateWithoutSubproject_taxaInput, TaxaUncheckedCreateWithoutSubproject_taxaInput>
  }

  export type AccountsUpsertWithoutSubproject_taxaInput = {
    update: XOR<AccountsUpdateWithoutSubproject_taxaInput, AccountsUncheckedUpdateWithoutSubproject_taxaInput>
    create: XOR<AccountsCreateWithoutSubproject_taxaInput, AccountsUncheckedCreateWithoutSubproject_taxaInput>
    where?: AccountsWhereInput
  }

  export type AccountsUpdateToOneWithWhereWithoutSubproject_taxaInput = {
    where?: AccountsWhereInput
    data: XOR<AccountsUpdateWithoutSubproject_taxaInput, AccountsUncheckedUpdateWithoutSubproject_taxaInput>
  }

  export type AccountsUpdateWithoutSubproject_taxaInput = {
    account_id?: StringFieldUpdateOperationsInput | string
    type?: NullableStringFieldUpdateOperationsInput | string | null
    period_start?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    period_end?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    projects_label_by?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    users?: UsersUpdateOneWithoutAccountsNestedInput
    gbif_occurrence_downloads?: Gbif_occurrence_downloadsUpdateManyWithoutAccountsNestedInput
    gbif_occurrences?: Gbif_occurrencesUpdateManyWithoutAccountsNestedInput
    gbif_taxa?: Gbif_taxaUpdateManyWithoutAccountsNestedInput
    goal_report_values?: Goal_report_valuesUpdateManyWithoutAccountsNestedInput
    goal_reports?: Goal_reportsUpdateManyWithoutAccountsNestedInput
    goals?: GoalsUpdateManyWithoutAccountsNestedInput
    list_values?: List_valuesUpdateManyWithoutAccountsNestedInput
    lists?: ListsUpdateManyWithoutAccountsNestedInput
    observation_sources?: Observation_sourcesUpdateManyWithoutAccountsNestedInput
    persons?: PersonsUpdateManyWithoutAccountsNestedInput
    place_levels?: Place_levelsUpdateManyWithoutAccountsNestedInput
    project_users?: Project_usersUpdateManyWithoutAccountsNestedInput
    projects?: ProjectsUpdateManyWithoutAccountsNestedInput
    subproject_users?: Subproject_usersUpdateManyWithoutAccountsNestedInput
    subprojects?: SubprojectsUpdateManyWithoutAccountsNestedInput
    taxa?: TaxaUpdateManyWithoutAccountsNestedInput
    taxonomies?: TaxonomiesUpdateManyWithoutAccountsNestedInput
    tile_layers?: Tile_layersUpdateManyWithoutAccountsNestedInput
    ui_options?: Ui_optionsUpdateManyWithoutAccountsNestedInput
    units?: UnitsUpdateManyWithoutAccountsNestedInput
    user_messages?: User_messagesUpdateManyWithoutAccountsNestedInput
  }

  export type AccountsUncheckedUpdateWithoutSubproject_taxaInput = {
    account_id?: StringFieldUpdateOperationsInput | string
    user_id?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    period_start?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    period_end?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    projects_label_by?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    gbif_occurrence_downloads?: Gbif_occurrence_downloadsUncheckedUpdateManyWithoutAccountsNestedInput
    gbif_occurrences?: Gbif_occurrencesUncheckedUpdateManyWithoutAccountsNestedInput
    gbif_taxa?: Gbif_taxaUncheckedUpdateManyWithoutAccountsNestedInput
    goal_report_values?: Goal_report_valuesUncheckedUpdateManyWithoutAccountsNestedInput
    goal_reports?: Goal_reportsUncheckedUpdateManyWithoutAccountsNestedInput
    goals?: GoalsUncheckedUpdateManyWithoutAccountsNestedInput
    list_values?: List_valuesUncheckedUpdateManyWithoutAccountsNestedInput
    lists?: ListsUncheckedUpdateManyWithoutAccountsNestedInput
    observation_sources?: Observation_sourcesUncheckedUpdateManyWithoutAccountsNestedInput
    persons?: PersonsUncheckedUpdateManyWithoutAccountsNestedInput
    place_levels?: Place_levelsUncheckedUpdateManyWithoutAccountsNestedInput
    project_users?: Project_usersUncheckedUpdateManyWithoutAccountsNestedInput
    projects?: ProjectsUncheckedUpdateManyWithoutAccountsNestedInput
    subproject_users?: Subproject_usersUncheckedUpdateManyWithoutAccountsNestedInput
    subprojects?: SubprojectsUncheckedUpdateManyWithoutAccountsNestedInput
    taxa?: TaxaUncheckedUpdateManyWithoutAccountsNestedInput
    taxonomies?: TaxonomiesUncheckedUpdateManyWithoutAccountsNestedInput
    tile_layers?: Tile_layersUncheckedUpdateManyWithoutAccountsNestedInput
    ui_options?: Ui_optionsUncheckedUpdateManyWithoutAccountsNestedInput
    units?: UnitsUncheckedUpdateManyWithoutAccountsNestedInput
    user_messages?: User_messagesUncheckedUpdateManyWithoutAccountsNestedInput
  }

  export type SubprojectsUpsertWithoutSubproject_taxaInput = {
    update: XOR<SubprojectsUpdateWithoutSubproject_taxaInput, SubprojectsUncheckedUpdateWithoutSubproject_taxaInput>
    create: XOR<SubprojectsCreateWithoutSubproject_taxaInput, SubprojectsUncheckedCreateWithoutSubproject_taxaInput>
    where?: SubprojectsWhereInput
  }

  export type SubprojectsUpdateToOneWithWhereWithoutSubproject_taxaInput = {
    where?: SubprojectsWhereInput
    data: XOR<SubprojectsUpdateWithoutSubproject_taxaInput, SubprojectsUncheckedUpdateWithoutSubproject_taxaInput>
  }

  export type SubprojectsUpdateWithoutSubproject_taxaInput = {
    subproject_id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    label_replace_by_generated_column?: NullableStringFieldUpdateOperationsInput | string | null
    start_year?: NullableIntFieldUpdateOperationsInput | number | null
    end_year?: NullableIntFieldUpdateOperationsInput | number | null
    data?: NullableJsonNullValueInput | InputJsonValue
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    gbif_occurrence_downloads?: Gbif_occurrence_downloadsUpdateManyWithoutSubprojectsNestedInput
    gbif_occurrences?: Gbif_occurrencesUpdateManyWithoutSubprojectsNestedInput
    goals?: GoalsUpdateManyWithoutSubprojectsNestedInput
    subproject_users?: Subproject_usersUpdateManyWithoutSubprojectsNestedInput
    accounts?: AccountsUpdateOneWithoutSubprojectsNestedInput
    projects?: ProjectsUpdateOneWithoutSubprojectsNestedInput
  }

  export type SubprojectsUncheckedUpdateWithoutSubproject_taxaInput = {
    subproject_id?: StringFieldUpdateOperationsInput | string
    account_id?: NullableStringFieldUpdateOperationsInput | string | null
    project_id?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    label_replace_by_generated_column?: NullableStringFieldUpdateOperationsInput | string | null
    start_year?: NullableIntFieldUpdateOperationsInput | number | null
    end_year?: NullableIntFieldUpdateOperationsInput | number | null
    data?: NullableJsonNullValueInput | InputJsonValue
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    gbif_occurrence_downloads?: Gbif_occurrence_downloadsUncheckedUpdateManyWithoutSubprojectsNestedInput
    gbif_occurrences?: Gbif_occurrencesUncheckedUpdateManyWithoutSubprojectsNestedInput
    goals?: GoalsUncheckedUpdateManyWithoutSubprojectsNestedInput
    subproject_users?: Subproject_usersUncheckedUpdateManyWithoutSubprojectsNestedInput
  }

  export type TaxaUpsertWithoutSubproject_taxaInput = {
    update: XOR<TaxaUpdateWithoutSubproject_taxaInput, TaxaUncheckedUpdateWithoutSubproject_taxaInput>
    create: XOR<TaxaCreateWithoutSubproject_taxaInput, TaxaUncheckedCreateWithoutSubproject_taxaInput>
    where?: TaxaWhereInput
  }

  export type TaxaUpdateToOneWithWhereWithoutSubproject_taxaInput = {
    where?: TaxaWhereInput
    data: XOR<TaxaUpdateWithoutSubproject_taxaInput, TaxaUncheckedUpdateWithoutSubproject_taxaInput>
  }

  export type TaxaUpdateWithoutSubproject_taxaInput = {
    taxon_id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    id_in_source?: NullableStringFieldUpdateOperationsInput | string | null
    url?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    accounts?: AccountsUpdateOneWithoutTaxaNestedInput
    taxonomies?: TaxonomiesUpdateOneWithoutTaxaNestedInput
  }

  export type TaxaUncheckedUpdateWithoutSubproject_taxaInput = {
    taxon_id?: StringFieldUpdateOperationsInput | string
    account_id?: NullableStringFieldUpdateOperationsInput | string | null
    taxonomy_id?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    id_in_source?: NullableStringFieldUpdateOperationsInput | string | null
    url?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type AccountsCreateWithoutSubproject_usersInput = {
    account_id: string
    type?: string | null
    period_start?: Date | string | null
    period_end?: Date | string | null
    projects_label_by?: string | null
    label?: string | null
    users?: UsersCreateNestedOneWithoutAccountsInput
    gbif_occurrence_downloads?: Gbif_occurrence_downloadsCreateNestedManyWithoutAccountsInput
    gbif_occurrences?: Gbif_occurrencesCreateNestedManyWithoutAccountsInput
    gbif_taxa?: Gbif_taxaCreateNestedManyWithoutAccountsInput
    goal_report_values?: Goal_report_valuesCreateNestedManyWithoutAccountsInput
    goal_reports?: Goal_reportsCreateNestedManyWithoutAccountsInput
    goals?: GoalsCreateNestedManyWithoutAccountsInput
    list_values?: List_valuesCreateNestedManyWithoutAccountsInput
    lists?: ListsCreateNestedManyWithoutAccountsInput
    observation_sources?: Observation_sourcesCreateNestedManyWithoutAccountsInput
    persons?: PersonsCreateNestedManyWithoutAccountsInput
    place_levels?: Place_levelsCreateNestedManyWithoutAccountsInput
    project_users?: Project_usersCreateNestedManyWithoutAccountsInput
    projects?: ProjectsCreateNestedManyWithoutAccountsInput
    subproject_taxa?: Subproject_taxaCreateNestedManyWithoutAccountsInput
    subprojects?: SubprojectsCreateNestedManyWithoutAccountsInput
    taxa?: TaxaCreateNestedManyWithoutAccountsInput
    taxonomies?: TaxonomiesCreateNestedManyWithoutAccountsInput
    tile_layers?: Tile_layersCreateNestedManyWithoutAccountsInput
    ui_options?: Ui_optionsCreateNestedManyWithoutAccountsInput
    units?: UnitsCreateNestedManyWithoutAccountsInput
    user_messages?: User_messagesCreateNestedManyWithoutAccountsInput
  }

  export type AccountsUncheckedCreateWithoutSubproject_usersInput = {
    account_id: string
    user_id?: string | null
    type?: string | null
    period_start?: Date | string | null
    period_end?: Date | string | null
    projects_label_by?: string | null
    label?: string | null
    gbif_occurrence_downloads?: Gbif_occurrence_downloadsUncheckedCreateNestedManyWithoutAccountsInput
    gbif_occurrences?: Gbif_occurrencesUncheckedCreateNestedManyWithoutAccountsInput
    gbif_taxa?: Gbif_taxaUncheckedCreateNestedManyWithoutAccountsInput
    goal_report_values?: Goal_report_valuesUncheckedCreateNestedManyWithoutAccountsInput
    goal_reports?: Goal_reportsUncheckedCreateNestedManyWithoutAccountsInput
    goals?: GoalsUncheckedCreateNestedManyWithoutAccountsInput
    list_values?: List_valuesUncheckedCreateNestedManyWithoutAccountsInput
    lists?: ListsUncheckedCreateNestedManyWithoutAccountsInput
    observation_sources?: Observation_sourcesUncheckedCreateNestedManyWithoutAccountsInput
    persons?: PersonsUncheckedCreateNestedManyWithoutAccountsInput
    place_levels?: Place_levelsUncheckedCreateNestedManyWithoutAccountsInput
    project_users?: Project_usersUncheckedCreateNestedManyWithoutAccountsInput
    projects?: ProjectsUncheckedCreateNestedManyWithoutAccountsInput
    subproject_taxa?: Subproject_taxaUncheckedCreateNestedManyWithoutAccountsInput
    subprojects?: SubprojectsUncheckedCreateNestedManyWithoutAccountsInput
    taxa?: TaxaUncheckedCreateNestedManyWithoutAccountsInput
    taxonomies?: TaxonomiesUncheckedCreateNestedManyWithoutAccountsInput
    tile_layers?: Tile_layersUncheckedCreateNestedManyWithoutAccountsInput
    ui_options?: Ui_optionsUncheckedCreateNestedManyWithoutAccountsInput
    units?: UnitsUncheckedCreateNestedManyWithoutAccountsInput
    user_messages?: User_messagesUncheckedCreateNestedManyWithoutAccountsInput
  }

  export type AccountsCreateOrConnectWithoutSubproject_usersInput = {
    where: AccountsWhereUniqueInput
    create: XOR<AccountsCreateWithoutSubproject_usersInput, AccountsUncheckedCreateWithoutSubproject_usersInput>
  }

  export type SubprojectsCreateWithoutSubproject_usersInput = {
    subproject_id: string
    name?: string | null
    label_replace_by_generated_column?: string | null
    start_year?: number | null
    end_year?: number | null
    data?: NullableJsonNullValueInput | InputJsonValue
    deleted?: boolean | null
    gbif_occurrence_downloads?: Gbif_occurrence_downloadsCreateNestedManyWithoutSubprojectsInput
    gbif_occurrences?: Gbif_occurrencesCreateNestedManyWithoutSubprojectsInput
    goals?: GoalsCreateNestedManyWithoutSubprojectsInput
    subproject_taxa?: Subproject_taxaCreateNestedManyWithoutSubprojectsInput
    accounts?: AccountsCreateNestedOneWithoutSubprojectsInput
    projects?: ProjectsCreateNestedOneWithoutSubprojectsInput
  }

  export type SubprojectsUncheckedCreateWithoutSubproject_usersInput = {
    subproject_id: string
    account_id?: string | null
    project_id?: string | null
    name?: string | null
    label_replace_by_generated_column?: string | null
    start_year?: number | null
    end_year?: number | null
    data?: NullableJsonNullValueInput | InputJsonValue
    deleted?: boolean | null
    gbif_occurrence_downloads?: Gbif_occurrence_downloadsUncheckedCreateNestedManyWithoutSubprojectsInput
    gbif_occurrences?: Gbif_occurrencesUncheckedCreateNestedManyWithoutSubprojectsInput
    goals?: GoalsUncheckedCreateNestedManyWithoutSubprojectsInput
    subproject_taxa?: Subproject_taxaUncheckedCreateNestedManyWithoutSubprojectsInput
  }

  export type SubprojectsCreateOrConnectWithoutSubproject_usersInput = {
    where: SubprojectsWhereUniqueInput
    create: XOR<SubprojectsCreateWithoutSubproject_usersInput, SubprojectsUncheckedCreateWithoutSubproject_usersInput>
  }

  export type UsersCreateWithoutSubproject_usersInput = {
    user_id: string
    email?: string | null
    auth_id?: string | null
    label_replace_by_generated_column?: string | null
    deleted?: boolean | null
    accounts?: AccountsCreateNestedManyWithoutUsersInput
    project_users?: Project_usersCreateNestedManyWithoutUsersInput
    ui_options?: Ui_optionsCreateNestedOneWithoutUsersInput
    user_messages?: User_messagesCreateNestedManyWithoutUsersInput
  }

  export type UsersUncheckedCreateWithoutSubproject_usersInput = {
    user_id: string
    email?: string | null
    auth_id?: string | null
    label_replace_by_generated_column?: string | null
    deleted?: boolean | null
    accounts?: AccountsUncheckedCreateNestedManyWithoutUsersInput
    project_users?: Project_usersUncheckedCreateNestedManyWithoutUsersInput
    ui_options?: Ui_optionsUncheckedCreateNestedOneWithoutUsersInput
    user_messages?: User_messagesUncheckedCreateNestedManyWithoutUsersInput
  }

  export type UsersCreateOrConnectWithoutSubproject_usersInput = {
    where: UsersWhereUniqueInput
    create: XOR<UsersCreateWithoutSubproject_usersInput, UsersUncheckedCreateWithoutSubproject_usersInput>
  }

  export type AccountsUpsertWithoutSubproject_usersInput = {
    update: XOR<AccountsUpdateWithoutSubproject_usersInput, AccountsUncheckedUpdateWithoutSubproject_usersInput>
    create: XOR<AccountsCreateWithoutSubproject_usersInput, AccountsUncheckedCreateWithoutSubproject_usersInput>
    where?: AccountsWhereInput
  }

  export type AccountsUpdateToOneWithWhereWithoutSubproject_usersInput = {
    where?: AccountsWhereInput
    data: XOR<AccountsUpdateWithoutSubproject_usersInput, AccountsUncheckedUpdateWithoutSubproject_usersInput>
  }

  export type AccountsUpdateWithoutSubproject_usersInput = {
    account_id?: StringFieldUpdateOperationsInput | string
    type?: NullableStringFieldUpdateOperationsInput | string | null
    period_start?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    period_end?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    projects_label_by?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    users?: UsersUpdateOneWithoutAccountsNestedInput
    gbif_occurrence_downloads?: Gbif_occurrence_downloadsUpdateManyWithoutAccountsNestedInput
    gbif_occurrences?: Gbif_occurrencesUpdateManyWithoutAccountsNestedInput
    gbif_taxa?: Gbif_taxaUpdateManyWithoutAccountsNestedInput
    goal_report_values?: Goal_report_valuesUpdateManyWithoutAccountsNestedInput
    goal_reports?: Goal_reportsUpdateManyWithoutAccountsNestedInput
    goals?: GoalsUpdateManyWithoutAccountsNestedInput
    list_values?: List_valuesUpdateManyWithoutAccountsNestedInput
    lists?: ListsUpdateManyWithoutAccountsNestedInput
    observation_sources?: Observation_sourcesUpdateManyWithoutAccountsNestedInput
    persons?: PersonsUpdateManyWithoutAccountsNestedInput
    place_levels?: Place_levelsUpdateManyWithoutAccountsNestedInput
    project_users?: Project_usersUpdateManyWithoutAccountsNestedInput
    projects?: ProjectsUpdateManyWithoutAccountsNestedInput
    subproject_taxa?: Subproject_taxaUpdateManyWithoutAccountsNestedInput
    subprojects?: SubprojectsUpdateManyWithoutAccountsNestedInput
    taxa?: TaxaUpdateManyWithoutAccountsNestedInput
    taxonomies?: TaxonomiesUpdateManyWithoutAccountsNestedInput
    tile_layers?: Tile_layersUpdateManyWithoutAccountsNestedInput
    ui_options?: Ui_optionsUpdateManyWithoutAccountsNestedInput
    units?: UnitsUpdateManyWithoutAccountsNestedInput
    user_messages?: User_messagesUpdateManyWithoutAccountsNestedInput
  }

  export type AccountsUncheckedUpdateWithoutSubproject_usersInput = {
    account_id?: StringFieldUpdateOperationsInput | string
    user_id?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    period_start?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    period_end?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    projects_label_by?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    gbif_occurrence_downloads?: Gbif_occurrence_downloadsUncheckedUpdateManyWithoutAccountsNestedInput
    gbif_occurrences?: Gbif_occurrencesUncheckedUpdateManyWithoutAccountsNestedInput
    gbif_taxa?: Gbif_taxaUncheckedUpdateManyWithoutAccountsNestedInput
    goal_report_values?: Goal_report_valuesUncheckedUpdateManyWithoutAccountsNestedInput
    goal_reports?: Goal_reportsUncheckedUpdateManyWithoutAccountsNestedInput
    goals?: GoalsUncheckedUpdateManyWithoutAccountsNestedInput
    list_values?: List_valuesUncheckedUpdateManyWithoutAccountsNestedInput
    lists?: ListsUncheckedUpdateManyWithoutAccountsNestedInput
    observation_sources?: Observation_sourcesUncheckedUpdateManyWithoutAccountsNestedInput
    persons?: PersonsUncheckedUpdateManyWithoutAccountsNestedInput
    place_levels?: Place_levelsUncheckedUpdateManyWithoutAccountsNestedInput
    project_users?: Project_usersUncheckedUpdateManyWithoutAccountsNestedInput
    projects?: ProjectsUncheckedUpdateManyWithoutAccountsNestedInput
    subproject_taxa?: Subproject_taxaUncheckedUpdateManyWithoutAccountsNestedInput
    subprojects?: SubprojectsUncheckedUpdateManyWithoutAccountsNestedInput
    taxa?: TaxaUncheckedUpdateManyWithoutAccountsNestedInput
    taxonomies?: TaxonomiesUncheckedUpdateManyWithoutAccountsNestedInput
    tile_layers?: Tile_layersUncheckedUpdateManyWithoutAccountsNestedInput
    ui_options?: Ui_optionsUncheckedUpdateManyWithoutAccountsNestedInput
    units?: UnitsUncheckedUpdateManyWithoutAccountsNestedInput
    user_messages?: User_messagesUncheckedUpdateManyWithoutAccountsNestedInput
  }

  export type SubprojectsUpsertWithoutSubproject_usersInput = {
    update: XOR<SubprojectsUpdateWithoutSubproject_usersInput, SubprojectsUncheckedUpdateWithoutSubproject_usersInput>
    create: XOR<SubprojectsCreateWithoutSubproject_usersInput, SubprojectsUncheckedCreateWithoutSubproject_usersInput>
    where?: SubprojectsWhereInput
  }

  export type SubprojectsUpdateToOneWithWhereWithoutSubproject_usersInput = {
    where?: SubprojectsWhereInput
    data: XOR<SubprojectsUpdateWithoutSubproject_usersInput, SubprojectsUncheckedUpdateWithoutSubproject_usersInput>
  }

  export type SubprojectsUpdateWithoutSubproject_usersInput = {
    subproject_id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    label_replace_by_generated_column?: NullableStringFieldUpdateOperationsInput | string | null
    start_year?: NullableIntFieldUpdateOperationsInput | number | null
    end_year?: NullableIntFieldUpdateOperationsInput | number | null
    data?: NullableJsonNullValueInput | InputJsonValue
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    gbif_occurrence_downloads?: Gbif_occurrence_downloadsUpdateManyWithoutSubprojectsNestedInput
    gbif_occurrences?: Gbif_occurrencesUpdateManyWithoutSubprojectsNestedInput
    goals?: GoalsUpdateManyWithoutSubprojectsNestedInput
    subproject_taxa?: Subproject_taxaUpdateManyWithoutSubprojectsNestedInput
    accounts?: AccountsUpdateOneWithoutSubprojectsNestedInput
    projects?: ProjectsUpdateOneWithoutSubprojectsNestedInput
  }

  export type SubprojectsUncheckedUpdateWithoutSubproject_usersInput = {
    subproject_id?: StringFieldUpdateOperationsInput | string
    account_id?: NullableStringFieldUpdateOperationsInput | string | null
    project_id?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    label_replace_by_generated_column?: NullableStringFieldUpdateOperationsInput | string | null
    start_year?: NullableIntFieldUpdateOperationsInput | number | null
    end_year?: NullableIntFieldUpdateOperationsInput | number | null
    data?: NullableJsonNullValueInput | InputJsonValue
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    gbif_occurrence_downloads?: Gbif_occurrence_downloadsUncheckedUpdateManyWithoutSubprojectsNestedInput
    gbif_occurrences?: Gbif_occurrencesUncheckedUpdateManyWithoutSubprojectsNestedInput
    goals?: GoalsUncheckedUpdateManyWithoutSubprojectsNestedInput
    subproject_taxa?: Subproject_taxaUncheckedUpdateManyWithoutSubprojectsNestedInput
  }

  export type UsersUpsertWithoutSubproject_usersInput = {
    update: XOR<UsersUpdateWithoutSubproject_usersInput, UsersUncheckedUpdateWithoutSubproject_usersInput>
    create: XOR<UsersCreateWithoutSubproject_usersInput, UsersUncheckedCreateWithoutSubproject_usersInput>
    where?: UsersWhereInput
  }

  export type UsersUpdateToOneWithWhereWithoutSubproject_usersInput = {
    where?: UsersWhereInput
    data: XOR<UsersUpdateWithoutSubproject_usersInput, UsersUncheckedUpdateWithoutSubproject_usersInput>
  }

  export type UsersUpdateWithoutSubproject_usersInput = {
    user_id?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    auth_id?: NullableStringFieldUpdateOperationsInput | string | null
    label_replace_by_generated_column?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    accounts?: AccountsUpdateManyWithoutUsersNestedInput
    project_users?: Project_usersUpdateManyWithoutUsersNestedInput
    ui_options?: Ui_optionsUpdateOneWithoutUsersNestedInput
    user_messages?: User_messagesUpdateManyWithoutUsersNestedInput
  }

  export type UsersUncheckedUpdateWithoutSubproject_usersInput = {
    user_id?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    auth_id?: NullableStringFieldUpdateOperationsInput | string | null
    label_replace_by_generated_column?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    accounts?: AccountsUncheckedUpdateManyWithoutUsersNestedInput
    project_users?: Project_usersUncheckedUpdateManyWithoutUsersNestedInput
    ui_options?: Ui_optionsUncheckedUpdateOneWithoutUsersNestedInput
    user_messages?: User_messagesUncheckedUpdateManyWithoutUsersNestedInput
  }

  export type Gbif_occurrence_downloadsCreateWithoutSubprojectsInput = {
    gbif_occurrence_download_id: string
    gbif_table?: gbif_table | null
    filters?: NullableJsonNullValueInput | InputJsonValue
    created_time?: Date | string | null
    download_key?: string | null
    error?: string | null
    inserted_time?: Date | string | null
    inserted_count?: number | null
    attribution?: string | null
    deleted?: boolean | null
    accounts?: AccountsCreateNestedOneWithoutGbif_occurrence_downloadsInput
    projects?: ProjectsCreateNestedOneWithoutGbif_occurrence_downloadsInput
  }

  export type Gbif_occurrence_downloadsUncheckedCreateWithoutSubprojectsInput = {
    gbif_occurrence_download_id: string
    account_id?: string | null
    project_id?: string | null
    gbif_table?: gbif_table | null
    filters?: NullableJsonNullValueInput | InputJsonValue
    created_time?: Date | string | null
    download_key?: string | null
    error?: string | null
    inserted_time?: Date | string | null
    inserted_count?: number | null
    attribution?: string | null
    deleted?: boolean | null
  }

  export type Gbif_occurrence_downloadsCreateOrConnectWithoutSubprojectsInput = {
    where: Gbif_occurrence_downloadsWhereUniqueInput
    create: XOR<Gbif_occurrence_downloadsCreateWithoutSubprojectsInput, Gbif_occurrence_downloadsUncheckedCreateWithoutSubprojectsInput>
  }

  export type Gbif_occurrence_downloadsCreateManySubprojectsInputEnvelope = {
    data: Enumerable<Gbif_occurrence_downloadsCreateManySubprojectsInput>
    skipDuplicates?: boolean
  }

  export type Gbif_occurrencesCreateWithoutSubprojectsInput = {
    gbif_occurrence_id: string
    gbif_data?: NullableJsonNullValueInput | InputJsonValue
    label?: string | null
    accounts?: AccountsCreateNestedOneWithoutGbif_occurrencesInput
    projects?: ProjectsCreateNestedOneWithoutGbif_occurrencesInput
  }

  export type Gbif_occurrencesUncheckedCreateWithoutSubprojectsInput = {
    gbif_occurrence_id: string
    account_id?: string | null
    project_id?: string | null
    gbif_data?: NullableJsonNullValueInput | InputJsonValue
    label?: string | null
  }

  export type Gbif_occurrencesCreateOrConnectWithoutSubprojectsInput = {
    where: Gbif_occurrencesWhereUniqueInput
    create: XOR<Gbif_occurrencesCreateWithoutSubprojectsInput, Gbif_occurrencesUncheckedCreateWithoutSubprojectsInput>
  }

  export type Gbif_occurrencesCreateManySubprojectsInputEnvelope = {
    data: Enumerable<Gbif_occurrencesCreateManySubprojectsInput>
    skipDuplicates?: boolean
  }

  export type GoalsCreateWithoutSubprojectsInput = {
    goal_id: string
    year?: number | null
    name?: string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label_replace_by_generated_column?: string | null
    deleted?: boolean | null
    goal_reports?: Goal_reportsCreateNestedManyWithoutGoalsInput
    accounts?: AccountsCreateNestedOneWithoutGoalsInput
  }

  export type GoalsUncheckedCreateWithoutSubprojectsInput = {
    goal_id: string
    account_id?: string | null
    year?: number | null
    name?: string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label_replace_by_generated_column?: string | null
    deleted?: boolean | null
    goal_reports?: Goal_reportsUncheckedCreateNestedManyWithoutGoalsInput
  }

  export type GoalsCreateOrConnectWithoutSubprojectsInput = {
    where: GoalsWhereUniqueInput
    create: XOR<GoalsCreateWithoutSubprojectsInput, GoalsUncheckedCreateWithoutSubprojectsInput>
  }

  export type GoalsCreateManySubprojectsInputEnvelope = {
    data: Enumerable<GoalsCreateManySubprojectsInput>
    skipDuplicates?: boolean
  }

  export type Subproject_taxaCreateWithoutSubprojectsInput = {
    subproject_taxon_id: string
    label?: string | null
    deleted?: boolean | null
    accounts?: AccountsCreateNestedOneWithoutSubproject_taxaInput
    taxa?: TaxaCreateNestedOneWithoutSubproject_taxaInput
  }

  export type Subproject_taxaUncheckedCreateWithoutSubprojectsInput = {
    subproject_taxon_id: string
    account_id?: string | null
    taxon_id?: string | null
    label?: string | null
    deleted?: boolean | null
  }

  export type Subproject_taxaCreateOrConnectWithoutSubprojectsInput = {
    where: Subproject_taxaWhereUniqueInput
    create: XOR<Subproject_taxaCreateWithoutSubprojectsInput, Subproject_taxaUncheckedCreateWithoutSubprojectsInput>
  }

  export type Subproject_taxaCreateManySubprojectsInputEnvelope = {
    data: Enumerable<Subproject_taxaCreateManySubprojectsInput>
    skipDuplicates?: boolean
  }

  export type Subproject_usersCreateWithoutSubprojectsInput = {
    subproject_user_id: string
    role?: string | null
    label?: string | null
    deleted?: boolean | null
    accounts?: AccountsCreateNestedOneWithoutSubproject_usersInput
    users?: UsersCreateNestedOneWithoutSubproject_usersInput
  }

  export type Subproject_usersUncheckedCreateWithoutSubprojectsInput = {
    subproject_user_id: string
    account_id?: string | null
    user_id?: string | null
    role?: string | null
    label?: string | null
    deleted?: boolean | null
  }

  export type Subproject_usersCreateOrConnectWithoutSubprojectsInput = {
    where: Subproject_usersWhereUniqueInput
    create: XOR<Subproject_usersCreateWithoutSubprojectsInput, Subproject_usersUncheckedCreateWithoutSubprojectsInput>
  }

  export type Subproject_usersCreateManySubprojectsInputEnvelope = {
    data: Enumerable<Subproject_usersCreateManySubprojectsInput>
    skipDuplicates?: boolean
  }

  export type AccountsCreateWithoutSubprojectsInput = {
    account_id: string
    type?: string | null
    period_start?: Date | string | null
    period_end?: Date | string | null
    projects_label_by?: string | null
    label?: string | null
    users?: UsersCreateNestedOneWithoutAccountsInput
    gbif_occurrence_downloads?: Gbif_occurrence_downloadsCreateNestedManyWithoutAccountsInput
    gbif_occurrences?: Gbif_occurrencesCreateNestedManyWithoutAccountsInput
    gbif_taxa?: Gbif_taxaCreateNestedManyWithoutAccountsInput
    goal_report_values?: Goal_report_valuesCreateNestedManyWithoutAccountsInput
    goal_reports?: Goal_reportsCreateNestedManyWithoutAccountsInput
    goals?: GoalsCreateNestedManyWithoutAccountsInput
    list_values?: List_valuesCreateNestedManyWithoutAccountsInput
    lists?: ListsCreateNestedManyWithoutAccountsInput
    observation_sources?: Observation_sourcesCreateNestedManyWithoutAccountsInput
    persons?: PersonsCreateNestedManyWithoutAccountsInput
    place_levels?: Place_levelsCreateNestedManyWithoutAccountsInput
    project_users?: Project_usersCreateNestedManyWithoutAccountsInput
    projects?: ProjectsCreateNestedManyWithoutAccountsInput
    subproject_taxa?: Subproject_taxaCreateNestedManyWithoutAccountsInput
    subproject_users?: Subproject_usersCreateNestedManyWithoutAccountsInput
    taxa?: TaxaCreateNestedManyWithoutAccountsInput
    taxonomies?: TaxonomiesCreateNestedManyWithoutAccountsInput
    tile_layers?: Tile_layersCreateNestedManyWithoutAccountsInput
    ui_options?: Ui_optionsCreateNestedManyWithoutAccountsInput
    units?: UnitsCreateNestedManyWithoutAccountsInput
    user_messages?: User_messagesCreateNestedManyWithoutAccountsInput
  }

  export type AccountsUncheckedCreateWithoutSubprojectsInput = {
    account_id: string
    user_id?: string | null
    type?: string | null
    period_start?: Date | string | null
    period_end?: Date | string | null
    projects_label_by?: string | null
    label?: string | null
    gbif_occurrence_downloads?: Gbif_occurrence_downloadsUncheckedCreateNestedManyWithoutAccountsInput
    gbif_occurrences?: Gbif_occurrencesUncheckedCreateNestedManyWithoutAccountsInput
    gbif_taxa?: Gbif_taxaUncheckedCreateNestedManyWithoutAccountsInput
    goal_report_values?: Goal_report_valuesUncheckedCreateNestedManyWithoutAccountsInput
    goal_reports?: Goal_reportsUncheckedCreateNestedManyWithoutAccountsInput
    goals?: GoalsUncheckedCreateNestedManyWithoutAccountsInput
    list_values?: List_valuesUncheckedCreateNestedManyWithoutAccountsInput
    lists?: ListsUncheckedCreateNestedManyWithoutAccountsInput
    observation_sources?: Observation_sourcesUncheckedCreateNestedManyWithoutAccountsInput
    persons?: PersonsUncheckedCreateNestedManyWithoutAccountsInput
    place_levels?: Place_levelsUncheckedCreateNestedManyWithoutAccountsInput
    project_users?: Project_usersUncheckedCreateNestedManyWithoutAccountsInput
    projects?: ProjectsUncheckedCreateNestedManyWithoutAccountsInput
    subproject_taxa?: Subproject_taxaUncheckedCreateNestedManyWithoutAccountsInput
    subproject_users?: Subproject_usersUncheckedCreateNestedManyWithoutAccountsInput
    taxa?: TaxaUncheckedCreateNestedManyWithoutAccountsInput
    taxonomies?: TaxonomiesUncheckedCreateNestedManyWithoutAccountsInput
    tile_layers?: Tile_layersUncheckedCreateNestedManyWithoutAccountsInput
    ui_options?: Ui_optionsUncheckedCreateNestedManyWithoutAccountsInput
    units?: UnitsUncheckedCreateNestedManyWithoutAccountsInput
    user_messages?: User_messagesUncheckedCreateNestedManyWithoutAccountsInput
  }

  export type AccountsCreateOrConnectWithoutSubprojectsInput = {
    where: AccountsWhereUniqueInput
    create: XOR<AccountsCreateWithoutSubprojectsInput, AccountsUncheckedCreateWithoutSubprojectsInput>
  }

  export type ProjectsCreateWithoutSubprojectsInput = {
    project_id: string
    name?: string | null
    label?: string | null
    type?: project_type | null
    subproject_name_singular?: string | null
    subproject_name_plural?: string | null
    subproject_order_by?: string | null
    places_label_by?: string | null
    places_order_by?: NullableJsonNullValueInput | InputJsonValue
    persons_label_by?: string | null
    persons_order_by?: string | null
    goal_reports_label_by?: string | null
    goal_reports_order_by?: string | null
    values_on_multiple_levels?: string | null
    multiple_action_values_on_same_level?: string | null
    multiple_check_values_on_same_level?: string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    files_offline?: boolean | null
    files_active_projects?: boolean | null
    files_active_subprojects?: boolean | null
    files_active_places?: boolean | null
    files_active_actions?: boolean | null
    files_active_checks?: boolean | null
    deleted?: boolean | null
    gbif_occurrence_downloads?: Gbif_occurrence_downloadsCreateNestedManyWithoutProjectsInput
    gbif_occurrences?: Gbif_occurrencesCreateNestedManyWithoutProjectsInput
    gbif_taxa?: Gbif_taxaCreateNestedManyWithoutProjectsInput
    lists?: ListsCreateNestedManyWithoutProjectsInput
    observation_sources?: Observation_sourcesCreateNestedManyWithoutProjectsInput
    persons?: PersonsCreateNestedManyWithoutProjectsInput
    place_levels?: Place_levelsCreateNestedManyWithoutProjectsInput
    project_users?: Project_usersCreateNestedManyWithoutProjectsInput
    accounts?: AccountsCreateNestedOneWithoutProjectsInput
    taxonomies?: TaxonomiesCreateNestedManyWithoutProjectsInput
    tile_layers?: Tile_layersCreateNestedManyWithoutProjectsInput
    units?: UnitsCreateNestedManyWithoutProjectsInput
  }

  export type ProjectsUncheckedCreateWithoutSubprojectsInput = {
    project_id: string
    account_id?: string | null
    name?: string | null
    label?: string | null
    type?: project_type | null
    subproject_name_singular?: string | null
    subproject_name_plural?: string | null
    subproject_order_by?: string | null
    places_label_by?: string | null
    places_order_by?: NullableJsonNullValueInput | InputJsonValue
    persons_label_by?: string | null
    persons_order_by?: string | null
    goal_reports_label_by?: string | null
    goal_reports_order_by?: string | null
    values_on_multiple_levels?: string | null
    multiple_action_values_on_same_level?: string | null
    multiple_check_values_on_same_level?: string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    files_offline?: boolean | null
    files_active_projects?: boolean | null
    files_active_subprojects?: boolean | null
    files_active_places?: boolean | null
    files_active_actions?: boolean | null
    files_active_checks?: boolean | null
    deleted?: boolean | null
    gbif_occurrence_downloads?: Gbif_occurrence_downloadsUncheckedCreateNestedManyWithoutProjectsInput
    gbif_occurrences?: Gbif_occurrencesUncheckedCreateNestedManyWithoutProjectsInput
    gbif_taxa?: Gbif_taxaUncheckedCreateNestedManyWithoutProjectsInput
    lists?: ListsUncheckedCreateNestedManyWithoutProjectsInput
    observation_sources?: Observation_sourcesUncheckedCreateNestedManyWithoutProjectsInput
    persons?: PersonsUncheckedCreateNestedManyWithoutProjectsInput
    place_levels?: Place_levelsUncheckedCreateNestedManyWithoutProjectsInput
    project_users?: Project_usersUncheckedCreateNestedManyWithoutProjectsInput
    taxonomies?: TaxonomiesUncheckedCreateNestedManyWithoutProjectsInput
    tile_layers?: Tile_layersUncheckedCreateNestedManyWithoutProjectsInput
    units?: UnitsUncheckedCreateNestedManyWithoutProjectsInput
  }

  export type ProjectsCreateOrConnectWithoutSubprojectsInput = {
    where: ProjectsWhereUniqueInput
    create: XOR<ProjectsCreateWithoutSubprojectsInput, ProjectsUncheckedCreateWithoutSubprojectsInput>
  }

  export type Gbif_occurrence_downloadsUpsertWithWhereUniqueWithoutSubprojectsInput = {
    where: Gbif_occurrence_downloadsWhereUniqueInput
    update: XOR<Gbif_occurrence_downloadsUpdateWithoutSubprojectsInput, Gbif_occurrence_downloadsUncheckedUpdateWithoutSubprojectsInput>
    create: XOR<Gbif_occurrence_downloadsCreateWithoutSubprojectsInput, Gbif_occurrence_downloadsUncheckedCreateWithoutSubprojectsInput>
  }

  export type Gbif_occurrence_downloadsUpdateWithWhereUniqueWithoutSubprojectsInput = {
    where: Gbif_occurrence_downloadsWhereUniqueInput
    data: XOR<Gbif_occurrence_downloadsUpdateWithoutSubprojectsInput, Gbif_occurrence_downloadsUncheckedUpdateWithoutSubprojectsInput>
  }

  export type Gbif_occurrence_downloadsUpdateManyWithWhereWithoutSubprojectsInput = {
    where: Gbif_occurrence_downloadsScalarWhereInput
    data: XOR<Gbif_occurrence_downloadsUpdateManyMutationInput, Gbif_occurrence_downloadsUncheckedUpdateManyWithoutSubprojectsInput>
  }

  export type Gbif_occurrencesUpsertWithWhereUniqueWithoutSubprojectsInput = {
    where: Gbif_occurrencesWhereUniqueInput
    update: XOR<Gbif_occurrencesUpdateWithoutSubprojectsInput, Gbif_occurrencesUncheckedUpdateWithoutSubprojectsInput>
    create: XOR<Gbif_occurrencesCreateWithoutSubprojectsInput, Gbif_occurrencesUncheckedCreateWithoutSubprojectsInput>
  }

  export type Gbif_occurrencesUpdateWithWhereUniqueWithoutSubprojectsInput = {
    where: Gbif_occurrencesWhereUniqueInput
    data: XOR<Gbif_occurrencesUpdateWithoutSubprojectsInput, Gbif_occurrencesUncheckedUpdateWithoutSubprojectsInput>
  }

  export type Gbif_occurrencesUpdateManyWithWhereWithoutSubprojectsInput = {
    where: Gbif_occurrencesScalarWhereInput
    data: XOR<Gbif_occurrencesUpdateManyMutationInput, Gbif_occurrencesUncheckedUpdateManyWithoutSubprojectsInput>
  }

  export type GoalsUpsertWithWhereUniqueWithoutSubprojectsInput = {
    where: GoalsWhereUniqueInput
    update: XOR<GoalsUpdateWithoutSubprojectsInput, GoalsUncheckedUpdateWithoutSubprojectsInput>
    create: XOR<GoalsCreateWithoutSubprojectsInput, GoalsUncheckedCreateWithoutSubprojectsInput>
  }

  export type GoalsUpdateWithWhereUniqueWithoutSubprojectsInput = {
    where: GoalsWhereUniqueInput
    data: XOR<GoalsUpdateWithoutSubprojectsInput, GoalsUncheckedUpdateWithoutSubprojectsInput>
  }

  export type GoalsUpdateManyWithWhereWithoutSubprojectsInput = {
    where: GoalsScalarWhereInput
    data: XOR<GoalsUpdateManyMutationInput, GoalsUncheckedUpdateManyWithoutSubprojectsInput>
  }

  export type Subproject_taxaUpsertWithWhereUniqueWithoutSubprojectsInput = {
    where: Subproject_taxaWhereUniqueInput
    update: XOR<Subproject_taxaUpdateWithoutSubprojectsInput, Subproject_taxaUncheckedUpdateWithoutSubprojectsInput>
    create: XOR<Subproject_taxaCreateWithoutSubprojectsInput, Subproject_taxaUncheckedCreateWithoutSubprojectsInput>
  }

  export type Subproject_taxaUpdateWithWhereUniqueWithoutSubprojectsInput = {
    where: Subproject_taxaWhereUniqueInput
    data: XOR<Subproject_taxaUpdateWithoutSubprojectsInput, Subproject_taxaUncheckedUpdateWithoutSubprojectsInput>
  }

  export type Subproject_taxaUpdateManyWithWhereWithoutSubprojectsInput = {
    where: Subproject_taxaScalarWhereInput
    data: XOR<Subproject_taxaUpdateManyMutationInput, Subproject_taxaUncheckedUpdateManyWithoutSubprojectsInput>
  }

  export type Subproject_usersUpsertWithWhereUniqueWithoutSubprojectsInput = {
    where: Subproject_usersWhereUniqueInput
    update: XOR<Subproject_usersUpdateWithoutSubprojectsInput, Subproject_usersUncheckedUpdateWithoutSubprojectsInput>
    create: XOR<Subproject_usersCreateWithoutSubprojectsInput, Subproject_usersUncheckedCreateWithoutSubprojectsInput>
  }

  export type Subproject_usersUpdateWithWhereUniqueWithoutSubprojectsInput = {
    where: Subproject_usersWhereUniqueInput
    data: XOR<Subproject_usersUpdateWithoutSubprojectsInput, Subproject_usersUncheckedUpdateWithoutSubprojectsInput>
  }

  export type Subproject_usersUpdateManyWithWhereWithoutSubprojectsInput = {
    where: Subproject_usersScalarWhereInput
    data: XOR<Subproject_usersUpdateManyMutationInput, Subproject_usersUncheckedUpdateManyWithoutSubprojectsInput>
  }

  export type AccountsUpsertWithoutSubprojectsInput = {
    update: XOR<AccountsUpdateWithoutSubprojectsInput, AccountsUncheckedUpdateWithoutSubprojectsInput>
    create: XOR<AccountsCreateWithoutSubprojectsInput, AccountsUncheckedCreateWithoutSubprojectsInput>
    where?: AccountsWhereInput
  }

  export type AccountsUpdateToOneWithWhereWithoutSubprojectsInput = {
    where?: AccountsWhereInput
    data: XOR<AccountsUpdateWithoutSubprojectsInput, AccountsUncheckedUpdateWithoutSubprojectsInput>
  }

  export type AccountsUpdateWithoutSubprojectsInput = {
    account_id?: StringFieldUpdateOperationsInput | string
    type?: NullableStringFieldUpdateOperationsInput | string | null
    period_start?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    period_end?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    projects_label_by?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    users?: UsersUpdateOneWithoutAccountsNestedInput
    gbif_occurrence_downloads?: Gbif_occurrence_downloadsUpdateManyWithoutAccountsNestedInput
    gbif_occurrences?: Gbif_occurrencesUpdateManyWithoutAccountsNestedInput
    gbif_taxa?: Gbif_taxaUpdateManyWithoutAccountsNestedInput
    goal_report_values?: Goal_report_valuesUpdateManyWithoutAccountsNestedInput
    goal_reports?: Goal_reportsUpdateManyWithoutAccountsNestedInput
    goals?: GoalsUpdateManyWithoutAccountsNestedInput
    list_values?: List_valuesUpdateManyWithoutAccountsNestedInput
    lists?: ListsUpdateManyWithoutAccountsNestedInput
    observation_sources?: Observation_sourcesUpdateManyWithoutAccountsNestedInput
    persons?: PersonsUpdateManyWithoutAccountsNestedInput
    place_levels?: Place_levelsUpdateManyWithoutAccountsNestedInput
    project_users?: Project_usersUpdateManyWithoutAccountsNestedInput
    projects?: ProjectsUpdateManyWithoutAccountsNestedInput
    subproject_taxa?: Subproject_taxaUpdateManyWithoutAccountsNestedInput
    subproject_users?: Subproject_usersUpdateManyWithoutAccountsNestedInput
    taxa?: TaxaUpdateManyWithoutAccountsNestedInput
    taxonomies?: TaxonomiesUpdateManyWithoutAccountsNestedInput
    tile_layers?: Tile_layersUpdateManyWithoutAccountsNestedInput
    ui_options?: Ui_optionsUpdateManyWithoutAccountsNestedInput
    units?: UnitsUpdateManyWithoutAccountsNestedInput
    user_messages?: User_messagesUpdateManyWithoutAccountsNestedInput
  }

  export type AccountsUncheckedUpdateWithoutSubprojectsInput = {
    account_id?: StringFieldUpdateOperationsInput | string
    user_id?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    period_start?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    period_end?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    projects_label_by?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    gbif_occurrence_downloads?: Gbif_occurrence_downloadsUncheckedUpdateManyWithoutAccountsNestedInput
    gbif_occurrences?: Gbif_occurrencesUncheckedUpdateManyWithoutAccountsNestedInput
    gbif_taxa?: Gbif_taxaUncheckedUpdateManyWithoutAccountsNestedInput
    goal_report_values?: Goal_report_valuesUncheckedUpdateManyWithoutAccountsNestedInput
    goal_reports?: Goal_reportsUncheckedUpdateManyWithoutAccountsNestedInput
    goals?: GoalsUncheckedUpdateManyWithoutAccountsNestedInput
    list_values?: List_valuesUncheckedUpdateManyWithoutAccountsNestedInput
    lists?: ListsUncheckedUpdateManyWithoutAccountsNestedInput
    observation_sources?: Observation_sourcesUncheckedUpdateManyWithoutAccountsNestedInput
    persons?: PersonsUncheckedUpdateManyWithoutAccountsNestedInput
    place_levels?: Place_levelsUncheckedUpdateManyWithoutAccountsNestedInput
    project_users?: Project_usersUncheckedUpdateManyWithoutAccountsNestedInput
    projects?: ProjectsUncheckedUpdateManyWithoutAccountsNestedInput
    subproject_taxa?: Subproject_taxaUncheckedUpdateManyWithoutAccountsNestedInput
    subproject_users?: Subproject_usersUncheckedUpdateManyWithoutAccountsNestedInput
    taxa?: TaxaUncheckedUpdateManyWithoutAccountsNestedInput
    taxonomies?: TaxonomiesUncheckedUpdateManyWithoutAccountsNestedInput
    tile_layers?: Tile_layersUncheckedUpdateManyWithoutAccountsNestedInput
    ui_options?: Ui_optionsUncheckedUpdateManyWithoutAccountsNestedInput
    units?: UnitsUncheckedUpdateManyWithoutAccountsNestedInput
    user_messages?: User_messagesUncheckedUpdateManyWithoutAccountsNestedInput
  }

  export type ProjectsUpsertWithoutSubprojectsInput = {
    update: XOR<ProjectsUpdateWithoutSubprojectsInput, ProjectsUncheckedUpdateWithoutSubprojectsInput>
    create: XOR<ProjectsCreateWithoutSubprojectsInput, ProjectsUncheckedCreateWithoutSubprojectsInput>
    where?: ProjectsWhereInput
  }

  export type ProjectsUpdateToOneWithWhereWithoutSubprojectsInput = {
    where?: ProjectsWhereInput
    data: XOR<ProjectsUpdateWithoutSubprojectsInput, ProjectsUncheckedUpdateWithoutSubprojectsInput>
  }

  export type ProjectsUpdateWithoutSubprojectsInput = {
    project_id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableEnumproject_typeFieldUpdateOperationsInput | project_type | null
    subproject_name_singular?: NullableStringFieldUpdateOperationsInput | string | null
    subproject_name_plural?: NullableStringFieldUpdateOperationsInput | string | null
    subproject_order_by?: NullableStringFieldUpdateOperationsInput | string | null
    places_label_by?: NullableStringFieldUpdateOperationsInput | string | null
    places_order_by?: NullableJsonNullValueInput | InputJsonValue
    persons_label_by?: NullableStringFieldUpdateOperationsInput | string | null
    persons_order_by?: NullableStringFieldUpdateOperationsInput | string | null
    goal_reports_label_by?: NullableStringFieldUpdateOperationsInput | string | null
    goal_reports_order_by?: NullableStringFieldUpdateOperationsInput | string | null
    values_on_multiple_levels?: NullableStringFieldUpdateOperationsInput | string | null
    multiple_action_values_on_same_level?: NullableStringFieldUpdateOperationsInput | string | null
    multiple_check_values_on_same_level?: NullableStringFieldUpdateOperationsInput | string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    files_offline?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_projects?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_subprojects?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_places?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_actions?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_checks?: NullableBoolFieldUpdateOperationsInput | boolean | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    gbif_occurrence_downloads?: Gbif_occurrence_downloadsUpdateManyWithoutProjectsNestedInput
    gbif_occurrences?: Gbif_occurrencesUpdateManyWithoutProjectsNestedInput
    gbif_taxa?: Gbif_taxaUpdateManyWithoutProjectsNestedInput
    lists?: ListsUpdateManyWithoutProjectsNestedInput
    observation_sources?: Observation_sourcesUpdateManyWithoutProjectsNestedInput
    persons?: PersonsUpdateManyWithoutProjectsNestedInput
    place_levels?: Place_levelsUpdateManyWithoutProjectsNestedInput
    project_users?: Project_usersUpdateManyWithoutProjectsNestedInput
    accounts?: AccountsUpdateOneWithoutProjectsNestedInput
    taxonomies?: TaxonomiesUpdateManyWithoutProjectsNestedInput
    tile_layers?: Tile_layersUpdateManyWithoutProjectsNestedInput
    units?: UnitsUpdateManyWithoutProjectsNestedInput
  }

  export type ProjectsUncheckedUpdateWithoutSubprojectsInput = {
    project_id?: StringFieldUpdateOperationsInput | string
    account_id?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableEnumproject_typeFieldUpdateOperationsInput | project_type | null
    subproject_name_singular?: NullableStringFieldUpdateOperationsInput | string | null
    subproject_name_plural?: NullableStringFieldUpdateOperationsInput | string | null
    subproject_order_by?: NullableStringFieldUpdateOperationsInput | string | null
    places_label_by?: NullableStringFieldUpdateOperationsInput | string | null
    places_order_by?: NullableJsonNullValueInput | InputJsonValue
    persons_label_by?: NullableStringFieldUpdateOperationsInput | string | null
    persons_order_by?: NullableStringFieldUpdateOperationsInput | string | null
    goal_reports_label_by?: NullableStringFieldUpdateOperationsInput | string | null
    goal_reports_order_by?: NullableStringFieldUpdateOperationsInput | string | null
    values_on_multiple_levels?: NullableStringFieldUpdateOperationsInput | string | null
    multiple_action_values_on_same_level?: NullableStringFieldUpdateOperationsInput | string | null
    multiple_check_values_on_same_level?: NullableStringFieldUpdateOperationsInput | string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    files_offline?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_projects?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_subprojects?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_places?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_actions?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_checks?: NullableBoolFieldUpdateOperationsInput | boolean | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    gbif_occurrence_downloads?: Gbif_occurrence_downloadsUncheckedUpdateManyWithoutProjectsNestedInput
    gbif_occurrences?: Gbif_occurrencesUncheckedUpdateManyWithoutProjectsNestedInput
    gbif_taxa?: Gbif_taxaUncheckedUpdateManyWithoutProjectsNestedInput
    lists?: ListsUncheckedUpdateManyWithoutProjectsNestedInput
    observation_sources?: Observation_sourcesUncheckedUpdateManyWithoutProjectsNestedInput
    persons?: PersonsUncheckedUpdateManyWithoutProjectsNestedInput
    place_levels?: Place_levelsUncheckedUpdateManyWithoutProjectsNestedInput
    project_users?: Project_usersUncheckedUpdateManyWithoutProjectsNestedInput
    taxonomies?: TaxonomiesUncheckedUpdateManyWithoutProjectsNestedInput
    tile_layers?: Tile_layersUncheckedUpdateManyWithoutProjectsNestedInput
    units?: UnitsUncheckedUpdateManyWithoutProjectsNestedInput
  }

  export type Subproject_taxaCreateWithoutTaxaInput = {
    subproject_taxon_id: string
    label?: string | null
    deleted?: boolean | null
    accounts?: AccountsCreateNestedOneWithoutSubproject_taxaInput
    subprojects?: SubprojectsCreateNestedOneWithoutSubproject_taxaInput
  }

  export type Subproject_taxaUncheckedCreateWithoutTaxaInput = {
    subproject_taxon_id: string
    account_id?: string | null
    subproject_id?: string | null
    label?: string | null
    deleted?: boolean | null
  }

  export type Subproject_taxaCreateOrConnectWithoutTaxaInput = {
    where: Subproject_taxaWhereUniqueInput
    create: XOR<Subproject_taxaCreateWithoutTaxaInput, Subproject_taxaUncheckedCreateWithoutTaxaInput>
  }

  export type Subproject_taxaCreateManyTaxaInputEnvelope = {
    data: Enumerable<Subproject_taxaCreateManyTaxaInput>
    skipDuplicates?: boolean
  }

  export type AccountsCreateWithoutTaxaInput = {
    account_id: string
    type?: string | null
    period_start?: Date | string | null
    period_end?: Date | string | null
    projects_label_by?: string | null
    label?: string | null
    users?: UsersCreateNestedOneWithoutAccountsInput
    gbif_occurrence_downloads?: Gbif_occurrence_downloadsCreateNestedManyWithoutAccountsInput
    gbif_occurrences?: Gbif_occurrencesCreateNestedManyWithoutAccountsInput
    gbif_taxa?: Gbif_taxaCreateNestedManyWithoutAccountsInput
    goal_report_values?: Goal_report_valuesCreateNestedManyWithoutAccountsInput
    goal_reports?: Goal_reportsCreateNestedManyWithoutAccountsInput
    goals?: GoalsCreateNestedManyWithoutAccountsInput
    list_values?: List_valuesCreateNestedManyWithoutAccountsInput
    lists?: ListsCreateNestedManyWithoutAccountsInput
    observation_sources?: Observation_sourcesCreateNestedManyWithoutAccountsInput
    persons?: PersonsCreateNestedManyWithoutAccountsInput
    place_levels?: Place_levelsCreateNestedManyWithoutAccountsInput
    project_users?: Project_usersCreateNestedManyWithoutAccountsInput
    projects?: ProjectsCreateNestedManyWithoutAccountsInput
    subproject_taxa?: Subproject_taxaCreateNestedManyWithoutAccountsInput
    subproject_users?: Subproject_usersCreateNestedManyWithoutAccountsInput
    subprojects?: SubprojectsCreateNestedManyWithoutAccountsInput
    taxonomies?: TaxonomiesCreateNestedManyWithoutAccountsInput
    tile_layers?: Tile_layersCreateNestedManyWithoutAccountsInput
    ui_options?: Ui_optionsCreateNestedManyWithoutAccountsInput
    units?: UnitsCreateNestedManyWithoutAccountsInput
    user_messages?: User_messagesCreateNestedManyWithoutAccountsInput
  }

  export type AccountsUncheckedCreateWithoutTaxaInput = {
    account_id: string
    user_id?: string | null
    type?: string | null
    period_start?: Date | string | null
    period_end?: Date | string | null
    projects_label_by?: string | null
    label?: string | null
    gbif_occurrence_downloads?: Gbif_occurrence_downloadsUncheckedCreateNestedManyWithoutAccountsInput
    gbif_occurrences?: Gbif_occurrencesUncheckedCreateNestedManyWithoutAccountsInput
    gbif_taxa?: Gbif_taxaUncheckedCreateNestedManyWithoutAccountsInput
    goal_report_values?: Goal_report_valuesUncheckedCreateNestedManyWithoutAccountsInput
    goal_reports?: Goal_reportsUncheckedCreateNestedManyWithoutAccountsInput
    goals?: GoalsUncheckedCreateNestedManyWithoutAccountsInput
    list_values?: List_valuesUncheckedCreateNestedManyWithoutAccountsInput
    lists?: ListsUncheckedCreateNestedManyWithoutAccountsInput
    observation_sources?: Observation_sourcesUncheckedCreateNestedManyWithoutAccountsInput
    persons?: PersonsUncheckedCreateNestedManyWithoutAccountsInput
    place_levels?: Place_levelsUncheckedCreateNestedManyWithoutAccountsInput
    project_users?: Project_usersUncheckedCreateNestedManyWithoutAccountsInput
    projects?: ProjectsUncheckedCreateNestedManyWithoutAccountsInput
    subproject_taxa?: Subproject_taxaUncheckedCreateNestedManyWithoutAccountsInput
    subproject_users?: Subproject_usersUncheckedCreateNestedManyWithoutAccountsInput
    subprojects?: SubprojectsUncheckedCreateNestedManyWithoutAccountsInput
    taxonomies?: TaxonomiesUncheckedCreateNestedManyWithoutAccountsInput
    tile_layers?: Tile_layersUncheckedCreateNestedManyWithoutAccountsInput
    ui_options?: Ui_optionsUncheckedCreateNestedManyWithoutAccountsInput
    units?: UnitsUncheckedCreateNestedManyWithoutAccountsInput
    user_messages?: User_messagesUncheckedCreateNestedManyWithoutAccountsInput
  }

  export type AccountsCreateOrConnectWithoutTaxaInput = {
    where: AccountsWhereUniqueInput
    create: XOR<AccountsCreateWithoutTaxaInput, AccountsUncheckedCreateWithoutTaxaInput>
  }

  export type TaxonomiesCreateWithoutTaxaInput = {
    taxonomy_id: string
    type?: taxonomy_type | null
    name?: string | null
    url?: string | null
    obsolete?: boolean | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label_replace_by_generated_column?: string | null
    deleted?: boolean | null
    accounts?: AccountsCreateNestedOneWithoutTaxonomiesInput
    projects?: ProjectsCreateNestedOneWithoutTaxonomiesInput
  }

  export type TaxonomiesUncheckedCreateWithoutTaxaInput = {
    taxonomy_id: string
    account_id?: string | null
    project_id?: string | null
    type?: taxonomy_type | null
    name?: string | null
    url?: string | null
    obsolete?: boolean | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label_replace_by_generated_column?: string | null
    deleted?: boolean | null
  }

  export type TaxonomiesCreateOrConnectWithoutTaxaInput = {
    where: TaxonomiesWhereUniqueInput
    create: XOR<TaxonomiesCreateWithoutTaxaInput, TaxonomiesUncheckedCreateWithoutTaxaInput>
  }

  export type Subproject_taxaUpsertWithWhereUniqueWithoutTaxaInput = {
    where: Subproject_taxaWhereUniqueInput
    update: XOR<Subproject_taxaUpdateWithoutTaxaInput, Subproject_taxaUncheckedUpdateWithoutTaxaInput>
    create: XOR<Subproject_taxaCreateWithoutTaxaInput, Subproject_taxaUncheckedCreateWithoutTaxaInput>
  }

  export type Subproject_taxaUpdateWithWhereUniqueWithoutTaxaInput = {
    where: Subproject_taxaWhereUniqueInput
    data: XOR<Subproject_taxaUpdateWithoutTaxaInput, Subproject_taxaUncheckedUpdateWithoutTaxaInput>
  }

  export type Subproject_taxaUpdateManyWithWhereWithoutTaxaInput = {
    where: Subproject_taxaScalarWhereInput
    data: XOR<Subproject_taxaUpdateManyMutationInput, Subproject_taxaUncheckedUpdateManyWithoutTaxaInput>
  }

  export type AccountsUpsertWithoutTaxaInput = {
    update: XOR<AccountsUpdateWithoutTaxaInput, AccountsUncheckedUpdateWithoutTaxaInput>
    create: XOR<AccountsCreateWithoutTaxaInput, AccountsUncheckedCreateWithoutTaxaInput>
    where?: AccountsWhereInput
  }

  export type AccountsUpdateToOneWithWhereWithoutTaxaInput = {
    where?: AccountsWhereInput
    data: XOR<AccountsUpdateWithoutTaxaInput, AccountsUncheckedUpdateWithoutTaxaInput>
  }

  export type AccountsUpdateWithoutTaxaInput = {
    account_id?: StringFieldUpdateOperationsInput | string
    type?: NullableStringFieldUpdateOperationsInput | string | null
    period_start?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    period_end?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    projects_label_by?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    users?: UsersUpdateOneWithoutAccountsNestedInput
    gbif_occurrence_downloads?: Gbif_occurrence_downloadsUpdateManyWithoutAccountsNestedInput
    gbif_occurrences?: Gbif_occurrencesUpdateManyWithoutAccountsNestedInput
    gbif_taxa?: Gbif_taxaUpdateManyWithoutAccountsNestedInput
    goal_report_values?: Goal_report_valuesUpdateManyWithoutAccountsNestedInput
    goal_reports?: Goal_reportsUpdateManyWithoutAccountsNestedInput
    goals?: GoalsUpdateManyWithoutAccountsNestedInput
    list_values?: List_valuesUpdateManyWithoutAccountsNestedInput
    lists?: ListsUpdateManyWithoutAccountsNestedInput
    observation_sources?: Observation_sourcesUpdateManyWithoutAccountsNestedInput
    persons?: PersonsUpdateManyWithoutAccountsNestedInput
    place_levels?: Place_levelsUpdateManyWithoutAccountsNestedInput
    project_users?: Project_usersUpdateManyWithoutAccountsNestedInput
    projects?: ProjectsUpdateManyWithoutAccountsNestedInput
    subproject_taxa?: Subproject_taxaUpdateManyWithoutAccountsNestedInput
    subproject_users?: Subproject_usersUpdateManyWithoutAccountsNestedInput
    subprojects?: SubprojectsUpdateManyWithoutAccountsNestedInput
    taxonomies?: TaxonomiesUpdateManyWithoutAccountsNestedInput
    tile_layers?: Tile_layersUpdateManyWithoutAccountsNestedInput
    ui_options?: Ui_optionsUpdateManyWithoutAccountsNestedInput
    units?: UnitsUpdateManyWithoutAccountsNestedInput
    user_messages?: User_messagesUpdateManyWithoutAccountsNestedInput
  }

  export type AccountsUncheckedUpdateWithoutTaxaInput = {
    account_id?: StringFieldUpdateOperationsInput | string
    user_id?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    period_start?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    period_end?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    projects_label_by?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    gbif_occurrence_downloads?: Gbif_occurrence_downloadsUncheckedUpdateManyWithoutAccountsNestedInput
    gbif_occurrences?: Gbif_occurrencesUncheckedUpdateManyWithoutAccountsNestedInput
    gbif_taxa?: Gbif_taxaUncheckedUpdateManyWithoutAccountsNestedInput
    goal_report_values?: Goal_report_valuesUncheckedUpdateManyWithoutAccountsNestedInput
    goal_reports?: Goal_reportsUncheckedUpdateManyWithoutAccountsNestedInput
    goals?: GoalsUncheckedUpdateManyWithoutAccountsNestedInput
    list_values?: List_valuesUncheckedUpdateManyWithoutAccountsNestedInput
    lists?: ListsUncheckedUpdateManyWithoutAccountsNestedInput
    observation_sources?: Observation_sourcesUncheckedUpdateManyWithoutAccountsNestedInput
    persons?: PersonsUncheckedUpdateManyWithoutAccountsNestedInput
    place_levels?: Place_levelsUncheckedUpdateManyWithoutAccountsNestedInput
    project_users?: Project_usersUncheckedUpdateManyWithoutAccountsNestedInput
    projects?: ProjectsUncheckedUpdateManyWithoutAccountsNestedInput
    subproject_taxa?: Subproject_taxaUncheckedUpdateManyWithoutAccountsNestedInput
    subproject_users?: Subproject_usersUncheckedUpdateManyWithoutAccountsNestedInput
    subprojects?: SubprojectsUncheckedUpdateManyWithoutAccountsNestedInput
    taxonomies?: TaxonomiesUncheckedUpdateManyWithoutAccountsNestedInput
    tile_layers?: Tile_layersUncheckedUpdateManyWithoutAccountsNestedInput
    ui_options?: Ui_optionsUncheckedUpdateManyWithoutAccountsNestedInput
    units?: UnitsUncheckedUpdateManyWithoutAccountsNestedInput
    user_messages?: User_messagesUncheckedUpdateManyWithoutAccountsNestedInput
  }

  export type TaxonomiesUpsertWithoutTaxaInput = {
    update: XOR<TaxonomiesUpdateWithoutTaxaInput, TaxonomiesUncheckedUpdateWithoutTaxaInput>
    create: XOR<TaxonomiesCreateWithoutTaxaInput, TaxonomiesUncheckedCreateWithoutTaxaInput>
    where?: TaxonomiesWhereInput
  }

  export type TaxonomiesUpdateToOneWithWhereWithoutTaxaInput = {
    where?: TaxonomiesWhereInput
    data: XOR<TaxonomiesUpdateWithoutTaxaInput, TaxonomiesUncheckedUpdateWithoutTaxaInput>
  }

  export type TaxonomiesUpdateWithoutTaxaInput = {
    taxonomy_id?: StringFieldUpdateOperationsInput | string
    type?: NullableEnumtaxonomy_typeFieldUpdateOperationsInput | taxonomy_type | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    url?: NullableStringFieldUpdateOperationsInput | string | null
    obsolete?: NullableBoolFieldUpdateOperationsInput | boolean | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label_replace_by_generated_column?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    accounts?: AccountsUpdateOneWithoutTaxonomiesNestedInput
    projects?: ProjectsUpdateOneWithoutTaxonomiesNestedInput
  }

  export type TaxonomiesUncheckedUpdateWithoutTaxaInput = {
    taxonomy_id?: StringFieldUpdateOperationsInput | string
    account_id?: NullableStringFieldUpdateOperationsInput | string | null
    project_id?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableEnumtaxonomy_typeFieldUpdateOperationsInput | taxonomy_type | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    url?: NullableStringFieldUpdateOperationsInput | string | null
    obsolete?: NullableBoolFieldUpdateOperationsInput | boolean | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label_replace_by_generated_column?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type TaxaCreateWithoutTaxonomiesInput = {
    taxon_id: string
    name?: string | null
    id_in_source?: string | null
    url?: string | null
    label?: string | null
    deleted?: boolean | null
    subproject_taxa?: Subproject_taxaCreateNestedManyWithoutTaxaInput
    accounts?: AccountsCreateNestedOneWithoutTaxaInput
  }

  export type TaxaUncheckedCreateWithoutTaxonomiesInput = {
    taxon_id: string
    account_id?: string | null
    name?: string | null
    id_in_source?: string | null
    url?: string | null
    label?: string | null
    deleted?: boolean | null
    subproject_taxa?: Subproject_taxaUncheckedCreateNestedManyWithoutTaxaInput
  }

  export type TaxaCreateOrConnectWithoutTaxonomiesInput = {
    where: TaxaWhereUniqueInput
    create: XOR<TaxaCreateWithoutTaxonomiesInput, TaxaUncheckedCreateWithoutTaxonomiesInput>
  }

  export type TaxaCreateManyTaxonomiesInputEnvelope = {
    data: Enumerable<TaxaCreateManyTaxonomiesInput>
    skipDuplicates?: boolean
  }

  export type AccountsCreateWithoutTaxonomiesInput = {
    account_id: string
    type?: string | null
    period_start?: Date | string | null
    period_end?: Date | string | null
    projects_label_by?: string | null
    label?: string | null
    users?: UsersCreateNestedOneWithoutAccountsInput
    gbif_occurrence_downloads?: Gbif_occurrence_downloadsCreateNestedManyWithoutAccountsInput
    gbif_occurrences?: Gbif_occurrencesCreateNestedManyWithoutAccountsInput
    gbif_taxa?: Gbif_taxaCreateNestedManyWithoutAccountsInput
    goal_report_values?: Goal_report_valuesCreateNestedManyWithoutAccountsInput
    goal_reports?: Goal_reportsCreateNestedManyWithoutAccountsInput
    goals?: GoalsCreateNestedManyWithoutAccountsInput
    list_values?: List_valuesCreateNestedManyWithoutAccountsInput
    lists?: ListsCreateNestedManyWithoutAccountsInput
    observation_sources?: Observation_sourcesCreateNestedManyWithoutAccountsInput
    persons?: PersonsCreateNestedManyWithoutAccountsInput
    place_levels?: Place_levelsCreateNestedManyWithoutAccountsInput
    project_users?: Project_usersCreateNestedManyWithoutAccountsInput
    projects?: ProjectsCreateNestedManyWithoutAccountsInput
    subproject_taxa?: Subproject_taxaCreateNestedManyWithoutAccountsInput
    subproject_users?: Subproject_usersCreateNestedManyWithoutAccountsInput
    subprojects?: SubprojectsCreateNestedManyWithoutAccountsInput
    taxa?: TaxaCreateNestedManyWithoutAccountsInput
    tile_layers?: Tile_layersCreateNestedManyWithoutAccountsInput
    ui_options?: Ui_optionsCreateNestedManyWithoutAccountsInput
    units?: UnitsCreateNestedManyWithoutAccountsInput
    user_messages?: User_messagesCreateNestedManyWithoutAccountsInput
  }

  export type AccountsUncheckedCreateWithoutTaxonomiesInput = {
    account_id: string
    user_id?: string | null
    type?: string | null
    period_start?: Date | string | null
    period_end?: Date | string | null
    projects_label_by?: string | null
    label?: string | null
    gbif_occurrence_downloads?: Gbif_occurrence_downloadsUncheckedCreateNestedManyWithoutAccountsInput
    gbif_occurrences?: Gbif_occurrencesUncheckedCreateNestedManyWithoutAccountsInput
    gbif_taxa?: Gbif_taxaUncheckedCreateNestedManyWithoutAccountsInput
    goal_report_values?: Goal_report_valuesUncheckedCreateNestedManyWithoutAccountsInput
    goal_reports?: Goal_reportsUncheckedCreateNestedManyWithoutAccountsInput
    goals?: GoalsUncheckedCreateNestedManyWithoutAccountsInput
    list_values?: List_valuesUncheckedCreateNestedManyWithoutAccountsInput
    lists?: ListsUncheckedCreateNestedManyWithoutAccountsInput
    observation_sources?: Observation_sourcesUncheckedCreateNestedManyWithoutAccountsInput
    persons?: PersonsUncheckedCreateNestedManyWithoutAccountsInput
    place_levels?: Place_levelsUncheckedCreateNestedManyWithoutAccountsInput
    project_users?: Project_usersUncheckedCreateNestedManyWithoutAccountsInput
    projects?: ProjectsUncheckedCreateNestedManyWithoutAccountsInput
    subproject_taxa?: Subproject_taxaUncheckedCreateNestedManyWithoutAccountsInput
    subproject_users?: Subproject_usersUncheckedCreateNestedManyWithoutAccountsInput
    subprojects?: SubprojectsUncheckedCreateNestedManyWithoutAccountsInput
    taxa?: TaxaUncheckedCreateNestedManyWithoutAccountsInput
    tile_layers?: Tile_layersUncheckedCreateNestedManyWithoutAccountsInput
    ui_options?: Ui_optionsUncheckedCreateNestedManyWithoutAccountsInput
    units?: UnitsUncheckedCreateNestedManyWithoutAccountsInput
    user_messages?: User_messagesUncheckedCreateNestedManyWithoutAccountsInput
  }

  export type AccountsCreateOrConnectWithoutTaxonomiesInput = {
    where: AccountsWhereUniqueInput
    create: XOR<AccountsCreateWithoutTaxonomiesInput, AccountsUncheckedCreateWithoutTaxonomiesInput>
  }

  export type ProjectsCreateWithoutTaxonomiesInput = {
    project_id: string
    name?: string | null
    label?: string | null
    type?: project_type | null
    subproject_name_singular?: string | null
    subproject_name_plural?: string | null
    subproject_order_by?: string | null
    places_label_by?: string | null
    places_order_by?: NullableJsonNullValueInput | InputJsonValue
    persons_label_by?: string | null
    persons_order_by?: string | null
    goal_reports_label_by?: string | null
    goal_reports_order_by?: string | null
    values_on_multiple_levels?: string | null
    multiple_action_values_on_same_level?: string | null
    multiple_check_values_on_same_level?: string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    files_offline?: boolean | null
    files_active_projects?: boolean | null
    files_active_subprojects?: boolean | null
    files_active_places?: boolean | null
    files_active_actions?: boolean | null
    files_active_checks?: boolean | null
    deleted?: boolean | null
    gbif_occurrence_downloads?: Gbif_occurrence_downloadsCreateNestedManyWithoutProjectsInput
    gbif_occurrences?: Gbif_occurrencesCreateNestedManyWithoutProjectsInput
    gbif_taxa?: Gbif_taxaCreateNestedManyWithoutProjectsInput
    lists?: ListsCreateNestedManyWithoutProjectsInput
    observation_sources?: Observation_sourcesCreateNestedManyWithoutProjectsInput
    persons?: PersonsCreateNestedManyWithoutProjectsInput
    place_levels?: Place_levelsCreateNestedManyWithoutProjectsInput
    project_users?: Project_usersCreateNestedManyWithoutProjectsInput
    accounts?: AccountsCreateNestedOneWithoutProjectsInput
    subprojects?: SubprojectsCreateNestedManyWithoutProjectsInput
    tile_layers?: Tile_layersCreateNestedManyWithoutProjectsInput
    units?: UnitsCreateNestedManyWithoutProjectsInput
  }

  export type ProjectsUncheckedCreateWithoutTaxonomiesInput = {
    project_id: string
    account_id?: string | null
    name?: string | null
    label?: string | null
    type?: project_type | null
    subproject_name_singular?: string | null
    subproject_name_plural?: string | null
    subproject_order_by?: string | null
    places_label_by?: string | null
    places_order_by?: NullableJsonNullValueInput | InputJsonValue
    persons_label_by?: string | null
    persons_order_by?: string | null
    goal_reports_label_by?: string | null
    goal_reports_order_by?: string | null
    values_on_multiple_levels?: string | null
    multiple_action_values_on_same_level?: string | null
    multiple_check_values_on_same_level?: string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    files_offline?: boolean | null
    files_active_projects?: boolean | null
    files_active_subprojects?: boolean | null
    files_active_places?: boolean | null
    files_active_actions?: boolean | null
    files_active_checks?: boolean | null
    deleted?: boolean | null
    gbif_occurrence_downloads?: Gbif_occurrence_downloadsUncheckedCreateNestedManyWithoutProjectsInput
    gbif_occurrences?: Gbif_occurrencesUncheckedCreateNestedManyWithoutProjectsInput
    gbif_taxa?: Gbif_taxaUncheckedCreateNestedManyWithoutProjectsInput
    lists?: ListsUncheckedCreateNestedManyWithoutProjectsInput
    observation_sources?: Observation_sourcesUncheckedCreateNestedManyWithoutProjectsInput
    persons?: PersonsUncheckedCreateNestedManyWithoutProjectsInput
    place_levels?: Place_levelsUncheckedCreateNestedManyWithoutProjectsInput
    project_users?: Project_usersUncheckedCreateNestedManyWithoutProjectsInput
    subprojects?: SubprojectsUncheckedCreateNestedManyWithoutProjectsInput
    tile_layers?: Tile_layersUncheckedCreateNestedManyWithoutProjectsInput
    units?: UnitsUncheckedCreateNestedManyWithoutProjectsInput
  }

  export type ProjectsCreateOrConnectWithoutTaxonomiesInput = {
    where: ProjectsWhereUniqueInput
    create: XOR<ProjectsCreateWithoutTaxonomiesInput, ProjectsUncheckedCreateWithoutTaxonomiesInput>
  }

  export type TaxaUpsertWithWhereUniqueWithoutTaxonomiesInput = {
    where: TaxaWhereUniqueInput
    update: XOR<TaxaUpdateWithoutTaxonomiesInput, TaxaUncheckedUpdateWithoutTaxonomiesInput>
    create: XOR<TaxaCreateWithoutTaxonomiesInput, TaxaUncheckedCreateWithoutTaxonomiesInput>
  }

  export type TaxaUpdateWithWhereUniqueWithoutTaxonomiesInput = {
    where: TaxaWhereUniqueInput
    data: XOR<TaxaUpdateWithoutTaxonomiesInput, TaxaUncheckedUpdateWithoutTaxonomiesInput>
  }

  export type TaxaUpdateManyWithWhereWithoutTaxonomiesInput = {
    where: TaxaScalarWhereInput
    data: XOR<TaxaUpdateManyMutationInput, TaxaUncheckedUpdateManyWithoutTaxonomiesInput>
  }

  export type AccountsUpsertWithoutTaxonomiesInput = {
    update: XOR<AccountsUpdateWithoutTaxonomiesInput, AccountsUncheckedUpdateWithoutTaxonomiesInput>
    create: XOR<AccountsCreateWithoutTaxonomiesInput, AccountsUncheckedCreateWithoutTaxonomiesInput>
    where?: AccountsWhereInput
  }

  export type AccountsUpdateToOneWithWhereWithoutTaxonomiesInput = {
    where?: AccountsWhereInput
    data: XOR<AccountsUpdateWithoutTaxonomiesInput, AccountsUncheckedUpdateWithoutTaxonomiesInput>
  }

  export type AccountsUpdateWithoutTaxonomiesInput = {
    account_id?: StringFieldUpdateOperationsInput | string
    type?: NullableStringFieldUpdateOperationsInput | string | null
    period_start?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    period_end?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    projects_label_by?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    users?: UsersUpdateOneWithoutAccountsNestedInput
    gbif_occurrence_downloads?: Gbif_occurrence_downloadsUpdateManyWithoutAccountsNestedInput
    gbif_occurrences?: Gbif_occurrencesUpdateManyWithoutAccountsNestedInput
    gbif_taxa?: Gbif_taxaUpdateManyWithoutAccountsNestedInput
    goal_report_values?: Goal_report_valuesUpdateManyWithoutAccountsNestedInput
    goal_reports?: Goal_reportsUpdateManyWithoutAccountsNestedInput
    goals?: GoalsUpdateManyWithoutAccountsNestedInput
    list_values?: List_valuesUpdateManyWithoutAccountsNestedInput
    lists?: ListsUpdateManyWithoutAccountsNestedInput
    observation_sources?: Observation_sourcesUpdateManyWithoutAccountsNestedInput
    persons?: PersonsUpdateManyWithoutAccountsNestedInput
    place_levels?: Place_levelsUpdateManyWithoutAccountsNestedInput
    project_users?: Project_usersUpdateManyWithoutAccountsNestedInput
    projects?: ProjectsUpdateManyWithoutAccountsNestedInput
    subproject_taxa?: Subproject_taxaUpdateManyWithoutAccountsNestedInput
    subproject_users?: Subproject_usersUpdateManyWithoutAccountsNestedInput
    subprojects?: SubprojectsUpdateManyWithoutAccountsNestedInput
    taxa?: TaxaUpdateManyWithoutAccountsNestedInput
    tile_layers?: Tile_layersUpdateManyWithoutAccountsNestedInput
    ui_options?: Ui_optionsUpdateManyWithoutAccountsNestedInput
    units?: UnitsUpdateManyWithoutAccountsNestedInput
    user_messages?: User_messagesUpdateManyWithoutAccountsNestedInput
  }

  export type AccountsUncheckedUpdateWithoutTaxonomiesInput = {
    account_id?: StringFieldUpdateOperationsInput | string
    user_id?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    period_start?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    period_end?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    projects_label_by?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    gbif_occurrence_downloads?: Gbif_occurrence_downloadsUncheckedUpdateManyWithoutAccountsNestedInput
    gbif_occurrences?: Gbif_occurrencesUncheckedUpdateManyWithoutAccountsNestedInput
    gbif_taxa?: Gbif_taxaUncheckedUpdateManyWithoutAccountsNestedInput
    goal_report_values?: Goal_report_valuesUncheckedUpdateManyWithoutAccountsNestedInput
    goal_reports?: Goal_reportsUncheckedUpdateManyWithoutAccountsNestedInput
    goals?: GoalsUncheckedUpdateManyWithoutAccountsNestedInput
    list_values?: List_valuesUncheckedUpdateManyWithoutAccountsNestedInput
    lists?: ListsUncheckedUpdateManyWithoutAccountsNestedInput
    observation_sources?: Observation_sourcesUncheckedUpdateManyWithoutAccountsNestedInput
    persons?: PersonsUncheckedUpdateManyWithoutAccountsNestedInput
    place_levels?: Place_levelsUncheckedUpdateManyWithoutAccountsNestedInput
    project_users?: Project_usersUncheckedUpdateManyWithoutAccountsNestedInput
    projects?: ProjectsUncheckedUpdateManyWithoutAccountsNestedInput
    subproject_taxa?: Subproject_taxaUncheckedUpdateManyWithoutAccountsNestedInput
    subproject_users?: Subproject_usersUncheckedUpdateManyWithoutAccountsNestedInput
    subprojects?: SubprojectsUncheckedUpdateManyWithoutAccountsNestedInput
    taxa?: TaxaUncheckedUpdateManyWithoutAccountsNestedInput
    tile_layers?: Tile_layersUncheckedUpdateManyWithoutAccountsNestedInput
    ui_options?: Ui_optionsUncheckedUpdateManyWithoutAccountsNestedInput
    units?: UnitsUncheckedUpdateManyWithoutAccountsNestedInput
    user_messages?: User_messagesUncheckedUpdateManyWithoutAccountsNestedInput
  }

  export type ProjectsUpsertWithoutTaxonomiesInput = {
    update: XOR<ProjectsUpdateWithoutTaxonomiesInput, ProjectsUncheckedUpdateWithoutTaxonomiesInput>
    create: XOR<ProjectsCreateWithoutTaxonomiesInput, ProjectsUncheckedCreateWithoutTaxonomiesInput>
    where?: ProjectsWhereInput
  }

  export type ProjectsUpdateToOneWithWhereWithoutTaxonomiesInput = {
    where?: ProjectsWhereInput
    data: XOR<ProjectsUpdateWithoutTaxonomiesInput, ProjectsUncheckedUpdateWithoutTaxonomiesInput>
  }

  export type ProjectsUpdateWithoutTaxonomiesInput = {
    project_id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableEnumproject_typeFieldUpdateOperationsInput | project_type | null
    subproject_name_singular?: NullableStringFieldUpdateOperationsInput | string | null
    subproject_name_plural?: NullableStringFieldUpdateOperationsInput | string | null
    subproject_order_by?: NullableStringFieldUpdateOperationsInput | string | null
    places_label_by?: NullableStringFieldUpdateOperationsInput | string | null
    places_order_by?: NullableJsonNullValueInput | InputJsonValue
    persons_label_by?: NullableStringFieldUpdateOperationsInput | string | null
    persons_order_by?: NullableStringFieldUpdateOperationsInput | string | null
    goal_reports_label_by?: NullableStringFieldUpdateOperationsInput | string | null
    goal_reports_order_by?: NullableStringFieldUpdateOperationsInput | string | null
    values_on_multiple_levels?: NullableStringFieldUpdateOperationsInput | string | null
    multiple_action_values_on_same_level?: NullableStringFieldUpdateOperationsInput | string | null
    multiple_check_values_on_same_level?: NullableStringFieldUpdateOperationsInput | string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    files_offline?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_projects?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_subprojects?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_places?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_actions?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_checks?: NullableBoolFieldUpdateOperationsInput | boolean | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    gbif_occurrence_downloads?: Gbif_occurrence_downloadsUpdateManyWithoutProjectsNestedInput
    gbif_occurrences?: Gbif_occurrencesUpdateManyWithoutProjectsNestedInput
    gbif_taxa?: Gbif_taxaUpdateManyWithoutProjectsNestedInput
    lists?: ListsUpdateManyWithoutProjectsNestedInput
    observation_sources?: Observation_sourcesUpdateManyWithoutProjectsNestedInput
    persons?: PersonsUpdateManyWithoutProjectsNestedInput
    place_levels?: Place_levelsUpdateManyWithoutProjectsNestedInput
    project_users?: Project_usersUpdateManyWithoutProjectsNestedInput
    accounts?: AccountsUpdateOneWithoutProjectsNestedInput
    subprojects?: SubprojectsUpdateManyWithoutProjectsNestedInput
    tile_layers?: Tile_layersUpdateManyWithoutProjectsNestedInput
    units?: UnitsUpdateManyWithoutProjectsNestedInput
  }

  export type ProjectsUncheckedUpdateWithoutTaxonomiesInput = {
    project_id?: StringFieldUpdateOperationsInput | string
    account_id?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableEnumproject_typeFieldUpdateOperationsInput | project_type | null
    subproject_name_singular?: NullableStringFieldUpdateOperationsInput | string | null
    subproject_name_plural?: NullableStringFieldUpdateOperationsInput | string | null
    subproject_order_by?: NullableStringFieldUpdateOperationsInput | string | null
    places_label_by?: NullableStringFieldUpdateOperationsInput | string | null
    places_order_by?: NullableJsonNullValueInput | InputJsonValue
    persons_label_by?: NullableStringFieldUpdateOperationsInput | string | null
    persons_order_by?: NullableStringFieldUpdateOperationsInput | string | null
    goal_reports_label_by?: NullableStringFieldUpdateOperationsInput | string | null
    goal_reports_order_by?: NullableStringFieldUpdateOperationsInput | string | null
    values_on_multiple_levels?: NullableStringFieldUpdateOperationsInput | string | null
    multiple_action_values_on_same_level?: NullableStringFieldUpdateOperationsInput | string | null
    multiple_check_values_on_same_level?: NullableStringFieldUpdateOperationsInput | string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    files_offline?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_projects?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_subprojects?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_places?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_actions?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_checks?: NullableBoolFieldUpdateOperationsInput | boolean | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    gbif_occurrence_downloads?: Gbif_occurrence_downloadsUncheckedUpdateManyWithoutProjectsNestedInput
    gbif_occurrences?: Gbif_occurrencesUncheckedUpdateManyWithoutProjectsNestedInput
    gbif_taxa?: Gbif_taxaUncheckedUpdateManyWithoutProjectsNestedInput
    lists?: ListsUncheckedUpdateManyWithoutProjectsNestedInput
    observation_sources?: Observation_sourcesUncheckedUpdateManyWithoutProjectsNestedInput
    persons?: PersonsUncheckedUpdateManyWithoutProjectsNestedInput
    place_levels?: Place_levelsUncheckedUpdateManyWithoutProjectsNestedInput
    project_users?: Project_usersUncheckedUpdateManyWithoutProjectsNestedInput
    subprojects?: SubprojectsUncheckedUpdateManyWithoutProjectsNestedInput
    tile_layers?: Tile_layersUncheckedUpdateManyWithoutProjectsNestedInput
    units?: UnitsUncheckedUpdateManyWithoutProjectsNestedInput
  }

  export type AccountsCreateWithoutTile_layersInput = {
    account_id: string
    type?: string | null
    period_start?: Date | string | null
    period_end?: Date | string | null
    projects_label_by?: string | null
    label?: string | null
    users?: UsersCreateNestedOneWithoutAccountsInput
    gbif_occurrence_downloads?: Gbif_occurrence_downloadsCreateNestedManyWithoutAccountsInput
    gbif_occurrences?: Gbif_occurrencesCreateNestedManyWithoutAccountsInput
    gbif_taxa?: Gbif_taxaCreateNestedManyWithoutAccountsInput
    goal_report_values?: Goal_report_valuesCreateNestedManyWithoutAccountsInput
    goal_reports?: Goal_reportsCreateNestedManyWithoutAccountsInput
    goals?: GoalsCreateNestedManyWithoutAccountsInput
    list_values?: List_valuesCreateNestedManyWithoutAccountsInput
    lists?: ListsCreateNestedManyWithoutAccountsInput
    observation_sources?: Observation_sourcesCreateNestedManyWithoutAccountsInput
    persons?: PersonsCreateNestedManyWithoutAccountsInput
    place_levels?: Place_levelsCreateNestedManyWithoutAccountsInput
    project_users?: Project_usersCreateNestedManyWithoutAccountsInput
    projects?: ProjectsCreateNestedManyWithoutAccountsInput
    subproject_taxa?: Subproject_taxaCreateNestedManyWithoutAccountsInput
    subproject_users?: Subproject_usersCreateNestedManyWithoutAccountsInput
    subprojects?: SubprojectsCreateNestedManyWithoutAccountsInput
    taxa?: TaxaCreateNestedManyWithoutAccountsInput
    taxonomies?: TaxonomiesCreateNestedManyWithoutAccountsInput
    ui_options?: Ui_optionsCreateNestedManyWithoutAccountsInput
    units?: UnitsCreateNestedManyWithoutAccountsInput
    user_messages?: User_messagesCreateNestedManyWithoutAccountsInput
  }

  export type AccountsUncheckedCreateWithoutTile_layersInput = {
    account_id: string
    user_id?: string | null
    type?: string | null
    period_start?: Date | string | null
    period_end?: Date | string | null
    projects_label_by?: string | null
    label?: string | null
    gbif_occurrence_downloads?: Gbif_occurrence_downloadsUncheckedCreateNestedManyWithoutAccountsInput
    gbif_occurrences?: Gbif_occurrencesUncheckedCreateNestedManyWithoutAccountsInput
    gbif_taxa?: Gbif_taxaUncheckedCreateNestedManyWithoutAccountsInput
    goal_report_values?: Goal_report_valuesUncheckedCreateNestedManyWithoutAccountsInput
    goal_reports?: Goal_reportsUncheckedCreateNestedManyWithoutAccountsInput
    goals?: GoalsUncheckedCreateNestedManyWithoutAccountsInput
    list_values?: List_valuesUncheckedCreateNestedManyWithoutAccountsInput
    lists?: ListsUncheckedCreateNestedManyWithoutAccountsInput
    observation_sources?: Observation_sourcesUncheckedCreateNestedManyWithoutAccountsInput
    persons?: PersonsUncheckedCreateNestedManyWithoutAccountsInput
    place_levels?: Place_levelsUncheckedCreateNestedManyWithoutAccountsInput
    project_users?: Project_usersUncheckedCreateNestedManyWithoutAccountsInput
    projects?: ProjectsUncheckedCreateNestedManyWithoutAccountsInput
    subproject_taxa?: Subproject_taxaUncheckedCreateNestedManyWithoutAccountsInput
    subproject_users?: Subproject_usersUncheckedCreateNestedManyWithoutAccountsInput
    subprojects?: SubprojectsUncheckedCreateNestedManyWithoutAccountsInput
    taxa?: TaxaUncheckedCreateNestedManyWithoutAccountsInput
    taxonomies?: TaxonomiesUncheckedCreateNestedManyWithoutAccountsInput
    ui_options?: Ui_optionsUncheckedCreateNestedManyWithoutAccountsInput
    units?: UnitsUncheckedCreateNestedManyWithoutAccountsInput
    user_messages?: User_messagesUncheckedCreateNestedManyWithoutAccountsInput
  }

  export type AccountsCreateOrConnectWithoutTile_layersInput = {
    where: AccountsWhereUniqueInput
    create: XOR<AccountsCreateWithoutTile_layersInput, AccountsUncheckedCreateWithoutTile_layersInput>
  }

  export type ProjectsCreateWithoutTile_layersInput = {
    project_id: string
    name?: string | null
    label?: string | null
    type?: project_type | null
    subproject_name_singular?: string | null
    subproject_name_plural?: string | null
    subproject_order_by?: string | null
    places_label_by?: string | null
    places_order_by?: NullableJsonNullValueInput | InputJsonValue
    persons_label_by?: string | null
    persons_order_by?: string | null
    goal_reports_label_by?: string | null
    goal_reports_order_by?: string | null
    values_on_multiple_levels?: string | null
    multiple_action_values_on_same_level?: string | null
    multiple_check_values_on_same_level?: string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    files_offline?: boolean | null
    files_active_projects?: boolean | null
    files_active_subprojects?: boolean | null
    files_active_places?: boolean | null
    files_active_actions?: boolean | null
    files_active_checks?: boolean | null
    deleted?: boolean | null
    gbif_occurrence_downloads?: Gbif_occurrence_downloadsCreateNestedManyWithoutProjectsInput
    gbif_occurrences?: Gbif_occurrencesCreateNestedManyWithoutProjectsInput
    gbif_taxa?: Gbif_taxaCreateNestedManyWithoutProjectsInput
    lists?: ListsCreateNestedManyWithoutProjectsInput
    observation_sources?: Observation_sourcesCreateNestedManyWithoutProjectsInput
    persons?: PersonsCreateNestedManyWithoutProjectsInput
    place_levels?: Place_levelsCreateNestedManyWithoutProjectsInput
    project_users?: Project_usersCreateNestedManyWithoutProjectsInput
    accounts?: AccountsCreateNestedOneWithoutProjectsInput
    subprojects?: SubprojectsCreateNestedManyWithoutProjectsInput
    taxonomies?: TaxonomiesCreateNestedManyWithoutProjectsInput
    units?: UnitsCreateNestedManyWithoutProjectsInput
  }

  export type ProjectsUncheckedCreateWithoutTile_layersInput = {
    project_id: string
    account_id?: string | null
    name?: string | null
    label?: string | null
    type?: project_type | null
    subproject_name_singular?: string | null
    subproject_name_plural?: string | null
    subproject_order_by?: string | null
    places_label_by?: string | null
    places_order_by?: NullableJsonNullValueInput | InputJsonValue
    persons_label_by?: string | null
    persons_order_by?: string | null
    goal_reports_label_by?: string | null
    goal_reports_order_by?: string | null
    values_on_multiple_levels?: string | null
    multiple_action_values_on_same_level?: string | null
    multiple_check_values_on_same_level?: string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    files_offline?: boolean | null
    files_active_projects?: boolean | null
    files_active_subprojects?: boolean | null
    files_active_places?: boolean | null
    files_active_actions?: boolean | null
    files_active_checks?: boolean | null
    deleted?: boolean | null
    gbif_occurrence_downloads?: Gbif_occurrence_downloadsUncheckedCreateNestedManyWithoutProjectsInput
    gbif_occurrences?: Gbif_occurrencesUncheckedCreateNestedManyWithoutProjectsInput
    gbif_taxa?: Gbif_taxaUncheckedCreateNestedManyWithoutProjectsInput
    lists?: ListsUncheckedCreateNestedManyWithoutProjectsInput
    observation_sources?: Observation_sourcesUncheckedCreateNestedManyWithoutProjectsInput
    persons?: PersonsUncheckedCreateNestedManyWithoutProjectsInput
    place_levels?: Place_levelsUncheckedCreateNestedManyWithoutProjectsInput
    project_users?: Project_usersUncheckedCreateNestedManyWithoutProjectsInput
    subprojects?: SubprojectsUncheckedCreateNestedManyWithoutProjectsInput
    taxonomies?: TaxonomiesUncheckedCreateNestedManyWithoutProjectsInput
    units?: UnitsUncheckedCreateNestedManyWithoutProjectsInput
  }

  export type ProjectsCreateOrConnectWithoutTile_layersInput = {
    where: ProjectsWhereUniqueInput
    create: XOR<ProjectsCreateWithoutTile_layersInput, ProjectsUncheckedCreateWithoutTile_layersInput>
  }

  export type AccountsUpsertWithoutTile_layersInput = {
    update: XOR<AccountsUpdateWithoutTile_layersInput, AccountsUncheckedUpdateWithoutTile_layersInput>
    create: XOR<AccountsCreateWithoutTile_layersInput, AccountsUncheckedCreateWithoutTile_layersInput>
    where?: AccountsWhereInput
  }

  export type AccountsUpdateToOneWithWhereWithoutTile_layersInput = {
    where?: AccountsWhereInput
    data: XOR<AccountsUpdateWithoutTile_layersInput, AccountsUncheckedUpdateWithoutTile_layersInput>
  }

  export type AccountsUpdateWithoutTile_layersInput = {
    account_id?: StringFieldUpdateOperationsInput | string
    type?: NullableStringFieldUpdateOperationsInput | string | null
    period_start?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    period_end?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    projects_label_by?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    users?: UsersUpdateOneWithoutAccountsNestedInput
    gbif_occurrence_downloads?: Gbif_occurrence_downloadsUpdateManyWithoutAccountsNestedInput
    gbif_occurrences?: Gbif_occurrencesUpdateManyWithoutAccountsNestedInput
    gbif_taxa?: Gbif_taxaUpdateManyWithoutAccountsNestedInput
    goal_report_values?: Goal_report_valuesUpdateManyWithoutAccountsNestedInput
    goal_reports?: Goal_reportsUpdateManyWithoutAccountsNestedInput
    goals?: GoalsUpdateManyWithoutAccountsNestedInput
    list_values?: List_valuesUpdateManyWithoutAccountsNestedInput
    lists?: ListsUpdateManyWithoutAccountsNestedInput
    observation_sources?: Observation_sourcesUpdateManyWithoutAccountsNestedInput
    persons?: PersonsUpdateManyWithoutAccountsNestedInput
    place_levels?: Place_levelsUpdateManyWithoutAccountsNestedInput
    project_users?: Project_usersUpdateManyWithoutAccountsNestedInput
    projects?: ProjectsUpdateManyWithoutAccountsNestedInput
    subproject_taxa?: Subproject_taxaUpdateManyWithoutAccountsNestedInput
    subproject_users?: Subproject_usersUpdateManyWithoutAccountsNestedInput
    subprojects?: SubprojectsUpdateManyWithoutAccountsNestedInput
    taxa?: TaxaUpdateManyWithoutAccountsNestedInput
    taxonomies?: TaxonomiesUpdateManyWithoutAccountsNestedInput
    ui_options?: Ui_optionsUpdateManyWithoutAccountsNestedInput
    units?: UnitsUpdateManyWithoutAccountsNestedInput
    user_messages?: User_messagesUpdateManyWithoutAccountsNestedInput
  }

  export type AccountsUncheckedUpdateWithoutTile_layersInput = {
    account_id?: StringFieldUpdateOperationsInput | string
    user_id?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    period_start?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    period_end?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    projects_label_by?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    gbif_occurrence_downloads?: Gbif_occurrence_downloadsUncheckedUpdateManyWithoutAccountsNestedInput
    gbif_occurrences?: Gbif_occurrencesUncheckedUpdateManyWithoutAccountsNestedInput
    gbif_taxa?: Gbif_taxaUncheckedUpdateManyWithoutAccountsNestedInput
    goal_report_values?: Goal_report_valuesUncheckedUpdateManyWithoutAccountsNestedInput
    goal_reports?: Goal_reportsUncheckedUpdateManyWithoutAccountsNestedInput
    goals?: GoalsUncheckedUpdateManyWithoutAccountsNestedInput
    list_values?: List_valuesUncheckedUpdateManyWithoutAccountsNestedInput
    lists?: ListsUncheckedUpdateManyWithoutAccountsNestedInput
    observation_sources?: Observation_sourcesUncheckedUpdateManyWithoutAccountsNestedInput
    persons?: PersonsUncheckedUpdateManyWithoutAccountsNestedInput
    place_levels?: Place_levelsUncheckedUpdateManyWithoutAccountsNestedInput
    project_users?: Project_usersUncheckedUpdateManyWithoutAccountsNestedInput
    projects?: ProjectsUncheckedUpdateManyWithoutAccountsNestedInput
    subproject_taxa?: Subproject_taxaUncheckedUpdateManyWithoutAccountsNestedInput
    subproject_users?: Subproject_usersUncheckedUpdateManyWithoutAccountsNestedInput
    subprojects?: SubprojectsUncheckedUpdateManyWithoutAccountsNestedInput
    taxa?: TaxaUncheckedUpdateManyWithoutAccountsNestedInput
    taxonomies?: TaxonomiesUncheckedUpdateManyWithoutAccountsNestedInput
    ui_options?: Ui_optionsUncheckedUpdateManyWithoutAccountsNestedInput
    units?: UnitsUncheckedUpdateManyWithoutAccountsNestedInput
    user_messages?: User_messagesUncheckedUpdateManyWithoutAccountsNestedInput
  }

  export type ProjectsUpsertWithoutTile_layersInput = {
    update: XOR<ProjectsUpdateWithoutTile_layersInput, ProjectsUncheckedUpdateWithoutTile_layersInput>
    create: XOR<ProjectsCreateWithoutTile_layersInput, ProjectsUncheckedCreateWithoutTile_layersInput>
    where?: ProjectsWhereInput
  }

  export type ProjectsUpdateToOneWithWhereWithoutTile_layersInput = {
    where?: ProjectsWhereInput
    data: XOR<ProjectsUpdateWithoutTile_layersInput, ProjectsUncheckedUpdateWithoutTile_layersInput>
  }

  export type ProjectsUpdateWithoutTile_layersInput = {
    project_id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableEnumproject_typeFieldUpdateOperationsInput | project_type | null
    subproject_name_singular?: NullableStringFieldUpdateOperationsInput | string | null
    subproject_name_plural?: NullableStringFieldUpdateOperationsInput | string | null
    subproject_order_by?: NullableStringFieldUpdateOperationsInput | string | null
    places_label_by?: NullableStringFieldUpdateOperationsInput | string | null
    places_order_by?: NullableJsonNullValueInput | InputJsonValue
    persons_label_by?: NullableStringFieldUpdateOperationsInput | string | null
    persons_order_by?: NullableStringFieldUpdateOperationsInput | string | null
    goal_reports_label_by?: NullableStringFieldUpdateOperationsInput | string | null
    goal_reports_order_by?: NullableStringFieldUpdateOperationsInput | string | null
    values_on_multiple_levels?: NullableStringFieldUpdateOperationsInput | string | null
    multiple_action_values_on_same_level?: NullableStringFieldUpdateOperationsInput | string | null
    multiple_check_values_on_same_level?: NullableStringFieldUpdateOperationsInput | string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    files_offline?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_projects?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_subprojects?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_places?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_actions?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_checks?: NullableBoolFieldUpdateOperationsInput | boolean | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    gbif_occurrence_downloads?: Gbif_occurrence_downloadsUpdateManyWithoutProjectsNestedInput
    gbif_occurrences?: Gbif_occurrencesUpdateManyWithoutProjectsNestedInput
    gbif_taxa?: Gbif_taxaUpdateManyWithoutProjectsNestedInput
    lists?: ListsUpdateManyWithoutProjectsNestedInput
    observation_sources?: Observation_sourcesUpdateManyWithoutProjectsNestedInput
    persons?: PersonsUpdateManyWithoutProjectsNestedInput
    place_levels?: Place_levelsUpdateManyWithoutProjectsNestedInput
    project_users?: Project_usersUpdateManyWithoutProjectsNestedInput
    accounts?: AccountsUpdateOneWithoutProjectsNestedInput
    subprojects?: SubprojectsUpdateManyWithoutProjectsNestedInput
    taxonomies?: TaxonomiesUpdateManyWithoutProjectsNestedInput
    units?: UnitsUpdateManyWithoutProjectsNestedInput
  }

  export type ProjectsUncheckedUpdateWithoutTile_layersInput = {
    project_id?: StringFieldUpdateOperationsInput | string
    account_id?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableEnumproject_typeFieldUpdateOperationsInput | project_type | null
    subproject_name_singular?: NullableStringFieldUpdateOperationsInput | string | null
    subproject_name_plural?: NullableStringFieldUpdateOperationsInput | string | null
    subproject_order_by?: NullableStringFieldUpdateOperationsInput | string | null
    places_label_by?: NullableStringFieldUpdateOperationsInput | string | null
    places_order_by?: NullableJsonNullValueInput | InputJsonValue
    persons_label_by?: NullableStringFieldUpdateOperationsInput | string | null
    persons_order_by?: NullableStringFieldUpdateOperationsInput | string | null
    goal_reports_label_by?: NullableStringFieldUpdateOperationsInput | string | null
    goal_reports_order_by?: NullableStringFieldUpdateOperationsInput | string | null
    values_on_multiple_levels?: NullableStringFieldUpdateOperationsInput | string | null
    multiple_action_values_on_same_level?: NullableStringFieldUpdateOperationsInput | string | null
    multiple_check_values_on_same_level?: NullableStringFieldUpdateOperationsInput | string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    files_offline?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_projects?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_subprojects?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_places?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_actions?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_checks?: NullableBoolFieldUpdateOperationsInput | boolean | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    gbif_occurrence_downloads?: Gbif_occurrence_downloadsUncheckedUpdateManyWithoutProjectsNestedInput
    gbif_occurrences?: Gbif_occurrencesUncheckedUpdateManyWithoutProjectsNestedInput
    gbif_taxa?: Gbif_taxaUncheckedUpdateManyWithoutProjectsNestedInput
    lists?: ListsUncheckedUpdateManyWithoutProjectsNestedInput
    observation_sources?: Observation_sourcesUncheckedUpdateManyWithoutProjectsNestedInput
    persons?: PersonsUncheckedUpdateManyWithoutProjectsNestedInput
    place_levels?: Place_levelsUncheckedUpdateManyWithoutProjectsNestedInput
    project_users?: Project_usersUncheckedUpdateManyWithoutProjectsNestedInput
    subprojects?: SubprojectsUncheckedUpdateManyWithoutProjectsNestedInput
    taxonomies?: TaxonomiesUncheckedUpdateManyWithoutProjectsNestedInput
    units?: UnitsUncheckedUpdateManyWithoutProjectsNestedInput
  }

  export type AccountsCreateWithoutUi_optionsInput = {
    account_id: string
    type?: string | null
    period_start?: Date | string | null
    period_end?: Date | string | null
    projects_label_by?: string | null
    label?: string | null
    users?: UsersCreateNestedOneWithoutAccountsInput
    gbif_occurrence_downloads?: Gbif_occurrence_downloadsCreateNestedManyWithoutAccountsInput
    gbif_occurrences?: Gbif_occurrencesCreateNestedManyWithoutAccountsInput
    gbif_taxa?: Gbif_taxaCreateNestedManyWithoutAccountsInput
    goal_report_values?: Goal_report_valuesCreateNestedManyWithoutAccountsInput
    goal_reports?: Goal_reportsCreateNestedManyWithoutAccountsInput
    goals?: GoalsCreateNestedManyWithoutAccountsInput
    list_values?: List_valuesCreateNestedManyWithoutAccountsInput
    lists?: ListsCreateNestedManyWithoutAccountsInput
    observation_sources?: Observation_sourcesCreateNestedManyWithoutAccountsInput
    persons?: PersonsCreateNestedManyWithoutAccountsInput
    place_levels?: Place_levelsCreateNestedManyWithoutAccountsInput
    project_users?: Project_usersCreateNestedManyWithoutAccountsInput
    projects?: ProjectsCreateNestedManyWithoutAccountsInput
    subproject_taxa?: Subproject_taxaCreateNestedManyWithoutAccountsInput
    subproject_users?: Subproject_usersCreateNestedManyWithoutAccountsInput
    subprojects?: SubprojectsCreateNestedManyWithoutAccountsInput
    taxa?: TaxaCreateNestedManyWithoutAccountsInput
    taxonomies?: TaxonomiesCreateNestedManyWithoutAccountsInput
    tile_layers?: Tile_layersCreateNestedManyWithoutAccountsInput
    units?: UnitsCreateNestedManyWithoutAccountsInput
    user_messages?: User_messagesCreateNestedManyWithoutAccountsInput
  }

  export type AccountsUncheckedCreateWithoutUi_optionsInput = {
    account_id: string
    user_id?: string | null
    type?: string | null
    period_start?: Date | string | null
    period_end?: Date | string | null
    projects_label_by?: string | null
    label?: string | null
    gbif_occurrence_downloads?: Gbif_occurrence_downloadsUncheckedCreateNestedManyWithoutAccountsInput
    gbif_occurrences?: Gbif_occurrencesUncheckedCreateNestedManyWithoutAccountsInput
    gbif_taxa?: Gbif_taxaUncheckedCreateNestedManyWithoutAccountsInput
    goal_report_values?: Goal_report_valuesUncheckedCreateNestedManyWithoutAccountsInput
    goal_reports?: Goal_reportsUncheckedCreateNestedManyWithoutAccountsInput
    goals?: GoalsUncheckedCreateNestedManyWithoutAccountsInput
    list_values?: List_valuesUncheckedCreateNestedManyWithoutAccountsInput
    lists?: ListsUncheckedCreateNestedManyWithoutAccountsInput
    observation_sources?: Observation_sourcesUncheckedCreateNestedManyWithoutAccountsInput
    persons?: PersonsUncheckedCreateNestedManyWithoutAccountsInput
    place_levels?: Place_levelsUncheckedCreateNestedManyWithoutAccountsInput
    project_users?: Project_usersUncheckedCreateNestedManyWithoutAccountsInput
    projects?: ProjectsUncheckedCreateNestedManyWithoutAccountsInput
    subproject_taxa?: Subproject_taxaUncheckedCreateNestedManyWithoutAccountsInput
    subproject_users?: Subproject_usersUncheckedCreateNestedManyWithoutAccountsInput
    subprojects?: SubprojectsUncheckedCreateNestedManyWithoutAccountsInput
    taxa?: TaxaUncheckedCreateNestedManyWithoutAccountsInput
    taxonomies?: TaxonomiesUncheckedCreateNestedManyWithoutAccountsInput
    tile_layers?: Tile_layersUncheckedCreateNestedManyWithoutAccountsInput
    units?: UnitsUncheckedCreateNestedManyWithoutAccountsInput
    user_messages?: User_messagesUncheckedCreateNestedManyWithoutAccountsInput
  }

  export type AccountsCreateOrConnectWithoutUi_optionsInput = {
    where: AccountsWhereUniqueInput
    create: XOR<AccountsCreateWithoutUi_optionsInput, AccountsUncheckedCreateWithoutUi_optionsInput>
  }

  export type UsersCreateWithoutUi_optionsInput = {
    user_id: string
    email?: string | null
    auth_id?: string | null
    label_replace_by_generated_column?: string | null
    deleted?: boolean | null
    accounts?: AccountsCreateNestedManyWithoutUsersInput
    project_users?: Project_usersCreateNestedManyWithoutUsersInput
    subproject_users?: Subproject_usersCreateNestedManyWithoutUsersInput
    user_messages?: User_messagesCreateNestedManyWithoutUsersInput
  }

  export type UsersUncheckedCreateWithoutUi_optionsInput = {
    user_id: string
    email?: string | null
    auth_id?: string | null
    label_replace_by_generated_column?: string | null
    deleted?: boolean | null
    accounts?: AccountsUncheckedCreateNestedManyWithoutUsersInput
    project_users?: Project_usersUncheckedCreateNestedManyWithoutUsersInput
    subproject_users?: Subproject_usersUncheckedCreateNestedManyWithoutUsersInput
    user_messages?: User_messagesUncheckedCreateNestedManyWithoutUsersInput
  }

  export type UsersCreateOrConnectWithoutUi_optionsInput = {
    where: UsersWhereUniqueInput
    create: XOR<UsersCreateWithoutUi_optionsInput, UsersUncheckedCreateWithoutUi_optionsInput>
  }

  export type AccountsUpsertWithoutUi_optionsInput = {
    update: XOR<AccountsUpdateWithoutUi_optionsInput, AccountsUncheckedUpdateWithoutUi_optionsInput>
    create: XOR<AccountsCreateWithoutUi_optionsInput, AccountsUncheckedCreateWithoutUi_optionsInput>
    where?: AccountsWhereInput
  }

  export type AccountsUpdateToOneWithWhereWithoutUi_optionsInput = {
    where?: AccountsWhereInput
    data: XOR<AccountsUpdateWithoutUi_optionsInput, AccountsUncheckedUpdateWithoutUi_optionsInput>
  }

  export type AccountsUpdateWithoutUi_optionsInput = {
    account_id?: StringFieldUpdateOperationsInput | string
    type?: NullableStringFieldUpdateOperationsInput | string | null
    period_start?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    period_end?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    projects_label_by?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    users?: UsersUpdateOneWithoutAccountsNestedInput
    gbif_occurrence_downloads?: Gbif_occurrence_downloadsUpdateManyWithoutAccountsNestedInput
    gbif_occurrences?: Gbif_occurrencesUpdateManyWithoutAccountsNestedInput
    gbif_taxa?: Gbif_taxaUpdateManyWithoutAccountsNestedInput
    goal_report_values?: Goal_report_valuesUpdateManyWithoutAccountsNestedInput
    goal_reports?: Goal_reportsUpdateManyWithoutAccountsNestedInput
    goals?: GoalsUpdateManyWithoutAccountsNestedInput
    list_values?: List_valuesUpdateManyWithoutAccountsNestedInput
    lists?: ListsUpdateManyWithoutAccountsNestedInput
    observation_sources?: Observation_sourcesUpdateManyWithoutAccountsNestedInput
    persons?: PersonsUpdateManyWithoutAccountsNestedInput
    place_levels?: Place_levelsUpdateManyWithoutAccountsNestedInput
    project_users?: Project_usersUpdateManyWithoutAccountsNestedInput
    projects?: ProjectsUpdateManyWithoutAccountsNestedInput
    subproject_taxa?: Subproject_taxaUpdateManyWithoutAccountsNestedInput
    subproject_users?: Subproject_usersUpdateManyWithoutAccountsNestedInput
    subprojects?: SubprojectsUpdateManyWithoutAccountsNestedInput
    taxa?: TaxaUpdateManyWithoutAccountsNestedInput
    taxonomies?: TaxonomiesUpdateManyWithoutAccountsNestedInput
    tile_layers?: Tile_layersUpdateManyWithoutAccountsNestedInput
    units?: UnitsUpdateManyWithoutAccountsNestedInput
    user_messages?: User_messagesUpdateManyWithoutAccountsNestedInput
  }

  export type AccountsUncheckedUpdateWithoutUi_optionsInput = {
    account_id?: StringFieldUpdateOperationsInput | string
    user_id?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    period_start?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    period_end?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    projects_label_by?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    gbif_occurrence_downloads?: Gbif_occurrence_downloadsUncheckedUpdateManyWithoutAccountsNestedInput
    gbif_occurrences?: Gbif_occurrencesUncheckedUpdateManyWithoutAccountsNestedInput
    gbif_taxa?: Gbif_taxaUncheckedUpdateManyWithoutAccountsNestedInput
    goal_report_values?: Goal_report_valuesUncheckedUpdateManyWithoutAccountsNestedInput
    goal_reports?: Goal_reportsUncheckedUpdateManyWithoutAccountsNestedInput
    goals?: GoalsUncheckedUpdateManyWithoutAccountsNestedInput
    list_values?: List_valuesUncheckedUpdateManyWithoutAccountsNestedInput
    lists?: ListsUncheckedUpdateManyWithoutAccountsNestedInput
    observation_sources?: Observation_sourcesUncheckedUpdateManyWithoutAccountsNestedInput
    persons?: PersonsUncheckedUpdateManyWithoutAccountsNestedInput
    place_levels?: Place_levelsUncheckedUpdateManyWithoutAccountsNestedInput
    project_users?: Project_usersUncheckedUpdateManyWithoutAccountsNestedInput
    projects?: ProjectsUncheckedUpdateManyWithoutAccountsNestedInput
    subproject_taxa?: Subproject_taxaUncheckedUpdateManyWithoutAccountsNestedInput
    subproject_users?: Subproject_usersUncheckedUpdateManyWithoutAccountsNestedInput
    subprojects?: SubprojectsUncheckedUpdateManyWithoutAccountsNestedInput
    taxa?: TaxaUncheckedUpdateManyWithoutAccountsNestedInput
    taxonomies?: TaxonomiesUncheckedUpdateManyWithoutAccountsNestedInput
    tile_layers?: Tile_layersUncheckedUpdateManyWithoutAccountsNestedInput
    units?: UnitsUncheckedUpdateManyWithoutAccountsNestedInput
    user_messages?: User_messagesUncheckedUpdateManyWithoutAccountsNestedInput
  }

  export type UsersUpsertWithoutUi_optionsInput = {
    update: XOR<UsersUpdateWithoutUi_optionsInput, UsersUncheckedUpdateWithoutUi_optionsInput>
    create: XOR<UsersCreateWithoutUi_optionsInput, UsersUncheckedCreateWithoutUi_optionsInput>
    where?: UsersWhereInput
  }

  export type UsersUpdateToOneWithWhereWithoutUi_optionsInput = {
    where?: UsersWhereInput
    data: XOR<UsersUpdateWithoutUi_optionsInput, UsersUncheckedUpdateWithoutUi_optionsInput>
  }

  export type UsersUpdateWithoutUi_optionsInput = {
    user_id?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    auth_id?: NullableStringFieldUpdateOperationsInput | string | null
    label_replace_by_generated_column?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    accounts?: AccountsUpdateManyWithoutUsersNestedInput
    project_users?: Project_usersUpdateManyWithoutUsersNestedInput
    subproject_users?: Subproject_usersUpdateManyWithoutUsersNestedInput
    user_messages?: User_messagesUpdateManyWithoutUsersNestedInput
  }

  export type UsersUncheckedUpdateWithoutUi_optionsInput = {
    user_id?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    auth_id?: NullableStringFieldUpdateOperationsInput | string | null
    label_replace_by_generated_column?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    accounts?: AccountsUncheckedUpdateManyWithoutUsersNestedInput
    project_users?: Project_usersUncheckedUpdateManyWithoutUsersNestedInput
    subproject_users?: Subproject_usersUncheckedUpdateManyWithoutUsersNestedInput
    user_messages?: User_messagesUncheckedUpdateManyWithoutUsersNestedInput
  }

  export type Goal_report_valuesCreateWithoutUnitsInput = {
    goal_report_value_id: string
    value_integer?: number | null
    value_numeric?: number | null
    value_text?: string | null
    label?: string | null
    deleted?: boolean | null
    accounts?: AccountsCreateNestedOneWithoutGoal_report_valuesInput
    goal_reports?: Goal_reportsCreateNestedOneWithoutGoal_report_valuesInput
  }

  export type Goal_report_valuesUncheckedCreateWithoutUnitsInput = {
    goal_report_value_id: string
    account_id?: string | null
    goal_report_id?: string | null
    value_integer?: number | null
    value_numeric?: number | null
    value_text?: string | null
    label?: string | null
    deleted?: boolean | null
  }

  export type Goal_report_valuesCreateOrConnectWithoutUnitsInput = {
    where: Goal_report_valuesWhereUniqueInput
    create: XOR<Goal_report_valuesCreateWithoutUnitsInput, Goal_report_valuesUncheckedCreateWithoutUnitsInput>
  }

  export type Goal_report_valuesCreateManyUnitsInputEnvelope = {
    data: Enumerable<Goal_report_valuesCreateManyUnitsInput>
    skipDuplicates?: boolean
  }

  export type AccountsCreateWithoutUnitsInput = {
    account_id: string
    type?: string | null
    period_start?: Date | string | null
    period_end?: Date | string | null
    projects_label_by?: string | null
    label?: string | null
    users?: UsersCreateNestedOneWithoutAccountsInput
    gbif_occurrence_downloads?: Gbif_occurrence_downloadsCreateNestedManyWithoutAccountsInput
    gbif_occurrences?: Gbif_occurrencesCreateNestedManyWithoutAccountsInput
    gbif_taxa?: Gbif_taxaCreateNestedManyWithoutAccountsInput
    goal_report_values?: Goal_report_valuesCreateNestedManyWithoutAccountsInput
    goal_reports?: Goal_reportsCreateNestedManyWithoutAccountsInput
    goals?: GoalsCreateNestedManyWithoutAccountsInput
    list_values?: List_valuesCreateNestedManyWithoutAccountsInput
    lists?: ListsCreateNestedManyWithoutAccountsInput
    observation_sources?: Observation_sourcesCreateNestedManyWithoutAccountsInput
    persons?: PersonsCreateNestedManyWithoutAccountsInput
    place_levels?: Place_levelsCreateNestedManyWithoutAccountsInput
    project_users?: Project_usersCreateNestedManyWithoutAccountsInput
    projects?: ProjectsCreateNestedManyWithoutAccountsInput
    subproject_taxa?: Subproject_taxaCreateNestedManyWithoutAccountsInput
    subproject_users?: Subproject_usersCreateNestedManyWithoutAccountsInput
    subprojects?: SubprojectsCreateNestedManyWithoutAccountsInput
    taxa?: TaxaCreateNestedManyWithoutAccountsInput
    taxonomies?: TaxonomiesCreateNestedManyWithoutAccountsInput
    tile_layers?: Tile_layersCreateNestedManyWithoutAccountsInput
    ui_options?: Ui_optionsCreateNestedManyWithoutAccountsInput
    user_messages?: User_messagesCreateNestedManyWithoutAccountsInput
  }

  export type AccountsUncheckedCreateWithoutUnitsInput = {
    account_id: string
    user_id?: string | null
    type?: string | null
    period_start?: Date | string | null
    period_end?: Date | string | null
    projects_label_by?: string | null
    label?: string | null
    gbif_occurrence_downloads?: Gbif_occurrence_downloadsUncheckedCreateNestedManyWithoutAccountsInput
    gbif_occurrences?: Gbif_occurrencesUncheckedCreateNestedManyWithoutAccountsInput
    gbif_taxa?: Gbif_taxaUncheckedCreateNestedManyWithoutAccountsInput
    goal_report_values?: Goal_report_valuesUncheckedCreateNestedManyWithoutAccountsInput
    goal_reports?: Goal_reportsUncheckedCreateNestedManyWithoutAccountsInput
    goals?: GoalsUncheckedCreateNestedManyWithoutAccountsInput
    list_values?: List_valuesUncheckedCreateNestedManyWithoutAccountsInput
    lists?: ListsUncheckedCreateNestedManyWithoutAccountsInput
    observation_sources?: Observation_sourcesUncheckedCreateNestedManyWithoutAccountsInput
    persons?: PersonsUncheckedCreateNestedManyWithoutAccountsInput
    place_levels?: Place_levelsUncheckedCreateNestedManyWithoutAccountsInput
    project_users?: Project_usersUncheckedCreateNestedManyWithoutAccountsInput
    projects?: ProjectsUncheckedCreateNestedManyWithoutAccountsInput
    subproject_taxa?: Subproject_taxaUncheckedCreateNestedManyWithoutAccountsInput
    subproject_users?: Subproject_usersUncheckedCreateNestedManyWithoutAccountsInput
    subprojects?: SubprojectsUncheckedCreateNestedManyWithoutAccountsInput
    taxa?: TaxaUncheckedCreateNestedManyWithoutAccountsInput
    taxonomies?: TaxonomiesUncheckedCreateNestedManyWithoutAccountsInput
    tile_layers?: Tile_layersUncheckedCreateNestedManyWithoutAccountsInput
    ui_options?: Ui_optionsUncheckedCreateNestedManyWithoutAccountsInput
    user_messages?: User_messagesUncheckedCreateNestedManyWithoutAccountsInput
  }

  export type AccountsCreateOrConnectWithoutUnitsInput = {
    where: AccountsWhereUniqueInput
    create: XOR<AccountsCreateWithoutUnitsInput, AccountsUncheckedCreateWithoutUnitsInput>
  }

  export type ListsCreateWithoutUnitsInput = {
    list_id: string
    name?: string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    obsolete?: boolean | null
    label_replace_by_generated_column?: string | null
    deleted?: boolean | null
    list_values?: List_valuesCreateNestedManyWithoutListsInput
    accounts?: AccountsCreateNestedOneWithoutListsInput
    projects?: ProjectsCreateNestedOneWithoutListsInput
  }

  export type ListsUncheckedCreateWithoutUnitsInput = {
    list_id: string
    account_id?: string | null
    project_id?: string | null
    name?: string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    obsolete?: boolean | null
    label_replace_by_generated_column?: string | null
    deleted?: boolean | null
    list_values?: List_valuesUncheckedCreateNestedManyWithoutListsInput
  }

  export type ListsCreateOrConnectWithoutUnitsInput = {
    where: ListsWhereUniqueInput
    create: XOR<ListsCreateWithoutUnitsInput, ListsUncheckedCreateWithoutUnitsInput>
  }

  export type ProjectsCreateWithoutUnitsInput = {
    project_id: string
    name?: string | null
    label?: string | null
    type?: project_type | null
    subproject_name_singular?: string | null
    subproject_name_plural?: string | null
    subproject_order_by?: string | null
    places_label_by?: string | null
    places_order_by?: NullableJsonNullValueInput | InputJsonValue
    persons_label_by?: string | null
    persons_order_by?: string | null
    goal_reports_label_by?: string | null
    goal_reports_order_by?: string | null
    values_on_multiple_levels?: string | null
    multiple_action_values_on_same_level?: string | null
    multiple_check_values_on_same_level?: string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    files_offline?: boolean | null
    files_active_projects?: boolean | null
    files_active_subprojects?: boolean | null
    files_active_places?: boolean | null
    files_active_actions?: boolean | null
    files_active_checks?: boolean | null
    deleted?: boolean | null
    gbif_occurrence_downloads?: Gbif_occurrence_downloadsCreateNestedManyWithoutProjectsInput
    gbif_occurrences?: Gbif_occurrencesCreateNestedManyWithoutProjectsInput
    gbif_taxa?: Gbif_taxaCreateNestedManyWithoutProjectsInput
    lists?: ListsCreateNestedManyWithoutProjectsInput
    observation_sources?: Observation_sourcesCreateNestedManyWithoutProjectsInput
    persons?: PersonsCreateNestedManyWithoutProjectsInput
    place_levels?: Place_levelsCreateNestedManyWithoutProjectsInput
    project_users?: Project_usersCreateNestedManyWithoutProjectsInput
    accounts?: AccountsCreateNestedOneWithoutProjectsInput
    subprojects?: SubprojectsCreateNestedManyWithoutProjectsInput
    taxonomies?: TaxonomiesCreateNestedManyWithoutProjectsInput
    tile_layers?: Tile_layersCreateNestedManyWithoutProjectsInput
  }

  export type ProjectsUncheckedCreateWithoutUnitsInput = {
    project_id: string
    account_id?: string | null
    name?: string | null
    label?: string | null
    type?: project_type | null
    subproject_name_singular?: string | null
    subproject_name_plural?: string | null
    subproject_order_by?: string | null
    places_label_by?: string | null
    places_order_by?: NullableJsonNullValueInput | InputJsonValue
    persons_label_by?: string | null
    persons_order_by?: string | null
    goal_reports_label_by?: string | null
    goal_reports_order_by?: string | null
    values_on_multiple_levels?: string | null
    multiple_action_values_on_same_level?: string | null
    multiple_check_values_on_same_level?: string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    files_offline?: boolean | null
    files_active_projects?: boolean | null
    files_active_subprojects?: boolean | null
    files_active_places?: boolean | null
    files_active_actions?: boolean | null
    files_active_checks?: boolean | null
    deleted?: boolean | null
    gbif_occurrence_downloads?: Gbif_occurrence_downloadsUncheckedCreateNestedManyWithoutProjectsInput
    gbif_occurrences?: Gbif_occurrencesUncheckedCreateNestedManyWithoutProjectsInput
    gbif_taxa?: Gbif_taxaUncheckedCreateNestedManyWithoutProjectsInput
    lists?: ListsUncheckedCreateNestedManyWithoutProjectsInput
    observation_sources?: Observation_sourcesUncheckedCreateNestedManyWithoutProjectsInput
    persons?: PersonsUncheckedCreateNestedManyWithoutProjectsInput
    place_levels?: Place_levelsUncheckedCreateNestedManyWithoutProjectsInput
    project_users?: Project_usersUncheckedCreateNestedManyWithoutProjectsInput
    subprojects?: SubprojectsUncheckedCreateNestedManyWithoutProjectsInput
    taxonomies?: TaxonomiesUncheckedCreateNestedManyWithoutProjectsInput
    tile_layers?: Tile_layersUncheckedCreateNestedManyWithoutProjectsInput
  }

  export type ProjectsCreateOrConnectWithoutUnitsInput = {
    where: ProjectsWhereUniqueInput
    create: XOR<ProjectsCreateWithoutUnitsInput, ProjectsUncheckedCreateWithoutUnitsInput>
  }

  export type Goal_report_valuesUpsertWithWhereUniqueWithoutUnitsInput = {
    where: Goal_report_valuesWhereUniqueInput
    update: XOR<Goal_report_valuesUpdateWithoutUnitsInput, Goal_report_valuesUncheckedUpdateWithoutUnitsInput>
    create: XOR<Goal_report_valuesCreateWithoutUnitsInput, Goal_report_valuesUncheckedCreateWithoutUnitsInput>
  }

  export type Goal_report_valuesUpdateWithWhereUniqueWithoutUnitsInput = {
    where: Goal_report_valuesWhereUniqueInput
    data: XOR<Goal_report_valuesUpdateWithoutUnitsInput, Goal_report_valuesUncheckedUpdateWithoutUnitsInput>
  }

  export type Goal_report_valuesUpdateManyWithWhereWithoutUnitsInput = {
    where: Goal_report_valuesScalarWhereInput
    data: XOR<Goal_report_valuesUpdateManyMutationInput, Goal_report_valuesUncheckedUpdateManyWithoutUnitsInput>
  }

  export type AccountsUpsertWithoutUnitsInput = {
    update: XOR<AccountsUpdateWithoutUnitsInput, AccountsUncheckedUpdateWithoutUnitsInput>
    create: XOR<AccountsCreateWithoutUnitsInput, AccountsUncheckedCreateWithoutUnitsInput>
    where?: AccountsWhereInput
  }

  export type AccountsUpdateToOneWithWhereWithoutUnitsInput = {
    where?: AccountsWhereInput
    data: XOR<AccountsUpdateWithoutUnitsInput, AccountsUncheckedUpdateWithoutUnitsInput>
  }

  export type AccountsUpdateWithoutUnitsInput = {
    account_id?: StringFieldUpdateOperationsInput | string
    type?: NullableStringFieldUpdateOperationsInput | string | null
    period_start?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    period_end?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    projects_label_by?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    users?: UsersUpdateOneWithoutAccountsNestedInput
    gbif_occurrence_downloads?: Gbif_occurrence_downloadsUpdateManyWithoutAccountsNestedInput
    gbif_occurrences?: Gbif_occurrencesUpdateManyWithoutAccountsNestedInput
    gbif_taxa?: Gbif_taxaUpdateManyWithoutAccountsNestedInput
    goal_report_values?: Goal_report_valuesUpdateManyWithoutAccountsNestedInput
    goal_reports?: Goal_reportsUpdateManyWithoutAccountsNestedInput
    goals?: GoalsUpdateManyWithoutAccountsNestedInput
    list_values?: List_valuesUpdateManyWithoutAccountsNestedInput
    lists?: ListsUpdateManyWithoutAccountsNestedInput
    observation_sources?: Observation_sourcesUpdateManyWithoutAccountsNestedInput
    persons?: PersonsUpdateManyWithoutAccountsNestedInput
    place_levels?: Place_levelsUpdateManyWithoutAccountsNestedInput
    project_users?: Project_usersUpdateManyWithoutAccountsNestedInput
    projects?: ProjectsUpdateManyWithoutAccountsNestedInput
    subproject_taxa?: Subproject_taxaUpdateManyWithoutAccountsNestedInput
    subproject_users?: Subproject_usersUpdateManyWithoutAccountsNestedInput
    subprojects?: SubprojectsUpdateManyWithoutAccountsNestedInput
    taxa?: TaxaUpdateManyWithoutAccountsNestedInput
    taxonomies?: TaxonomiesUpdateManyWithoutAccountsNestedInput
    tile_layers?: Tile_layersUpdateManyWithoutAccountsNestedInput
    ui_options?: Ui_optionsUpdateManyWithoutAccountsNestedInput
    user_messages?: User_messagesUpdateManyWithoutAccountsNestedInput
  }

  export type AccountsUncheckedUpdateWithoutUnitsInput = {
    account_id?: StringFieldUpdateOperationsInput | string
    user_id?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    period_start?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    period_end?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    projects_label_by?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    gbif_occurrence_downloads?: Gbif_occurrence_downloadsUncheckedUpdateManyWithoutAccountsNestedInput
    gbif_occurrences?: Gbif_occurrencesUncheckedUpdateManyWithoutAccountsNestedInput
    gbif_taxa?: Gbif_taxaUncheckedUpdateManyWithoutAccountsNestedInput
    goal_report_values?: Goal_report_valuesUncheckedUpdateManyWithoutAccountsNestedInput
    goal_reports?: Goal_reportsUncheckedUpdateManyWithoutAccountsNestedInput
    goals?: GoalsUncheckedUpdateManyWithoutAccountsNestedInput
    list_values?: List_valuesUncheckedUpdateManyWithoutAccountsNestedInput
    lists?: ListsUncheckedUpdateManyWithoutAccountsNestedInput
    observation_sources?: Observation_sourcesUncheckedUpdateManyWithoutAccountsNestedInput
    persons?: PersonsUncheckedUpdateManyWithoutAccountsNestedInput
    place_levels?: Place_levelsUncheckedUpdateManyWithoutAccountsNestedInput
    project_users?: Project_usersUncheckedUpdateManyWithoutAccountsNestedInput
    projects?: ProjectsUncheckedUpdateManyWithoutAccountsNestedInput
    subproject_taxa?: Subproject_taxaUncheckedUpdateManyWithoutAccountsNestedInput
    subproject_users?: Subproject_usersUncheckedUpdateManyWithoutAccountsNestedInput
    subprojects?: SubprojectsUncheckedUpdateManyWithoutAccountsNestedInput
    taxa?: TaxaUncheckedUpdateManyWithoutAccountsNestedInput
    taxonomies?: TaxonomiesUncheckedUpdateManyWithoutAccountsNestedInput
    tile_layers?: Tile_layersUncheckedUpdateManyWithoutAccountsNestedInput
    ui_options?: Ui_optionsUncheckedUpdateManyWithoutAccountsNestedInput
    user_messages?: User_messagesUncheckedUpdateManyWithoutAccountsNestedInput
  }

  export type ListsUpsertWithoutUnitsInput = {
    update: XOR<ListsUpdateWithoutUnitsInput, ListsUncheckedUpdateWithoutUnitsInput>
    create: XOR<ListsCreateWithoutUnitsInput, ListsUncheckedCreateWithoutUnitsInput>
    where?: ListsWhereInput
  }

  export type ListsUpdateToOneWithWhereWithoutUnitsInput = {
    where?: ListsWhereInput
    data: XOR<ListsUpdateWithoutUnitsInput, ListsUncheckedUpdateWithoutUnitsInput>
  }

  export type ListsUpdateWithoutUnitsInput = {
    list_id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    obsolete?: NullableBoolFieldUpdateOperationsInput | boolean | null
    label_replace_by_generated_column?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    list_values?: List_valuesUpdateManyWithoutListsNestedInput
    accounts?: AccountsUpdateOneWithoutListsNestedInput
    projects?: ProjectsUpdateOneWithoutListsNestedInput
  }

  export type ListsUncheckedUpdateWithoutUnitsInput = {
    list_id?: StringFieldUpdateOperationsInput | string
    account_id?: NullableStringFieldUpdateOperationsInput | string | null
    project_id?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    obsolete?: NullableBoolFieldUpdateOperationsInput | boolean | null
    label_replace_by_generated_column?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    list_values?: List_valuesUncheckedUpdateManyWithoutListsNestedInput
  }

  export type ProjectsUpsertWithoutUnitsInput = {
    update: XOR<ProjectsUpdateWithoutUnitsInput, ProjectsUncheckedUpdateWithoutUnitsInput>
    create: XOR<ProjectsCreateWithoutUnitsInput, ProjectsUncheckedCreateWithoutUnitsInput>
    where?: ProjectsWhereInput
  }

  export type ProjectsUpdateToOneWithWhereWithoutUnitsInput = {
    where?: ProjectsWhereInput
    data: XOR<ProjectsUpdateWithoutUnitsInput, ProjectsUncheckedUpdateWithoutUnitsInput>
  }

  export type ProjectsUpdateWithoutUnitsInput = {
    project_id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableEnumproject_typeFieldUpdateOperationsInput | project_type | null
    subproject_name_singular?: NullableStringFieldUpdateOperationsInput | string | null
    subproject_name_plural?: NullableStringFieldUpdateOperationsInput | string | null
    subproject_order_by?: NullableStringFieldUpdateOperationsInput | string | null
    places_label_by?: NullableStringFieldUpdateOperationsInput | string | null
    places_order_by?: NullableJsonNullValueInput | InputJsonValue
    persons_label_by?: NullableStringFieldUpdateOperationsInput | string | null
    persons_order_by?: NullableStringFieldUpdateOperationsInput | string | null
    goal_reports_label_by?: NullableStringFieldUpdateOperationsInput | string | null
    goal_reports_order_by?: NullableStringFieldUpdateOperationsInput | string | null
    values_on_multiple_levels?: NullableStringFieldUpdateOperationsInput | string | null
    multiple_action_values_on_same_level?: NullableStringFieldUpdateOperationsInput | string | null
    multiple_check_values_on_same_level?: NullableStringFieldUpdateOperationsInput | string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    files_offline?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_projects?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_subprojects?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_places?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_actions?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_checks?: NullableBoolFieldUpdateOperationsInput | boolean | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    gbif_occurrence_downloads?: Gbif_occurrence_downloadsUpdateManyWithoutProjectsNestedInput
    gbif_occurrences?: Gbif_occurrencesUpdateManyWithoutProjectsNestedInput
    gbif_taxa?: Gbif_taxaUpdateManyWithoutProjectsNestedInput
    lists?: ListsUpdateManyWithoutProjectsNestedInput
    observation_sources?: Observation_sourcesUpdateManyWithoutProjectsNestedInput
    persons?: PersonsUpdateManyWithoutProjectsNestedInput
    place_levels?: Place_levelsUpdateManyWithoutProjectsNestedInput
    project_users?: Project_usersUpdateManyWithoutProjectsNestedInput
    accounts?: AccountsUpdateOneWithoutProjectsNestedInput
    subprojects?: SubprojectsUpdateManyWithoutProjectsNestedInput
    taxonomies?: TaxonomiesUpdateManyWithoutProjectsNestedInput
    tile_layers?: Tile_layersUpdateManyWithoutProjectsNestedInput
  }

  export type ProjectsUncheckedUpdateWithoutUnitsInput = {
    project_id?: StringFieldUpdateOperationsInput | string
    account_id?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableEnumproject_typeFieldUpdateOperationsInput | project_type | null
    subproject_name_singular?: NullableStringFieldUpdateOperationsInput | string | null
    subproject_name_plural?: NullableStringFieldUpdateOperationsInput | string | null
    subproject_order_by?: NullableStringFieldUpdateOperationsInput | string | null
    places_label_by?: NullableStringFieldUpdateOperationsInput | string | null
    places_order_by?: NullableJsonNullValueInput | InputJsonValue
    persons_label_by?: NullableStringFieldUpdateOperationsInput | string | null
    persons_order_by?: NullableStringFieldUpdateOperationsInput | string | null
    goal_reports_label_by?: NullableStringFieldUpdateOperationsInput | string | null
    goal_reports_order_by?: NullableStringFieldUpdateOperationsInput | string | null
    values_on_multiple_levels?: NullableStringFieldUpdateOperationsInput | string | null
    multiple_action_values_on_same_level?: NullableStringFieldUpdateOperationsInput | string | null
    multiple_check_values_on_same_level?: NullableStringFieldUpdateOperationsInput | string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    files_offline?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_projects?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_subprojects?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_places?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_actions?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_checks?: NullableBoolFieldUpdateOperationsInput | boolean | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    gbif_occurrence_downloads?: Gbif_occurrence_downloadsUncheckedUpdateManyWithoutProjectsNestedInput
    gbif_occurrences?: Gbif_occurrencesUncheckedUpdateManyWithoutProjectsNestedInput
    gbif_taxa?: Gbif_taxaUncheckedUpdateManyWithoutProjectsNestedInput
    lists?: ListsUncheckedUpdateManyWithoutProjectsNestedInput
    observation_sources?: Observation_sourcesUncheckedUpdateManyWithoutProjectsNestedInput
    persons?: PersonsUncheckedUpdateManyWithoutProjectsNestedInput
    place_levels?: Place_levelsUncheckedUpdateManyWithoutProjectsNestedInput
    project_users?: Project_usersUncheckedUpdateManyWithoutProjectsNestedInput
    subprojects?: SubprojectsUncheckedUpdateManyWithoutProjectsNestedInput
    taxonomies?: TaxonomiesUncheckedUpdateManyWithoutProjectsNestedInput
    tile_layers?: Tile_layersUncheckedUpdateManyWithoutProjectsNestedInput
  }

  export type AccountsCreateWithoutUser_messagesInput = {
    account_id: string
    type?: string | null
    period_start?: Date | string | null
    period_end?: Date | string | null
    projects_label_by?: string | null
    label?: string | null
    users?: UsersCreateNestedOneWithoutAccountsInput
    gbif_occurrence_downloads?: Gbif_occurrence_downloadsCreateNestedManyWithoutAccountsInput
    gbif_occurrences?: Gbif_occurrencesCreateNestedManyWithoutAccountsInput
    gbif_taxa?: Gbif_taxaCreateNestedManyWithoutAccountsInput
    goal_report_values?: Goal_report_valuesCreateNestedManyWithoutAccountsInput
    goal_reports?: Goal_reportsCreateNestedManyWithoutAccountsInput
    goals?: GoalsCreateNestedManyWithoutAccountsInput
    list_values?: List_valuesCreateNestedManyWithoutAccountsInput
    lists?: ListsCreateNestedManyWithoutAccountsInput
    observation_sources?: Observation_sourcesCreateNestedManyWithoutAccountsInput
    persons?: PersonsCreateNestedManyWithoutAccountsInput
    place_levels?: Place_levelsCreateNestedManyWithoutAccountsInput
    project_users?: Project_usersCreateNestedManyWithoutAccountsInput
    projects?: ProjectsCreateNestedManyWithoutAccountsInput
    subproject_taxa?: Subproject_taxaCreateNestedManyWithoutAccountsInput
    subproject_users?: Subproject_usersCreateNestedManyWithoutAccountsInput
    subprojects?: SubprojectsCreateNestedManyWithoutAccountsInput
    taxa?: TaxaCreateNestedManyWithoutAccountsInput
    taxonomies?: TaxonomiesCreateNestedManyWithoutAccountsInput
    tile_layers?: Tile_layersCreateNestedManyWithoutAccountsInput
    ui_options?: Ui_optionsCreateNestedManyWithoutAccountsInput
    units?: UnitsCreateNestedManyWithoutAccountsInput
  }

  export type AccountsUncheckedCreateWithoutUser_messagesInput = {
    account_id: string
    user_id?: string | null
    type?: string | null
    period_start?: Date | string | null
    period_end?: Date | string | null
    projects_label_by?: string | null
    label?: string | null
    gbif_occurrence_downloads?: Gbif_occurrence_downloadsUncheckedCreateNestedManyWithoutAccountsInput
    gbif_occurrences?: Gbif_occurrencesUncheckedCreateNestedManyWithoutAccountsInput
    gbif_taxa?: Gbif_taxaUncheckedCreateNestedManyWithoutAccountsInput
    goal_report_values?: Goal_report_valuesUncheckedCreateNestedManyWithoutAccountsInput
    goal_reports?: Goal_reportsUncheckedCreateNestedManyWithoutAccountsInput
    goals?: GoalsUncheckedCreateNestedManyWithoutAccountsInput
    list_values?: List_valuesUncheckedCreateNestedManyWithoutAccountsInput
    lists?: ListsUncheckedCreateNestedManyWithoutAccountsInput
    observation_sources?: Observation_sourcesUncheckedCreateNestedManyWithoutAccountsInput
    persons?: PersonsUncheckedCreateNestedManyWithoutAccountsInput
    place_levels?: Place_levelsUncheckedCreateNestedManyWithoutAccountsInput
    project_users?: Project_usersUncheckedCreateNestedManyWithoutAccountsInput
    projects?: ProjectsUncheckedCreateNestedManyWithoutAccountsInput
    subproject_taxa?: Subproject_taxaUncheckedCreateNestedManyWithoutAccountsInput
    subproject_users?: Subproject_usersUncheckedCreateNestedManyWithoutAccountsInput
    subprojects?: SubprojectsUncheckedCreateNestedManyWithoutAccountsInput
    taxa?: TaxaUncheckedCreateNestedManyWithoutAccountsInput
    taxonomies?: TaxonomiesUncheckedCreateNestedManyWithoutAccountsInput
    tile_layers?: Tile_layersUncheckedCreateNestedManyWithoutAccountsInput
    ui_options?: Ui_optionsUncheckedCreateNestedManyWithoutAccountsInput
    units?: UnitsUncheckedCreateNestedManyWithoutAccountsInput
  }

  export type AccountsCreateOrConnectWithoutUser_messagesInput = {
    where: AccountsWhereUniqueInput
    create: XOR<AccountsCreateWithoutUser_messagesInput, AccountsUncheckedCreateWithoutUser_messagesInput>
  }

  export type MessagesCreateWithoutUser_messagesInput = {
    message_id: string
    label_replace_by_generated_column?: string | null
    date?: Date | string | null
    message?: string | null
  }

  export type MessagesUncheckedCreateWithoutUser_messagesInput = {
    message_id: string
    label_replace_by_generated_column?: string | null
    date?: Date | string | null
    message?: string | null
  }

  export type MessagesCreateOrConnectWithoutUser_messagesInput = {
    where: MessagesWhereUniqueInput
    create: XOR<MessagesCreateWithoutUser_messagesInput, MessagesUncheckedCreateWithoutUser_messagesInput>
  }

  export type UsersCreateWithoutUser_messagesInput = {
    user_id: string
    email?: string | null
    auth_id?: string | null
    label_replace_by_generated_column?: string | null
    deleted?: boolean | null
    accounts?: AccountsCreateNestedManyWithoutUsersInput
    project_users?: Project_usersCreateNestedManyWithoutUsersInput
    subproject_users?: Subproject_usersCreateNestedManyWithoutUsersInput
    ui_options?: Ui_optionsCreateNestedOneWithoutUsersInput
  }

  export type UsersUncheckedCreateWithoutUser_messagesInput = {
    user_id: string
    email?: string | null
    auth_id?: string | null
    label_replace_by_generated_column?: string | null
    deleted?: boolean | null
    accounts?: AccountsUncheckedCreateNestedManyWithoutUsersInput
    project_users?: Project_usersUncheckedCreateNestedManyWithoutUsersInput
    subproject_users?: Subproject_usersUncheckedCreateNestedManyWithoutUsersInput
    ui_options?: Ui_optionsUncheckedCreateNestedOneWithoutUsersInput
  }

  export type UsersCreateOrConnectWithoutUser_messagesInput = {
    where: UsersWhereUniqueInput
    create: XOR<UsersCreateWithoutUser_messagesInput, UsersUncheckedCreateWithoutUser_messagesInput>
  }

  export type AccountsUpsertWithoutUser_messagesInput = {
    update: XOR<AccountsUpdateWithoutUser_messagesInput, AccountsUncheckedUpdateWithoutUser_messagesInput>
    create: XOR<AccountsCreateWithoutUser_messagesInput, AccountsUncheckedCreateWithoutUser_messagesInput>
    where?: AccountsWhereInput
  }

  export type AccountsUpdateToOneWithWhereWithoutUser_messagesInput = {
    where?: AccountsWhereInput
    data: XOR<AccountsUpdateWithoutUser_messagesInput, AccountsUncheckedUpdateWithoutUser_messagesInput>
  }

  export type AccountsUpdateWithoutUser_messagesInput = {
    account_id?: StringFieldUpdateOperationsInput | string
    type?: NullableStringFieldUpdateOperationsInput | string | null
    period_start?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    period_end?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    projects_label_by?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    users?: UsersUpdateOneWithoutAccountsNestedInput
    gbif_occurrence_downloads?: Gbif_occurrence_downloadsUpdateManyWithoutAccountsNestedInput
    gbif_occurrences?: Gbif_occurrencesUpdateManyWithoutAccountsNestedInput
    gbif_taxa?: Gbif_taxaUpdateManyWithoutAccountsNestedInput
    goal_report_values?: Goal_report_valuesUpdateManyWithoutAccountsNestedInput
    goal_reports?: Goal_reportsUpdateManyWithoutAccountsNestedInput
    goals?: GoalsUpdateManyWithoutAccountsNestedInput
    list_values?: List_valuesUpdateManyWithoutAccountsNestedInput
    lists?: ListsUpdateManyWithoutAccountsNestedInput
    observation_sources?: Observation_sourcesUpdateManyWithoutAccountsNestedInput
    persons?: PersonsUpdateManyWithoutAccountsNestedInput
    place_levels?: Place_levelsUpdateManyWithoutAccountsNestedInput
    project_users?: Project_usersUpdateManyWithoutAccountsNestedInput
    projects?: ProjectsUpdateManyWithoutAccountsNestedInput
    subproject_taxa?: Subproject_taxaUpdateManyWithoutAccountsNestedInput
    subproject_users?: Subproject_usersUpdateManyWithoutAccountsNestedInput
    subprojects?: SubprojectsUpdateManyWithoutAccountsNestedInput
    taxa?: TaxaUpdateManyWithoutAccountsNestedInput
    taxonomies?: TaxonomiesUpdateManyWithoutAccountsNestedInput
    tile_layers?: Tile_layersUpdateManyWithoutAccountsNestedInput
    ui_options?: Ui_optionsUpdateManyWithoutAccountsNestedInput
    units?: UnitsUpdateManyWithoutAccountsNestedInput
  }

  export type AccountsUncheckedUpdateWithoutUser_messagesInput = {
    account_id?: StringFieldUpdateOperationsInput | string
    user_id?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    period_start?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    period_end?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    projects_label_by?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    gbif_occurrence_downloads?: Gbif_occurrence_downloadsUncheckedUpdateManyWithoutAccountsNestedInput
    gbif_occurrences?: Gbif_occurrencesUncheckedUpdateManyWithoutAccountsNestedInput
    gbif_taxa?: Gbif_taxaUncheckedUpdateManyWithoutAccountsNestedInput
    goal_report_values?: Goal_report_valuesUncheckedUpdateManyWithoutAccountsNestedInput
    goal_reports?: Goal_reportsUncheckedUpdateManyWithoutAccountsNestedInput
    goals?: GoalsUncheckedUpdateManyWithoutAccountsNestedInput
    list_values?: List_valuesUncheckedUpdateManyWithoutAccountsNestedInput
    lists?: ListsUncheckedUpdateManyWithoutAccountsNestedInput
    observation_sources?: Observation_sourcesUncheckedUpdateManyWithoutAccountsNestedInput
    persons?: PersonsUncheckedUpdateManyWithoutAccountsNestedInput
    place_levels?: Place_levelsUncheckedUpdateManyWithoutAccountsNestedInput
    project_users?: Project_usersUncheckedUpdateManyWithoutAccountsNestedInput
    projects?: ProjectsUncheckedUpdateManyWithoutAccountsNestedInput
    subproject_taxa?: Subproject_taxaUncheckedUpdateManyWithoutAccountsNestedInput
    subproject_users?: Subproject_usersUncheckedUpdateManyWithoutAccountsNestedInput
    subprojects?: SubprojectsUncheckedUpdateManyWithoutAccountsNestedInput
    taxa?: TaxaUncheckedUpdateManyWithoutAccountsNestedInput
    taxonomies?: TaxonomiesUncheckedUpdateManyWithoutAccountsNestedInput
    tile_layers?: Tile_layersUncheckedUpdateManyWithoutAccountsNestedInput
    ui_options?: Ui_optionsUncheckedUpdateManyWithoutAccountsNestedInput
    units?: UnitsUncheckedUpdateManyWithoutAccountsNestedInput
  }

  export type MessagesUpsertWithoutUser_messagesInput = {
    update: XOR<MessagesUpdateWithoutUser_messagesInput, MessagesUncheckedUpdateWithoutUser_messagesInput>
    create: XOR<MessagesCreateWithoutUser_messagesInput, MessagesUncheckedCreateWithoutUser_messagesInput>
    where?: MessagesWhereInput
  }

  export type MessagesUpdateToOneWithWhereWithoutUser_messagesInput = {
    where?: MessagesWhereInput
    data: XOR<MessagesUpdateWithoutUser_messagesInput, MessagesUncheckedUpdateWithoutUser_messagesInput>
  }

  export type MessagesUpdateWithoutUser_messagesInput = {
    message_id?: StringFieldUpdateOperationsInput | string
    label_replace_by_generated_column?: NullableStringFieldUpdateOperationsInput | string | null
    date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    message?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type MessagesUncheckedUpdateWithoutUser_messagesInput = {
    message_id?: StringFieldUpdateOperationsInput | string
    label_replace_by_generated_column?: NullableStringFieldUpdateOperationsInput | string | null
    date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    message?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type UsersUpsertWithoutUser_messagesInput = {
    update: XOR<UsersUpdateWithoutUser_messagesInput, UsersUncheckedUpdateWithoutUser_messagesInput>
    create: XOR<UsersCreateWithoutUser_messagesInput, UsersUncheckedCreateWithoutUser_messagesInput>
    where?: UsersWhereInput
  }

  export type UsersUpdateToOneWithWhereWithoutUser_messagesInput = {
    where?: UsersWhereInput
    data: XOR<UsersUpdateWithoutUser_messagesInput, UsersUncheckedUpdateWithoutUser_messagesInput>
  }

  export type UsersUpdateWithoutUser_messagesInput = {
    user_id?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    auth_id?: NullableStringFieldUpdateOperationsInput | string | null
    label_replace_by_generated_column?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    accounts?: AccountsUpdateManyWithoutUsersNestedInput
    project_users?: Project_usersUpdateManyWithoutUsersNestedInput
    subproject_users?: Subproject_usersUpdateManyWithoutUsersNestedInput
    ui_options?: Ui_optionsUpdateOneWithoutUsersNestedInput
  }

  export type UsersUncheckedUpdateWithoutUser_messagesInput = {
    user_id?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    auth_id?: NullableStringFieldUpdateOperationsInput | string | null
    label_replace_by_generated_column?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    accounts?: AccountsUncheckedUpdateManyWithoutUsersNestedInput
    project_users?: Project_usersUncheckedUpdateManyWithoutUsersNestedInput
    subproject_users?: Subproject_usersUncheckedUpdateManyWithoutUsersNestedInput
    ui_options?: Ui_optionsUncheckedUpdateOneWithoutUsersNestedInput
  }

  export type AccountsCreateWithoutUsersInput = {
    account_id: string
    type?: string | null
    period_start?: Date | string | null
    period_end?: Date | string | null
    projects_label_by?: string | null
    label?: string | null
    gbif_occurrence_downloads?: Gbif_occurrence_downloadsCreateNestedManyWithoutAccountsInput
    gbif_occurrences?: Gbif_occurrencesCreateNestedManyWithoutAccountsInput
    gbif_taxa?: Gbif_taxaCreateNestedManyWithoutAccountsInput
    goal_report_values?: Goal_report_valuesCreateNestedManyWithoutAccountsInput
    goal_reports?: Goal_reportsCreateNestedManyWithoutAccountsInput
    goals?: GoalsCreateNestedManyWithoutAccountsInput
    list_values?: List_valuesCreateNestedManyWithoutAccountsInput
    lists?: ListsCreateNestedManyWithoutAccountsInput
    observation_sources?: Observation_sourcesCreateNestedManyWithoutAccountsInput
    persons?: PersonsCreateNestedManyWithoutAccountsInput
    place_levels?: Place_levelsCreateNestedManyWithoutAccountsInput
    project_users?: Project_usersCreateNestedManyWithoutAccountsInput
    projects?: ProjectsCreateNestedManyWithoutAccountsInput
    subproject_taxa?: Subproject_taxaCreateNestedManyWithoutAccountsInput
    subproject_users?: Subproject_usersCreateNestedManyWithoutAccountsInput
    subprojects?: SubprojectsCreateNestedManyWithoutAccountsInput
    taxa?: TaxaCreateNestedManyWithoutAccountsInput
    taxonomies?: TaxonomiesCreateNestedManyWithoutAccountsInput
    tile_layers?: Tile_layersCreateNestedManyWithoutAccountsInput
    ui_options?: Ui_optionsCreateNestedManyWithoutAccountsInput
    units?: UnitsCreateNestedManyWithoutAccountsInput
    user_messages?: User_messagesCreateNestedManyWithoutAccountsInput
  }

  export type AccountsUncheckedCreateWithoutUsersInput = {
    account_id: string
    type?: string | null
    period_start?: Date | string | null
    period_end?: Date | string | null
    projects_label_by?: string | null
    label?: string | null
    gbif_occurrence_downloads?: Gbif_occurrence_downloadsUncheckedCreateNestedManyWithoutAccountsInput
    gbif_occurrences?: Gbif_occurrencesUncheckedCreateNestedManyWithoutAccountsInput
    gbif_taxa?: Gbif_taxaUncheckedCreateNestedManyWithoutAccountsInput
    goal_report_values?: Goal_report_valuesUncheckedCreateNestedManyWithoutAccountsInput
    goal_reports?: Goal_reportsUncheckedCreateNestedManyWithoutAccountsInput
    goals?: GoalsUncheckedCreateNestedManyWithoutAccountsInput
    list_values?: List_valuesUncheckedCreateNestedManyWithoutAccountsInput
    lists?: ListsUncheckedCreateNestedManyWithoutAccountsInput
    observation_sources?: Observation_sourcesUncheckedCreateNestedManyWithoutAccountsInput
    persons?: PersonsUncheckedCreateNestedManyWithoutAccountsInput
    place_levels?: Place_levelsUncheckedCreateNestedManyWithoutAccountsInput
    project_users?: Project_usersUncheckedCreateNestedManyWithoutAccountsInput
    projects?: ProjectsUncheckedCreateNestedManyWithoutAccountsInput
    subproject_taxa?: Subproject_taxaUncheckedCreateNestedManyWithoutAccountsInput
    subproject_users?: Subproject_usersUncheckedCreateNestedManyWithoutAccountsInput
    subprojects?: SubprojectsUncheckedCreateNestedManyWithoutAccountsInput
    taxa?: TaxaUncheckedCreateNestedManyWithoutAccountsInput
    taxonomies?: TaxonomiesUncheckedCreateNestedManyWithoutAccountsInput
    tile_layers?: Tile_layersUncheckedCreateNestedManyWithoutAccountsInput
    ui_options?: Ui_optionsUncheckedCreateNestedManyWithoutAccountsInput
    units?: UnitsUncheckedCreateNestedManyWithoutAccountsInput
    user_messages?: User_messagesUncheckedCreateNestedManyWithoutAccountsInput
  }

  export type AccountsCreateOrConnectWithoutUsersInput = {
    where: AccountsWhereUniqueInput
    create: XOR<AccountsCreateWithoutUsersInput, AccountsUncheckedCreateWithoutUsersInput>
  }

  export type AccountsCreateManyUsersInputEnvelope = {
    data: Enumerable<AccountsCreateManyUsersInput>
    skipDuplicates?: boolean
  }

  export type Project_usersCreateWithoutUsersInput = {
    project_user_id: string
    role?: string | null
    label?: string | null
    deleted?: boolean | null
    accounts?: AccountsCreateNestedOneWithoutProject_usersInput
    projects?: ProjectsCreateNestedOneWithoutProject_usersInput
  }

  export type Project_usersUncheckedCreateWithoutUsersInput = {
    project_user_id: string
    account_id?: string | null
    project_id?: string | null
    role?: string | null
    label?: string | null
    deleted?: boolean | null
  }

  export type Project_usersCreateOrConnectWithoutUsersInput = {
    where: Project_usersWhereUniqueInput
    create: XOR<Project_usersCreateWithoutUsersInput, Project_usersUncheckedCreateWithoutUsersInput>
  }

  export type Project_usersCreateManyUsersInputEnvelope = {
    data: Enumerable<Project_usersCreateManyUsersInput>
    skipDuplicates?: boolean
  }

  export type Subproject_usersCreateWithoutUsersInput = {
    subproject_user_id: string
    role?: string | null
    label?: string | null
    deleted?: boolean | null
    accounts?: AccountsCreateNestedOneWithoutSubproject_usersInput
    subprojects?: SubprojectsCreateNestedOneWithoutSubproject_usersInput
  }

  export type Subproject_usersUncheckedCreateWithoutUsersInput = {
    subproject_user_id: string
    account_id?: string | null
    subproject_id?: string | null
    role?: string | null
    label?: string | null
    deleted?: boolean | null
  }

  export type Subproject_usersCreateOrConnectWithoutUsersInput = {
    where: Subproject_usersWhereUniqueInput
    create: XOR<Subproject_usersCreateWithoutUsersInput, Subproject_usersUncheckedCreateWithoutUsersInput>
  }

  export type Subproject_usersCreateManyUsersInputEnvelope = {
    data: Enumerable<Subproject_usersCreateManyUsersInput>
    skipDuplicates?: boolean
  }

  export type Ui_optionsCreateWithoutUsersInput = {
    designing?: boolean | null
    breadcrumbs_overflowing?: boolean | null
    navs_overflowing?: boolean | null
    tabs?: NullableJsonNullValueInput | InputJsonValue
    show_map?: boolean | null
    map_bounds?: NullableJsonNullValueInput | InputJsonValue
    local_map_show?: NullableJsonNullValueInput | InputJsonValue
    tile_layer_sorter?: string | null
    vector_layer_sorter?: string | null
    editing_place_geometry?: string | null
    editing_check_geometry?: string | null
    editing_action_geometry?: string | null
    label?: string | null
    accounts?: AccountsCreateNestedOneWithoutUi_optionsInput
  }

  export type Ui_optionsUncheckedCreateWithoutUsersInput = {
    account_id?: string | null
    designing?: boolean | null
    breadcrumbs_overflowing?: boolean | null
    navs_overflowing?: boolean | null
    tabs?: NullableJsonNullValueInput | InputJsonValue
    show_map?: boolean | null
    map_bounds?: NullableJsonNullValueInput | InputJsonValue
    local_map_show?: NullableJsonNullValueInput | InputJsonValue
    tile_layer_sorter?: string | null
    vector_layer_sorter?: string | null
    editing_place_geometry?: string | null
    editing_check_geometry?: string | null
    editing_action_geometry?: string | null
    label?: string | null
  }

  export type Ui_optionsCreateOrConnectWithoutUsersInput = {
    where: Ui_optionsWhereUniqueInput
    create: XOR<Ui_optionsCreateWithoutUsersInput, Ui_optionsUncheckedCreateWithoutUsersInput>
  }

  export type User_messagesCreateWithoutUsersInput = {
    user_message_id: string
    label_replace_by_generated_column?: string | null
    read?: boolean | null
    accounts?: AccountsCreateNestedOneWithoutUser_messagesInput
    messages?: MessagesCreateNestedOneWithoutUser_messagesInput
  }

  export type User_messagesUncheckedCreateWithoutUsersInput = {
    user_message_id: string
    account_id?: string | null
    message_id?: string | null
    label_replace_by_generated_column?: string | null
    read?: boolean | null
  }

  export type User_messagesCreateOrConnectWithoutUsersInput = {
    where: User_messagesWhereUniqueInput
    create: XOR<User_messagesCreateWithoutUsersInput, User_messagesUncheckedCreateWithoutUsersInput>
  }

  export type User_messagesCreateManyUsersInputEnvelope = {
    data: Enumerable<User_messagesCreateManyUsersInput>
    skipDuplicates?: boolean
  }

  export type AccountsUpsertWithWhereUniqueWithoutUsersInput = {
    where: AccountsWhereUniqueInput
    update: XOR<AccountsUpdateWithoutUsersInput, AccountsUncheckedUpdateWithoutUsersInput>
    create: XOR<AccountsCreateWithoutUsersInput, AccountsUncheckedCreateWithoutUsersInput>
  }

  export type AccountsUpdateWithWhereUniqueWithoutUsersInput = {
    where: AccountsWhereUniqueInput
    data: XOR<AccountsUpdateWithoutUsersInput, AccountsUncheckedUpdateWithoutUsersInput>
  }

  export type AccountsUpdateManyWithWhereWithoutUsersInput = {
    where: AccountsScalarWhereInput
    data: XOR<AccountsUpdateManyMutationInput, AccountsUncheckedUpdateManyWithoutUsersInput>
  }

  export type AccountsScalarWhereInput = {
    AND?: Enumerable<AccountsScalarWhereInput>
    OR?: Enumerable<AccountsScalarWhereInput>
    NOT?: Enumerable<AccountsScalarWhereInput>
    account_id?: UuidFilter<"Accounts"> | string
    user_id?: UuidNullableFilter<"Accounts"> | string | null
    type?: StringNullableFilter<"Accounts"> | string | null
    period_start?: DateTimeNullableFilter<"Accounts"> | Date | string | null
    period_end?: DateTimeNullableFilter<"Accounts"> | Date | string | null
    projects_label_by?: StringNullableFilter<"Accounts"> | string | null
    label?: StringNullableFilter<"Accounts"> | string | null
  }

  export type Project_usersUpsertWithWhereUniqueWithoutUsersInput = {
    where: Project_usersWhereUniqueInput
    update: XOR<Project_usersUpdateWithoutUsersInput, Project_usersUncheckedUpdateWithoutUsersInput>
    create: XOR<Project_usersCreateWithoutUsersInput, Project_usersUncheckedCreateWithoutUsersInput>
  }

  export type Project_usersUpdateWithWhereUniqueWithoutUsersInput = {
    where: Project_usersWhereUniqueInput
    data: XOR<Project_usersUpdateWithoutUsersInput, Project_usersUncheckedUpdateWithoutUsersInput>
  }

  export type Project_usersUpdateManyWithWhereWithoutUsersInput = {
    where: Project_usersScalarWhereInput
    data: XOR<Project_usersUpdateManyMutationInput, Project_usersUncheckedUpdateManyWithoutUsersInput>
  }

  export type Subproject_usersUpsertWithWhereUniqueWithoutUsersInput = {
    where: Subproject_usersWhereUniqueInput
    update: XOR<Subproject_usersUpdateWithoutUsersInput, Subproject_usersUncheckedUpdateWithoutUsersInput>
    create: XOR<Subproject_usersCreateWithoutUsersInput, Subproject_usersUncheckedCreateWithoutUsersInput>
  }

  export type Subproject_usersUpdateWithWhereUniqueWithoutUsersInput = {
    where: Subproject_usersWhereUniqueInput
    data: XOR<Subproject_usersUpdateWithoutUsersInput, Subproject_usersUncheckedUpdateWithoutUsersInput>
  }

  export type Subproject_usersUpdateManyWithWhereWithoutUsersInput = {
    where: Subproject_usersScalarWhereInput
    data: XOR<Subproject_usersUpdateManyMutationInput, Subproject_usersUncheckedUpdateManyWithoutUsersInput>
  }

  export type Ui_optionsUpsertWithoutUsersInput = {
    update: XOR<Ui_optionsUpdateWithoutUsersInput, Ui_optionsUncheckedUpdateWithoutUsersInput>
    create: XOR<Ui_optionsCreateWithoutUsersInput, Ui_optionsUncheckedCreateWithoutUsersInput>
    where?: Ui_optionsWhereInput
  }

  export type Ui_optionsUpdateToOneWithWhereWithoutUsersInput = {
    where?: Ui_optionsWhereInput
    data: XOR<Ui_optionsUpdateWithoutUsersInput, Ui_optionsUncheckedUpdateWithoutUsersInput>
  }

  export type Ui_optionsUpdateWithoutUsersInput = {
    designing?: NullableBoolFieldUpdateOperationsInput | boolean | null
    breadcrumbs_overflowing?: NullableBoolFieldUpdateOperationsInput | boolean | null
    navs_overflowing?: NullableBoolFieldUpdateOperationsInput | boolean | null
    tabs?: NullableJsonNullValueInput | InputJsonValue
    show_map?: NullableBoolFieldUpdateOperationsInput | boolean | null
    map_bounds?: NullableJsonNullValueInput | InputJsonValue
    local_map_show?: NullableJsonNullValueInput | InputJsonValue
    tile_layer_sorter?: NullableStringFieldUpdateOperationsInput | string | null
    vector_layer_sorter?: NullableStringFieldUpdateOperationsInput | string | null
    editing_place_geometry?: NullableStringFieldUpdateOperationsInput | string | null
    editing_check_geometry?: NullableStringFieldUpdateOperationsInput | string | null
    editing_action_geometry?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    accounts?: AccountsUpdateOneWithoutUi_optionsNestedInput
  }

  export type Ui_optionsUncheckedUpdateWithoutUsersInput = {
    account_id?: NullableStringFieldUpdateOperationsInput | string | null
    designing?: NullableBoolFieldUpdateOperationsInput | boolean | null
    breadcrumbs_overflowing?: NullableBoolFieldUpdateOperationsInput | boolean | null
    navs_overflowing?: NullableBoolFieldUpdateOperationsInput | boolean | null
    tabs?: NullableJsonNullValueInput | InputJsonValue
    show_map?: NullableBoolFieldUpdateOperationsInput | boolean | null
    map_bounds?: NullableJsonNullValueInput | InputJsonValue
    local_map_show?: NullableJsonNullValueInput | InputJsonValue
    tile_layer_sorter?: NullableStringFieldUpdateOperationsInput | string | null
    vector_layer_sorter?: NullableStringFieldUpdateOperationsInput | string | null
    editing_place_geometry?: NullableStringFieldUpdateOperationsInput | string | null
    editing_check_geometry?: NullableStringFieldUpdateOperationsInput | string | null
    editing_action_geometry?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type User_messagesUpsertWithWhereUniqueWithoutUsersInput = {
    where: User_messagesWhereUniqueInput
    update: XOR<User_messagesUpdateWithoutUsersInput, User_messagesUncheckedUpdateWithoutUsersInput>
    create: XOR<User_messagesCreateWithoutUsersInput, User_messagesUncheckedCreateWithoutUsersInput>
  }

  export type User_messagesUpdateWithWhereUniqueWithoutUsersInput = {
    where: User_messagesWhereUniqueInput
    data: XOR<User_messagesUpdateWithoutUsersInput, User_messagesUncheckedUpdateWithoutUsersInput>
  }

  export type User_messagesUpdateManyWithWhereWithoutUsersInput = {
    where: User_messagesScalarWhereInput
    data: XOR<User_messagesUpdateManyMutationInput, User_messagesUncheckedUpdateManyWithoutUsersInput>
  }

  export type Widgets_for_fieldsCreateWithoutWidget_typesInput = {
    widget_for_field_id: string
    label?: string | null
    deleted?: boolean | null
    field_types?: Field_typesCreateNestedOneWithoutWidgets_for_fieldsInput
  }

  export type Widgets_for_fieldsUncheckedCreateWithoutWidget_typesInput = {
    widget_for_field_id: string
    field_type_id?: string | null
    label?: string | null
    deleted?: boolean | null
  }

  export type Widgets_for_fieldsCreateOrConnectWithoutWidget_typesInput = {
    where: Widgets_for_fieldsWhereUniqueInput
    create: XOR<Widgets_for_fieldsCreateWithoutWidget_typesInput, Widgets_for_fieldsUncheckedCreateWithoutWidget_typesInput>
  }

  export type Widgets_for_fieldsCreateManyWidget_typesInputEnvelope = {
    data: Enumerable<Widgets_for_fieldsCreateManyWidget_typesInput>
    skipDuplicates?: boolean
  }

  export type Widgets_for_fieldsUpsertWithWhereUniqueWithoutWidget_typesInput = {
    where: Widgets_for_fieldsWhereUniqueInput
    update: XOR<Widgets_for_fieldsUpdateWithoutWidget_typesInput, Widgets_for_fieldsUncheckedUpdateWithoutWidget_typesInput>
    create: XOR<Widgets_for_fieldsCreateWithoutWidget_typesInput, Widgets_for_fieldsUncheckedCreateWithoutWidget_typesInput>
  }

  export type Widgets_for_fieldsUpdateWithWhereUniqueWithoutWidget_typesInput = {
    where: Widgets_for_fieldsWhereUniqueInput
    data: XOR<Widgets_for_fieldsUpdateWithoutWidget_typesInput, Widgets_for_fieldsUncheckedUpdateWithoutWidget_typesInput>
  }

  export type Widgets_for_fieldsUpdateManyWithWhereWithoutWidget_typesInput = {
    where: Widgets_for_fieldsScalarWhereInput
    data: XOR<Widgets_for_fieldsUpdateManyMutationInput, Widgets_for_fieldsUncheckedUpdateManyWithoutWidget_typesInput>
  }

  export type Field_typesCreateWithoutWidgets_for_fieldsInput = {
    field_type_id: string
    name?: string | null
    sort?: number | null
    comment?: string | null
    label_replace_by_generated_column?: string | null
    deleted?: boolean | null
  }

  export type Field_typesUncheckedCreateWithoutWidgets_for_fieldsInput = {
    field_type_id: string
    name?: string | null
    sort?: number | null
    comment?: string | null
    label_replace_by_generated_column?: string | null
    deleted?: boolean | null
  }

  export type Field_typesCreateOrConnectWithoutWidgets_for_fieldsInput = {
    where: Field_typesWhereUniqueInput
    create: XOR<Field_typesCreateWithoutWidgets_for_fieldsInput, Field_typesUncheckedCreateWithoutWidgets_for_fieldsInput>
  }

  export type Widget_typesCreateWithoutWidgets_for_fieldsInput = {
    widget_type_id: string
    name?: string | null
    needs_list?: boolean | null
    sort?: number | null
    comment?: string | null
    label_replace_by_generated_column?: string | null
    deleted?: boolean | null
  }

  export type Widget_typesUncheckedCreateWithoutWidgets_for_fieldsInput = {
    widget_type_id: string
    name?: string | null
    needs_list?: boolean | null
    sort?: number | null
    comment?: string | null
    label_replace_by_generated_column?: string | null
    deleted?: boolean | null
  }

  export type Widget_typesCreateOrConnectWithoutWidgets_for_fieldsInput = {
    where: Widget_typesWhereUniqueInput
    create: XOR<Widget_typesCreateWithoutWidgets_for_fieldsInput, Widget_typesUncheckedCreateWithoutWidgets_for_fieldsInput>
  }

  export type Field_typesUpsertWithoutWidgets_for_fieldsInput = {
    update: XOR<Field_typesUpdateWithoutWidgets_for_fieldsInput, Field_typesUncheckedUpdateWithoutWidgets_for_fieldsInput>
    create: XOR<Field_typesCreateWithoutWidgets_for_fieldsInput, Field_typesUncheckedCreateWithoutWidgets_for_fieldsInput>
    where?: Field_typesWhereInput
  }

  export type Field_typesUpdateToOneWithWhereWithoutWidgets_for_fieldsInput = {
    where?: Field_typesWhereInput
    data: XOR<Field_typesUpdateWithoutWidgets_for_fieldsInput, Field_typesUncheckedUpdateWithoutWidgets_for_fieldsInput>
  }

  export type Field_typesUpdateWithoutWidgets_for_fieldsInput = {
    field_type_id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    sort?: NullableIntFieldUpdateOperationsInput | number | null
    comment?: NullableStringFieldUpdateOperationsInput | string | null
    label_replace_by_generated_column?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type Field_typesUncheckedUpdateWithoutWidgets_for_fieldsInput = {
    field_type_id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    sort?: NullableIntFieldUpdateOperationsInput | number | null
    comment?: NullableStringFieldUpdateOperationsInput | string | null
    label_replace_by_generated_column?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type Widget_typesUpsertWithoutWidgets_for_fieldsInput = {
    update: XOR<Widget_typesUpdateWithoutWidgets_for_fieldsInput, Widget_typesUncheckedUpdateWithoutWidgets_for_fieldsInput>
    create: XOR<Widget_typesCreateWithoutWidgets_for_fieldsInput, Widget_typesUncheckedCreateWithoutWidgets_for_fieldsInput>
    where?: Widget_typesWhereInput
  }

  export type Widget_typesUpdateToOneWithWhereWithoutWidgets_for_fieldsInput = {
    where?: Widget_typesWhereInput
    data: XOR<Widget_typesUpdateWithoutWidgets_for_fieldsInput, Widget_typesUncheckedUpdateWithoutWidgets_for_fieldsInput>
  }

  export type Widget_typesUpdateWithoutWidgets_for_fieldsInput = {
    widget_type_id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    needs_list?: NullableBoolFieldUpdateOperationsInput | boolean | null
    sort?: NullableIntFieldUpdateOperationsInput | number | null
    comment?: NullableStringFieldUpdateOperationsInput | string | null
    label_replace_by_generated_column?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type Widget_typesUncheckedUpdateWithoutWidgets_for_fieldsInput = {
    widget_type_id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    needs_list?: NullableBoolFieldUpdateOperationsInput | boolean | null
    sort?: NullableIntFieldUpdateOperationsInput | number | null
    comment?: NullableStringFieldUpdateOperationsInput | string | null
    label_replace_by_generated_column?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type Gbif_occurrence_downloadsCreateManyAccountsInput = {
    gbif_occurrence_download_id: string
    project_id?: string | null
    subproject_id?: string | null
    gbif_table?: gbif_table | null
    filters?: NullableJsonNullValueInput | InputJsonValue
    created_time?: Date | string | null
    download_key?: string | null
    error?: string | null
    inserted_time?: Date | string | null
    inserted_count?: number | null
    attribution?: string | null
    deleted?: boolean | null
  }

  export type Gbif_occurrencesCreateManyAccountsInput = {
    gbif_occurrence_id: string
    project_id?: string | null
    subproject_id?: string | null
    gbif_data?: NullableJsonNullValueInput | InputJsonValue
    label?: string | null
  }

  export type Gbif_taxaCreateManyAccountsInput = {
    gbif_taxon_id: string
    project_id?: string | null
    gbif_data?: NullableJsonNullValueInput | InputJsonValue
    label?: string | null
  }

  export type Goal_report_valuesCreateManyAccountsInput = {
    goal_report_value_id: string
    goal_report_id?: string | null
    unit_id?: string | null
    value_integer?: number | null
    value_numeric?: number | null
    value_text?: string | null
    label?: string | null
    deleted?: boolean | null
  }

  export type Goal_reportsCreateManyAccountsInput = {
    goal_report_id: string
    goal_id?: string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label?: string | null
    deleted?: boolean | null
  }

  export type GoalsCreateManyAccountsInput = {
    goal_id: string
    subproject_id?: string | null
    year?: number | null
    name?: string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label_replace_by_generated_column?: string | null
    deleted?: boolean | null
  }

  export type List_valuesCreateManyAccountsInput = {
    list_value_id: string
    list_id?: string | null
    value?: string | null
    obsolete?: boolean | null
    label_replace_by_generated_column?: string | null
    deleted?: boolean | null
  }

  export type ListsCreateManyAccountsInput = {
    list_id: string
    project_id?: string | null
    name?: string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    obsolete?: boolean | null
    label_replace_by_generated_column?: string | null
    deleted?: boolean | null
  }

  export type Observation_sourcesCreateManyAccountsInput = {
    observation_source_id: string
    project_id?: string | null
    name?: string | null
    url?: string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label_replace_by_generated_column?: string | null
    deleted?: boolean | null
  }

  export type PersonsCreateManyAccountsInput = {
    person_id: string
    project_id?: string | null
    email?: string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label_replace_by_generated_column?: string | null
    deleted?: boolean | null
  }

  export type Place_levelsCreateManyAccountsInput = {
    place_level_id: string
    project_id?: string | null
    level?: number | null
    name_singular?: string | null
    name_plural?: string | null
    name_short?: string | null
    reports?: boolean | null
    report_values?: boolean | null
    actions?: boolean | null
    action_values?: boolean | null
    action_reports?: boolean | null
    checks?: boolean | null
    check_values?: boolean | null
    check_taxa?: boolean | null
    observations?: boolean | null
    label_replace_by_generated_column?: string | null
    deleted?: boolean | null
  }

  export type Project_usersCreateManyAccountsInput = {
    project_user_id: string
    project_id?: string | null
    user_id?: string | null
    role?: string | null
    label?: string | null
    deleted?: boolean | null
  }

  export type ProjectsCreateManyAccountsInput = {
    project_id: string
    name?: string | null
    label?: string | null
    type?: project_type | null
    subproject_name_singular?: string | null
    subproject_name_plural?: string | null
    subproject_order_by?: string | null
    places_label_by?: string | null
    places_order_by?: NullableJsonNullValueInput | InputJsonValue
    persons_label_by?: string | null
    persons_order_by?: string | null
    goal_reports_label_by?: string | null
    goal_reports_order_by?: string | null
    values_on_multiple_levels?: string | null
    multiple_action_values_on_same_level?: string | null
    multiple_check_values_on_same_level?: string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    files_offline?: boolean | null
    files_active_projects?: boolean | null
    files_active_subprojects?: boolean | null
    files_active_places?: boolean | null
    files_active_actions?: boolean | null
    files_active_checks?: boolean | null
    deleted?: boolean | null
  }

  export type Subproject_taxaCreateManyAccountsInput = {
    subproject_taxon_id: string
    subproject_id?: string | null
    taxon_id?: string | null
    label?: string | null
    deleted?: boolean | null
  }

  export type Subproject_usersCreateManyAccountsInput = {
    subproject_user_id: string
    subproject_id?: string | null
    user_id?: string | null
    role?: string | null
    label?: string | null
    deleted?: boolean | null
  }

  export type SubprojectsCreateManyAccountsInput = {
    subproject_id: string
    project_id?: string | null
    name?: string | null
    label_replace_by_generated_column?: string | null
    start_year?: number | null
    end_year?: number | null
    data?: NullableJsonNullValueInput | InputJsonValue
    deleted?: boolean | null
  }

  export type TaxaCreateManyAccountsInput = {
    taxon_id: string
    taxonomy_id?: string | null
    name?: string | null
    id_in_source?: string | null
    url?: string | null
    label?: string | null
    deleted?: boolean | null
  }

  export type TaxonomiesCreateManyAccountsInput = {
    taxonomy_id: string
    project_id?: string | null
    type?: taxonomy_type | null
    name?: string | null
    url?: string | null
    obsolete?: boolean | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label_replace_by_generated_column?: string | null
    deleted?: boolean | null
  }

  export type Tile_layersCreateManyAccountsInput = {
    tile_layer_id: string
    project_id: string
    label?: string | null
    sort?: number | null
    active?: boolean | null
    type?: tile_layer_type_enum | null
    wmts_url_template?: string | null
    wmts_subdomains?: NullableJsonNullValueInput | InputJsonValue
    wms_base_url?: string | null
    wms_format?: NullableJsonNullValueInput | InputJsonValue
    wms_layer?: NullableJsonNullValueInput | InputJsonValue
    wms_parameters?: NullableJsonNullValueInput | InputJsonValue
    wms_styles?: NullableJsonNullValueInput | InputJsonValue
    wms_transparent?: boolean | null
    wms_version?: string | null
    wms_info_format?: NullableJsonNullValueInput | InputJsonValue
    wms_legend?: NullableJsonNullValueInput | InputJsonValue
    max_zoom?: number | null
    min_zoom?: number | null
    opacity_percent?: number | null
    grayscale?: boolean | null
    local_data_size?: number | null
    local_data_bounds?: NullableJsonNullValueInput | InputJsonValue
    deleted?: boolean | null
  }

  export type Ui_optionsCreateManyAccountsInput = {
    user_id: string
    designing?: boolean | null
    breadcrumbs_overflowing?: boolean | null
    navs_overflowing?: boolean | null
    tabs?: NullableJsonNullValueInput | InputJsonValue
    show_map?: boolean | null
    map_bounds?: NullableJsonNullValueInput | InputJsonValue
    local_map_show?: NullableJsonNullValueInput | InputJsonValue
    tile_layer_sorter?: string | null
    vector_layer_sorter?: string | null
    editing_place_geometry?: string | null
    editing_check_geometry?: string | null
    editing_action_geometry?: string | null
    label?: string | null
  }

  export type UnitsCreateManyAccountsInput = {
    unit_id: string
    project_id?: string | null
    use_for_action_values?: boolean | null
    use_for_action_report_values?: boolean | null
    use_for_check_values?: boolean | null
    use_for_place_report_values?: boolean | null
    use_for_goal_report_values?: boolean | null
    use_for_subproject_taxa?: boolean | null
    use_for_check_taxa?: boolean | null
    name?: string | null
    summable?: boolean | null
    sort?: number | null
    type?: unit_type | null
    list_id?: string | null
    label_replace_by_generated_column?: string | null
    deleted?: boolean | null
  }

  export type User_messagesCreateManyAccountsInput = {
    user_message_id: string
    user_id?: string | null
    message_id?: string | null
    label_replace_by_generated_column?: string | null
    read?: boolean | null
  }

  export type Gbif_occurrence_downloadsUpdateWithoutAccountsInput = {
    gbif_occurrence_download_id?: StringFieldUpdateOperationsInput | string
    gbif_table?: NullableEnumgbif_tableFieldUpdateOperationsInput | gbif_table | null
    filters?: NullableJsonNullValueInput | InputJsonValue
    created_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    download_key?: NullableStringFieldUpdateOperationsInput | string | null
    error?: NullableStringFieldUpdateOperationsInput | string | null
    inserted_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    inserted_count?: NullableIntFieldUpdateOperationsInput | number | null
    attribution?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    projects?: ProjectsUpdateOneWithoutGbif_occurrence_downloadsNestedInput
    subprojects?: SubprojectsUpdateOneWithoutGbif_occurrence_downloadsNestedInput
  }

  export type Gbif_occurrence_downloadsUncheckedUpdateWithoutAccountsInput = {
    gbif_occurrence_download_id?: StringFieldUpdateOperationsInput | string
    project_id?: NullableStringFieldUpdateOperationsInput | string | null
    subproject_id?: NullableStringFieldUpdateOperationsInput | string | null
    gbif_table?: NullableEnumgbif_tableFieldUpdateOperationsInput | gbif_table | null
    filters?: NullableJsonNullValueInput | InputJsonValue
    created_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    download_key?: NullableStringFieldUpdateOperationsInput | string | null
    error?: NullableStringFieldUpdateOperationsInput | string | null
    inserted_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    inserted_count?: NullableIntFieldUpdateOperationsInput | number | null
    attribution?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type Gbif_occurrence_downloadsUncheckedUpdateManyWithoutAccountsInput = {
    gbif_occurrence_download_id?: StringFieldUpdateOperationsInput | string
    project_id?: NullableStringFieldUpdateOperationsInput | string | null
    subproject_id?: NullableStringFieldUpdateOperationsInput | string | null
    gbif_table?: NullableEnumgbif_tableFieldUpdateOperationsInput | gbif_table | null
    filters?: NullableJsonNullValueInput | InputJsonValue
    created_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    download_key?: NullableStringFieldUpdateOperationsInput | string | null
    error?: NullableStringFieldUpdateOperationsInput | string | null
    inserted_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    inserted_count?: NullableIntFieldUpdateOperationsInput | number | null
    attribution?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type Gbif_occurrencesUpdateWithoutAccountsInput = {
    gbif_occurrence_id?: StringFieldUpdateOperationsInput | string
    gbif_data?: NullableJsonNullValueInput | InputJsonValue
    label?: NullableStringFieldUpdateOperationsInput | string | null
    projects?: ProjectsUpdateOneWithoutGbif_occurrencesNestedInput
    subprojects?: SubprojectsUpdateOneWithoutGbif_occurrencesNestedInput
  }

  export type Gbif_occurrencesUncheckedUpdateWithoutAccountsInput = {
    gbif_occurrence_id?: StringFieldUpdateOperationsInput | string
    project_id?: NullableStringFieldUpdateOperationsInput | string | null
    subproject_id?: NullableStringFieldUpdateOperationsInput | string | null
    gbif_data?: NullableJsonNullValueInput | InputJsonValue
    label?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type Gbif_occurrencesUncheckedUpdateManyWithoutAccountsInput = {
    gbif_occurrence_id?: StringFieldUpdateOperationsInput | string
    project_id?: NullableStringFieldUpdateOperationsInput | string | null
    subproject_id?: NullableStringFieldUpdateOperationsInput | string | null
    gbif_data?: NullableJsonNullValueInput | InputJsonValue
    label?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type Gbif_taxaUpdateWithoutAccountsInput = {
    gbif_taxon_id?: StringFieldUpdateOperationsInput | string
    gbif_data?: NullableJsonNullValueInput | InputJsonValue
    label?: NullableStringFieldUpdateOperationsInput | string | null
    projects?: ProjectsUpdateOneWithoutGbif_taxaNestedInput
  }

  export type Gbif_taxaUncheckedUpdateWithoutAccountsInput = {
    gbif_taxon_id?: StringFieldUpdateOperationsInput | string
    project_id?: NullableStringFieldUpdateOperationsInput | string | null
    gbif_data?: NullableJsonNullValueInput | InputJsonValue
    label?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type Gbif_taxaUncheckedUpdateManyWithoutAccountsInput = {
    gbif_taxon_id?: StringFieldUpdateOperationsInput | string
    project_id?: NullableStringFieldUpdateOperationsInput | string | null
    gbif_data?: NullableJsonNullValueInput | InputJsonValue
    label?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type Goal_report_valuesUpdateWithoutAccountsInput = {
    goal_report_value_id?: StringFieldUpdateOperationsInput | string
    value_integer?: NullableIntFieldUpdateOperationsInput | number | null
    value_numeric?: NullableFloatFieldUpdateOperationsInput | number | null
    value_text?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    goal_reports?: Goal_reportsUpdateOneWithoutGoal_report_valuesNestedInput
    units?: UnitsUpdateOneWithoutGoal_report_valuesNestedInput
  }

  export type Goal_report_valuesUncheckedUpdateWithoutAccountsInput = {
    goal_report_value_id?: StringFieldUpdateOperationsInput | string
    goal_report_id?: NullableStringFieldUpdateOperationsInput | string | null
    unit_id?: NullableStringFieldUpdateOperationsInput | string | null
    value_integer?: NullableIntFieldUpdateOperationsInput | number | null
    value_numeric?: NullableFloatFieldUpdateOperationsInput | number | null
    value_text?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type Goal_report_valuesUncheckedUpdateManyWithoutAccountsInput = {
    goal_report_value_id?: StringFieldUpdateOperationsInput | string
    goal_report_id?: NullableStringFieldUpdateOperationsInput | string | null
    unit_id?: NullableStringFieldUpdateOperationsInput | string | null
    value_integer?: NullableIntFieldUpdateOperationsInput | number | null
    value_numeric?: NullableFloatFieldUpdateOperationsInput | number | null
    value_text?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type Goal_reportsUpdateWithoutAccountsInput = {
    goal_report_id?: StringFieldUpdateOperationsInput | string
    data?: NullableJsonNullValueInput | InputJsonValue
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    goal_report_values?: Goal_report_valuesUpdateManyWithoutGoal_reportsNestedInput
    goals?: GoalsUpdateOneWithoutGoal_reportsNestedInput
  }

  export type Goal_reportsUncheckedUpdateWithoutAccountsInput = {
    goal_report_id?: StringFieldUpdateOperationsInput | string
    goal_id?: NullableStringFieldUpdateOperationsInput | string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    goal_report_values?: Goal_report_valuesUncheckedUpdateManyWithoutGoal_reportsNestedInput
  }

  export type Goal_reportsUncheckedUpdateManyWithoutAccountsInput = {
    goal_report_id?: StringFieldUpdateOperationsInput | string
    goal_id?: NullableStringFieldUpdateOperationsInput | string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type GoalsUpdateWithoutAccountsInput = {
    goal_id?: StringFieldUpdateOperationsInput | string
    year?: NullableIntFieldUpdateOperationsInput | number | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label_replace_by_generated_column?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    goal_reports?: Goal_reportsUpdateManyWithoutGoalsNestedInput
    subprojects?: SubprojectsUpdateOneWithoutGoalsNestedInput
  }

  export type GoalsUncheckedUpdateWithoutAccountsInput = {
    goal_id?: StringFieldUpdateOperationsInput | string
    subproject_id?: NullableStringFieldUpdateOperationsInput | string | null
    year?: NullableIntFieldUpdateOperationsInput | number | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label_replace_by_generated_column?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    goal_reports?: Goal_reportsUncheckedUpdateManyWithoutGoalsNestedInput
  }

  export type GoalsUncheckedUpdateManyWithoutAccountsInput = {
    goal_id?: StringFieldUpdateOperationsInput | string
    subproject_id?: NullableStringFieldUpdateOperationsInput | string | null
    year?: NullableIntFieldUpdateOperationsInput | number | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label_replace_by_generated_column?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type List_valuesUpdateWithoutAccountsInput = {
    list_value_id?: StringFieldUpdateOperationsInput | string
    value?: NullableStringFieldUpdateOperationsInput | string | null
    obsolete?: NullableBoolFieldUpdateOperationsInput | boolean | null
    label_replace_by_generated_column?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    lists?: ListsUpdateOneWithoutList_valuesNestedInput
  }

  export type List_valuesUncheckedUpdateWithoutAccountsInput = {
    list_value_id?: StringFieldUpdateOperationsInput | string
    list_id?: NullableStringFieldUpdateOperationsInput | string | null
    value?: NullableStringFieldUpdateOperationsInput | string | null
    obsolete?: NullableBoolFieldUpdateOperationsInput | boolean | null
    label_replace_by_generated_column?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type List_valuesUncheckedUpdateManyWithoutAccountsInput = {
    list_value_id?: StringFieldUpdateOperationsInput | string
    list_id?: NullableStringFieldUpdateOperationsInput | string | null
    value?: NullableStringFieldUpdateOperationsInput | string | null
    obsolete?: NullableBoolFieldUpdateOperationsInput | boolean | null
    label_replace_by_generated_column?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type ListsUpdateWithoutAccountsInput = {
    list_id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    obsolete?: NullableBoolFieldUpdateOperationsInput | boolean | null
    label_replace_by_generated_column?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    list_values?: List_valuesUpdateManyWithoutListsNestedInput
    projects?: ProjectsUpdateOneWithoutListsNestedInput
    units?: UnitsUpdateManyWithoutListsNestedInput
  }

  export type ListsUncheckedUpdateWithoutAccountsInput = {
    list_id?: StringFieldUpdateOperationsInput | string
    project_id?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    obsolete?: NullableBoolFieldUpdateOperationsInput | boolean | null
    label_replace_by_generated_column?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    list_values?: List_valuesUncheckedUpdateManyWithoutListsNestedInput
    units?: UnitsUncheckedUpdateManyWithoutListsNestedInput
  }

  export type ListsUncheckedUpdateManyWithoutAccountsInput = {
    list_id?: StringFieldUpdateOperationsInput | string
    project_id?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    obsolete?: NullableBoolFieldUpdateOperationsInput | boolean | null
    label_replace_by_generated_column?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type Observation_sourcesUpdateWithoutAccountsInput = {
    observation_source_id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    url?: NullableStringFieldUpdateOperationsInput | string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label_replace_by_generated_column?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    projects?: ProjectsUpdateOneWithoutObservation_sourcesNestedInput
  }

  export type Observation_sourcesUncheckedUpdateWithoutAccountsInput = {
    observation_source_id?: StringFieldUpdateOperationsInput | string
    project_id?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    url?: NullableStringFieldUpdateOperationsInput | string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label_replace_by_generated_column?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type Observation_sourcesUncheckedUpdateManyWithoutAccountsInput = {
    observation_source_id?: StringFieldUpdateOperationsInput | string
    project_id?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    url?: NullableStringFieldUpdateOperationsInput | string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label_replace_by_generated_column?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type PersonsUpdateWithoutAccountsInput = {
    person_id?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label_replace_by_generated_column?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    projects?: ProjectsUpdateOneWithoutPersonsNestedInput
  }

  export type PersonsUncheckedUpdateWithoutAccountsInput = {
    person_id?: StringFieldUpdateOperationsInput | string
    project_id?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label_replace_by_generated_column?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type PersonsUncheckedUpdateManyWithoutAccountsInput = {
    person_id?: StringFieldUpdateOperationsInput | string
    project_id?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label_replace_by_generated_column?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type Place_levelsUpdateWithoutAccountsInput = {
    place_level_id?: StringFieldUpdateOperationsInput | string
    level?: NullableIntFieldUpdateOperationsInput | number | null
    name_singular?: NullableStringFieldUpdateOperationsInput | string | null
    name_plural?: NullableStringFieldUpdateOperationsInput | string | null
    name_short?: NullableStringFieldUpdateOperationsInput | string | null
    reports?: NullableBoolFieldUpdateOperationsInput | boolean | null
    report_values?: NullableBoolFieldUpdateOperationsInput | boolean | null
    actions?: NullableBoolFieldUpdateOperationsInput | boolean | null
    action_values?: NullableBoolFieldUpdateOperationsInput | boolean | null
    action_reports?: NullableBoolFieldUpdateOperationsInput | boolean | null
    checks?: NullableBoolFieldUpdateOperationsInput | boolean | null
    check_values?: NullableBoolFieldUpdateOperationsInput | boolean | null
    check_taxa?: NullableBoolFieldUpdateOperationsInput | boolean | null
    observations?: NullableBoolFieldUpdateOperationsInput | boolean | null
    label_replace_by_generated_column?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    projects?: ProjectsUpdateOneWithoutPlace_levelsNestedInput
  }

  export type Place_levelsUncheckedUpdateWithoutAccountsInput = {
    place_level_id?: StringFieldUpdateOperationsInput | string
    project_id?: NullableStringFieldUpdateOperationsInput | string | null
    level?: NullableIntFieldUpdateOperationsInput | number | null
    name_singular?: NullableStringFieldUpdateOperationsInput | string | null
    name_plural?: NullableStringFieldUpdateOperationsInput | string | null
    name_short?: NullableStringFieldUpdateOperationsInput | string | null
    reports?: NullableBoolFieldUpdateOperationsInput | boolean | null
    report_values?: NullableBoolFieldUpdateOperationsInput | boolean | null
    actions?: NullableBoolFieldUpdateOperationsInput | boolean | null
    action_values?: NullableBoolFieldUpdateOperationsInput | boolean | null
    action_reports?: NullableBoolFieldUpdateOperationsInput | boolean | null
    checks?: NullableBoolFieldUpdateOperationsInput | boolean | null
    check_values?: NullableBoolFieldUpdateOperationsInput | boolean | null
    check_taxa?: NullableBoolFieldUpdateOperationsInput | boolean | null
    observations?: NullableBoolFieldUpdateOperationsInput | boolean | null
    label_replace_by_generated_column?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type Place_levelsUncheckedUpdateManyWithoutAccountsInput = {
    place_level_id?: StringFieldUpdateOperationsInput | string
    project_id?: NullableStringFieldUpdateOperationsInput | string | null
    level?: NullableIntFieldUpdateOperationsInput | number | null
    name_singular?: NullableStringFieldUpdateOperationsInput | string | null
    name_plural?: NullableStringFieldUpdateOperationsInput | string | null
    name_short?: NullableStringFieldUpdateOperationsInput | string | null
    reports?: NullableBoolFieldUpdateOperationsInput | boolean | null
    report_values?: NullableBoolFieldUpdateOperationsInput | boolean | null
    actions?: NullableBoolFieldUpdateOperationsInput | boolean | null
    action_values?: NullableBoolFieldUpdateOperationsInput | boolean | null
    action_reports?: NullableBoolFieldUpdateOperationsInput | boolean | null
    checks?: NullableBoolFieldUpdateOperationsInput | boolean | null
    check_values?: NullableBoolFieldUpdateOperationsInput | boolean | null
    check_taxa?: NullableBoolFieldUpdateOperationsInput | boolean | null
    observations?: NullableBoolFieldUpdateOperationsInput | boolean | null
    label_replace_by_generated_column?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type Project_usersUpdateWithoutAccountsInput = {
    project_user_id?: StringFieldUpdateOperationsInput | string
    role?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    projects?: ProjectsUpdateOneWithoutProject_usersNestedInput
    users?: UsersUpdateOneWithoutProject_usersNestedInput
  }

  export type Project_usersUncheckedUpdateWithoutAccountsInput = {
    project_user_id?: StringFieldUpdateOperationsInput | string
    project_id?: NullableStringFieldUpdateOperationsInput | string | null
    user_id?: NullableStringFieldUpdateOperationsInput | string | null
    role?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type Project_usersUncheckedUpdateManyWithoutAccountsInput = {
    project_user_id?: StringFieldUpdateOperationsInput | string
    project_id?: NullableStringFieldUpdateOperationsInput | string | null
    user_id?: NullableStringFieldUpdateOperationsInput | string | null
    role?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type ProjectsUpdateWithoutAccountsInput = {
    project_id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableEnumproject_typeFieldUpdateOperationsInput | project_type | null
    subproject_name_singular?: NullableStringFieldUpdateOperationsInput | string | null
    subproject_name_plural?: NullableStringFieldUpdateOperationsInput | string | null
    subproject_order_by?: NullableStringFieldUpdateOperationsInput | string | null
    places_label_by?: NullableStringFieldUpdateOperationsInput | string | null
    places_order_by?: NullableJsonNullValueInput | InputJsonValue
    persons_label_by?: NullableStringFieldUpdateOperationsInput | string | null
    persons_order_by?: NullableStringFieldUpdateOperationsInput | string | null
    goal_reports_label_by?: NullableStringFieldUpdateOperationsInput | string | null
    goal_reports_order_by?: NullableStringFieldUpdateOperationsInput | string | null
    values_on_multiple_levels?: NullableStringFieldUpdateOperationsInput | string | null
    multiple_action_values_on_same_level?: NullableStringFieldUpdateOperationsInput | string | null
    multiple_check_values_on_same_level?: NullableStringFieldUpdateOperationsInput | string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    files_offline?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_projects?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_subprojects?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_places?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_actions?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_checks?: NullableBoolFieldUpdateOperationsInput | boolean | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    gbif_occurrence_downloads?: Gbif_occurrence_downloadsUpdateManyWithoutProjectsNestedInput
    gbif_occurrences?: Gbif_occurrencesUpdateManyWithoutProjectsNestedInput
    gbif_taxa?: Gbif_taxaUpdateManyWithoutProjectsNestedInput
    lists?: ListsUpdateManyWithoutProjectsNestedInput
    observation_sources?: Observation_sourcesUpdateManyWithoutProjectsNestedInput
    persons?: PersonsUpdateManyWithoutProjectsNestedInput
    place_levels?: Place_levelsUpdateManyWithoutProjectsNestedInput
    project_users?: Project_usersUpdateManyWithoutProjectsNestedInput
    subprojects?: SubprojectsUpdateManyWithoutProjectsNestedInput
    taxonomies?: TaxonomiesUpdateManyWithoutProjectsNestedInput
    tile_layers?: Tile_layersUpdateManyWithoutProjectsNestedInput
    units?: UnitsUpdateManyWithoutProjectsNestedInput
  }

  export type ProjectsUncheckedUpdateWithoutAccountsInput = {
    project_id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableEnumproject_typeFieldUpdateOperationsInput | project_type | null
    subproject_name_singular?: NullableStringFieldUpdateOperationsInput | string | null
    subproject_name_plural?: NullableStringFieldUpdateOperationsInput | string | null
    subproject_order_by?: NullableStringFieldUpdateOperationsInput | string | null
    places_label_by?: NullableStringFieldUpdateOperationsInput | string | null
    places_order_by?: NullableJsonNullValueInput | InputJsonValue
    persons_label_by?: NullableStringFieldUpdateOperationsInput | string | null
    persons_order_by?: NullableStringFieldUpdateOperationsInput | string | null
    goal_reports_label_by?: NullableStringFieldUpdateOperationsInput | string | null
    goal_reports_order_by?: NullableStringFieldUpdateOperationsInput | string | null
    values_on_multiple_levels?: NullableStringFieldUpdateOperationsInput | string | null
    multiple_action_values_on_same_level?: NullableStringFieldUpdateOperationsInput | string | null
    multiple_check_values_on_same_level?: NullableStringFieldUpdateOperationsInput | string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    files_offline?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_projects?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_subprojects?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_places?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_actions?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_checks?: NullableBoolFieldUpdateOperationsInput | boolean | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    gbif_occurrence_downloads?: Gbif_occurrence_downloadsUncheckedUpdateManyWithoutProjectsNestedInput
    gbif_occurrences?: Gbif_occurrencesUncheckedUpdateManyWithoutProjectsNestedInput
    gbif_taxa?: Gbif_taxaUncheckedUpdateManyWithoutProjectsNestedInput
    lists?: ListsUncheckedUpdateManyWithoutProjectsNestedInput
    observation_sources?: Observation_sourcesUncheckedUpdateManyWithoutProjectsNestedInput
    persons?: PersonsUncheckedUpdateManyWithoutProjectsNestedInput
    place_levels?: Place_levelsUncheckedUpdateManyWithoutProjectsNestedInput
    project_users?: Project_usersUncheckedUpdateManyWithoutProjectsNestedInput
    subprojects?: SubprojectsUncheckedUpdateManyWithoutProjectsNestedInput
    taxonomies?: TaxonomiesUncheckedUpdateManyWithoutProjectsNestedInput
    tile_layers?: Tile_layersUncheckedUpdateManyWithoutProjectsNestedInput
    units?: UnitsUncheckedUpdateManyWithoutProjectsNestedInput
  }

  export type ProjectsUncheckedUpdateManyWithoutAccountsInput = {
    project_id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableEnumproject_typeFieldUpdateOperationsInput | project_type | null
    subproject_name_singular?: NullableStringFieldUpdateOperationsInput | string | null
    subproject_name_plural?: NullableStringFieldUpdateOperationsInput | string | null
    subproject_order_by?: NullableStringFieldUpdateOperationsInput | string | null
    places_label_by?: NullableStringFieldUpdateOperationsInput | string | null
    places_order_by?: NullableJsonNullValueInput | InputJsonValue
    persons_label_by?: NullableStringFieldUpdateOperationsInput | string | null
    persons_order_by?: NullableStringFieldUpdateOperationsInput | string | null
    goal_reports_label_by?: NullableStringFieldUpdateOperationsInput | string | null
    goal_reports_order_by?: NullableStringFieldUpdateOperationsInput | string | null
    values_on_multiple_levels?: NullableStringFieldUpdateOperationsInput | string | null
    multiple_action_values_on_same_level?: NullableStringFieldUpdateOperationsInput | string | null
    multiple_check_values_on_same_level?: NullableStringFieldUpdateOperationsInput | string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    files_offline?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_projects?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_subprojects?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_places?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_actions?: NullableBoolFieldUpdateOperationsInput | boolean | null
    files_active_checks?: NullableBoolFieldUpdateOperationsInput | boolean | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type Subproject_taxaUpdateWithoutAccountsInput = {
    subproject_taxon_id?: StringFieldUpdateOperationsInput | string
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    subprojects?: SubprojectsUpdateOneWithoutSubproject_taxaNestedInput
    taxa?: TaxaUpdateOneWithoutSubproject_taxaNestedInput
  }

  export type Subproject_taxaUncheckedUpdateWithoutAccountsInput = {
    subproject_taxon_id?: StringFieldUpdateOperationsInput | string
    subproject_id?: NullableStringFieldUpdateOperationsInput | string | null
    taxon_id?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type Subproject_taxaUncheckedUpdateManyWithoutAccountsInput = {
    subproject_taxon_id?: StringFieldUpdateOperationsInput | string
    subproject_id?: NullableStringFieldUpdateOperationsInput | string | null
    taxon_id?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type Subproject_usersUpdateWithoutAccountsInput = {
    subproject_user_id?: StringFieldUpdateOperationsInput | string
    role?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    subprojects?: SubprojectsUpdateOneWithoutSubproject_usersNestedInput
    users?: UsersUpdateOneWithoutSubproject_usersNestedInput
  }

  export type Subproject_usersUncheckedUpdateWithoutAccountsInput = {
    subproject_user_id?: StringFieldUpdateOperationsInput | string
    subproject_id?: NullableStringFieldUpdateOperationsInput | string | null
    user_id?: NullableStringFieldUpdateOperationsInput | string | null
    role?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type Subproject_usersUncheckedUpdateManyWithoutAccountsInput = {
    subproject_user_id?: StringFieldUpdateOperationsInput | string
    subproject_id?: NullableStringFieldUpdateOperationsInput | string | null
    user_id?: NullableStringFieldUpdateOperationsInput | string | null
    role?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type SubprojectsUpdateWithoutAccountsInput = {
    subproject_id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    label_replace_by_generated_column?: NullableStringFieldUpdateOperationsInput | string | null
    start_year?: NullableIntFieldUpdateOperationsInput | number | null
    end_year?: NullableIntFieldUpdateOperationsInput | number | null
    data?: NullableJsonNullValueInput | InputJsonValue
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    gbif_occurrence_downloads?: Gbif_occurrence_downloadsUpdateManyWithoutSubprojectsNestedInput
    gbif_occurrences?: Gbif_occurrencesUpdateManyWithoutSubprojectsNestedInput
    goals?: GoalsUpdateManyWithoutSubprojectsNestedInput
    subproject_taxa?: Subproject_taxaUpdateManyWithoutSubprojectsNestedInput
    subproject_users?: Subproject_usersUpdateManyWithoutSubprojectsNestedInput
    projects?: ProjectsUpdateOneWithoutSubprojectsNestedInput
  }

  export type SubprojectsUncheckedUpdateWithoutAccountsInput = {
    subproject_id?: StringFieldUpdateOperationsInput | string
    project_id?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    label_replace_by_generated_column?: NullableStringFieldUpdateOperationsInput | string | null
    start_year?: NullableIntFieldUpdateOperationsInput | number | null
    end_year?: NullableIntFieldUpdateOperationsInput | number | null
    data?: NullableJsonNullValueInput | InputJsonValue
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    gbif_occurrence_downloads?: Gbif_occurrence_downloadsUncheckedUpdateManyWithoutSubprojectsNestedInput
    gbif_occurrences?: Gbif_occurrencesUncheckedUpdateManyWithoutSubprojectsNestedInput
    goals?: GoalsUncheckedUpdateManyWithoutSubprojectsNestedInput
    subproject_taxa?: Subproject_taxaUncheckedUpdateManyWithoutSubprojectsNestedInput
    subproject_users?: Subproject_usersUncheckedUpdateManyWithoutSubprojectsNestedInput
  }

  export type SubprojectsUncheckedUpdateManyWithoutAccountsInput = {
    subproject_id?: StringFieldUpdateOperationsInput | string
    project_id?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    label_replace_by_generated_column?: NullableStringFieldUpdateOperationsInput | string | null
    start_year?: NullableIntFieldUpdateOperationsInput | number | null
    end_year?: NullableIntFieldUpdateOperationsInput | number | null
    data?: NullableJsonNullValueInput | InputJsonValue
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type TaxaUpdateWithoutAccountsInput = {
    taxon_id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    id_in_source?: NullableStringFieldUpdateOperationsInput | string | null
    url?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    subproject_taxa?: Subproject_taxaUpdateManyWithoutTaxaNestedInput
    taxonomies?: TaxonomiesUpdateOneWithoutTaxaNestedInput
  }

  export type TaxaUncheckedUpdateWithoutAccountsInput = {
    taxon_id?: StringFieldUpdateOperationsInput | string
    taxonomy_id?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    id_in_source?: NullableStringFieldUpdateOperationsInput | string | null
    url?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    subproject_taxa?: Subproject_taxaUncheckedUpdateManyWithoutTaxaNestedInput
  }

  export type TaxaUncheckedUpdateManyWithoutAccountsInput = {
    taxon_id?: StringFieldUpdateOperationsInput | string
    taxonomy_id?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    id_in_source?: NullableStringFieldUpdateOperationsInput | string | null
    url?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type TaxonomiesUpdateWithoutAccountsInput = {
    taxonomy_id?: StringFieldUpdateOperationsInput | string
    type?: NullableEnumtaxonomy_typeFieldUpdateOperationsInput | taxonomy_type | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    url?: NullableStringFieldUpdateOperationsInput | string | null
    obsolete?: NullableBoolFieldUpdateOperationsInput | boolean | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label_replace_by_generated_column?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    taxa?: TaxaUpdateManyWithoutTaxonomiesNestedInput
    projects?: ProjectsUpdateOneWithoutTaxonomiesNestedInput
  }

  export type TaxonomiesUncheckedUpdateWithoutAccountsInput = {
    taxonomy_id?: StringFieldUpdateOperationsInput | string
    project_id?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableEnumtaxonomy_typeFieldUpdateOperationsInput | taxonomy_type | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    url?: NullableStringFieldUpdateOperationsInput | string | null
    obsolete?: NullableBoolFieldUpdateOperationsInput | boolean | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label_replace_by_generated_column?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    taxa?: TaxaUncheckedUpdateManyWithoutTaxonomiesNestedInput
  }

  export type TaxonomiesUncheckedUpdateManyWithoutAccountsInput = {
    taxonomy_id?: StringFieldUpdateOperationsInput | string
    project_id?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableEnumtaxonomy_typeFieldUpdateOperationsInput | taxonomy_type | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    url?: NullableStringFieldUpdateOperationsInput | string | null
    obsolete?: NullableBoolFieldUpdateOperationsInput | boolean | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label_replace_by_generated_column?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type Tile_layersUpdateWithoutAccountsInput = {
    tile_layer_id?: StringFieldUpdateOperationsInput | string
    label?: NullableStringFieldUpdateOperationsInput | string | null
    sort?: NullableIntFieldUpdateOperationsInput | number | null
    active?: NullableBoolFieldUpdateOperationsInput | boolean | null
    type?: NullableEnumtile_layer_type_enumFieldUpdateOperationsInput | tile_layer_type_enum | null
    wmts_url_template?: NullableStringFieldUpdateOperationsInput | string | null
    wmts_subdomains?: NullableJsonNullValueInput | InputJsonValue
    wms_base_url?: NullableStringFieldUpdateOperationsInput | string | null
    wms_format?: NullableJsonNullValueInput | InputJsonValue
    wms_layer?: NullableJsonNullValueInput | InputJsonValue
    wms_parameters?: NullableJsonNullValueInput | InputJsonValue
    wms_styles?: NullableJsonNullValueInput | InputJsonValue
    wms_transparent?: NullableBoolFieldUpdateOperationsInput | boolean | null
    wms_version?: NullableStringFieldUpdateOperationsInput | string | null
    wms_info_format?: NullableJsonNullValueInput | InputJsonValue
    wms_legend?: NullableJsonNullValueInput | InputJsonValue
    max_zoom?: NullableIntFieldUpdateOperationsInput | number | null
    min_zoom?: NullableIntFieldUpdateOperationsInput | number | null
    opacity_percent?: NullableIntFieldUpdateOperationsInput | number | null
    grayscale?: NullableBoolFieldUpdateOperationsInput | boolean | null
    local_data_size?: NullableIntFieldUpdateOperationsInput | number | null
    local_data_bounds?: NullableJsonNullValueInput | InputJsonValue
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    projects?: ProjectsUpdateOneRequiredWithoutTile_layersNestedInput
  }

  export type Tile_layersUncheckedUpdateWithoutAccountsInput = {
    tile_layer_id?: StringFieldUpdateOperationsInput | string
    project_id?: StringFieldUpdateOperationsInput | string
    label?: NullableStringFieldUpdateOperationsInput | string | null
    sort?: NullableIntFieldUpdateOperationsInput | number | null
    active?: NullableBoolFieldUpdateOperationsInput | boolean | null
    type?: NullableEnumtile_layer_type_enumFieldUpdateOperationsInput | tile_layer_type_enum | null
    wmts_url_template?: NullableStringFieldUpdateOperationsInput | string | null
    wmts_subdomains?: NullableJsonNullValueInput | InputJsonValue
    wms_base_url?: NullableStringFieldUpdateOperationsInput | string | null
    wms_format?: NullableJsonNullValueInput | InputJsonValue
    wms_layer?: NullableJsonNullValueInput | InputJsonValue
    wms_parameters?: NullableJsonNullValueInput | InputJsonValue
    wms_styles?: NullableJsonNullValueInput | InputJsonValue
    wms_transparent?: NullableBoolFieldUpdateOperationsInput | boolean | null
    wms_version?: NullableStringFieldUpdateOperationsInput | string | null
    wms_info_format?: NullableJsonNullValueInput | InputJsonValue
    wms_legend?: NullableJsonNullValueInput | InputJsonValue
    max_zoom?: NullableIntFieldUpdateOperationsInput | number | null
    min_zoom?: NullableIntFieldUpdateOperationsInput | number | null
    opacity_percent?: NullableIntFieldUpdateOperationsInput | number | null
    grayscale?: NullableBoolFieldUpdateOperationsInput | boolean | null
    local_data_size?: NullableIntFieldUpdateOperationsInput | number | null
    local_data_bounds?: NullableJsonNullValueInput | InputJsonValue
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type Tile_layersUncheckedUpdateManyWithoutAccountsInput = {
    tile_layer_id?: StringFieldUpdateOperationsInput | string
    project_id?: StringFieldUpdateOperationsInput | string
    label?: NullableStringFieldUpdateOperationsInput | string | null
    sort?: NullableIntFieldUpdateOperationsInput | number | null
    active?: NullableBoolFieldUpdateOperationsInput | boolean | null
    type?: NullableEnumtile_layer_type_enumFieldUpdateOperationsInput | tile_layer_type_enum | null
    wmts_url_template?: NullableStringFieldUpdateOperationsInput | string | null
    wmts_subdomains?: NullableJsonNullValueInput | InputJsonValue
    wms_base_url?: NullableStringFieldUpdateOperationsInput | string | null
    wms_format?: NullableJsonNullValueInput | InputJsonValue
    wms_layer?: NullableJsonNullValueInput | InputJsonValue
    wms_parameters?: NullableJsonNullValueInput | InputJsonValue
    wms_styles?: NullableJsonNullValueInput | InputJsonValue
    wms_transparent?: NullableBoolFieldUpdateOperationsInput | boolean | null
    wms_version?: NullableStringFieldUpdateOperationsInput | string | null
    wms_info_format?: NullableJsonNullValueInput | InputJsonValue
    wms_legend?: NullableJsonNullValueInput | InputJsonValue
    max_zoom?: NullableIntFieldUpdateOperationsInput | number | null
    min_zoom?: NullableIntFieldUpdateOperationsInput | number | null
    opacity_percent?: NullableIntFieldUpdateOperationsInput | number | null
    grayscale?: NullableBoolFieldUpdateOperationsInput | boolean | null
    local_data_size?: NullableIntFieldUpdateOperationsInput | number | null
    local_data_bounds?: NullableJsonNullValueInput | InputJsonValue
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type Ui_optionsUpdateWithoutAccountsInput = {
    designing?: NullableBoolFieldUpdateOperationsInput | boolean | null
    breadcrumbs_overflowing?: NullableBoolFieldUpdateOperationsInput | boolean | null
    navs_overflowing?: NullableBoolFieldUpdateOperationsInput | boolean | null
    tabs?: NullableJsonNullValueInput | InputJsonValue
    show_map?: NullableBoolFieldUpdateOperationsInput | boolean | null
    map_bounds?: NullableJsonNullValueInput | InputJsonValue
    local_map_show?: NullableJsonNullValueInput | InputJsonValue
    tile_layer_sorter?: NullableStringFieldUpdateOperationsInput | string | null
    vector_layer_sorter?: NullableStringFieldUpdateOperationsInput | string | null
    editing_place_geometry?: NullableStringFieldUpdateOperationsInput | string | null
    editing_check_geometry?: NullableStringFieldUpdateOperationsInput | string | null
    editing_action_geometry?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    users?: UsersUpdateOneRequiredWithoutUi_optionsNestedInput
  }

  export type Ui_optionsUncheckedUpdateWithoutAccountsInput = {
    user_id?: StringFieldUpdateOperationsInput | string
    designing?: NullableBoolFieldUpdateOperationsInput | boolean | null
    breadcrumbs_overflowing?: NullableBoolFieldUpdateOperationsInput | boolean | null
    navs_overflowing?: NullableBoolFieldUpdateOperationsInput | boolean | null
    tabs?: NullableJsonNullValueInput | InputJsonValue
    show_map?: NullableBoolFieldUpdateOperationsInput | boolean | null
    map_bounds?: NullableJsonNullValueInput | InputJsonValue
    local_map_show?: NullableJsonNullValueInput | InputJsonValue
    tile_layer_sorter?: NullableStringFieldUpdateOperationsInput | string | null
    vector_layer_sorter?: NullableStringFieldUpdateOperationsInput | string | null
    editing_place_geometry?: NullableStringFieldUpdateOperationsInput | string | null
    editing_check_geometry?: NullableStringFieldUpdateOperationsInput | string | null
    editing_action_geometry?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type Ui_optionsUncheckedUpdateManyWithoutAccountsInput = {
    user_id?: StringFieldUpdateOperationsInput | string
    designing?: NullableBoolFieldUpdateOperationsInput | boolean | null
    breadcrumbs_overflowing?: NullableBoolFieldUpdateOperationsInput | boolean | null
    navs_overflowing?: NullableBoolFieldUpdateOperationsInput | boolean | null
    tabs?: NullableJsonNullValueInput | InputJsonValue
    show_map?: NullableBoolFieldUpdateOperationsInput | boolean | null
    map_bounds?: NullableJsonNullValueInput | InputJsonValue
    local_map_show?: NullableJsonNullValueInput | InputJsonValue
    tile_layer_sorter?: NullableStringFieldUpdateOperationsInput | string | null
    vector_layer_sorter?: NullableStringFieldUpdateOperationsInput | string | null
    editing_place_geometry?: NullableStringFieldUpdateOperationsInput | string | null
    editing_check_geometry?: NullableStringFieldUpdateOperationsInput | string | null
    editing_action_geometry?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type UnitsUpdateWithoutAccountsInput = {
    unit_id?: StringFieldUpdateOperationsInput | string
    use_for_action_values?: NullableBoolFieldUpdateOperationsInput | boolean | null
    use_for_action_report_values?: NullableBoolFieldUpdateOperationsInput | boolean | null
    use_for_check_values?: NullableBoolFieldUpdateOperationsInput | boolean | null
    use_for_place_report_values?: NullableBoolFieldUpdateOperationsInput | boolean | null
    use_for_goal_report_values?: NullableBoolFieldUpdateOperationsInput | boolean | null
    use_for_subproject_taxa?: NullableBoolFieldUpdateOperationsInput | boolean | null
    use_for_check_taxa?: NullableBoolFieldUpdateOperationsInput | boolean | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    summable?: NullableBoolFieldUpdateOperationsInput | boolean | null
    sort?: NullableIntFieldUpdateOperationsInput | number | null
    type?: NullableEnumunit_typeFieldUpdateOperationsInput | unit_type | null
    label_replace_by_generated_column?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    goal_report_values?: Goal_report_valuesUpdateManyWithoutUnitsNestedInput
    lists?: ListsUpdateOneWithoutUnitsNestedInput
    projects?: ProjectsUpdateOneWithoutUnitsNestedInput
  }

  export type UnitsUncheckedUpdateWithoutAccountsInput = {
    unit_id?: StringFieldUpdateOperationsInput | string
    project_id?: NullableStringFieldUpdateOperationsInput | string | null
    use_for_action_values?: NullableBoolFieldUpdateOperationsInput | boolean | null
    use_for_action_report_values?: NullableBoolFieldUpdateOperationsInput | boolean | null
    use_for_check_values?: NullableBoolFieldUpdateOperationsInput | boolean | null
    use_for_place_report_values?: NullableBoolFieldUpdateOperationsInput | boolean | null
    use_for_goal_report_values?: NullableBoolFieldUpdateOperationsInput | boolean | null
    use_for_subproject_taxa?: NullableBoolFieldUpdateOperationsInput | boolean | null
    use_for_check_taxa?: NullableBoolFieldUpdateOperationsInput | boolean | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    summable?: NullableBoolFieldUpdateOperationsInput | boolean | null
    sort?: NullableIntFieldUpdateOperationsInput | number | null
    type?: NullableEnumunit_typeFieldUpdateOperationsInput | unit_type | null
    list_id?: NullableStringFieldUpdateOperationsInput | string | null
    label_replace_by_generated_column?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    goal_report_values?: Goal_report_valuesUncheckedUpdateManyWithoutUnitsNestedInput
  }

  export type UnitsUncheckedUpdateManyWithoutAccountsInput = {
    unit_id?: StringFieldUpdateOperationsInput | string
    project_id?: NullableStringFieldUpdateOperationsInput | string | null
    use_for_action_values?: NullableBoolFieldUpdateOperationsInput | boolean | null
    use_for_action_report_values?: NullableBoolFieldUpdateOperationsInput | boolean | null
    use_for_check_values?: NullableBoolFieldUpdateOperationsInput | boolean | null
    use_for_place_report_values?: NullableBoolFieldUpdateOperationsInput | boolean | null
    use_for_goal_report_values?: NullableBoolFieldUpdateOperationsInput | boolean | null
    use_for_subproject_taxa?: NullableBoolFieldUpdateOperationsInput | boolean | null
    use_for_check_taxa?: NullableBoolFieldUpdateOperationsInput | boolean | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    summable?: NullableBoolFieldUpdateOperationsInput | boolean | null
    sort?: NullableIntFieldUpdateOperationsInput | number | null
    type?: NullableEnumunit_typeFieldUpdateOperationsInput | unit_type | null
    list_id?: NullableStringFieldUpdateOperationsInput | string | null
    label_replace_by_generated_column?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type User_messagesUpdateWithoutAccountsInput = {
    user_message_id?: StringFieldUpdateOperationsInput | string
    label_replace_by_generated_column?: NullableStringFieldUpdateOperationsInput | string | null
    read?: NullableBoolFieldUpdateOperationsInput | boolean | null
    messages?: MessagesUpdateOneWithoutUser_messagesNestedInput
    users?: UsersUpdateOneWithoutUser_messagesNestedInput
  }

  export type User_messagesUncheckedUpdateWithoutAccountsInput = {
    user_message_id?: StringFieldUpdateOperationsInput | string
    user_id?: NullableStringFieldUpdateOperationsInput | string | null
    message_id?: NullableStringFieldUpdateOperationsInput | string | null
    label_replace_by_generated_column?: NullableStringFieldUpdateOperationsInput | string | null
    read?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type User_messagesUncheckedUpdateManyWithoutAccountsInput = {
    user_message_id?: StringFieldUpdateOperationsInput | string
    user_id?: NullableStringFieldUpdateOperationsInput | string | null
    message_id?: NullableStringFieldUpdateOperationsInput | string | null
    label_replace_by_generated_column?: NullableStringFieldUpdateOperationsInput | string | null
    read?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type Widgets_for_fieldsCreateManyField_typesInput = {
    widget_for_field_id: string
    widget_type_id?: string | null
    label?: string | null
    deleted?: boolean | null
  }

  export type Widgets_for_fieldsUpdateWithoutField_typesInput = {
    widget_for_field_id?: StringFieldUpdateOperationsInput | string
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    widget_types?: Widget_typesUpdateOneWithoutWidgets_for_fieldsNestedInput
  }

  export type Widgets_for_fieldsUncheckedUpdateWithoutField_typesInput = {
    widget_for_field_id?: StringFieldUpdateOperationsInput | string
    widget_type_id?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type Widgets_for_fieldsUncheckedUpdateManyWithoutField_typesInput = {
    widget_for_field_id?: StringFieldUpdateOperationsInput | string
    widget_type_id?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type Goal_report_valuesCreateManyGoal_reportsInput = {
    goal_report_value_id: string
    account_id?: string | null
    unit_id?: string | null
    value_integer?: number | null
    value_numeric?: number | null
    value_text?: string | null
    label?: string | null
    deleted?: boolean | null
  }

  export type Goal_report_valuesUpdateWithoutGoal_reportsInput = {
    goal_report_value_id?: StringFieldUpdateOperationsInput | string
    value_integer?: NullableIntFieldUpdateOperationsInput | number | null
    value_numeric?: NullableFloatFieldUpdateOperationsInput | number | null
    value_text?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    accounts?: AccountsUpdateOneWithoutGoal_report_valuesNestedInput
    units?: UnitsUpdateOneWithoutGoal_report_valuesNestedInput
  }

  export type Goal_report_valuesUncheckedUpdateWithoutGoal_reportsInput = {
    goal_report_value_id?: StringFieldUpdateOperationsInput | string
    account_id?: NullableStringFieldUpdateOperationsInput | string | null
    unit_id?: NullableStringFieldUpdateOperationsInput | string | null
    value_integer?: NullableIntFieldUpdateOperationsInput | number | null
    value_numeric?: NullableFloatFieldUpdateOperationsInput | number | null
    value_text?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type Goal_report_valuesUncheckedUpdateManyWithoutGoal_reportsInput = {
    goal_report_value_id?: StringFieldUpdateOperationsInput | string
    account_id?: NullableStringFieldUpdateOperationsInput | string | null
    unit_id?: NullableStringFieldUpdateOperationsInput | string | null
    value_integer?: NullableIntFieldUpdateOperationsInput | number | null
    value_numeric?: NullableFloatFieldUpdateOperationsInput | number | null
    value_text?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type Goal_reportsCreateManyGoalsInput = {
    goal_report_id: string
    account_id?: string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label?: string | null
    deleted?: boolean | null
  }

  export type Goal_reportsUpdateWithoutGoalsInput = {
    goal_report_id?: StringFieldUpdateOperationsInput | string
    data?: NullableJsonNullValueInput | InputJsonValue
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    goal_report_values?: Goal_report_valuesUpdateManyWithoutGoal_reportsNestedInput
    accounts?: AccountsUpdateOneWithoutGoal_reportsNestedInput
  }

  export type Goal_reportsUncheckedUpdateWithoutGoalsInput = {
    goal_report_id?: StringFieldUpdateOperationsInput | string
    account_id?: NullableStringFieldUpdateOperationsInput | string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    goal_report_values?: Goal_report_valuesUncheckedUpdateManyWithoutGoal_reportsNestedInput
  }

  export type Goal_reportsUncheckedUpdateManyWithoutGoalsInput = {
    goal_report_id?: StringFieldUpdateOperationsInput | string
    account_id?: NullableStringFieldUpdateOperationsInput | string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type List_valuesCreateManyListsInput = {
    list_value_id: string
    account_id?: string | null
    value?: string | null
    obsolete?: boolean | null
    label_replace_by_generated_column?: string | null
    deleted?: boolean | null
  }

  export type UnitsCreateManyListsInput = {
    unit_id: string
    account_id?: string | null
    project_id?: string | null
    use_for_action_values?: boolean | null
    use_for_action_report_values?: boolean | null
    use_for_check_values?: boolean | null
    use_for_place_report_values?: boolean | null
    use_for_goal_report_values?: boolean | null
    use_for_subproject_taxa?: boolean | null
    use_for_check_taxa?: boolean | null
    name?: string | null
    summable?: boolean | null
    sort?: number | null
    type?: unit_type | null
    label_replace_by_generated_column?: string | null
    deleted?: boolean | null
  }

  export type List_valuesUpdateWithoutListsInput = {
    list_value_id?: StringFieldUpdateOperationsInput | string
    value?: NullableStringFieldUpdateOperationsInput | string | null
    obsolete?: NullableBoolFieldUpdateOperationsInput | boolean | null
    label_replace_by_generated_column?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    accounts?: AccountsUpdateOneWithoutList_valuesNestedInput
  }

  export type List_valuesUncheckedUpdateWithoutListsInput = {
    list_value_id?: StringFieldUpdateOperationsInput | string
    account_id?: NullableStringFieldUpdateOperationsInput | string | null
    value?: NullableStringFieldUpdateOperationsInput | string | null
    obsolete?: NullableBoolFieldUpdateOperationsInput | boolean | null
    label_replace_by_generated_column?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type List_valuesUncheckedUpdateManyWithoutListsInput = {
    list_value_id?: StringFieldUpdateOperationsInput | string
    account_id?: NullableStringFieldUpdateOperationsInput | string | null
    value?: NullableStringFieldUpdateOperationsInput | string | null
    obsolete?: NullableBoolFieldUpdateOperationsInput | boolean | null
    label_replace_by_generated_column?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type UnitsUpdateWithoutListsInput = {
    unit_id?: StringFieldUpdateOperationsInput | string
    use_for_action_values?: NullableBoolFieldUpdateOperationsInput | boolean | null
    use_for_action_report_values?: NullableBoolFieldUpdateOperationsInput | boolean | null
    use_for_check_values?: NullableBoolFieldUpdateOperationsInput | boolean | null
    use_for_place_report_values?: NullableBoolFieldUpdateOperationsInput | boolean | null
    use_for_goal_report_values?: NullableBoolFieldUpdateOperationsInput | boolean | null
    use_for_subproject_taxa?: NullableBoolFieldUpdateOperationsInput | boolean | null
    use_for_check_taxa?: NullableBoolFieldUpdateOperationsInput | boolean | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    summable?: NullableBoolFieldUpdateOperationsInput | boolean | null
    sort?: NullableIntFieldUpdateOperationsInput | number | null
    type?: NullableEnumunit_typeFieldUpdateOperationsInput | unit_type | null
    label_replace_by_generated_column?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    goal_report_values?: Goal_report_valuesUpdateManyWithoutUnitsNestedInput
    accounts?: AccountsUpdateOneWithoutUnitsNestedInput
    projects?: ProjectsUpdateOneWithoutUnitsNestedInput
  }

  export type UnitsUncheckedUpdateWithoutListsInput = {
    unit_id?: StringFieldUpdateOperationsInput | string
    account_id?: NullableStringFieldUpdateOperationsInput | string | null
    project_id?: NullableStringFieldUpdateOperationsInput | string | null
    use_for_action_values?: NullableBoolFieldUpdateOperationsInput | boolean | null
    use_for_action_report_values?: NullableBoolFieldUpdateOperationsInput | boolean | null
    use_for_check_values?: NullableBoolFieldUpdateOperationsInput | boolean | null
    use_for_place_report_values?: NullableBoolFieldUpdateOperationsInput | boolean | null
    use_for_goal_report_values?: NullableBoolFieldUpdateOperationsInput | boolean | null
    use_for_subproject_taxa?: NullableBoolFieldUpdateOperationsInput | boolean | null
    use_for_check_taxa?: NullableBoolFieldUpdateOperationsInput | boolean | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    summable?: NullableBoolFieldUpdateOperationsInput | boolean | null
    sort?: NullableIntFieldUpdateOperationsInput | number | null
    type?: NullableEnumunit_typeFieldUpdateOperationsInput | unit_type | null
    label_replace_by_generated_column?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    goal_report_values?: Goal_report_valuesUncheckedUpdateManyWithoutUnitsNestedInput
  }

  export type UnitsUncheckedUpdateManyWithoutListsInput = {
    unit_id?: StringFieldUpdateOperationsInput | string
    account_id?: NullableStringFieldUpdateOperationsInput | string | null
    project_id?: NullableStringFieldUpdateOperationsInput | string | null
    use_for_action_values?: NullableBoolFieldUpdateOperationsInput | boolean | null
    use_for_action_report_values?: NullableBoolFieldUpdateOperationsInput | boolean | null
    use_for_check_values?: NullableBoolFieldUpdateOperationsInput | boolean | null
    use_for_place_report_values?: NullableBoolFieldUpdateOperationsInput | boolean | null
    use_for_goal_report_values?: NullableBoolFieldUpdateOperationsInput | boolean | null
    use_for_subproject_taxa?: NullableBoolFieldUpdateOperationsInput | boolean | null
    use_for_check_taxa?: NullableBoolFieldUpdateOperationsInput | boolean | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    summable?: NullableBoolFieldUpdateOperationsInput | boolean | null
    sort?: NullableIntFieldUpdateOperationsInput | number | null
    type?: NullableEnumunit_typeFieldUpdateOperationsInput | unit_type | null
    label_replace_by_generated_column?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type User_messagesCreateManyMessagesInput = {
    user_message_id: string
    account_id?: string | null
    user_id?: string | null
    label_replace_by_generated_column?: string | null
    read?: boolean | null
  }

  export type User_messagesUpdateWithoutMessagesInput = {
    user_message_id?: StringFieldUpdateOperationsInput | string
    label_replace_by_generated_column?: NullableStringFieldUpdateOperationsInput | string | null
    read?: NullableBoolFieldUpdateOperationsInput | boolean | null
    accounts?: AccountsUpdateOneWithoutUser_messagesNestedInput
    users?: UsersUpdateOneWithoutUser_messagesNestedInput
  }

  export type User_messagesUncheckedUpdateWithoutMessagesInput = {
    user_message_id?: StringFieldUpdateOperationsInput | string
    account_id?: NullableStringFieldUpdateOperationsInput | string | null
    user_id?: NullableStringFieldUpdateOperationsInput | string | null
    label_replace_by_generated_column?: NullableStringFieldUpdateOperationsInput | string | null
    read?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type User_messagesUncheckedUpdateManyWithoutMessagesInput = {
    user_message_id?: StringFieldUpdateOperationsInput | string
    account_id?: NullableStringFieldUpdateOperationsInput | string | null
    user_id?: NullableStringFieldUpdateOperationsInput | string | null
    label_replace_by_generated_column?: NullableStringFieldUpdateOperationsInput | string | null
    read?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type Gbif_occurrence_downloadsCreateManyProjectsInput = {
    gbif_occurrence_download_id: string
    account_id?: string | null
    subproject_id?: string | null
    gbif_table?: gbif_table | null
    filters?: NullableJsonNullValueInput | InputJsonValue
    created_time?: Date | string | null
    download_key?: string | null
    error?: string | null
    inserted_time?: Date | string | null
    inserted_count?: number | null
    attribution?: string | null
    deleted?: boolean | null
  }

  export type Gbif_occurrencesCreateManyProjectsInput = {
    gbif_occurrence_id: string
    account_id?: string | null
    subproject_id?: string | null
    gbif_data?: NullableJsonNullValueInput | InputJsonValue
    label?: string | null
  }

  export type Gbif_taxaCreateManyProjectsInput = {
    gbif_taxon_id: string
    account_id?: string | null
    gbif_data?: NullableJsonNullValueInput | InputJsonValue
    label?: string | null
  }

  export type ListsCreateManyProjectsInput = {
    list_id: string
    account_id?: string | null
    name?: string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    obsolete?: boolean | null
    label_replace_by_generated_column?: string | null
    deleted?: boolean | null
  }

  export type Observation_sourcesCreateManyProjectsInput = {
    observation_source_id: string
    account_id?: string | null
    name?: string | null
    url?: string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label_replace_by_generated_column?: string | null
    deleted?: boolean | null
  }

  export type PersonsCreateManyProjectsInput = {
    person_id: string
    account_id?: string | null
    email?: string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label_replace_by_generated_column?: string | null
    deleted?: boolean | null
  }

  export type Place_levelsCreateManyProjectsInput = {
    place_level_id: string
    account_id?: string | null
    level?: number | null
    name_singular?: string | null
    name_plural?: string | null
    name_short?: string | null
    reports?: boolean | null
    report_values?: boolean | null
    actions?: boolean | null
    action_values?: boolean | null
    action_reports?: boolean | null
    checks?: boolean | null
    check_values?: boolean | null
    check_taxa?: boolean | null
    observations?: boolean | null
    label_replace_by_generated_column?: string | null
    deleted?: boolean | null
  }

  export type Project_usersCreateManyProjectsInput = {
    project_user_id: string
    account_id?: string | null
    user_id?: string | null
    role?: string | null
    label?: string | null
    deleted?: boolean | null
  }

  export type SubprojectsCreateManyProjectsInput = {
    subproject_id: string
    account_id?: string | null
    name?: string | null
    label_replace_by_generated_column?: string | null
    start_year?: number | null
    end_year?: number | null
    data?: NullableJsonNullValueInput | InputJsonValue
    deleted?: boolean | null
  }

  export type TaxonomiesCreateManyProjectsInput = {
    taxonomy_id: string
    account_id?: string | null
    type?: taxonomy_type | null
    name?: string | null
    url?: string | null
    obsolete?: boolean | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label_replace_by_generated_column?: string | null
    deleted?: boolean | null
  }

  export type Tile_layersCreateManyProjectsInput = {
    tile_layer_id: string
    account_id?: string | null
    label?: string | null
    sort?: number | null
    active?: boolean | null
    type?: tile_layer_type_enum | null
    wmts_url_template?: string | null
    wmts_subdomains?: NullableJsonNullValueInput | InputJsonValue
    wms_base_url?: string | null
    wms_format?: NullableJsonNullValueInput | InputJsonValue
    wms_layer?: NullableJsonNullValueInput | InputJsonValue
    wms_parameters?: NullableJsonNullValueInput | InputJsonValue
    wms_styles?: NullableJsonNullValueInput | InputJsonValue
    wms_transparent?: boolean | null
    wms_version?: string | null
    wms_info_format?: NullableJsonNullValueInput | InputJsonValue
    wms_legend?: NullableJsonNullValueInput | InputJsonValue
    max_zoom?: number | null
    min_zoom?: number | null
    opacity_percent?: number | null
    grayscale?: boolean | null
    local_data_size?: number | null
    local_data_bounds?: NullableJsonNullValueInput | InputJsonValue
    deleted?: boolean | null
  }

  export type UnitsCreateManyProjectsInput = {
    unit_id: string
    account_id?: string | null
    use_for_action_values?: boolean | null
    use_for_action_report_values?: boolean | null
    use_for_check_values?: boolean | null
    use_for_place_report_values?: boolean | null
    use_for_goal_report_values?: boolean | null
    use_for_subproject_taxa?: boolean | null
    use_for_check_taxa?: boolean | null
    name?: string | null
    summable?: boolean | null
    sort?: number | null
    type?: unit_type | null
    list_id?: string | null
    label_replace_by_generated_column?: string | null
    deleted?: boolean | null
  }

  export type Gbif_occurrence_downloadsUpdateWithoutProjectsInput = {
    gbif_occurrence_download_id?: StringFieldUpdateOperationsInput | string
    gbif_table?: NullableEnumgbif_tableFieldUpdateOperationsInput | gbif_table | null
    filters?: NullableJsonNullValueInput | InputJsonValue
    created_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    download_key?: NullableStringFieldUpdateOperationsInput | string | null
    error?: NullableStringFieldUpdateOperationsInput | string | null
    inserted_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    inserted_count?: NullableIntFieldUpdateOperationsInput | number | null
    attribution?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    accounts?: AccountsUpdateOneWithoutGbif_occurrence_downloadsNestedInput
    subprojects?: SubprojectsUpdateOneWithoutGbif_occurrence_downloadsNestedInput
  }

  export type Gbif_occurrence_downloadsUncheckedUpdateWithoutProjectsInput = {
    gbif_occurrence_download_id?: StringFieldUpdateOperationsInput | string
    account_id?: NullableStringFieldUpdateOperationsInput | string | null
    subproject_id?: NullableStringFieldUpdateOperationsInput | string | null
    gbif_table?: NullableEnumgbif_tableFieldUpdateOperationsInput | gbif_table | null
    filters?: NullableJsonNullValueInput | InputJsonValue
    created_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    download_key?: NullableStringFieldUpdateOperationsInput | string | null
    error?: NullableStringFieldUpdateOperationsInput | string | null
    inserted_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    inserted_count?: NullableIntFieldUpdateOperationsInput | number | null
    attribution?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type Gbif_occurrence_downloadsUncheckedUpdateManyWithoutProjectsInput = {
    gbif_occurrence_download_id?: StringFieldUpdateOperationsInput | string
    account_id?: NullableStringFieldUpdateOperationsInput | string | null
    subproject_id?: NullableStringFieldUpdateOperationsInput | string | null
    gbif_table?: NullableEnumgbif_tableFieldUpdateOperationsInput | gbif_table | null
    filters?: NullableJsonNullValueInput | InputJsonValue
    created_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    download_key?: NullableStringFieldUpdateOperationsInput | string | null
    error?: NullableStringFieldUpdateOperationsInput | string | null
    inserted_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    inserted_count?: NullableIntFieldUpdateOperationsInput | number | null
    attribution?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type Gbif_occurrencesUpdateWithoutProjectsInput = {
    gbif_occurrence_id?: StringFieldUpdateOperationsInput | string
    gbif_data?: NullableJsonNullValueInput | InputJsonValue
    label?: NullableStringFieldUpdateOperationsInput | string | null
    accounts?: AccountsUpdateOneWithoutGbif_occurrencesNestedInput
    subprojects?: SubprojectsUpdateOneWithoutGbif_occurrencesNestedInput
  }

  export type Gbif_occurrencesUncheckedUpdateWithoutProjectsInput = {
    gbif_occurrence_id?: StringFieldUpdateOperationsInput | string
    account_id?: NullableStringFieldUpdateOperationsInput | string | null
    subproject_id?: NullableStringFieldUpdateOperationsInput | string | null
    gbif_data?: NullableJsonNullValueInput | InputJsonValue
    label?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type Gbif_occurrencesUncheckedUpdateManyWithoutProjectsInput = {
    gbif_occurrence_id?: StringFieldUpdateOperationsInput | string
    account_id?: NullableStringFieldUpdateOperationsInput | string | null
    subproject_id?: NullableStringFieldUpdateOperationsInput | string | null
    gbif_data?: NullableJsonNullValueInput | InputJsonValue
    label?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type Gbif_taxaUpdateWithoutProjectsInput = {
    gbif_taxon_id?: StringFieldUpdateOperationsInput | string
    gbif_data?: NullableJsonNullValueInput | InputJsonValue
    label?: NullableStringFieldUpdateOperationsInput | string | null
    accounts?: AccountsUpdateOneWithoutGbif_taxaNestedInput
  }

  export type Gbif_taxaUncheckedUpdateWithoutProjectsInput = {
    gbif_taxon_id?: StringFieldUpdateOperationsInput | string
    account_id?: NullableStringFieldUpdateOperationsInput | string | null
    gbif_data?: NullableJsonNullValueInput | InputJsonValue
    label?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type Gbif_taxaUncheckedUpdateManyWithoutProjectsInput = {
    gbif_taxon_id?: StringFieldUpdateOperationsInput | string
    account_id?: NullableStringFieldUpdateOperationsInput | string | null
    gbif_data?: NullableJsonNullValueInput | InputJsonValue
    label?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ListsUpdateWithoutProjectsInput = {
    list_id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    obsolete?: NullableBoolFieldUpdateOperationsInput | boolean | null
    label_replace_by_generated_column?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    list_values?: List_valuesUpdateManyWithoutListsNestedInput
    accounts?: AccountsUpdateOneWithoutListsNestedInput
    units?: UnitsUpdateManyWithoutListsNestedInput
  }

  export type ListsUncheckedUpdateWithoutProjectsInput = {
    list_id?: StringFieldUpdateOperationsInput | string
    account_id?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    obsolete?: NullableBoolFieldUpdateOperationsInput | boolean | null
    label_replace_by_generated_column?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    list_values?: List_valuesUncheckedUpdateManyWithoutListsNestedInput
    units?: UnitsUncheckedUpdateManyWithoutListsNestedInput
  }

  export type ListsUncheckedUpdateManyWithoutProjectsInput = {
    list_id?: StringFieldUpdateOperationsInput | string
    account_id?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    obsolete?: NullableBoolFieldUpdateOperationsInput | boolean | null
    label_replace_by_generated_column?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type Observation_sourcesUpdateWithoutProjectsInput = {
    observation_source_id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    url?: NullableStringFieldUpdateOperationsInput | string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label_replace_by_generated_column?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    accounts?: AccountsUpdateOneWithoutObservation_sourcesNestedInput
  }

  export type Observation_sourcesUncheckedUpdateWithoutProjectsInput = {
    observation_source_id?: StringFieldUpdateOperationsInput | string
    account_id?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    url?: NullableStringFieldUpdateOperationsInput | string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label_replace_by_generated_column?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type Observation_sourcesUncheckedUpdateManyWithoutProjectsInput = {
    observation_source_id?: StringFieldUpdateOperationsInput | string
    account_id?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    url?: NullableStringFieldUpdateOperationsInput | string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label_replace_by_generated_column?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type PersonsUpdateWithoutProjectsInput = {
    person_id?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label_replace_by_generated_column?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    accounts?: AccountsUpdateOneWithoutPersonsNestedInput
  }

  export type PersonsUncheckedUpdateWithoutProjectsInput = {
    person_id?: StringFieldUpdateOperationsInput | string
    account_id?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label_replace_by_generated_column?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type PersonsUncheckedUpdateManyWithoutProjectsInput = {
    person_id?: StringFieldUpdateOperationsInput | string
    account_id?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label_replace_by_generated_column?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type Place_levelsUpdateWithoutProjectsInput = {
    place_level_id?: StringFieldUpdateOperationsInput | string
    level?: NullableIntFieldUpdateOperationsInput | number | null
    name_singular?: NullableStringFieldUpdateOperationsInput | string | null
    name_plural?: NullableStringFieldUpdateOperationsInput | string | null
    name_short?: NullableStringFieldUpdateOperationsInput | string | null
    reports?: NullableBoolFieldUpdateOperationsInput | boolean | null
    report_values?: NullableBoolFieldUpdateOperationsInput | boolean | null
    actions?: NullableBoolFieldUpdateOperationsInput | boolean | null
    action_values?: NullableBoolFieldUpdateOperationsInput | boolean | null
    action_reports?: NullableBoolFieldUpdateOperationsInput | boolean | null
    checks?: NullableBoolFieldUpdateOperationsInput | boolean | null
    check_values?: NullableBoolFieldUpdateOperationsInput | boolean | null
    check_taxa?: NullableBoolFieldUpdateOperationsInput | boolean | null
    observations?: NullableBoolFieldUpdateOperationsInput | boolean | null
    label_replace_by_generated_column?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    accounts?: AccountsUpdateOneWithoutPlace_levelsNestedInput
  }

  export type Place_levelsUncheckedUpdateWithoutProjectsInput = {
    place_level_id?: StringFieldUpdateOperationsInput | string
    account_id?: NullableStringFieldUpdateOperationsInput | string | null
    level?: NullableIntFieldUpdateOperationsInput | number | null
    name_singular?: NullableStringFieldUpdateOperationsInput | string | null
    name_plural?: NullableStringFieldUpdateOperationsInput | string | null
    name_short?: NullableStringFieldUpdateOperationsInput | string | null
    reports?: NullableBoolFieldUpdateOperationsInput | boolean | null
    report_values?: NullableBoolFieldUpdateOperationsInput | boolean | null
    actions?: NullableBoolFieldUpdateOperationsInput | boolean | null
    action_values?: NullableBoolFieldUpdateOperationsInput | boolean | null
    action_reports?: NullableBoolFieldUpdateOperationsInput | boolean | null
    checks?: NullableBoolFieldUpdateOperationsInput | boolean | null
    check_values?: NullableBoolFieldUpdateOperationsInput | boolean | null
    check_taxa?: NullableBoolFieldUpdateOperationsInput | boolean | null
    observations?: NullableBoolFieldUpdateOperationsInput | boolean | null
    label_replace_by_generated_column?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type Place_levelsUncheckedUpdateManyWithoutProjectsInput = {
    place_level_id?: StringFieldUpdateOperationsInput | string
    account_id?: NullableStringFieldUpdateOperationsInput | string | null
    level?: NullableIntFieldUpdateOperationsInput | number | null
    name_singular?: NullableStringFieldUpdateOperationsInput | string | null
    name_plural?: NullableStringFieldUpdateOperationsInput | string | null
    name_short?: NullableStringFieldUpdateOperationsInput | string | null
    reports?: NullableBoolFieldUpdateOperationsInput | boolean | null
    report_values?: NullableBoolFieldUpdateOperationsInput | boolean | null
    actions?: NullableBoolFieldUpdateOperationsInput | boolean | null
    action_values?: NullableBoolFieldUpdateOperationsInput | boolean | null
    action_reports?: NullableBoolFieldUpdateOperationsInput | boolean | null
    checks?: NullableBoolFieldUpdateOperationsInput | boolean | null
    check_values?: NullableBoolFieldUpdateOperationsInput | boolean | null
    check_taxa?: NullableBoolFieldUpdateOperationsInput | boolean | null
    observations?: NullableBoolFieldUpdateOperationsInput | boolean | null
    label_replace_by_generated_column?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type Project_usersUpdateWithoutProjectsInput = {
    project_user_id?: StringFieldUpdateOperationsInput | string
    role?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    accounts?: AccountsUpdateOneWithoutProject_usersNestedInput
    users?: UsersUpdateOneWithoutProject_usersNestedInput
  }

  export type Project_usersUncheckedUpdateWithoutProjectsInput = {
    project_user_id?: StringFieldUpdateOperationsInput | string
    account_id?: NullableStringFieldUpdateOperationsInput | string | null
    user_id?: NullableStringFieldUpdateOperationsInput | string | null
    role?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type Project_usersUncheckedUpdateManyWithoutProjectsInput = {
    project_user_id?: StringFieldUpdateOperationsInput | string
    account_id?: NullableStringFieldUpdateOperationsInput | string | null
    user_id?: NullableStringFieldUpdateOperationsInput | string | null
    role?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type SubprojectsUpdateWithoutProjectsInput = {
    subproject_id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    label_replace_by_generated_column?: NullableStringFieldUpdateOperationsInput | string | null
    start_year?: NullableIntFieldUpdateOperationsInput | number | null
    end_year?: NullableIntFieldUpdateOperationsInput | number | null
    data?: NullableJsonNullValueInput | InputJsonValue
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    gbif_occurrence_downloads?: Gbif_occurrence_downloadsUpdateManyWithoutSubprojectsNestedInput
    gbif_occurrences?: Gbif_occurrencesUpdateManyWithoutSubprojectsNestedInput
    goals?: GoalsUpdateManyWithoutSubprojectsNestedInput
    subproject_taxa?: Subproject_taxaUpdateManyWithoutSubprojectsNestedInput
    subproject_users?: Subproject_usersUpdateManyWithoutSubprojectsNestedInput
    accounts?: AccountsUpdateOneWithoutSubprojectsNestedInput
  }

  export type SubprojectsUncheckedUpdateWithoutProjectsInput = {
    subproject_id?: StringFieldUpdateOperationsInput | string
    account_id?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    label_replace_by_generated_column?: NullableStringFieldUpdateOperationsInput | string | null
    start_year?: NullableIntFieldUpdateOperationsInput | number | null
    end_year?: NullableIntFieldUpdateOperationsInput | number | null
    data?: NullableJsonNullValueInput | InputJsonValue
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    gbif_occurrence_downloads?: Gbif_occurrence_downloadsUncheckedUpdateManyWithoutSubprojectsNestedInput
    gbif_occurrences?: Gbif_occurrencesUncheckedUpdateManyWithoutSubprojectsNestedInput
    goals?: GoalsUncheckedUpdateManyWithoutSubprojectsNestedInput
    subproject_taxa?: Subproject_taxaUncheckedUpdateManyWithoutSubprojectsNestedInput
    subproject_users?: Subproject_usersUncheckedUpdateManyWithoutSubprojectsNestedInput
  }

  export type SubprojectsUncheckedUpdateManyWithoutProjectsInput = {
    subproject_id?: StringFieldUpdateOperationsInput | string
    account_id?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    label_replace_by_generated_column?: NullableStringFieldUpdateOperationsInput | string | null
    start_year?: NullableIntFieldUpdateOperationsInput | number | null
    end_year?: NullableIntFieldUpdateOperationsInput | number | null
    data?: NullableJsonNullValueInput | InputJsonValue
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type TaxonomiesUpdateWithoutProjectsInput = {
    taxonomy_id?: StringFieldUpdateOperationsInput | string
    type?: NullableEnumtaxonomy_typeFieldUpdateOperationsInput | taxonomy_type | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    url?: NullableStringFieldUpdateOperationsInput | string | null
    obsolete?: NullableBoolFieldUpdateOperationsInput | boolean | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label_replace_by_generated_column?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    taxa?: TaxaUpdateManyWithoutTaxonomiesNestedInput
    accounts?: AccountsUpdateOneWithoutTaxonomiesNestedInput
  }

  export type TaxonomiesUncheckedUpdateWithoutProjectsInput = {
    taxonomy_id?: StringFieldUpdateOperationsInput | string
    account_id?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableEnumtaxonomy_typeFieldUpdateOperationsInput | taxonomy_type | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    url?: NullableStringFieldUpdateOperationsInput | string | null
    obsolete?: NullableBoolFieldUpdateOperationsInput | boolean | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label_replace_by_generated_column?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    taxa?: TaxaUncheckedUpdateManyWithoutTaxonomiesNestedInput
  }

  export type TaxonomiesUncheckedUpdateManyWithoutProjectsInput = {
    taxonomy_id?: StringFieldUpdateOperationsInput | string
    account_id?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableEnumtaxonomy_typeFieldUpdateOperationsInput | taxonomy_type | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    url?: NullableStringFieldUpdateOperationsInput | string | null
    obsolete?: NullableBoolFieldUpdateOperationsInput | boolean | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label_replace_by_generated_column?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type Tile_layersUpdateWithoutProjectsInput = {
    tile_layer_id?: StringFieldUpdateOperationsInput | string
    label?: NullableStringFieldUpdateOperationsInput | string | null
    sort?: NullableIntFieldUpdateOperationsInput | number | null
    active?: NullableBoolFieldUpdateOperationsInput | boolean | null
    type?: NullableEnumtile_layer_type_enumFieldUpdateOperationsInput | tile_layer_type_enum | null
    wmts_url_template?: NullableStringFieldUpdateOperationsInput | string | null
    wmts_subdomains?: NullableJsonNullValueInput | InputJsonValue
    wms_base_url?: NullableStringFieldUpdateOperationsInput | string | null
    wms_format?: NullableJsonNullValueInput | InputJsonValue
    wms_layer?: NullableJsonNullValueInput | InputJsonValue
    wms_parameters?: NullableJsonNullValueInput | InputJsonValue
    wms_styles?: NullableJsonNullValueInput | InputJsonValue
    wms_transparent?: NullableBoolFieldUpdateOperationsInput | boolean | null
    wms_version?: NullableStringFieldUpdateOperationsInput | string | null
    wms_info_format?: NullableJsonNullValueInput | InputJsonValue
    wms_legend?: NullableJsonNullValueInput | InputJsonValue
    max_zoom?: NullableIntFieldUpdateOperationsInput | number | null
    min_zoom?: NullableIntFieldUpdateOperationsInput | number | null
    opacity_percent?: NullableIntFieldUpdateOperationsInput | number | null
    grayscale?: NullableBoolFieldUpdateOperationsInput | boolean | null
    local_data_size?: NullableIntFieldUpdateOperationsInput | number | null
    local_data_bounds?: NullableJsonNullValueInput | InputJsonValue
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    accounts?: AccountsUpdateOneWithoutTile_layersNestedInput
  }

  export type Tile_layersUncheckedUpdateWithoutProjectsInput = {
    tile_layer_id?: StringFieldUpdateOperationsInput | string
    account_id?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    sort?: NullableIntFieldUpdateOperationsInput | number | null
    active?: NullableBoolFieldUpdateOperationsInput | boolean | null
    type?: NullableEnumtile_layer_type_enumFieldUpdateOperationsInput | tile_layer_type_enum | null
    wmts_url_template?: NullableStringFieldUpdateOperationsInput | string | null
    wmts_subdomains?: NullableJsonNullValueInput | InputJsonValue
    wms_base_url?: NullableStringFieldUpdateOperationsInput | string | null
    wms_format?: NullableJsonNullValueInput | InputJsonValue
    wms_layer?: NullableJsonNullValueInput | InputJsonValue
    wms_parameters?: NullableJsonNullValueInput | InputJsonValue
    wms_styles?: NullableJsonNullValueInput | InputJsonValue
    wms_transparent?: NullableBoolFieldUpdateOperationsInput | boolean | null
    wms_version?: NullableStringFieldUpdateOperationsInput | string | null
    wms_info_format?: NullableJsonNullValueInput | InputJsonValue
    wms_legend?: NullableJsonNullValueInput | InputJsonValue
    max_zoom?: NullableIntFieldUpdateOperationsInput | number | null
    min_zoom?: NullableIntFieldUpdateOperationsInput | number | null
    opacity_percent?: NullableIntFieldUpdateOperationsInput | number | null
    grayscale?: NullableBoolFieldUpdateOperationsInput | boolean | null
    local_data_size?: NullableIntFieldUpdateOperationsInput | number | null
    local_data_bounds?: NullableJsonNullValueInput | InputJsonValue
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type Tile_layersUncheckedUpdateManyWithoutProjectsInput = {
    tile_layer_id?: StringFieldUpdateOperationsInput | string
    account_id?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    sort?: NullableIntFieldUpdateOperationsInput | number | null
    active?: NullableBoolFieldUpdateOperationsInput | boolean | null
    type?: NullableEnumtile_layer_type_enumFieldUpdateOperationsInput | tile_layer_type_enum | null
    wmts_url_template?: NullableStringFieldUpdateOperationsInput | string | null
    wmts_subdomains?: NullableJsonNullValueInput | InputJsonValue
    wms_base_url?: NullableStringFieldUpdateOperationsInput | string | null
    wms_format?: NullableJsonNullValueInput | InputJsonValue
    wms_layer?: NullableJsonNullValueInput | InputJsonValue
    wms_parameters?: NullableJsonNullValueInput | InputJsonValue
    wms_styles?: NullableJsonNullValueInput | InputJsonValue
    wms_transparent?: NullableBoolFieldUpdateOperationsInput | boolean | null
    wms_version?: NullableStringFieldUpdateOperationsInput | string | null
    wms_info_format?: NullableJsonNullValueInput | InputJsonValue
    wms_legend?: NullableJsonNullValueInput | InputJsonValue
    max_zoom?: NullableIntFieldUpdateOperationsInput | number | null
    min_zoom?: NullableIntFieldUpdateOperationsInput | number | null
    opacity_percent?: NullableIntFieldUpdateOperationsInput | number | null
    grayscale?: NullableBoolFieldUpdateOperationsInput | boolean | null
    local_data_size?: NullableIntFieldUpdateOperationsInput | number | null
    local_data_bounds?: NullableJsonNullValueInput | InputJsonValue
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type UnitsUpdateWithoutProjectsInput = {
    unit_id?: StringFieldUpdateOperationsInput | string
    use_for_action_values?: NullableBoolFieldUpdateOperationsInput | boolean | null
    use_for_action_report_values?: NullableBoolFieldUpdateOperationsInput | boolean | null
    use_for_check_values?: NullableBoolFieldUpdateOperationsInput | boolean | null
    use_for_place_report_values?: NullableBoolFieldUpdateOperationsInput | boolean | null
    use_for_goal_report_values?: NullableBoolFieldUpdateOperationsInput | boolean | null
    use_for_subproject_taxa?: NullableBoolFieldUpdateOperationsInput | boolean | null
    use_for_check_taxa?: NullableBoolFieldUpdateOperationsInput | boolean | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    summable?: NullableBoolFieldUpdateOperationsInput | boolean | null
    sort?: NullableIntFieldUpdateOperationsInput | number | null
    type?: NullableEnumunit_typeFieldUpdateOperationsInput | unit_type | null
    label_replace_by_generated_column?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    goal_report_values?: Goal_report_valuesUpdateManyWithoutUnitsNestedInput
    accounts?: AccountsUpdateOneWithoutUnitsNestedInput
    lists?: ListsUpdateOneWithoutUnitsNestedInput
  }

  export type UnitsUncheckedUpdateWithoutProjectsInput = {
    unit_id?: StringFieldUpdateOperationsInput | string
    account_id?: NullableStringFieldUpdateOperationsInput | string | null
    use_for_action_values?: NullableBoolFieldUpdateOperationsInput | boolean | null
    use_for_action_report_values?: NullableBoolFieldUpdateOperationsInput | boolean | null
    use_for_check_values?: NullableBoolFieldUpdateOperationsInput | boolean | null
    use_for_place_report_values?: NullableBoolFieldUpdateOperationsInput | boolean | null
    use_for_goal_report_values?: NullableBoolFieldUpdateOperationsInput | boolean | null
    use_for_subproject_taxa?: NullableBoolFieldUpdateOperationsInput | boolean | null
    use_for_check_taxa?: NullableBoolFieldUpdateOperationsInput | boolean | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    summable?: NullableBoolFieldUpdateOperationsInput | boolean | null
    sort?: NullableIntFieldUpdateOperationsInput | number | null
    type?: NullableEnumunit_typeFieldUpdateOperationsInput | unit_type | null
    list_id?: NullableStringFieldUpdateOperationsInput | string | null
    label_replace_by_generated_column?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    goal_report_values?: Goal_report_valuesUncheckedUpdateManyWithoutUnitsNestedInput
  }

  export type UnitsUncheckedUpdateManyWithoutProjectsInput = {
    unit_id?: StringFieldUpdateOperationsInput | string
    account_id?: NullableStringFieldUpdateOperationsInput | string | null
    use_for_action_values?: NullableBoolFieldUpdateOperationsInput | boolean | null
    use_for_action_report_values?: NullableBoolFieldUpdateOperationsInput | boolean | null
    use_for_check_values?: NullableBoolFieldUpdateOperationsInput | boolean | null
    use_for_place_report_values?: NullableBoolFieldUpdateOperationsInput | boolean | null
    use_for_goal_report_values?: NullableBoolFieldUpdateOperationsInput | boolean | null
    use_for_subproject_taxa?: NullableBoolFieldUpdateOperationsInput | boolean | null
    use_for_check_taxa?: NullableBoolFieldUpdateOperationsInput | boolean | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    summable?: NullableBoolFieldUpdateOperationsInput | boolean | null
    sort?: NullableIntFieldUpdateOperationsInput | number | null
    type?: NullableEnumunit_typeFieldUpdateOperationsInput | unit_type | null
    list_id?: NullableStringFieldUpdateOperationsInput | string | null
    label_replace_by_generated_column?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type Gbif_occurrence_downloadsCreateManySubprojectsInput = {
    gbif_occurrence_download_id: string
    account_id?: string | null
    project_id?: string | null
    gbif_table?: gbif_table | null
    filters?: NullableJsonNullValueInput | InputJsonValue
    created_time?: Date | string | null
    download_key?: string | null
    error?: string | null
    inserted_time?: Date | string | null
    inserted_count?: number | null
    attribution?: string | null
    deleted?: boolean | null
  }

  export type Gbif_occurrencesCreateManySubprojectsInput = {
    gbif_occurrence_id: string
    account_id?: string | null
    project_id?: string | null
    gbif_data?: NullableJsonNullValueInput | InputJsonValue
    label?: string | null
  }

  export type GoalsCreateManySubprojectsInput = {
    goal_id: string
    account_id?: string | null
    year?: number | null
    name?: string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label_replace_by_generated_column?: string | null
    deleted?: boolean | null
  }

  export type Subproject_taxaCreateManySubprojectsInput = {
    subproject_taxon_id: string
    account_id?: string | null
    taxon_id?: string | null
    label?: string | null
    deleted?: boolean | null
  }

  export type Subproject_usersCreateManySubprojectsInput = {
    subproject_user_id: string
    account_id?: string | null
    user_id?: string | null
    role?: string | null
    label?: string | null
    deleted?: boolean | null
  }

  export type Gbif_occurrence_downloadsUpdateWithoutSubprojectsInput = {
    gbif_occurrence_download_id?: StringFieldUpdateOperationsInput | string
    gbif_table?: NullableEnumgbif_tableFieldUpdateOperationsInput | gbif_table | null
    filters?: NullableJsonNullValueInput | InputJsonValue
    created_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    download_key?: NullableStringFieldUpdateOperationsInput | string | null
    error?: NullableStringFieldUpdateOperationsInput | string | null
    inserted_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    inserted_count?: NullableIntFieldUpdateOperationsInput | number | null
    attribution?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    accounts?: AccountsUpdateOneWithoutGbif_occurrence_downloadsNestedInput
    projects?: ProjectsUpdateOneWithoutGbif_occurrence_downloadsNestedInput
  }

  export type Gbif_occurrence_downloadsUncheckedUpdateWithoutSubprojectsInput = {
    gbif_occurrence_download_id?: StringFieldUpdateOperationsInput | string
    account_id?: NullableStringFieldUpdateOperationsInput | string | null
    project_id?: NullableStringFieldUpdateOperationsInput | string | null
    gbif_table?: NullableEnumgbif_tableFieldUpdateOperationsInput | gbif_table | null
    filters?: NullableJsonNullValueInput | InputJsonValue
    created_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    download_key?: NullableStringFieldUpdateOperationsInput | string | null
    error?: NullableStringFieldUpdateOperationsInput | string | null
    inserted_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    inserted_count?: NullableIntFieldUpdateOperationsInput | number | null
    attribution?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type Gbif_occurrence_downloadsUncheckedUpdateManyWithoutSubprojectsInput = {
    gbif_occurrence_download_id?: StringFieldUpdateOperationsInput | string
    account_id?: NullableStringFieldUpdateOperationsInput | string | null
    project_id?: NullableStringFieldUpdateOperationsInput | string | null
    gbif_table?: NullableEnumgbif_tableFieldUpdateOperationsInput | gbif_table | null
    filters?: NullableJsonNullValueInput | InputJsonValue
    created_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    download_key?: NullableStringFieldUpdateOperationsInput | string | null
    error?: NullableStringFieldUpdateOperationsInput | string | null
    inserted_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    inserted_count?: NullableIntFieldUpdateOperationsInput | number | null
    attribution?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type Gbif_occurrencesUpdateWithoutSubprojectsInput = {
    gbif_occurrence_id?: StringFieldUpdateOperationsInput | string
    gbif_data?: NullableJsonNullValueInput | InputJsonValue
    label?: NullableStringFieldUpdateOperationsInput | string | null
    accounts?: AccountsUpdateOneWithoutGbif_occurrencesNestedInput
    projects?: ProjectsUpdateOneWithoutGbif_occurrencesNestedInput
  }

  export type Gbif_occurrencesUncheckedUpdateWithoutSubprojectsInput = {
    gbif_occurrence_id?: StringFieldUpdateOperationsInput | string
    account_id?: NullableStringFieldUpdateOperationsInput | string | null
    project_id?: NullableStringFieldUpdateOperationsInput | string | null
    gbif_data?: NullableJsonNullValueInput | InputJsonValue
    label?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type Gbif_occurrencesUncheckedUpdateManyWithoutSubprojectsInput = {
    gbif_occurrence_id?: StringFieldUpdateOperationsInput | string
    account_id?: NullableStringFieldUpdateOperationsInput | string | null
    project_id?: NullableStringFieldUpdateOperationsInput | string | null
    gbif_data?: NullableJsonNullValueInput | InputJsonValue
    label?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type GoalsUpdateWithoutSubprojectsInput = {
    goal_id?: StringFieldUpdateOperationsInput | string
    year?: NullableIntFieldUpdateOperationsInput | number | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label_replace_by_generated_column?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    goal_reports?: Goal_reportsUpdateManyWithoutGoalsNestedInput
    accounts?: AccountsUpdateOneWithoutGoalsNestedInput
  }

  export type GoalsUncheckedUpdateWithoutSubprojectsInput = {
    goal_id?: StringFieldUpdateOperationsInput | string
    account_id?: NullableStringFieldUpdateOperationsInput | string | null
    year?: NullableIntFieldUpdateOperationsInput | number | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label_replace_by_generated_column?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    goal_reports?: Goal_reportsUncheckedUpdateManyWithoutGoalsNestedInput
  }

  export type GoalsUncheckedUpdateManyWithoutSubprojectsInput = {
    goal_id?: StringFieldUpdateOperationsInput | string
    account_id?: NullableStringFieldUpdateOperationsInput | string | null
    year?: NullableIntFieldUpdateOperationsInput | number | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    data?: NullableJsonNullValueInput | InputJsonValue
    label_replace_by_generated_column?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type Subproject_taxaUpdateWithoutSubprojectsInput = {
    subproject_taxon_id?: StringFieldUpdateOperationsInput | string
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    accounts?: AccountsUpdateOneWithoutSubproject_taxaNestedInput
    taxa?: TaxaUpdateOneWithoutSubproject_taxaNestedInput
  }

  export type Subproject_taxaUncheckedUpdateWithoutSubprojectsInput = {
    subproject_taxon_id?: StringFieldUpdateOperationsInput | string
    account_id?: NullableStringFieldUpdateOperationsInput | string | null
    taxon_id?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type Subproject_taxaUncheckedUpdateManyWithoutSubprojectsInput = {
    subproject_taxon_id?: StringFieldUpdateOperationsInput | string
    account_id?: NullableStringFieldUpdateOperationsInput | string | null
    taxon_id?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type Subproject_usersUpdateWithoutSubprojectsInput = {
    subproject_user_id?: StringFieldUpdateOperationsInput | string
    role?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    accounts?: AccountsUpdateOneWithoutSubproject_usersNestedInput
    users?: UsersUpdateOneWithoutSubproject_usersNestedInput
  }

  export type Subproject_usersUncheckedUpdateWithoutSubprojectsInput = {
    subproject_user_id?: StringFieldUpdateOperationsInput | string
    account_id?: NullableStringFieldUpdateOperationsInput | string | null
    user_id?: NullableStringFieldUpdateOperationsInput | string | null
    role?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type Subproject_usersUncheckedUpdateManyWithoutSubprojectsInput = {
    subproject_user_id?: StringFieldUpdateOperationsInput | string
    account_id?: NullableStringFieldUpdateOperationsInput | string | null
    user_id?: NullableStringFieldUpdateOperationsInput | string | null
    role?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type Subproject_taxaCreateManyTaxaInput = {
    subproject_taxon_id: string
    account_id?: string | null
    subproject_id?: string | null
    label?: string | null
    deleted?: boolean | null
  }

  export type Subproject_taxaUpdateWithoutTaxaInput = {
    subproject_taxon_id?: StringFieldUpdateOperationsInput | string
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    accounts?: AccountsUpdateOneWithoutSubproject_taxaNestedInput
    subprojects?: SubprojectsUpdateOneWithoutSubproject_taxaNestedInput
  }

  export type Subproject_taxaUncheckedUpdateWithoutTaxaInput = {
    subproject_taxon_id?: StringFieldUpdateOperationsInput | string
    account_id?: NullableStringFieldUpdateOperationsInput | string | null
    subproject_id?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type Subproject_taxaUncheckedUpdateManyWithoutTaxaInput = {
    subproject_taxon_id?: StringFieldUpdateOperationsInput | string
    account_id?: NullableStringFieldUpdateOperationsInput | string | null
    subproject_id?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type TaxaCreateManyTaxonomiesInput = {
    taxon_id: string
    account_id?: string | null
    name?: string | null
    id_in_source?: string | null
    url?: string | null
    label?: string | null
    deleted?: boolean | null
  }

  export type TaxaUpdateWithoutTaxonomiesInput = {
    taxon_id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    id_in_source?: NullableStringFieldUpdateOperationsInput | string | null
    url?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    subproject_taxa?: Subproject_taxaUpdateManyWithoutTaxaNestedInput
    accounts?: AccountsUpdateOneWithoutTaxaNestedInput
  }

  export type TaxaUncheckedUpdateWithoutTaxonomiesInput = {
    taxon_id?: StringFieldUpdateOperationsInput | string
    account_id?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    id_in_source?: NullableStringFieldUpdateOperationsInput | string | null
    url?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    subproject_taxa?: Subproject_taxaUncheckedUpdateManyWithoutTaxaNestedInput
  }

  export type TaxaUncheckedUpdateManyWithoutTaxonomiesInput = {
    taxon_id?: StringFieldUpdateOperationsInput | string
    account_id?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    id_in_source?: NullableStringFieldUpdateOperationsInput | string | null
    url?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type Goal_report_valuesCreateManyUnitsInput = {
    goal_report_value_id: string
    account_id?: string | null
    goal_report_id?: string | null
    value_integer?: number | null
    value_numeric?: number | null
    value_text?: string | null
    label?: string | null
    deleted?: boolean | null
  }

  export type Goal_report_valuesUpdateWithoutUnitsInput = {
    goal_report_value_id?: StringFieldUpdateOperationsInput | string
    value_integer?: NullableIntFieldUpdateOperationsInput | number | null
    value_numeric?: NullableFloatFieldUpdateOperationsInput | number | null
    value_text?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    accounts?: AccountsUpdateOneWithoutGoal_report_valuesNestedInput
    goal_reports?: Goal_reportsUpdateOneWithoutGoal_report_valuesNestedInput
  }

  export type Goal_report_valuesUncheckedUpdateWithoutUnitsInput = {
    goal_report_value_id?: StringFieldUpdateOperationsInput | string
    account_id?: NullableStringFieldUpdateOperationsInput | string | null
    goal_report_id?: NullableStringFieldUpdateOperationsInput | string | null
    value_integer?: NullableIntFieldUpdateOperationsInput | number | null
    value_numeric?: NullableFloatFieldUpdateOperationsInput | number | null
    value_text?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type Goal_report_valuesUncheckedUpdateManyWithoutUnitsInput = {
    goal_report_value_id?: StringFieldUpdateOperationsInput | string
    account_id?: NullableStringFieldUpdateOperationsInput | string | null
    goal_report_id?: NullableStringFieldUpdateOperationsInput | string | null
    value_integer?: NullableIntFieldUpdateOperationsInput | number | null
    value_numeric?: NullableFloatFieldUpdateOperationsInput | number | null
    value_text?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type AccountsCreateManyUsersInput = {
    account_id: string
    type?: string | null
    period_start?: Date | string | null
    period_end?: Date | string | null
    projects_label_by?: string | null
    label?: string | null
  }

  export type Project_usersCreateManyUsersInput = {
    project_user_id: string
    account_id?: string | null
    project_id?: string | null
    role?: string | null
    label?: string | null
    deleted?: boolean | null
  }

  export type Subproject_usersCreateManyUsersInput = {
    subproject_user_id: string
    account_id?: string | null
    subproject_id?: string | null
    role?: string | null
    label?: string | null
    deleted?: boolean | null
  }

  export type User_messagesCreateManyUsersInput = {
    user_message_id: string
    account_id?: string | null
    message_id?: string | null
    label_replace_by_generated_column?: string | null
    read?: boolean | null
  }

  export type AccountsUpdateWithoutUsersInput = {
    account_id?: StringFieldUpdateOperationsInput | string
    type?: NullableStringFieldUpdateOperationsInput | string | null
    period_start?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    period_end?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    projects_label_by?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    gbif_occurrence_downloads?: Gbif_occurrence_downloadsUpdateManyWithoutAccountsNestedInput
    gbif_occurrences?: Gbif_occurrencesUpdateManyWithoutAccountsNestedInput
    gbif_taxa?: Gbif_taxaUpdateManyWithoutAccountsNestedInput
    goal_report_values?: Goal_report_valuesUpdateManyWithoutAccountsNestedInput
    goal_reports?: Goal_reportsUpdateManyWithoutAccountsNestedInput
    goals?: GoalsUpdateManyWithoutAccountsNestedInput
    list_values?: List_valuesUpdateManyWithoutAccountsNestedInput
    lists?: ListsUpdateManyWithoutAccountsNestedInput
    observation_sources?: Observation_sourcesUpdateManyWithoutAccountsNestedInput
    persons?: PersonsUpdateManyWithoutAccountsNestedInput
    place_levels?: Place_levelsUpdateManyWithoutAccountsNestedInput
    project_users?: Project_usersUpdateManyWithoutAccountsNestedInput
    projects?: ProjectsUpdateManyWithoutAccountsNestedInput
    subproject_taxa?: Subproject_taxaUpdateManyWithoutAccountsNestedInput
    subproject_users?: Subproject_usersUpdateManyWithoutAccountsNestedInput
    subprojects?: SubprojectsUpdateManyWithoutAccountsNestedInput
    taxa?: TaxaUpdateManyWithoutAccountsNestedInput
    taxonomies?: TaxonomiesUpdateManyWithoutAccountsNestedInput
    tile_layers?: Tile_layersUpdateManyWithoutAccountsNestedInput
    ui_options?: Ui_optionsUpdateManyWithoutAccountsNestedInput
    units?: UnitsUpdateManyWithoutAccountsNestedInput
    user_messages?: User_messagesUpdateManyWithoutAccountsNestedInput
  }

  export type AccountsUncheckedUpdateWithoutUsersInput = {
    account_id?: StringFieldUpdateOperationsInput | string
    type?: NullableStringFieldUpdateOperationsInput | string | null
    period_start?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    period_end?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    projects_label_by?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    gbif_occurrence_downloads?: Gbif_occurrence_downloadsUncheckedUpdateManyWithoutAccountsNestedInput
    gbif_occurrences?: Gbif_occurrencesUncheckedUpdateManyWithoutAccountsNestedInput
    gbif_taxa?: Gbif_taxaUncheckedUpdateManyWithoutAccountsNestedInput
    goal_report_values?: Goal_report_valuesUncheckedUpdateManyWithoutAccountsNestedInput
    goal_reports?: Goal_reportsUncheckedUpdateManyWithoutAccountsNestedInput
    goals?: GoalsUncheckedUpdateManyWithoutAccountsNestedInput
    list_values?: List_valuesUncheckedUpdateManyWithoutAccountsNestedInput
    lists?: ListsUncheckedUpdateManyWithoutAccountsNestedInput
    observation_sources?: Observation_sourcesUncheckedUpdateManyWithoutAccountsNestedInput
    persons?: PersonsUncheckedUpdateManyWithoutAccountsNestedInput
    place_levels?: Place_levelsUncheckedUpdateManyWithoutAccountsNestedInput
    project_users?: Project_usersUncheckedUpdateManyWithoutAccountsNestedInput
    projects?: ProjectsUncheckedUpdateManyWithoutAccountsNestedInput
    subproject_taxa?: Subproject_taxaUncheckedUpdateManyWithoutAccountsNestedInput
    subproject_users?: Subproject_usersUncheckedUpdateManyWithoutAccountsNestedInput
    subprojects?: SubprojectsUncheckedUpdateManyWithoutAccountsNestedInput
    taxa?: TaxaUncheckedUpdateManyWithoutAccountsNestedInput
    taxonomies?: TaxonomiesUncheckedUpdateManyWithoutAccountsNestedInput
    tile_layers?: Tile_layersUncheckedUpdateManyWithoutAccountsNestedInput
    ui_options?: Ui_optionsUncheckedUpdateManyWithoutAccountsNestedInput
    units?: UnitsUncheckedUpdateManyWithoutAccountsNestedInput
    user_messages?: User_messagesUncheckedUpdateManyWithoutAccountsNestedInput
  }

  export type AccountsUncheckedUpdateManyWithoutUsersInput = {
    account_id?: StringFieldUpdateOperationsInput | string
    type?: NullableStringFieldUpdateOperationsInput | string | null
    period_start?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    period_end?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    projects_label_by?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type Project_usersUpdateWithoutUsersInput = {
    project_user_id?: StringFieldUpdateOperationsInput | string
    role?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    accounts?: AccountsUpdateOneWithoutProject_usersNestedInput
    projects?: ProjectsUpdateOneWithoutProject_usersNestedInput
  }

  export type Project_usersUncheckedUpdateWithoutUsersInput = {
    project_user_id?: StringFieldUpdateOperationsInput | string
    account_id?: NullableStringFieldUpdateOperationsInput | string | null
    project_id?: NullableStringFieldUpdateOperationsInput | string | null
    role?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type Project_usersUncheckedUpdateManyWithoutUsersInput = {
    project_user_id?: StringFieldUpdateOperationsInput | string
    account_id?: NullableStringFieldUpdateOperationsInput | string | null
    project_id?: NullableStringFieldUpdateOperationsInput | string | null
    role?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type Subproject_usersUpdateWithoutUsersInput = {
    subproject_user_id?: StringFieldUpdateOperationsInput | string
    role?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    accounts?: AccountsUpdateOneWithoutSubproject_usersNestedInput
    subprojects?: SubprojectsUpdateOneWithoutSubproject_usersNestedInput
  }

  export type Subproject_usersUncheckedUpdateWithoutUsersInput = {
    subproject_user_id?: StringFieldUpdateOperationsInput | string
    account_id?: NullableStringFieldUpdateOperationsInput | string | null
    subproject_id?: NullableStringFieldUpdateOperationsInput | string | null
    role?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type Subproject_usersUncheckedUpdateManyWithoutUsersInput = {
    subproject_user_id?: StringFieldUpdateOperationsInput | string
    account_id?: NullableStringFieldUpdateOperationsInput | string | null
    subproject_id?: NullableStringFieldUpdateOperationsInput | string | null
    role?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type User_messagesUpdateWithoutUsersInput = {
    user_message_id?: StringFieldUpdateOperationsInput | string
    label_replace_by_generated_column?: NullableStringFieldUpdateOperationsInput | string | null
    read?: NullableBoolFieldUpdateOperationsInput | boolean | null
    accounts?: AccountsUpdateOneWithoutUser_messagesNestedInput
    messages?: MessagesUpdateOneWithoutUser_messagesNestedInput
  }

  export type User_messagesUncheckedUpdateWithoutUsersInput = {
    user_message_id?: StringFieldUpdateOperationsInput | string
    account_id?: NullableStringFieldUpdateOperationsInput | string | null
    message_id?: NullableStringFieldUpdateOperationsInput | string | null
    label_replace_by_generated_column?: NullableStringFieldUpdateOperationsInput | string | null
    read?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type User_messagesUncheckedUpdateManyWithoutUsersInput = {
    user_message_id?: StringFieldUpdateOperationsInput | string
    account_id?: NullableStringFieldUpdateOperationsInput | string | null
    message_id?: NullableStringFieldUpdateOperationsInput | string | null
    label_replace_by_generated_column?: NullableStringFieldUpdateOperationsInput | string | null
    read?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type Widgets_for_fieldsCreateManyWidget_typesInput = {
    widget_for_field_id: string
    field_type_id?: string | null
    label?: string | null
    deleted?: boolean | null
  }

  export type Widgets_for_fieldsUpdateWithoutWidget_typesInput = {
    widget_for_field_id?: StringFieldUpdateOperationsInput | string
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
    field_types?: Field_typesUpdateOneWithoutWidgets_for_fieldsNestedInput
  }

  export type Widgets_for_fieldsUncheckedUpdateWithoutWidget_typesInput = {
    widget_for_field_id?: StringFieldUpdateOperationsInput | string
    field_type_id?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type Widgets_for_fieldsUncheckedUpdateManyWithoutWidget_typesInput = {
    widget_for_field_id?: StringFieldUpdateOperationsInput | string
    field_type_id?: NullableStringFieldUpdateOperationsInput | string | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    deleted?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }



  /**
   * Batch Payload for updateMany & deleteMany & createMany
   */

  export type BatchPayload = {
    count: number
  }

  /**
   * DMMF
   */
  export const dmmf: runtime.BaseDMMF
}